!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
A	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols> A;$/;"	t	struct:Eigen::internal::make_coherent_impl
ABORT	external/unsupported/test/mpreal/dlmalloc.c	568;"	d	file:
ABORT_ON_ASSERT_FAILURE	external/unsupported/test/mpreal/dlmalloc.c	571;"	d	file:
ABx_lx	external/Eigen/src/Core/util/Constants.h	/^  ABx_lx              = 0x200,$/;"	e	enum:Eigen::DecompositionOptions
ACQUIRE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1663;"	d	file:
ACQUIRE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1763;"	d	file:
ACQUIRE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1828;"	d	file:
ACQUIRE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1859;"	d	file:
ACQUIRE_MALLOC_GLOBAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1910;"	d	file:
ACQUIRE_MALLOC_GLOBAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1916;"	d	file:
ADD	external/SuiteSparse/Include/cholmod_template.h	116;"	d
ADD	external/SuiteSparse/Include/cholmod_template.h	167;"	d
ADD	external/SuiteSparse/Include/cholmod_template.h	218;"	d
ADD	external/SuiteSparse/Include/cholmod_template.h	26;"	d
ADD	external/SuiteSparse/Include/cholmod_template.h	73;"	d
ADD_REAL	external/SuiteSparse/Include/cholmod_template.h	117;"	d
ADD_REAL	external/SuiteSparse/Include/cholmod_template.h	168;"	d
ADD_REAL	external/SuiteSparse/Include/cholmod_template.h	219;"	d
ADD_REAL	external/SuiteSparse/Include/cholmod_template.h	27;"	d
ADD_REAL	external/SuiteSparse/Include/cholmod_template.h	74;"	d
ADOLC_numDir	external/unsupported/test/forward_adolc.cpp	/^int adtl::ADOLC_numDir;$/;"	m	class:adtl	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	410;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	413;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	420;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	422;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	424;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	428;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	431;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	434;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	439;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	442;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	445;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	449;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	395;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	398;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	401;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	405;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	407;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	409;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	413;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	416;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	419;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	424;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	427;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	430;"	d	file:
ARCHITECTURE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	434;"	d	file:
ASSEMBLE	external/SuiteSparse/Include/cholmod_template.h	108;"	d
ASSEMBLE	external/SuiteSparse/Include/cholmod_template.h	150;"	d
ASSEMBLE	external/SuiteSparse/Include/cholmod_template.h	18;"	d
ASSEMBLE	external/SuiteSparse/Include/cholmod_template.h	201;"	d
ASSEMBLE	external/SuiteSparse/Include/cholmod_template.h	65;"	d
ASSERT	external/SuiteSparse/Include/cholmod_internal.h	365;"	d
ASSERT	external/SuiteSparse/Include/cholmod_internal.h	400;"	d
ASSIGN	external/SuiteSparse/Include/cholmod_template.h	109;"	d
ASSIGN	external/SuiteSparse/Include/cholmod_template.h	151;"	d
ASSIGN	external/SuiteSparse/Include/cholmod_template.h	19;"	d
ASSIGN	external/SuiteSparse/Include/cholmod_template.h	202;"	d
ASSIGN	external/SuiteSparse/Include/cholmod_template.h	66;"	d
ASSIGN2	external/SuiteSparse/Include/cholmod_template.h	111;"	d
ASSIGN2	external/SuiteSparse/Include/cholmod_template.h	153;"	d
ASSIGN2	external/SuiteSparse/Include/cholmod_template.h	204;"	d
ASSIGN2	external/SuiteSparse/Include/cholmod_template.h	21;"	d
ASSIGN2	external/SuiteSparse/Include/cholmod_template.h	68;"	d
ASSIGN2_CONJ	external/SuiteSparse/Include/cholmod_template.h	112;"	d
ASSIGN2_CONJ	external/SuiteSparse/Include/cholmod_template.h	154;"	d
ASSIGN2_CONJ	external/SuiteSparse/Include/cholmod_template.h	205;"	d
ASSIGN2_CONJ	external/SuiteSparse/Include/cholmod_template.h	22;"	d
ASSIGN2_CONJ	external/SuiteSparse/Include/cholmod_template.h	69;"	d
ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_template.h	110;"	d
ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_template.h	152;"	d
ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_template.h	203;"	d
ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_template.h	20;"	d
ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_template.h	67;"	d
ASSIGN_REAL	external/SuiteSparse/Include/cholmod_template.h	113;"	d
ASSIGN_REAL	external/SuiteSparse/Include/cholmod_template.h	155;"	d
ASSIGN_REAL	external/SuiteSparse/Include/cholmod_template.h	206;"	d
ASSIGN_REAL	external/SuiteSparse/Include/cholmod_template.h	23;"	d
ASSIGN_REAL	external/SuiteSparse/Include/cholmod_template.h	70;"	d
AccPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef ResPacket AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::AccPacket AccPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
AccPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacket,Scalar>::type AccPacket;$/;"	t	class:Eigen::internal::gebp_traits
AccessorLevels	external/Eigen/src/Core/util/Constants.h	/^enum AccessorLevels {$/;"	g	namespace:Eigen
Action	external/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	g	namespace:Eigen
ActiveInput	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef Matrix<ActiveScalar, InputsAtCompileTime, 1> ActiveInput;$/;"	t	class:Eigen::AutoDiffJacobian
ActiveScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef AutoDiffScalar<DerivativeType> ActiveScalar;$/;"	t	class:Eigen::AutoDiffJacobian
ActiveScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef AutoDiffScalar<Matrix<BaseScalar,JacobianType::RowsAtCompileTime,1> > ActiveScalar;$/;"	t	class:Eigen::AutoDiffVector
ActiveValue	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef Matrix<ActiveScalar, ValuesAtCompileTime, 1> ActiveValue;$/;"	t	class:Eigen::AutoDiffJacobian
ActualCols	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualCols = Transpose ? MaxRows : MaxCols$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon244
ActualIndex	external/Eigen/src/Core/BandMatrix.h	/^        ActualIndex = ReturnOpposite ? -Index : Index,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon19
ActualLhsType	external/Eigen/src/Core/ProductBase.h	/^    typedef typename LhsBlasTraits::DirectLinearAccessType ActualLhsType;$/;"	t	class:Eigen::ProductBase
ActualLhsType	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::DirectLinearAccessType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualLhsType	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename LhsProductTraits::ExtractType ActualLhsType;$/;"	t	struct:Eigen::internal::triangular_solver_selector
ActualPacketAccessBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = 0x0;$/;"	m	namespace:Eigen
ActualPacketAccessBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int ActualPacketAccessBit = PacketAccessBit;$/;"	m	namespace:Eigen
ActualRhsType	external/Eigen/src/Core/ProductBase.h	/^    typedef typename RhsBlasTraits::DirectLinearAccessType ActualRhsType;$/;"	t	class:Eigen::ProductBase
ActualRows	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      ActualRows = Transpose ? MaxCols : MaxRows,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon244
Add	HashSparseMatrix.cpp	/^void HashSparseMatrix::Add( int i, int j, double value, TripletVector & data )$/;"	f	class:HashSparseMatrix
AddCost	external/Eigen/src/Core/NumTraits.h	/^    AddCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon157
AddHessian	HashSparseMatrix.cpp	/^void HashSparseMatrix::AddHessian( int idx1[], double val1[], int n1, int idx2[], double val2[], int n2, TripletVector & data )$/;"	f	class:HashSparseMatrix
AddHessian	HashSparseMatrix.cpp	/^void HashSparseMatrix::AddHessian( int idx[], double val[], int n, TripletVector & data )$/;"	f	class:HashSparseMatrix
AddHessian2	HashSparseMatrix.cpp	/^void HashSparseMatrix::AddHessian2( int idx[], double val[], TripletVector & data )$/;"	f	class:HashSparseMatrix
AddJb	HashSparseMatrix.cpp	/^void HashSparseMatrix::AddJb( int i, double value, double b, Eigen::VectorXd & Jb )$/;"	f	class:HashSparseMatrix
AddJb	HashSparseMatrix.cpp	/^void HashSparseMatrix::AddJb( int idx[], double val[], int n, double b, Eigen::VectorXd & Jb )$/;"	f	class:HashSparseMatrix
AdditionalProductEvaluationMode	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	g	namespace:Eigen
AdjointReturnType	external/Eigen/src/Core/MatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::MatrixBase
AdjointReturnType	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type AdjointReturnType;$/;"	t	class:Eigen::SparseMatrixBase
Affine	external/Eigen/src/Core/util/Constants.h	/^  Affine        = 0x2,$/;"	e	enum:Eigen::TransformTraits
Affine2d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Affine> Affine2d;$/;"	t	namespace:Eigen
Affine2f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Affine> Affine2f;$/;"	t	namespace:Eigen
Affine3d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Affine> Affine3d;$/;"	t	namespace:Eigen
Affine3f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Affine> Affine3f;$/;"	t	namespace:Eigen
AffineCompact	external/Eigen/src/Core/util/Constants.h	/^  AffineCompact = 0x10 | Affine,$/;"	e	enum:Eigen::TransformTraits
AffineCompact2d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,AffineCompact> AffineCompact2d;$/;"	t	namespace:Eigen
AffineCompact2f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,AffineCompact> AffineCompact2f;$/;"	t	namespace:Eigen
AffineCompact3d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,AffineCompact> AffineCompact3d;$/;"	t	namespace:Eigen
AffineCompact3f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,AffineCompact> AffineCompact3f;$/;"	t	namespace:Eigen
AffinePart	external/Eigen/src/Geometry/Transform.h	/^                              Block<MatrixType,Dim,HDim> >::type AffinePart;$/;"	t	class:Eigen::Transform
AffinePart	external/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::AffinePart AffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
AffineTransformType	external/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Affine> AffineTransformType;$/;"	t	class:Eigen::Translation
Aligned	external/Eigen/src/Core/util/Constants.h	/^  Aligned=1 $/;"	e	enum:Eigen::__anon265
AlignedBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int AlignedBit = 0x80;$/;"	m	namespace:Eigen
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox(const VectorType& _min, const VectorType& _max) : m_min(_min), m_max(_max) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline explicit AlignedBox()$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const AlignedBox<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const VectorType& p) : m_min(p), m_max(p) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(int _dim) : m_min(_dim), m_max(_dim)$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^class AlignedBox$/;"	c	namespace:Eigen
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/All.h	110;"	d
AlignedBox	external/Eigen/src/Eigen2Support/Geometry/All.h	55;"	d
AlignedBox	external/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox(const OtherVectorType1& _min, const OtherVectorType2& _max) : m_min(_min), m_max(_max) {}$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox()$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(Index _dim) : m_min(_dim), m_max(_dim)$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const AlignedBox<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Geometry/AlignedBox.h	/^  inline explicit AlignedBox(const MatrixBase<Derived>& a_p)$/;"	f	class:Eigen::AlignedBox
AlignedBox	external/Eigen/src/Geometry/AlignedBox.h	/^class AlignedBox$/;"	c	namespace:Eigen
AlignedMapType	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, Aligned> AlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
AlignedOnScalar	external/Eigen/src/Core/GenericPacketMath.h	/^    AlignedOnScalar = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon141
AlignedOnScalar	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
AlignedOnScalar	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
AlignedOnScalar	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon211
AlignedOnScalar	external/Eigen/src/Core/arch/NEON/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
AlignedOnScalar	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
AlignedOnScalar	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon217
AlignedOnScalar	external/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
AlignedOnScalar	external/Eigen/src/Core/arch/SSE/Complex.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
AlignedOnScalar	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
AlignedOnScalar	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon228
AlignedOnScalar	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    AlignedOnScalar = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon229
AlignedScaling2d	external/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,2> AlignedScaling2d;$/;"	t	namespace:Eigen
AlignedScaling2f	external/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 2> AlignedScaling2f;$/;"	t	namespace:Eigen
AlignedScaling3d	external/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<double,3> AlignedScaling3d;$/;"	t	namespace:Eigen
AlignedScaling3f	external/Eigen/src/Geometry/Scaling.h	/^typedef DiagonalMatrix<float, 3> AlignedScaling3f;$/;"	t	namespace:Eigen
AlignmentMask	external/Eigen/src/Cholesky/LLT.h	/^      AlignmentMask = int(PacketSize)-1,$/;"	e	enum:Eigen::LLT::__anon3
AlignmentMask	external/Eigen/src/Eigen2Support/SVD.h	/^      AlignmentMask = int(PacketSize)-1,$/;"	e	enum:Eigen::SVD::__anon346
AltiVec	external/Eigen/src/Core/util/Constants.h	/^    AltiVec = 0x2,$/;"	e	enum:Eigen::Architecture::Type
AmbiVector	external/Eigen/src/SparseCore/AmbiVector.h	/^    AmbiVector(Index size)$/;"	f	class:Eigen::internal::AmbiVector
AmbiVector	external/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector$/;"	c	namespace:Eigen::internal
AmbientDimAtCompileTime	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::AlignedBox::__anon326
AmbientDimAtCompileTime	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::Hyperplane::__anon328
AmbientDimAtCompileTime	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::ParametrizedLine::__anon329
AmbientDimAtCompileTime	external/Eigen/src/Geometry/AlignedBox.h	/^  enum { AmbientDimAtCompileTime = _AmbientDim };$/;"	e	enum:Eigen::AlignedBox::__anon354
AmbientDimAtCompileTime	external/Eigen/src/Geometry/Hyperplane.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::Hyperplane::__anon358
AmbientDimAtCompileTime	external/Eigen/src/Geometry/ParametrizedLine.h	/^    AmbientDimAtCompileTime = _AmbientDim,$/;"	e	enum:Eigen::ParametrizedLine::__anon359
Ancestor	external/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_all<Lhs>::type Ancestor;$/;"	t	struct:Eigen::internal::traits
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/All.h	33;"	d
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/All.h	88;"	d
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  AngleAxis() {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline AngleAxis(Scalar angle, const MatrixBase<Derived>& axis) : m_axis(axis), m_angle(angle) {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline AngleAxis(const QuaternionType& q) { *this = q; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const AngleAxis<OtherScalarType>& other)$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const MatrixBase<Derived>& m) { *this = m; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^class AngleAxis : public RotationBase<AngleAxis<_Scalar>,3>$/;"	c	namespace:Eigen
AngleAxis	external/Eigen/src/Geometry/AngleAxis.h	/^  AngleAxis() {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Geometry/AngleAxis.h	/^  inline AngleAxis(Scalar angle, const MatrixBase<Derived>& axis) : m_axis(axis), m_angle(angle) {}$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const AngleAxis<OtherScalarType>& other)$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Geometry/AngleAxis.h	/^  inline explicit AngleAxis(const MatrixBase<Derived>& m) { *this = m; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Geometry/AngleAxis.h	/^  template<typename QuatDerived> inline explicit AngleAxis(const QuaternionBase<QuatDerived>& q) { *this = q; }$/;"	f	class:Eigen::AngleAxis
AngleAxis	external/Eigen/src/Geometry/AngleAxis.h	/^class AngleAxis : public RotationBase<AngleAxis<_Scalar>,3>$/;"	c	namespace:Eigen
AngleAxisType	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef AngleAxis<Scalar> AngleAxisType;$/;"	t	class:Eigen::Quaternion
AngleAxisType	external/Eigen/src/Geometry/Quaternion.h	/^  typedef AngleAxis<Scalar> AngleAxisType;$/;"	t	class:Eigen::QuaternionBase
AngleAxisType	external/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Base::AngleAxisType AngleAxisType;$/;"	t	class:Eigen::Quaternion
AngleAxisd	external/Eigen/src/Eigen2Support/Geometry/All.h	35;"	d
AngleAxisd	external/Eigen/src/Eigen2Support/Geometry/All.h	90;"	d
AngleAxisd	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^typedef AngleAxis<double> AngleAxisd;$/;"	t	namespace:Eigen
AngleAxisd	external/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<double> AngleAxisd;$/;"	t	namespace:Eigen
AngleAxisf	external/Eigen/src/Eigen2Support/Geometry/All.h	34;"	d
AngleAxisf	external/Eigen/src/Eigen2Support/Geometry/All.h	89;"	d
AngleAxisf	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^typedef AngleAxis<float> AngleAxisf;$/;"	t	namespace:Eigen
AngleAxisf	external/Eigen/src/Geometry/AngleAxis.h	/^typedef AngleAxis<float> AngleAxisf;$/;"	t	namespace:Eigen
Architecture	external/Eigen/src/Core/util/Constants.h	/^namespace Architecture$/;"	n	namespace:Eigen
Array	external/Eigen/src/Core/Array.h	/^    Array(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Array& other)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& x, const Scalar& y, const Scalar& z)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array(const T0& x, const T1& y)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE explicit Array() : Base()$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE explicit Array(Index dim)$/;"	f	class:Eigen::Array
Array	external/Eigen/src/Core/Array.h	/^class Array$/;"	c	namespace:Eigen
Array	external/Eigen/src/Core/Map.h	/^  ::Array(const Scalar *data)$/;"	f	class:Eigen::Array
ArrayBase	external/Eigen/src/Core/ArrayBase.h	/^    ArrayBase() : Base() {}$/;"	f	class:Eigen::ArrayBase
ArrayBase	external/Eigen/src/Core/ArrayBase.h	/^template<typename Derived> class ArrayBase$/;"	c	namespace:Eigen
ArrayWrapper	external/Eigen/src/Core/ArrayWrapper.h	/^    inline ArrayWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ArrayWrapper
ArrayWrapper	external/Eigen/src/Core/ArrayWrapper.h	/^class ArrayWrapper : public ArrayBase<ArrayWrapper<ExpressionType> >$/;"	c	namespace:Eigen
ArrayXpr	external/Eigen/src/Core/util/Constants.h	/^struct ArrayXpr {};$/;"	s	namespace:Eigen
AutoAlign	external/Eigen/src/Core/util/Constants.h	/^  AutoAlign = 0,$/;"	e	enum:Eigen::__anon269
AutoDiffJacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian() : Functor() {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const Functor& f) : Functor(f) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const T0& a0) : Functor(a0) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const T0& a0, const T1& a1) : Functor(a0, a1) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  AutoDiffJacobian(const T0& a0, const T1& a1, const T2& a2) : Functor(a0, a1, a2) {}$/;"	f	class:Eigen::AutoDiffJacobian
AutoDiffJacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^template<typename Functor> class AutoDiffJacobian : public Functor$/;"	c	namespace:Eigen
AutoDiffScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar() {}$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const AutoDiffScalar& other)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const Scalar& value, const DerType& der)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    AutoDiffScalar(const Scalar& value, int nbDer, int derNumber)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    \/*explicit*\/ AutoDiffScalar(const Real& value)$/;"	f	class:Eigen::AutoDiffScalar
AutoDiffScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^class AutoDiffScalar$/;"	c	namespace:Eigen
AutoDiffVector	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector() {}$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const AutoDiffVector& other)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const AutoDiffVector<OtherValueType, OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const ValueType& values)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector(const ValueType& values, const JacobianType& jac)$/;"	f	class:Eigen::AutoDiffVector
AutoDiffVector	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^class AutoDiffVector$/;"	c	namespace:Eigen
Ax_lBx	external/Eigen/src/Core/util/Constants.h	/^  Ax_lBx              = 0x100,$/;"	e	enum:Eigen::DecompositionOptions
B	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef Matrix<B_Scalar, B_Rows, B_Cols, B_Options, B_MaxRows, B_MaxCols> B;$/;"	t	struct:Eigen::internal::make_coherent_impl
BAx_lx	external/Eigen/src/Core/util/Constants.h	/^  BAx_lx              = 0x400,$/;"	e	enum:Eigen::DecompositionOptions
BLASFUNC	external/Eigen/src/misc/blas.h	9;"	d
BLASLONG	external/Eigen/src/misc/blas.h	/^typedef long BLASLONG;$/;"	t
BLASLONG	external/Eigen/src/misc/blas.h	/^typedef long long BLASLONG;$/;"	t
BLASULONG	external/Eigen/src/misc/blas.h	/^typedef unsigned long BLASULONG;$/;"	t
BLASULONG	external/Eigen/src/misc/blas.h	/^typedef unsigned long long BLASULONG;$/;"	t
BLAS_DGEMM	external/SuiteSparse/Include/cholmod_blas.h	115;"	d
BLAS_DGEMM	external/SuiteSparse/Include/cholmod_blas.h	135;"	d
BLAS_DGEMM	external/SuiteSparse/Include/cholmod_blas.h	95;"	d
BLAS_DGEMV	external/SuiteSparse/Include/cholmod_blas.h	113;"	d
BLAS_DGEMV	external/SuiteSparse/Include/cholmod_blas.h	133;"	d
BLAS_DGEMV	external/SuiteSparse/Include/cholmod_blas.h	93;"	d
BLAS_DGER	external/SuiteSparse/Include/cholmod_blas.h	117;"	d
BLAS_DGER	external/SuiteSparse/Include/cholmod_blas.h	137;"	d
BLAS_DGER	external/SuiteSparse/Include/cholmod_blas.h	97;"	d
BLAS_DSCAL	external/SuiteSparse/Include/cholmod_blas.h	118;"	d
BLAS_DSCAL	external/SuiteSparse/Include/cholmod_blas.h	138;"	d
BLAS_DSCAL	external/SuiteSparse/Include/cholmod_blas.h	98;"	d
BLAS_DSYRK	external/SuiteSparse/Include/cholmod_blas.h	116;"	d
BLAS_DSYRK	external/SuiteSparse/Include/cholmod_blas.h	136;"	d
BLAS_DSYRK	external/SuiteSparse/Include/cholmod_blas.h	96;"	d
BLAS_DTRSM	external/SuiteSparse/Include/cholmod_blas.h	114;"	d
BLAS_DTRSM	external/SuiteSparse/Include/cholmod_blas.h	134;"	d
BLAS_DTRSM	external/SuiteSparse/Include/cholmod_blas.h	94;"	d
BLAS_DTRSV	external/SuiteSparse/Include/cholmod_blas.h	112;"	d
BLAS_DTRSV	external/SuiteSparse/Include/cholmod_blas.h	132;"	d
BLAS_DTRSV	external/SuiteSparse/Include/cholmod_blas.h	92;"	d
BLAS_H	external/Eigen/src/misc/blas.h	2;"	d
BLAS_INT	external/SuiteSparse/Include/cholmod_blas.h	160;"	d
BLAS_INT	external/SuiteSparse/Include/cholmod_blas.h	162;"	d
BLAS_NO_UNDERSCORE	external/SuiteSparse/Include/cholmod_blas.h	59;"	d
BLAS_NO_UNDERSCORE	external/SuiteSparse/Include/cholmod_blas.h	66;"	d
BLAS_NO_UNDERSCORE	external/SuiteSparse/Include/cholmod_blas.h	71;"	d
BLAS_OK	external/SuiteSparse/Include/cholmod_internal.h	294;"	d
BLAS_ZGEMM	external/SuiteSparse/Include/cholmod_blas.h	104;"	d
BLAS_ZGEMM	external/SuiteSparse/Include/cholmod_blas.h	124;"	d
BLAS_ZGEMM	external/SuiteSparse/Include/cholmod_blas.h	144;"	d
BLAS_ZGEMV	external/SuiteSparse/Include/cholmod_blas.h	102;"	d
BLAS_ZGEMV	external/SuiteSparse/Include/cholmod_blas.h	122;"	d
BLAS_ZGEMV	external/SuiteSparse/Include/cholmod_blas.h	142;"	d
BLAS_ZGER	external/SuiteSparse/Include/cholmod_blas.h	106;"	d
BLAS_ZGER	external/SuiteSparse/Include/cholmod_blas.h	126;"	d
BLAS_ZGER	external/SuiteSparse/Include/cholmod_blas.h	146;"	d
BLAS_ZHERK	external/SuiteSparse/Include/cholmod_blas.h	105;"	d
BLAS_ZHERK	external/SuiteSparse/Include/cholmod_blas.h	125;"	d
BLAS_ZHERK	external/SuiteSparse/Include/cholmod_blas.h	145;"	d
BLAS_ZSCAL	external/SuiteSparse/Include/cholmod_blas.h	107;"	d
BLAS_ZSCAL	external/SuiteSparse/Include/cholmod_blas.h	127;"	d
BLAS_ZSCAL	external/SuiteSparse/Include/cholmod_blas.h	147;"	d
BLAS_ZTRSM	external/SuiteSparse/Include/cholmod_blas.h	103;"	d
BLAS_ZTRSM	external/SuiteSparse/Include/cholmod_blas.h	123;"	d
BLAS_ZTRSM	external/SuiteSparse/Include/cholmod_blas.h	143;"	d
BLAS_ZTRSV	external/SuiteSparse/Include/cholmod_blas.h	101;"	d
BLAS_ZTRSV	external/SuiteSparse/Include/cholmod_blas.h	121;"	d
BLAS_ZTRSV	external/SuiteSparse/Include/cholmod_blas.h	141;"	d
BLAS_dgemm	external/SuiteSparse/Include/cholmod_blas.h	287;"	d
BLAS_dgemv	external/SuiteSparse/Include/cholmod_blas.h	183;"	d
BLAS_dger	external/SuiteSparse/Include/cholmod_blas.h	427;"	d
BLAS_dscal	external/SuiteSparse/Include/cholmod_blas.h	395;"	d
BLAS_dsyrk	external/SuiteSparse/Include/cholmod_blas.h	325;"	d
BLAS_dtrsm	external/SuiteSparse/Include/cholmod_blas.h	251;"	d
BLAS_dtrsv	external/SuiteSparse/Include/cholmod_blas.h	218;"	d
BLAS_zgemm	external/SuiteSparse/Include/cholmod_blas.h	306;"	d
BLAS_zgemv	external/SuiteSparse/Include/cholmod_blas.h	201;"	d
BLAS_zgeru	external/SuiteSparse/Include/cholmod_blas.h	445;"	d
BLAS_zherk	external/SuiteSparse/Include/cholmod_blas.h	343;"	d
BLAS_zscal	external/SuiteSparse/Include/cholmod_blas.h	410;"	d
BLAS_ztrsm	external/SuiteSparse/Include/cholmod_blas.h	269;"	d
BLAS_ztrsv	external/SuiteSparse/Include/cholmod_blas.h	234;"	d
BOOLEAN	external/SuiteSparse/Include/cholmod_internal.h	82;"	d
BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER	external/Eigen/src/Core/util/StaticAssert.h	/^        BOTH_MATRICES_MUST_HAVE_THE_SAME_STORAGE_ORDER,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
BVIntersect	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^void BVIntersect(const BVH &tree, Intersector &intersector)$/;"	f	namespace:Eigen
BVIntersect	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^void BVIntersect(const BVH1 &tree1, const BVH2 &tree2, Intersector &intersector) \/\/TODO: tandem descent when it makes sense$/;"	f	namespace:Eigen
BVMinimize	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^typename Minimizer::Scalar BVMinimize(const BVH &tree, Minimizer &minimizer)$/;"	f	namespace:Eigen
BVMinimize	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^typename Minimizer::Scalar BVMinimize(const BVH1 &tree1, const BVH2 &tree2, Minimizer &minimizer)$/;"	f	namespace:Eigen
Ball	external/unsupported/test/BVH.cpp	/^  Ball() {}$/;"	f	struct:Ball
Ball	external/unsupported/test/BVH.cpp	/^  Ball(const VectorType &c, double r) : center(c), radius(r) {}$/;"	f	struct:Ball
Ball	external/unsupported/test/BVH.cpp	/^struct Ball$/;"	s	file:
BallPointStuff	external/unsupported/test/BVH.cpp	/^  BallPointStuff() : calls(0), count(0) {}$/;"	f	struct:BallPointStuff
BallPointStuff	external/unsupported/test/BVH.cpp	/^  BallPointStuff(const VectorType &inP) : p(inP), calls(0), count(0) {}$/;"	f	struct:BallPointStuff
BallPointStuff	external/unsupported/test/BVH.cpp	/^struct BallPointStuff \/\/this class provides functions to be both an intersector and a minimizer, both for a ball and a point and for two trees$/;"	s	file:
BallType	external/unsupported/test/BVH.cpp	/^  typedef Ball<Dim> BallType;$/;"	t	struct:BallPointStuff	file:
BallType	external/unsupported/test/BVH.cpp	/^  typedef Ball<Dim> BallType;$/;"	t	struct:TreeTest	file:
BallTypeList	external/unsupported/test/BVH.cpp	/^  typedef std::vector<BallType, aligned_allocator<BallType> > BallTypeList;$/;"	t	struct:TreeTest	file:
BandMatrix	external/Eigen/src/Core/BandMatrix.h	/^    inline BandMatrix(Index rows=Rows, Index cols=Cols, Index supers=Supers, Index subs=Subs)$/;"	f	class:Eigen::internal::BandMatrix
BandMatrix	external/Eigen/src/Core/BandMatrix.h	/^class BandMatrix : public BandMatrixBase<BandMatrix<_Scalar,Rows,Cols,Supers,Subs,Options> >$/;"	c	namespace:Eigen::internal
BandMatrixBase	external/Eigen/src/Core/BandMatrix.h	/^class BandMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen::internal
BandMatrixWrapper	external/Eigen/src/Core/BandMatrix.h	/^    inline BandMatrixWrapper(const CoefficientsType& coeffs, Index rows=_Rows, Index cols=_Cols, Index supers=_Supers, Index subs=_Subs)$/;"	f	class:Eigen::internal::BandMatrixWrapper
BandMatrixWrapper	external/Eigen/src/Core/BandMatrix.h	/^class BandMatrixWrapper : public BandMatrixBase<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	c	namespace:Eigen::internal
Base	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodDecomposition> Base;$/;"	t	class:Eigen::CholmodDecomposition
Base	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLDLT
Base	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT> Base;$/;"	t	class:Eigen::CholmodSimplicialLLT
Base	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT> Base;$/;"	t	class:Eigen::CholmodSupernodalLLT
Base	external/Eigen/src/Core/Array.h	/^    typedef PlainObjectBase<Array> Base;$/;"	t	class:Eigen::Array
Base	external/Eigen/src/Core/ArrayBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::ArrayBase
Base	external/Eigen/src/Core/ArrayWrapper.h	/^    typedef ArrayBase<ArrayWrapper> Base;$/;"	t	class:Eigen::ArrayWrapper
Base	external/Eigen/src/Core/ArrayWrapper.h	/^    typedef MatrixBase<MatrixWrapper<ExpressionType> > Base;$/;"	t	class:Eigen::MatrixWrapper
Base	external/Eigen/src/Core/BandMatrix.h	/^    typedef BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor> Base;$/;"	t	class:Eigen::internal::TridiagonalMatrix
Base	external/Eigen/src/Core/BandMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::internal::BandMatrixBase
Base	external/Eigen/src/Core/Block.h	/^    typedef MapBase<Block> Base;$/;"	t	class:Eigen::Block
Base	external/Eigen/src/Core/Block.h	/^    typedef typename internal::dense_xpr_base<Block>::type Base;$/;"	t	class:Eigen::Block
Base	external/Eigen/src/Core/CwiseBinaryOp.h	/^                                         typename internal::traits<Rhs>::StorageKind>::ret>::Base Base;$/;"	t	class:Eigen::CwiseBinaryOp
Base	external/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >::type Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Base	external/Eigen/src/Core/CwiseNullaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseNullaryOp>::type Base;$/;"	t	class:Eigen::CwiseNullaryOp
Base	external/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp, XprType,typename internal::traits<XprType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryOp
Base	external/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef typename internal::dense_xpr_base<CwiseUnaryOp<UnaryOp, XprType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Base	external/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp, MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::CwiseUnaryView
Base	external/Eigen/src/Core/CwiseUnaryView.h	/^    typedef typename internal::dense_xpr_base< CwiseUnaryView<ViewOp, MatrixType> >::type Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Base	external/Eigen/src/Core/DenseBase.h	/^    typedef DenseCoeffsBase<Derived> Base;$/;"	t	class:Eigen::DenseBase
Base	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef DenseCoeffsBase<Derived, WriteAccessors> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::DenseCoeffsBase
Base	external/Eigen/src/Core/Diagonal.h	/^    typedef typename internal::dense_xpr_base<Diagonal>::type Base;$/;"	t	class:Eigen::Diagonal
Base	external/Eigen/src/Core/DiagonalProduct.h	/^    typedef MatrixBase<DiagonalProduct> Base;$/;"	t	class:Eigen::DiagonalProduct
Base	external/Eigen/src/Core/Flagged.h	/^    typedef MatrixBase<Flagged> Base;$/;"	t	class:Eigen::Flagged
Base	external/Eigen/src/Core/ForceAlignedAccess.h	/^    typedef typename internal::dense_xpr_base<ForceAlignedAccess>::type Base;$/;"	t	class:Eigen::ForceAlignedAccess
Base	external/Eigen/src/Core/GeneralProduct.h	/^    typedef Matrix<typename internal::scalar_product_traits<typename Lhs::Scalar, typename Rhs::Scalar>::ReturnType,1,1> Base;$/;"	t	class:Eigen::GeneralProduct
Base	external/Eigen/src/Core/Map.h	/^    typedef MapBase<Map> Base;$/;"	t	class:Eigen::Map
Base	external/Eigen/src/Core/MapBase.h	/^    typedef MapBase<Derived, ReadOnlyAccessors> Base;$/;"	t	class:Eigen::MapBase
Base	external/Eigen/src/Core/MapBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::MapBase
Base	external/Eigen/src/Core/Matrix.h	/^    typedef PlainObjectBase<Matrix> Base;$/;"	t	class:Eigen::Matrix
Base	external/Eigen/src/Core/MatrixBase.h	/^    typedef DenseBase<Derived> Base;$/;"	t	class:Eigen::MatrixBase
Base	external/Eigen/src/Core/NestByValue.h	/^    typedef typename internal::dense_xpr_base<NestByValue>::type Base;$/;"	t	class:Eigen::NestByValue
Base	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::PermutationBase
Base	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<Map> Base;$/;"	t	class:Eigen::Map
Base	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationMatrix> Base;$/;"	t	class:Eigen::PermutationMatrix
Base	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef PermutationBase<PermutationWrapper> Base;$/;"	t	class:Eigen::PermutationWrapper
Base	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::dense_xpr_base<Derived>::type Base;$/;"	t	class:Eigen::PlainObjectBase
Base	external/Eigen/src/Core/Product.h	/^                                                typename Rhs::StorageKind>::ret>::Base Base;$/;"	t	class:Product
Base	external/Eigen/src/Core/Product.h	/^    typedef typename internal::dense_xpr_base<Product<Lhs, Rhs> >::type Base;$/;"	t	class:ProductImpl
Base	external/Eigen/src/Core/ProductBase.h	/^                       typename NestedProduct::_RhsNested> Base;$/;"	t	class:Eigen::ScaledProduct
Base	external/Eigen/src/Core/ProductBase.h	/^    typedef MatrixBase<Derived> Base;$/;"	t	class:Eigen::ProductBase
Base	external/Eigen/src/Core/Replicate.h	/^    typedef typename internal::dense_xpr_base<Replicate>::type Base;$/;"	t	class:Eigen::Replicate
Base	external/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::dense_xpr_base<ReturnByValue>::type Base;$/;"	t	class:Eigen::ReturnByValue
Base	external/Eigen/src/Core/Reverse.h	/^    typedef typename internal::dense_xpr_base<Reverse>::type Base;$/;"	t	class:Eigen::Reverse
Base	external/Eigen/src/Core/Select.h	/^    typedef typename internal::dense_xpr_base<Select>::type Base;$/;"	t	class:Eigen::Select
Base	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef TriangularBase<SelfAdjointView> Base;$/;"	t	class:Eigen::SelfAdjointView
Base	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    typedef typename internal::dense_xpr_base<SelfCwiseBinaryOp>::type Base;$/;"	t	class:Eigen::SelfCwiseBinaryOp
Base	external/Eigen/src/Core/SolveTriangular.h	/^  typedef ReturnByValue<triangular_solve_retval> Base;$/;"	t	struct:Eigen::internal::triangular_solve_retval
Base	external/Eigen/src/Core/Stride.h	/^    typedef Stride<0, Value> Base;$/;"	t	class:Eigen::InnerStride
Base	external/Eigen/src/Core/Stride.h	/^    typedef Stride<Value, 0> Base;$/;"	t	class:Eigen::OuterStride
Base	external/Eigen/src/Core/Swap.h	/^    typedef typename internal::dense_xpr_base<SwapWrapper>::type Base;$/;"	t	class:Eigen::SwapWrapper
Base	external/Eigen/src/Core/Transpose.h	/^    typedef typename TransposeImpl<MatrixType,typename internal::traits<MatrixType>::StorageKind>::Base Base;$/;"	t	class:Eigen::Transpose
Base	external/Eigen/src/Core/Transpose.h	/^    typedef typename internal::TransposeImpl_base<MatrixType>::type Base;$/;"	t	class:Eigen::TransposeImpl
Base	external/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Map> Base;$/;"	t	class:Eigen::Map
Base	external/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<Transpositions> Base;$/;"	t	class:Eigen::Transpositions
Base	external/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsBase<TranspositionsWrapper> Base;$/;"	t	class:Eigen::TranspositionsWrapper
Base	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef TriangularBase<TriangularView> Base;$/;"	t	class:Eigen::TriangularView
Base	external/Eigen/src/Core/VectorBlock.h	/^                     internal::traits<VectorType>::Flags & RowMajorBit ? Size : 1> Base;$/;"	t	class:Eigen::VectorBlock
Base	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::dense_xpr_base<PartialReduxExpr>::type Base;$/;"	t	class:Eigen::PartialReduxExpr
Base	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef MatrixBase<CoeffBasedProduct> Base;$/;"	t	class:Eigen::CoeffBasedProduct
Base	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef blas_traits<NestedXpr> Base;$/;"	t	struct:Eigen::internal::blas_traits
Base	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef RotationBase<AngleAxis<_Scalar>,3> Base;$/;"	t	class:Eigen::AngleAxis
Base	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef RotationBase<Quaternion<_Scalar>,3> Base;$/;"	t	class:Eigen::Quaternion
Base	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef RotationBase<Rotation2D<_Scalar>,2> Base;$/;"	t	class:Eigen::Rotation2D
Base	external/Eigen/src/Eigen2Support/LU.h	/^    typedef FullPivLU<MatrixType> Base;$/;"	t	class:Eigen::LU
Base	external/Eigen/src/Eigen2Support/Minor.h	/^    typedef MatrixBase<Minor> Base;$/;"	t	class:Eigen::Minor
Base	external/Eigen/src/Eigen2Support/QR.h	/^    typedef HouseholderQR<MatrixType> Base;$/;"	t	class:Eigen::QR
Base	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef SelfAdjointEigenSolver<_MatrixType> Base;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
Base	external/Eigen/src/Geometry/AngleAxis.h	/^  typedef RotationBase<AngleAxis<_Scalar>,3> Base;$/;"	t	class:Eigen::AngleAxis
Base	external/Eigen/src/Geometry/Homogeneous.h	/^    typedef MatrixBase<Homogeneous> Base;$/;"	t	class:Eigen::Homogeneous
Base	external/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	external/Eigen/src/Geometry/Quaternion.h	/^    typedef QuaternionBase<Map<const Quaternion<_Scalar>, _Options> > Base;$/;"	t	class:Eigen::Map
Base	external/Eigen/src/Geometry/Quaternion.h	/^  typedef QuaternionBase<Quaternion<_Scalar,_Options> > Base;$/;"	t	class:Eigen::Quaternion
Base	external/Eigen/src/Geometry/Quaternion.h	/^  typedef RotationBase<Derived, 3> Base;$/;"	t	class:Eigen::QuaternionBase
Base	external/Eigen/src/Geometry/Rotation2D.h	/^  typedef RotationBase<Rotation2D<_Scalar>,2> Base;$/;"	t	class:Eigen::Rotation2D
Base	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef IterativeSolverBase<BiCGSTAB> Base;$/;"	t	class:Eigen::BiCGSTAB
Base	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef IterativeSolverBase<ConjugateGradient> Base;$/;"	t	class:Eigen::ConjugateGradient
Base	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLDLT<MatrixType, _UpLo> > Base; $/;"	t	class:Eigen::PastixLDLT
Base	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLLT<MatrixType, _UpLo> > Base;$/;"	t	class:Eigen::PastixLLT
Base	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef PastixBase<PastixLU<MatrixType> > Base;$/;"	t	class:Eigen::PastixLU
Base	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLDLT<MatrixType,Options> > Base;$/;"	t	class:Eigen::PardisoLDLT
Base	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLLT<MatrixType,_UpLo> > Base;$/;"	t	class:Eigen::PardisoLLT
Base	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef PardisoImpl< PardisoLU<MatrixType> > Base;$/;"	t	class:Eigen::PardisoLU
Base	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialCholesky> Base;$/;"	t	class:Eigen::SimplicialCholesky
Base	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLDLT> Base;$/;"	t	class:Eigen::SimplicialLDLT
Base	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SimplicialCholeskyBase<SimplicialLLT> Base;$/;"	t	class:Eigen::SimplicialLLT
Base	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^      BinaryOp,Lhs,Rhs, InnerIterator> Base;$/;"	t	class:Eigen::CwiseBinaryOpImpl::InnerIterator
Base	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::MatrixTypeIterator Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl::InnerIterator
Base	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::MatrixTypeReverseIterator Base;$/;"	t	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
Base	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::MatrixTypeIterator Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl::InnerIterator
Base	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::MatrixTypeReverseIterator Base;$/;"	t	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
Base	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef SparseMatrixBase<SparseDenseOuterProduct> Base;$/;"	t	class:Eigen::SparseDenseOuterProduct
Base	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename _LhsNested::InnerIterator Base;$/;"	t	class:Eigen::SparseDenseOuterProduct::InnerIterator
Base	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      Transpose<const typename Rhs::DiagonalVectorType> >::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      typename Lhs::DiagonalVectorType>::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename CwiseUnaryOp<scalar_multiple_op<typename Lhs::Scalar>,const Rhs>::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename CwiseUnaryOp<scalar_multiple_op<typename Rhs::Scalar>,const Lhs>::InnerIterator Base;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Base	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef EigenBase<Derived> Base;$/;"	t	class:Eigen::SparseMatrixBase
Base	external/Eigen/src/SparseCore/SparseProduct.h	/^    typedef SparseMatrixBase<SparseSparseProduct> Base;$/;"	t	class:Eigen::SparseSparseProduct
Base	external/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename _MatrixTypeNested::InnerIterator Base;$/;"	t	class:Eigen::TransposeImpl::InnerIterator
Base	external/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename _MatrixTypeNested::ReverseInnerIterator Base;$/;"	t	class:Eigen::TransposeImpl::ReverseInnerIterator
Base	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixTypeNestedCleaned::InnerIterator Base;$/;"	t	class:Eigen::SparseTriangularView::InnerIterator
Base	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixTypeNestedCleaned::ReverseInnerIterator Base;$/;"	t	class:Eigen::SparseTriangularView::ReverseInnerIterator
Base	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperILU> Base;$/;"	t	class:Eigen::SuperILU
Base	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SuperLUBase<_MatrixType,SuperLU> Base;$/;"	t	class:Eigen::SuperLU
Base	external/Eigen/src/misc/Image.h	/^  typedef ReturnByValue<image_retval_base> Base;$/;"	t	struct:Eigen::internal::image_retval_base
Base	external/Eigen/src/misc/Kernel.h	/^  typedef ReturnByValue<kernel_retval_base> Base;$/;"	t	struct:Eigen::internal::kernel_retval_base
Base	external/Eigen/src/misc/Solve.h	/^  typedef ReturnByValue<solve_retval_base> Base;$/;"	t	struct:Eigen::internal::solve_retval_base
Base	external/Eigen/src/misc/SparseSolve.h	/^  typedef ReturnByValue<sparse_solve_retval_base> Base;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
Base	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^                       typename NumTraits<typename internal::traits<typename internal::remove_all<_DerType>::type>::Scalar>::Real>::value> Base;$/;"	t	class:Eigen::AutoDiffScalar
Base	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef IterativeSolverBase<GMRES> Base;$/;"	t	class:Eigen::GMRES
Base	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^            MatrixBase<SkylineProduct<LhsNested, RhsNested, ProductMode> > >::type Base;$/;"	t	struct:Eigen::internal::traits
Base	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef typename SparseVector<Scalar,_Options,_Index>::InnerIterator Base;$/;"	t	class:Eigen::DynamicSparseMatrix::InnerIterator
Base	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef typename SparseVector<Scalar,_Options,_Index>::ReverseInnerIterator Base;$/;"	t	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
BaseScalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef typename internal::traits<ValueType>::Scalar BaseScalar;$/;"	t	class:Eigen::AutoDiffVector
BasisDerivativeType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dynamic,Dynamic,RowMajor,NumOfDerivativesAtCompileTime,OrderAtCompileTime> BasisDerivativeType;$/;"	t	struct:Eigen::SplineTraits
BasisDerivativeType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<_Scalar,Dynamic,Dynamic,RowMajor,NumOfDerivativesAtCompileTime,OrderAtCompileTime> BasisDerivativeType;$/;"	t	struct:Eigen::SplineTraits
BasisFunctions	external/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::BasisFunctions($/;"	f	class:Eigen::Spline
BasisReturnType	external/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime> BasisReturnType;$/;"	t	class:Eigen::MatrixBase
BasisVectorType	external/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::BasisVectorType BasisVectorType;$/;"	t	class:Eigen::Spline
BasisVectorType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,1,OrderAtCompileTime> BasisVectorType;$/;"	t	struct:Eigen::SplineTraits
Bennett5_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    Bennett5_functor(void) : Functor<double>(3,154) {}$/;"	f	struct:Bennett5_functor
Bennett5_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct Bennett5_functor : Functor<double>$/;"	s	file:
BiCGSTAB	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  BiCGSTAB() : Base() {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  BiCGSTAB(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::BiCGSTAB
BiCGSTAB	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^class BiCGSTAB : public IterativeSolverBase<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
BidiagonalType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef BandMatrix<RealScalar, ColsAtCompileTime, ColsAtCompileTime, 1, 0> BidiagonalType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
BinaryFunc	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef scalar_product_op<T> BinaryFunc;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
BitScanForward	external/unsupported/test/mpreal/dlmalloc.c	1383;"	d	file:
BitScanReverse	external/unsupported/test/mpreal/dlmalloc.c	1384;"	d	file:
Blacklist	OptApp.cpp	/^void COptApp::Blacklist( std::string filename )$/;"	f	class:COptApp
Block	external/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index i)$/;"	f	class:Eigen::Block
Block	external/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, Index startRow, Index startCol)$/;"	f	class:Eigen::Block
Block	external/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr, const Scalar* data, Index blockRows, Index blockCols)$/;"	f	class:Eigen::Block
Block	external/Eigen/src/Core/Block.h	/^    inline Block(XprType& xpr,$/;"	f	class:Eigen::Block
Block	external/Eigen/src/Core/Block.h	/^class Block<XprType,BlockRows,BlockCols, InnerPanel,true>$/;"	c	namespace:Eigen
Block	external/Eigen/src/Core/Block.h	/^template<typename XprType, int BlockRows, int BlockCols, bool InnerPanel, bool HasDirectAccess> class Block$/;"	c	namespace:Eigen
BlockSize	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^    BlockSize  = EIGEN_PLAIN_ENUM_MAX(mr,nr)$/;"	e	enum:Eigen::internal::tribb_kernel::__anon248
BlockType	external/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MatrixType,Dynamic,Dynamic> BlockType;$/;"	t	struct:Eigen::internal::partial_lu_impl
BothDirections	external/Eigen/src/Core/util/Constants.h	/^  BothDirections $/;"	e	enum:Eigen::DirectionType
BottomLeft	external/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomLeft	external/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftBlock	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix< Scalar, Deg_1, Deg_1 >         BottomLeftBlock;$/;"	t	class:Eigen::internal::companion
BottomLeftCeil	external/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomLeftDiagonal	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix<Scalar, Deg_1, 1>               BottomLeftDiagonal;$/;"	t	class:Eigen::internal::companion
BottomLeftFloor	external/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRight	external/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
BottomRight	external/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeft=0, BottomRight=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightCeil	external/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftCeil=4, BottomRightCeil=5,$/;"	e	enum:Eigen::AlignedBox::CornerType
BottomRightFloor	external/Eigen/src/Geometry/AlignedBox.h	/^    BottomLeftFloor=0, BottomRightFloor=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
Box2d	external/unsupported/doc/examples/BVH_Example.cpp	/^typedef AlignedBox<double, 2> Box2d;$/;"	t	file:
BoxBOD_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    BoxBOD_functor(void) : Functor<double>(2,6) {}$/;"	f	struct:BoxBOD_functor
BoxBOD_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct BoxBOD_functor : Functor<double>$/;"	s	file:
BoxType	external/unsupported/test/BVH.cpp	/^  typedef AlignedBox<double, Dim> BoxType;$/;"	t	struct:BallPointStuff	file:
BoxType	external/unsupported/test/BVH.cpp	/^  typedef AlignedBox<double, Dim> BoxType;$/;"	t	struct:TreeTest	file:
BuildType	external/Eigen/src/Core/BandMatrix.h	/^      typedef Block<CoefficientsType,1, DiagonalSize> BuildType;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
BuiltIn	external/Eigen/src/Core/util/Constants.h	/^  BuiltIn$/;"	e	enum:Eigen::__anon268
CALL_DIRECT_MMAP	external/unsupported/test/mpreal/dlmalloc.c	1582;"	d	file:
CALL_DIRECT_MMAP	external/unsupported/test/mpreal/dlmalloc.c	1584;"	d	file:
CALL_DIRECT_MMAP	external/unsupported/test/mpreal/dlmalloc.c	1592;"	d	file:
CALL_MMAP	external/unsupported/test/mpreal/dlmalloc.c	1572;"	d	file:
CALL_MMAP	external/unsupported/test/mpreal/dlmalloc.c	1574;"	d	file:
CALL_MMAP	external/unsupported/test/mpreal/dlmalloc.c	1593;"	d	file:
CALL_MORECORE	external/unsupported/test/mpreal/dlmalloc.c	1557;"	d	file:
CALL_MORECORE	external/unsupported/test/mpreal/dlmalloc.c	1559;"	d	file:
CALL_MORECORE	external/unsupported/test/mpreal/dlmalloc.c	1562;"	d	file:
CALL_MREMAP	external/unsupported/test/mpreal/dlmalloc.c	1602;"	d	file:
CALL_MREMAP	external/unsupported/test/mpreal/dlmalloc.c	1604;"	d	file:
CALL_MREMAP	external/unsupported/test/mpreal/dlmalloc.c	1607;"	d	file:
CALL_MUNMAP	external/unsupported/test/mpreal/dlmalloc.c	1577;"	d	file:
CALL_MUNMAP	external/unsupported/test/mpreal/dlmalloc.c	1579;"	d	file:
CALL_MUNMAP	external/unsupported/test/mpreal/dlmalloc.c	1594;"	d	file:
CHECK_BLAS_INT	external/SuiteSparse/Include/cholmod_blas.h	172;"	d
CHOLMOD	external/SuiteSparse/Include/cholmod_internal.h	226;"	d
CHOLMOD	external/SuiteSparse/Include/cholmod_internal.h	276;"	d
CHOLMOD_A	external/SuiteSparse/Include/cholmod_cholesky.h	178;"	d
CHOLMOD_AIX	external/SuiteSparse/Include/cholmod_blas.h	43;"	d
CHOLMOD_ALPHA	external/SuiteSparse/Include/cholmod_blas.h	49;"	d
CHOLMOD_AMD	external/SuiteSparse/Include/cholmod_core.h	386;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	28;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	32;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	36;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	40;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	44;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	50;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	61;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	65;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	70;"	d
CHOLMOD_ARCHITECTURE	external/SuiteSparse/Include/cholmod_blas.h	76;"	d
CHOLMOD_ASSEMBLE_TIME	external/SuiteSparse/Include/cholmod_core.h	1004;"	d
CHOLMOD_ASSEMBLE_TIME2	external/SuiteSparse/Include/cholmod_core.h	1005;"	d
CHOLMOD_AUTO	external/SuiteSparse/Include/cholmod_core.h	400;"	d
CHOLMOD_BLAS_H	external/SuiteSparse/Include/cholmod_blas.h	16;"	d
CHOLMOD_CHECK_H	external/SuiteSparse/Include/cholmod_check.h	67;"	d
CHOLMOD_CHOLESKY_H	external/SuiteSparse/Include/cholmod_cholesky.h	55;"	d
CHOLMOD_CLEAR_FLAG	external/SuiteSparse/Include/cholmod_core.h	1087;"	d
CHOLMOD_COL	external/SuiteSparse/Include/cholmod_matrixops.h	110;"	d
CHOLMOD_COLAMD	external/SuiteSparse/Include/cholmod_core.h	392;"	d
CHOLMOD_COMMON	external/SuiteSparse/Include/cholmod_core.h	286;"	d
CHOLMOD_COMPLEX	external/SuiteSparse/Include/cholmod_core.h	319;"	d
CHOLMOD_CONFIG_H	external/SuiteSparse/Include/cholmod_config.h	50;"	d
CHOLMOD_CORE_H	external/SuiteSparse/Include/cholmod_core.h	226;"	d
CHOLMOD_CPU_GEMM_CALLS	external/SuiteSparse/Include/cholmod_core.h	986;"	d
CHOLMOD_CPU_GEMM_TIME	external/SuiteSparse/Include/cholmod_core.h	996;"	d
CHOLMOD_CPU_POTRF_CALLS	external/SuiteSparse/Include/cholmod_core.h	989;"	d
CHOLMOD_CPU_POTRF_TIME	external/SuiteSparse/Include/cholmod_core.h	999;"	d
CHOLMOD_CPU_SYRK_CALLS	external/SuiteSparse/Include/cholmod_core.h	987;"	d
CHOLMOD_CPU_SYRK_TIME	external/SuiteSparse/Include/cholmod_core.h	997;"	d
CHOLMOD_CPU_TRSM_CALLS	external/SuiteSparse/Include/cholmod_core.h	988;"	d
CHOLMOD_CPU_TRSM_TIME	external/SuiteSparse/Include/cholmod_core.h	998;"	d
CHOLMOD_CYGWIN	external/SuiteSparse/Include/cholmod_blas.h	56;"	d
CHOLMOD_D	external/SuiteSparse/Include/cholmod_cholesky.h	184;"	d
CHOLMOD_DATE	external/SuiteSparse/Include/cholmod_core.h	246;"	d
CHOLMOD_DENSE	external/SuiteSparse/Include/cholmod_core.h	289;"	d
CHOLMOD_DLt	external/SuiteSparse/Include/cholmod_cholesky.h	181;"	d
CHOLMOD_DOUBLE	external/SuiteSparse/Include/cholmod_core.h	306;"	d
CHOLMOD_DSMALL	external/SuiteSparse/Include/cholmod_core.h	380;"	d
CHOLMOD_FACTOR	external/SuiteSparse/Include/cholmod_core.h	288;"	d
CHOLMOD_GIVEN	external/SuiteSparse/Include/cholmod_core.h	385;"	d
CHOLMOD_GPU_GEMM_CALLS	external/SuiteSparse/Include/cholmod_core.h	990;"	d
CHOLMOD_GPU_GEMM_TIME	external/SuiteSparse/Include/cholmod_core.h	1000;"	d
CHOLMOD_GPU_POTRF_CALLS	external/SuiteSparse/Include/cholmod_core.h	993;"	d
CHOLMOD_GPU_POTRF_TIME	external/SuiteSparse/Include/cholmod_core.h	1003;"	d
CHOLMOD_GPU_PROBLEM	external/SuiteSparse/Include/cholmod_core.h	378;"	d
CHOLMOD_GPU_SYRK_CALLS	external/SuiteSparse/Include/cholmod_core.h	991;"	d
CHOLMOD_GPU_SYRK_TIME	external/SuiteSparse/Include/cholmod_core.h	1001;"	d
CHOLMOD_GPU_TRSM_CALLS	external/SuiteSparse/Include/cholmod_core.h	992;"	d
CHOLMOD_GPU_TRSM_TIME	external/SuiteSparse/Include/cholmod_core.h	1002;"	d
CHOLMOD_H	external/SuiteSparse/Include/cholmod.h	76;"	d
CHOLMOD_HP	external/SuiteSparse/Include/cholmod_blas.h	64;"	d
CHOLMOD_HP	external/SuiteSparse/Include/cholmod_blas.h	69;"	d
CHOLMOD_INT	external/SuiteSparse/Include/cholmod_core.h	297;"	d
CHOLMOD_INTERNAL_H	external/SuiteSparse/Include/cholmod_internal.h	33;"	d
CHOLMOD_INTLONG	external/SuiteSparse/Include/cholmod_core.h	298;"	d
CHOLMOD_INVALID	external/SuiteSparse/Include/cholmod_core.h	377;"	d
CHOLMOD_IO_H	external/SuiteSparse/Include/cholmod_io64.h	22;"	d
CHOLMOD_IS_GT_ZERO	external/SuiteSparse/Include/cholmod_core.h	2328;"	d
CHOLMOD_IS_GT_ZERO	external/SuiteSparse/Include/cholmod_core.h	2339;"	d
CHOLMOD_IS_LE_ZERO	external/SuiteSparse/Include/cholmod_core.h	2329;"	d
CHOLMOD_IS_LE_ZERO	external/SuiteSparse/Include/cholmod_core.h	2340;"	d
CHOLMOD_IS_LT_ZERO	external/SuiteSparse/Include/cholmod_core.h	2327;"	d
CHOLMOD_IS_LT_ZERO	external/SuiteSparse/Include/cholmod_core.h	2338;"	d
CHOLMOD_IS_NAN	external/SuiteSparse/Include/cholmod_core.h	2324;"	d
CHOLMOD_IS_NAN	external/SuiteSparse/Include/cholmod_core.h	2335;"	d
CHOLMOD_IS_NONZERO	external/SuiteSparse/Include/cholmod_core.h	2326;"	d
CHOLMOD_IS_NONZERO	external/SuiteSparse/Include/cholmod_core.h	2337;"	d
CHOLMOD_IS_ZERO	external/SuiteSparse/Include/cholmod_core.h	2325;"	d
CHOLMOD_IS_ZERO	external/SuiteSparse/Include/cholmod_core.h	2336;"	d
CHOLMOD_L	external/SuiteSparse/Include/cholmod_cholesky.h	182;"	d
CHOLMOD_LD	external/SuiteSparse/Include/cholmod_cholesky.h	180;"	d
CHOLMOD_LDLt	external/SuiteSparse/Include/cholmod_cholesky.h	179;"	d
CHOLMOD_LINUX	external/SuiteSparse/Include/cholmod_blas.h	35;"	d
CHOLMOD_LONG	external/SuiteSparse/Include/cholmod_core.h	299;"	d
CHOLMOD_Lt	external/SuiteSparse/Include/cholmod_cholesky.h	183;"	d
CHOLMOD_MAC	external/SuiteSparse/Include/cholmod_blas.h	39;"	d
CHOLMOD_MAIN_VERSION	external/SuiteSparse/Include/cholmod_core.h	248;"	d
CHOLMOD_MATRIXOPS_H	external/SuiteSparse/Include/cholmod_matrixops.h	36;"	d
CHOLMOD_MAXMETHODS	external/SuiteSparse/Include/cholmod_core.h	368;"	d
CHOLMOD_METIS	external/SuiteSparse/Include/cholmod_core.h	387;"	d
CHOLMOD_MINGW	external/SuiteSparse/Include/cholmod_blas.h	54;"	d
CHOLMOD_MM_HERMITIAN	external/SuiteSparse/Include/cholmod_core.h	2278;"	d
CHOLMOD_MM_HERMITIAN_POSDIAG	external/SuiteSparse/Include/cholmod_core.h	2281;"	d
CHOLMOD_MM_RECTANGULAR	external/SuiteSparse/Include/cholmod_core.h	2275;"	d
CHOLMOD_MM_SKEW_SYMMETRIC	external/SuiteSparse/Include/cholmod_core.h	2279;"	d
CHOLMOD_MM_SYMMETRIC	external/SuiteSparse/Include/cholmod_core.h	2277;"	d
CHOLMOD_MM_SYMMETRIC_POSDIAG	external/SuiteSparse/Include/cholmod_core.h	2280;"	d
CHOLMOD_MM_UNSYMMETRIC	external/SuiteSparse/Include/cholmod_core.h	2276;"	d
CHOLMOD_MODIFY_H	external/SuiteSparse/Include/cholmod_modify.h	45;"	d
CHOLMOD_NATURAL	external/SuiteSparse/Include/cholmod_core.h	384;"	d
CHOLMOD_NESDIS	external/SuiteSparse/Include/cholmod_core.h	388;"	d
CHOLMOD_NOT_INSTALLED	external/SuiteSparse/Include/cholmod_core.h	374;"	d
CHOLMOD_NOT_POSDEF	external/SuiteSparse/Include/cholmod_core.h	379;"	d
CHOLMOD_OK	external/SuiteSparse/Include/cholmod_core.h	373;"	d
CHOLMOD_OUT_OF_MEMORY	external/SuiteSparse/Include/cholmod_core.h	375;"	d
CHOLMOD_P	external/SuiteSparse/Include/cholmod_cholesky.h	185;"	d
CHOLMOD_PARTITION_H	external/SuiteSparse/Include/cholmod_partition.h	40;"	d
CHOLMOD_PATTERN	external/SuiteSparse/Include/cholmod_core.h	317;"	d
CHOLMOD_POSTORDERED	external/SuiteSparse/Include/cholmod_core.h	396;"	d
CHOLMOD_Pt	external/SuiteSparse/Include/cholmod_cholesky.h	186;"	d
CHOLMOD_REAL	external/SuiteSparse/Include/cholmod_core.h	318;"	d
CHOLMOD_ROW	external/SuiteSparse/Include/cholmod_matrixops.h	109;"	d
CHOLMOD_SCALAR	external/SuiteSparse/Include/cholmod_matrixops.h	108;"	d
CHOLMOD_SGI	external/SuiteSparse/Include/cholmod_blas.h	31;"	d
CHOLMOD_SIMPLICIAL	external/SuiteSparse/Include/cholmod_core.h	399;"	d
CHOLMOD_SINGLE	external/SuiteSparse/Include/cholmod_core.h	307;"	d
CHOLMOD_SOL2	external/SuiteSparse/Include/cholmod_blas.h	27;"	d
CHOLMOD_SPARSE	external/SuiteSparse/Include/cholmod_core.h	287;"	d
CHOLMOD_SUBSUB_VERSION	external/SuiteSparse/Include/cholmod_core.h	250;"	d
CHOLMOD_SUB_VERSION	external/SuiteSparse/Include/cholmod_core.h	249;"	d
CHOLMOD_SUPERNODAL	external/SuiteSparse/Include/cholmod_core.h	401;"	d
CHOLMOD_SUPERNODAL_H	external/SuiteSparse/Include/cholmod_supernodal.h	48;"	d
CHOLMOD_SYM	external/SuiteSparse/Include/cholmod_matrixops.h	111;"	d
CHOLMOD_TOO_LARGE	external/SuiteSparse/Include/cholmod_core.h	376;"	d
CHOLMOD_TRIPLET	external/SuiteSparse/Include/cholmod_core.h	290;"	d
CHOLMOD_VERSION	external/SuiteSparse/Include/cholmod_core.h	251;"	d
CHOLMOD_VER_CODE	external/SuiteSparse/Include/cholmod_core.h	247;"	d
CHOLMOD_WINDOWS	external/SuiteSparse/Include/cholmod_blas.h	58;"	d
CHOLMOD_ZOMPLEX	external/SuiteSparse/Include/cholmod_core.h	320;"	d
CHUNK_ALIGN_MASK	external/unsupported/test/mpreal/dlmalloc.c	1457;"	d	file:
CHUNK_OVERHEAD	external/unsupported/test/mpreal/dlmalloc.c	2077;"	d	file:
CHUNK_OVERHEAD	external/unsupported/test/mpreal/dlmalloc.c	2079;"	d	file:
CINUSE_BIT	external/unsupported/test/mpreal/dlmalloc.c	2121;"	d	file:
CJMADD	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	1094;"	d
CLEAR	external/SuiteSparse/Include/cholmod_template.h	124;"	d
CLEAR	external/SuiteSparse/Include/cholmod_template.h	175;"	d
CLEAR	external/SuiteSparse/Include/cholmod_template.h	226;"	d
CLEAR	external/SuiteSparse/Include/cholmod_template.h	32;"	d
CLEAR	external/SuiteSparse/Include/cholmod_template.h	79;"	d
CLEAR_IMAG	external/SuiteSparse/Include/cholmod_template.h	125;"	d
CLEAR_IMAG	external/SuiteSparse/Include/cholmod_template.h	176;"	d
CLEAR_IMAG	external/SuiteSparse/Include/cholmod_template.h	227;"	d
CLEAR_IMAG	external/SuiteSparse/Include/cholmod_template.h	36;"	d
CLEAR_IMAG	external/SuiteSparse/Include/cholmod_template.h	80;"	d
CMAKE_BINARY_DIR	build/Makefile	/^CMAKE_BINARY_DIR = \/home\/scott\/s2017\/ER_port\/FragmentOptimizer\/build$/;"	m
CMAKE_COMMAND	build/Makefile	/^CMAKE_COMMAND = \/usr\/bin\/cmake$/;"	m
CMAKE_SOURCE_DIR	build/Makefile	/^CMAKE_SOURCE_DIR = \/home\/scott\/s2017\/ER_port\/FragmentOptimizer$/;"	m
CMFAIL	external/unsupported/test/mpreal/dlmalloc.c	1478;"	d	file:
COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED	external/Eigen/src/Core/util/StaticAssert.h	/^        COEFFICIENT_WRITE_ACCESS_TO_SELFADJOINT_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	158;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	161;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	176;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	190;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	200;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	218;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	227;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	230;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	245;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	258;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	276;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	279;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	282;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	94;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	101;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	108;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	115;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	122;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	129;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	137;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	13;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	142;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	149;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	152;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	155;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	170;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	184;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	198;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	19;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	216;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	225;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	228;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	243;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	261;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	264;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	267;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	42;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	50;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	56;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	62;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	71;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	80;"	d	file:
COMPILER_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	94;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	165;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	180;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	191;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	202;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	221;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	233;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	238;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	247;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	252;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	261;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	266;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	96;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	103;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	110;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	117;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	124;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	130;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	138;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	144;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	159;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	15;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	174;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	186;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	188;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	200;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	219;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	231;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	236;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	246;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	24;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	251;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	43;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	51;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	58;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	64;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	73;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	83;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	88;"	d	file:
COMPILER_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	96;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	166;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	181;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	193;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	203;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	222;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	234;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	239;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	248;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	253;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	262;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	267;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	97;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	104;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	111;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	118;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	125;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	131;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	139;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	145;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	160;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	16;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	175;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	191;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	201;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	220;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	232;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	237;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	247;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	252;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	25;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	44;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	52;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	59;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	65;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	74;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	84;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	89;"	d	file:
COMPILER_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	97;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	167;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	182;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	196;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	207;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	210;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	223;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	235;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	240;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	249;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	254;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	263;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	268;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	98;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	105;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	112;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	119;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	126;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	133;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	146;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	161;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	176;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	194;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	205;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	208;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	221;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	233;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	238;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	248;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	253;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	27;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	29;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	46;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	53;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	67;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	76;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	85;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	90;"	d	file:
COMPILER_VERSION_PATCH	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	98;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	173;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	214;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	33;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	167;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	212;"	d	file:
COMPILER_VERSION_TWEAK	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	33;"	d	file:
CORRUPTION_ERROR_ACTION	external/unsupported/test/mpreal/dlmalloc.c	2633;"	d	file:
CORRUPTION_ERROR_ACTION	external/unsupported/test/mpreal/dlmalloc.c	2639;"	d	file:
COptApp	OptApp.cpp	/^COptApp::COptApp(void)$/;"	f	class:COptApp
COptApp	OptApp.h	/^class COptApp$/;"	c
CT_TEMPLATE	external/SuiteSparse/Include/cholmod_complexity.h	64;"	d
CURRENT_THREAD	external/unsupported/test/mpreal/dlmalloc.c	1661;"	d	file:
CURRENT_THREAD	external/unsupported/test/mpreal/dlmalloc.c	1761;"	d	file:
CURRENT_THREAD	external/unsupported/test/mpreal/dlmalloc.c	1826;"	d	file:
CURRENT_THREAD	external/unsupported/test/mpreal/dlmalloc.c	1857;"	d	file:
C_ADD	external/SuiteSparse/Include/cholmod_complexity.h	115;"	d
C_ADD_REAL	external/SuiteSparse/Include/cholmod_complexity.h	119;"	d
C_ASSEMBLE	external/SuiteSparse/Include/cholmod_complexity.h	66;"	d
C_ASSIGN	external/SuiteSparse/Include/cholmod_complexity.h	70;"	d
C_ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_complexity.h	76;"	d
C_ASSIGN_REAL	external/SuiteSparse/Include/cholmod_complexity.h	74;"	d
C_CLEAR	external/SuiteSparse/Include/cholmod_complexity.h	122;"	d
C_CLEAR_IMAG	external/SuiteSparse/Include/cholmod_complexity.h	126;"	d
C_DIALECT	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	522;"	d	file:
C_DIALECT	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	524;"	d	file:
C_DIALECT	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	527;"	d	file:
C_DIALECT	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	529;"	d	file:
C_DIALECT	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	531;"	d	file:
C_DIV	external/SuiteSparse/Include/cholmod_complexity.h	130;"	d
C_DIV_REAL	external/SuiteSparse/Include/cholmod_complexity.h	142;"	d
C_IMAG_IS_NONZERO	external/SuiteSparse/Include/cholmod_complexity.h	91;"	d
C_IS_NONZERO	external/SuiteSparse/Include/cholmod_complexity.h	82;"	d
C_IS_ONE	external/SuiteSparse/Include/cholmod_complexity.h	88;"	d
C_IS_ZERO	external/SuiteSparse/Include/cholmod_complexity.h	85;"	d
C_LDLDOT	external/SuiteSparse/Include/cholmod_complexity.h	151;"	d
C_LLDOT	external/SuiteSparse/Include/cholmod_complexity.h	137;"	d
C_MULT	external/SuiteSparse/Include/cholmod_complexity.h	93;"	d
C_MULTADD	external/SuiteSparse/Include/cholmod_complexity.h	97;"	d
C_MULTADDCONJ	external/SuiteSparse/Include/cholmod_complexity.h	106;"	d
C_MULTSUB	external/SuiteSparse/Include/cholmod_complexity.h	101;"	d
C_MULTSUBCONJ	external/SuiteSparse/Include/cholmod_complexity.h	111;"	d
C_MULT_REAL	external/SuiteSparse/Include/cholmod_complexity.h	146;"	d
C_PRINT	external/SuiteSparse/Include/cholmod_complexity.h	140;"	d
C_TEMPLATE	external/SuiteSparse/Include/cholmod_complexity.h	63;"	d
C_XTYPE_OK	external/SuiteSparse/Include/cholmod_complexity.h	80;"	d
CanVectorizeInner	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeInner =    SameType$/;"	e	enum:Eigen::internal::traits::__anon233
CanVectorizeInner	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeInner = internal::traits<CoeffBasedProduct>::CanVectorizeInner$/;"	e	enum:Eigen::CoeffBasedProduct::__anon234
CanVectorizeLhs	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeLhs = (!LhsRowMajor) && (LhsFlags & PacketAccessBit)$/;"	e	enum:Eigen::internal::traits::__anon233
CanVectorizeRhs	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CanVectorizeRhs = RhsRowMajor && (RhsFlags & PacketAccessBit)$/;"	e	enum:Eigen::internal::traits::__anon233
CauchyBounds	external/unsupported/test/polynomialutils.cpp	/^void CauchyBounds(int deg)$/;"	f
CauchyBounds_scalar	external/unsupported/test/polynomialutils.cpp	/^template<typename _Scalar> void CauchyBounds_scalar()$/;"	f
Central	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    Central$/;"	e	enum:Eigen::NumericalDiffMode
CholMatrixType	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef MatrixType CholMatrixType;$/;"	t	class:Eigen::CholmodBase
CholMatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholesky
CholMatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
CholMatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialLDLT
CholMatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef SparseMatrix<Scalar,ColMajor,Index> CholMatrixType;$/;"	t	class:Eigen::SimplicialLLT
CholMatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, Index>                   CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholMatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseMatrix<Scalar, ColMajor, Index>               CholMatrixType;$/;"	t	struct:Eigen::internal::traits
CholmodAuto	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodBase	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodBase()$/;"	f	class:Eigen::CholmodBase
CholmodBase	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodBase(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
CholmodBase	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodBase : internal::noncopyable$/;"	c	namespace:Eigen
CholmodDecomposition	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition() : Base() { init(); }$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodDecomposition(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodDecomposition
CholmodDecomposition	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodDecomposition : public CholmodBase<_MatrixType, _UpLo, CholmodDecomposition<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodLDLt	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodMode	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^enum CholmodMode {$/;"	g	namespace:Eigen
CholmodSimplicialLDLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLDLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLDLT
CholmodSimplicialLDLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLDLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSimplicialLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSimplicialLLT
CholmodSimplicialLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSimplicialLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSimplicialLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSimplicialLLt	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
CholmodSupernodalLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT() : Base() { init(); }$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    CholmodSupernodalLLT(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::CholmodSupernodalLLT
CholmodSupernodalLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^class CholmodSupernodalLLT : public CholmodBase<_MatrixType, _UpLo, CholmodSupernodalLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
CholmodSupernodalLLt	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  CholmodAuto, CholmodSimplicialLLt, CholmodSupernodalLLt, CholmodLDLt$/;"	e	enum:Eigen::CholmodMode
ChordLengths	external/unsupported/Eigen/src/Splines/SplineFitting.h	/^  void ChordLengths(const PointArrayType& pts, KnotVectorType& chord_lengths)$/;"	f	namespace:Eigen
Cluster	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef std::list<Scalar> Cluster;$/;"	t	class:Eigen::MatrixFunction
CoeffBasedProduct	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    inline CoeffBasedProduct(const CoeffBasedProduct& other)$/;"	f	class:Eigen::CoeffBasedProduct
CoeffBasedProduct	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    inline CoeffBasedProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::CoeffBasedProduct
CoeffBasedProduct	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^class CoeffBasedProduct$/;"	c	namespace:Eigen
CoeffBasedProductMode	external/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon272
CoeffReadCost	external/Eigen/src/Core/BandMatrix.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
CoeffReadCost	external/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon20
CoeffReadCost	external/Eigen/src/Core/BandMatrix.h	/^    CoeffReadCost = internal::traits<_CoefficientsType>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon21
CoeffReadCost	external/Eigen/src/Core/CwiseBinaryOp.h	/^    CoeffReadCost = LhsCoeffReadCost + RhsCoeffReadCost + functor_traits<BinaryOp>::Cost$/;"	e	enum:Eigen::internal::traits::__anon26
CoeffReadCost	external/Eigen/src/Core/CwiseNullaryOp.h	/^    CoeffReadCost = functor_traits<NullaryOp>::Cost$/;"	e	enum:Eigen::internal::traits::__anon27
CoeffReadCost	external/Eigen/src/Core/CwiseUnaryOp.h	/^    CoeffReadCost = _XprTypeNested::CoeffReadCost + functor_traits<UnaryOp>::Cost$/;"	e	enum:Eigen::internal::traits::__anon28
CoeffReadCost	external/Eigen/src/Core/CwiseUnaryView.h	/^    CoeffReadCost = traits<_MatrixTypeNested>::CoeffReadCost + functor_traits<ViewOp>::Cost,$/;"	e	enum:Eigen::internal::traits::__anon29
CoeffReadCost	external/Eigen/src/Core/DenseBase.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::DenseBase::__anon30
CoeffReadCost	external/Eigen/src/Core/Diagonal.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon36
CoeffReadCost	external/Eigen/src/Core/DiagonalProduct.h	/^    CoeffReadCost = NumTraits<Scalar>::MulCost + MatrixType::CoeffReadCost + DiagonalType::DiagonalVectorType::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon40
CoeffReadCost	external/Eigen/src/Core/Matrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon153
CoeffReadCost	external/Eigen/src/Core/PermutationMatrix.h	/^      CoeffReadCost = Traits::CoeffReadCost,$/;"	e	enum:Eigen::PermutationBase::__anon158
CoeffReadCost	external/Eigen/src/Core/PermutationMatrix.h	/^      CoeffReadCost = Traits::CoeffReadCost,$/;"	e	enum:Eigen::Transpose::__anon160
CoeffReadCost	external/Eigen/src/Core/PermutationMatrix.h	/^    CoeffReadCost = _IndicesType::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon159
CoeffReadCost	external/Eigen/src/Core/Product.h	/^    CoeffReadCost = 0 \/\/ TODO CoeffReadCost should not be part of the expression traits$/;"	e	enum:internal::traits::__anon164
CoeffReadCost	external/Eigen/src/Core/ProductBase.h	/^    CoeffReadCost = 0 \/\/ FIXME why is it needed ?$/;"	e	enum:Eigen::internal::traits::__anon165
CoeffReadCost	external/Eigen/src/Core/Replicate.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon178
CoeffReadCost	external/Eigen/src/Core/Reverse.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon180
CoeffReadCost	external/Eigen/src/Core/Select.h	/^    CoeffReadCost = traits<typename remove_all<ConditionMatrixNested>::type>::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon182
CoeffReadCost	external/Eigen/src/Core/SelfAdjointView.h	/^    CoeffReadCost = MatrixTypeNestedCleaned::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon183
CoeffReadCost	external/Eigen/src/Core/Transpose.h	/^    CoeffReadCost = MatrixTypeNestedPlain::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon192
CoeffReadCost	external/Eigen/src/Core/TriangularMatrix.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::TriangularBase::__anon195
CoeffReadCost	external/Eigen/src/Core/TriangularMatrix.h	/^    CoeffReadCost = MatrixTypeNestedCleaned::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon196
CoeffReadCost	external/Eigen/src/Core/VectorwiseOp.h	/^    CoeffReadCost = TraversalSize * traits<_MatrixTypeNested>::CoeffReadCost + int(CostOpType::value)$/;"	e	enum:Eigen::internal::traits::__anon201
CoeffReadCost	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      CoeffReadCost = InnerSize == Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon233
CoeffReadCost	external/Eigen/src/Eigen2Support/Minor.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost \/\/ minor is used typically on tiny matrices,$/;"	e	enum:Eigen::internal::traits::__anon345
CoeffReadCost	external/Eigen/src/Geometry/Homogeneous.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon356
CoeffReadCost	external/Eigen/src/SparseCore/SparseBlock.h	/^    CoeffReadCost = MatrixType::CoeffReadCost$/;"	e	enum:Eigen::internal::traits::__anon413
CoeffReadCost	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    CoeffReadCost = LhsCoeffReadCost + RhsCoeffReadCost + NumTraits<Scalar>::MulCost$/;"	e	enum:Eigen::internal::traits::__anon418
CoeffReadCost	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon419
CoeffReadCost	external/Eigen/src/SparseCore/SparseMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon422
CoeffReadCost	external/Eigen/src/SparseCore/SparseMatrix.h	/^    CoeffReadCost = _MatrixTypeNested::CoeffReadCost*10$/;"	e	enum:Eigen::internal::traits::__anon423
CoeffReadCost	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
CoeffReadCost	external/Eigen/src/SparseCore/SparseProduct.h	/^    CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon429
CoeffReadCost	external/Eigen/src/SparseCore/SparseVector.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon435
CoeffReadCost	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon447
CoeffReadCost	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        CoeffReadCost = internal::traits<Derived>::CoeffReadCost,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
CoeffReadCost	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        CoeffReadCost = Dynamic$/;"	e	enum:Eigen::internal::traits::__anon449
CoeffReadCost	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    CoeffReadCost = NumTraits<Scalar>::ReadCost,$/;"	e	enum:Eigen::internal::traits::__anon453
CoeffReturnType	external/Eigen/src/Core/ArrayBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::ArrayBase
CoeffReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::DenseBase
CoeffReturnType	external/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type CoeffReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
CoeffReturnType	external/Eigen/src/Core/MapBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MapBase
CoeffReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::CoeffReturnType CoeffReturnType;$/;"	t	class:Eigen::MatrixBase
CoeffReturnType	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::conditional<_HasDirectAccess, const Scalar&, Scalar>::type CoeffReturnType;$/;"	t	class:Eigen::SparseMatrixBase
CoeffType	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef AutoDiffScalar<typename JacobianType::ColXpr> CoeffType;$/;"	t	class:Eigen::AutoDiffVector
CoeffVectorType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::HessenbergDecomposition
CoeffVectorType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<Scalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> CoeffVectorType;$/;"	t	class:Eigen::Tridiagonalization
CoeffVectorType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::CoeffVectorType CoeffVectorType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Coefficients	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^                        : int(AmbientDimAtCompileTime)+1,1> Coefficients;$/;"	t	class:Eigen::Hyperplane
Coefficients	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef Matrix<Scalar, 4, 1> Coefficients;$/;"	t	class:Eigen::Quaternion
Coefficients	external/Eigen/src/Geometry/Hyperplane.h	/^                        : Index(AmbientDimAtCompileTime)+1,1,Options> Coefficients;$/;"	t	class:Eigen::Hyperplane
Coefficients	external/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	external/Eigen/src/Geometry/Quaternion.h	/^    typedef Map<const Matrix<_Scalar,4,1>, _Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	external/Eigen/src/Geometry/Quaternion.h	/^    typedef typename internal::traits<Map>::Coefficients Coefficients;$/;"	t	class:Eigen::Map
Coefficients	external/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<_Scalar,4,1,_Options> Coefficients;$/;"	t	struct:Eigen::internal::traits
Coefficients	external/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Coefficients Coefficients;$/;"	t	class:Eigen::QuaternionBase
Coefficients	external/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Quaternion>::Coefficients Coefficients;$/;"	t	class:Eigen::Quaternion
CoefficientsType	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrix
CoefficientsType	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixWrapper
CoefficientsType	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::CoefficientsType CoefficientsType;$/;"	t	class:Eigen::internal::BandMatrixBase
CoefficientsType	external/Eigen/src/Core/BandMatrix.h	/^  typedef Matrix<Scalar,DataRowsAtCompileTime,ColsAtCompileTime,Options&RowMajor?RowMajor:ColMajor> CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoefficientsType	external/Eigen/src/Core/BandMatrix.h	/^  typedef _CoefficientsType CoefficientsType;$/;"	t	struct:Eigen::internal::traits
CoherentAccessPattern	external/Eigen/src/SparseCore/SparseUtil.h	/^const int CoherentAccessPattern     = 0x1;$/;"	m	namespace:Eigen
ColCount	external/SuiteSparse/Include/cholmod_core.h	/^    void *ColCount ;	\/* size n, column counts for simplicial L *\/$/;"	m	struct:cholmod_factor_struct
ColMajor	external/Eigen/src/Core/util/Constants.h	/^  ColMajor = 0,$/;"	e	enum:Eigen::__anon269
ColPivHouseholderQR	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR()$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
ColPivHouseholderQR	external/Eigen/src/QR/ColPivHouseholderQR.h	/^template<typename _MatrixType> class ColPivHouseholderQR$/;"	c	namespace:Eigen
ColPivHouseholderQRPreconditioner	external/Eigen/src/Core/util/Constants.h	/^  ColPivHouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
ColSpMatrix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef SparseMatrix<Scalar, ColMajor> ColSpMatrix;$/;"	t	class:Eigen::PastixBase
ColSpMatrix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLDLT
ColSpMatrix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLLT
ColSpMatrix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename Base::ColSpMatrix ColSpMatrix;$/;"	t	class:Eigen::PastixLU
ColType	external/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColType;$/;"	t	class:Eigen::JacobiSVD
ColVector	external/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::RowsAtCompileTime, 1> ColVector;$/;"	t	class:Eigen::SVD
ColVectorType	external/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<Scalar, MatrixType::RowsAtCompileTime, 1, MatrixType::Options, MatrixType::MaxRowsAtCompileTime, 1> ColVectorType;$/;"	t	class:Eigen::LU
ColVectorType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_col_type<MatrixType>::type ColVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
ColVectorType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1> ColVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
ColXpr	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ColXpr ColXpr;$/;"	t	class:Eigen::MatrixBase
ColXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ColXpr;$/;"	t
Cols	external/Eigen/src/Core/GeneralProduct.h	/^    Cols  = _Rhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon114
Cols	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const int Cols = Traits::ColsAtCompileTime;$/;"	m	class:Eigen::MatrixFunction
ColsAtCompileTime	external/Eigen/src/Cholesky/LDLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon1
ColsAtCompileTime	external/Eigen/src/Cholesky/LLT.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon2
ColsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
ColsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon20
ColsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon21
ColsAtCompileTime	external/Eigen/src/Core/Block.h	/^    ColsAtCompileTime = MatrixCols == 0 ? 0 : BlockCols,$/;"	e	enum:Eigen::internal::traits::__anon22
ColsAtCompileTime	external/Eigen/src/Core/CwiseBinaryOp.h	/^    ColsAtCompileTime = traits<Ancestor>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon25
ColsAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon30
ColsAtCompileTime	external/Eigen/src/Core/Diagonal.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon36
ColsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^      ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon37
ColsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^    ColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon39
ColsAtCompileTime	external/Eigen/src/Core/DiagonalProduct.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon40
ColsAtCompileTime	external/Eigen/src/Core/MapBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon147
ColsAtCompileTime	external/Eigen/src/Core/Matrix.h	/^    ColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon153
ColsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon158
ColsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      ColsAtCompileTime = Traits::ColsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon160
ColsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^    ColsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon159
ColsAtCompileTime	external/Eigen/src/Core/Product.h	/^    ColsAtCompileTime = RhsCleaned::ColsAtCompileTime,$/;"	e	enum:internal::traits::__anon164
ColsAtCompileTime	external/Eigen/src/Core/ProductBase.h	/^    ColsAtCompileTime = traits<Rhs>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon165
ColsAtCompileTime	external/Eigen/src/Core/Replicate.h	/^    ColsAtCompileTime = ColFactor==Dynamic || int(MatrixType::ColsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon178
ColsAtCompileTime	external/Eigen/src/Core/Reverse.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon180
ColsAtCompileTime	external/Eigen/src/Core/Select.h	/^    ColsAtCompileTime = ConditionMatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
ColsAtCompileTime	external/Eigen/src/Core/Transpose.h	/^    ColsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon192
ColsAtCompileTime	external/Eigen/src/Core/TriangularMatrix.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon195
ColsAtCompileTime	external/Eigen/src/Core/VectorwiseOp.h	/^    ColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon200
ColsAtCompileTime	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      ColsAtCompileTime = _RhsNested::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon233
ColsAtCompileTime	external/Eigen/src/Eigen2Support/Minor.h	/^    ColsAtCompileTime = (MatrixType::ColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon345
ColsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon347
ColsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon348
ColsAtCompileTime	external/Eigen/src/Eigenvalues/EigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon349
ColsAtCompileTime	external/Eigen/src/Eigenvalues/RealSchur.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon351
ColsAtCompileTime	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon352
ColsAtCompileTime	external/Eigen/src/Geometry/Homogeneous.h	/^    ColsAtCompileTime = Direction==Horizontal ? ColsPlusOne : MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon356
ColsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^      ColsAtCompileTime = internal::traits<HouseholderSequence>::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon380
ColsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^    ColsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon379
ColsAtCompileTime	external/Eigen/src/LU/FullPivLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon382
ColsAtCompileTime	external/Eigen/src/LU/PartialPivLU.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon385
ColsAtCompileTime	external/Eigen/src/QR/ColPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon393
ColsAtCompileTime	external/Eigen/src/QR/FullPivHouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon394
ColsAtCompileTime	external/Eigen/src/QR/HouseholderQR.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon395
ColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon402
ColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon399
ColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon400
ColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon401
ColsAtCompileTime	external/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon403
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseBlock.h	/^    ColsAtCompileTime = IsRowMajor ? MatrixType::ColsAtCompileTime : Size,$/;"	e	enum:Eigen::internal::traits::__anon413
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    ColsAtCompileTime    = Tr ? int(traits<Lhs>::ColsAtCompileTime)     : int(traits<Rhs>::ColsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon418
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    ColsAtCompileTime = _Rhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon419
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon423
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon422
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseProduct.h	/^    ColsAtCompileTime    = _RhsNested::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
ColsAtCompileTime	external/Eigen/src/SparseCore/SparseVector.h	/^    ColsAtCompileTime = IsColVector ? 1 : Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon435
ColsAtCompileTime	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const int ColsAtCompileTime = Traits::ColsAtCompileTime;$/;"	m	class:Eigen::MatrixFunction
ColsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon447
ColsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        ColsAtCompileTime = internal::traits<Derived>::ColsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
ColsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        ColsAtCompileTime = _RhsNested::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon449
ColsAtCompileTime	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    ColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon453
ColsAtCompileTimeMinusOne	external/Eigen/src/SVD/UpperBidiagonalization.h	/^      ColsAtCompileTimeMinusOne = internal::decrement_size<ColsAtCompileTime>::ret$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon403
ColsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ColsBlockXpr;$/;"	t
ColsPlusOne	external/Eigen/src/Geometry/Homogeneous.h	/^    ColsPlusOne = (MatrixType::ColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon356
ColumnVectorType	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::EigenSolver
ColumnVectorType	external/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> ColumnVectorType;$/;"	t	class:Eigen::RealSchur
ColwiseReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Vertical> ColwiseReturnType;$/;"	t	class:Eigen::DenseBase
CommaInitializer	external/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	external/Eigen/src/Core/CommaInitializer.h	/^  inline CommaInitializer(XprType& xpr, const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
CommaInitializer	external/Eigen/src/Core/CommaInitializer.h	/^struct CommaInitializer$/;"	s	namespace:Eigen
CompanionMatrixType	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef Matrix<Scalar,_Deg,_Deg>                 CompanionMatrixType;$/;"	t	class:Eigen::PolynomialSolver
CompleteUnrolling	external/Eigen/src/Core/util/Constants.h	/^  CompleteUnrolling$/;"	e	enum:Eigen::__anon267
Complex	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef std::complex<Scalar> Complex;$/;"	t	struct:Eigen::internal::fftw_impl
Complex	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef std::complex<Scalar> Complex;$/;"	t	struct:Eigen::internal::kiss_cpx_fft
Complex	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef std::complex<Scalar> Complex;$/;"	t	struct:Eigen::internal::kissfft_impl
ComplexEigenSolver	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      ComplexEigenSolver(const MatrixType& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver()$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexEigenSolver(Index size)$/;"	f	class:Eigen::ComplexEigenSolver
ComplexEigenSolver	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^template<typename _MatrixType> class ComplexEigenSolver$/;"	c	namespace:Eigen
ComplexMatrix	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef Matrix<ComplexScalar, Rows, Cols, Options, MaxRows, MaxCols> ComplexMatrix;$/;"	t	class:Eigen::MatrixFunction
ComplexMatrixType	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> ComplexMatrixType;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	external/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	struct:Eigen::internal::stem_function
ComplexScalar	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexEigenSolver
ComplexScalar	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::ComplexSchur
ComplexScalar	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::EigenSolver
ComplexScalar	external/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef std::complex<typename NumTraits<Scalar>::Real> ComplexScalar;$/;"	t	class:Eigen::RealSchur
ComplexScalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    typedef typename std::complex<RealScalar> ComplexScalar;$/;"	t	class:Eigen::MatrixExponential
ComplexScalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef std::complex<Scalar> ComplexScalar;$/;"	t	class:Eigen::MatrixFunction
ComplexSchur	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexSchur(const MatrixType& matrix, bool computeU = true)$/;"	f	class:Eigen::ComplexSchur
ComplexSchur	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^template<typename _MatrixType> class ComplexSchur$/;"	c	namespace:Eigen
CompressedStorage	external/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	external/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	external/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage(size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
CompressedStorage	external/Eigen/src/SparseCore/CompressedStorage.h	/^class CompressedStorage$/;"	c	namespace:Eigen::internal
ComputationInfo	external/Eigen/src/Core/util/Constants.h	/^enum ComputationInfo {$/;"	g	namespace:Eigen
ComputeEigenvectors	external/Eigen/src/Core/util/Constants.h	/^  ComputeEigenvectors = 0x80,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullU	external/Eigen/src/Core/util/Constants.h	/^  ComputeFullU        = 0x04,$/;"	e	enum:Eigen::DecompositionOptions
ComputeFullV	external/Eigen/src/Core/util/Constants.h	/^  ComputeFullV        = 0x10,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinU	external/Eigen/src/Core/util/Constants.h	/^  ComputeThinU        = 0x08,$/;"	e	enum:Eigen::DecompositionOptions
ComputeThinV	external/Eigen/src/Core/util/Constants.h	/^  ComputeThinV        = 0x20,$/;"	e	enum:Eigen::DecompositionOptions
ConditionMatrixNested	external/Eigen/src/Core/Select.h	/^  typedef typename ConditionMatrixType::Nested ConditionMatrixNested;$/;"	t	struct:Eigen::internal::traits
Conj	external/Eigen/src/Core/Functors.h	/^    Conj = NumTraits<LhsScalar>::IsComplex$/;"	e	enum:Eigen::internal::scalar_conj_product_op::__anon45
ConjLhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
ConjLhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
ConjLhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = _ConjLhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
ConjLhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjLhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
ConjRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
ConjRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
ConjRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = _ConjRhs,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
ConjRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ConjRhs = false,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
Conjugate	external/Eigen/src/Core/BandMatrix.h	/^        Conjugate = ReturnOpposite && NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon19
ConjugateGradient	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ConjugateGradient() : Base() {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ConjugateGradient(const MatrixType& A) : Base(A) {}$/;"	f	class:Eigen::ConjugateGradient
ConjugateGradient	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^class ConjugateGradient : public IterativeSolverBase<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	c	namespace:Eigen
ConjugateReturnType	external/Eigen/src/Householder/HouseholderSequence.h	/^    > ConjugateReturnType;$/;"	t	class:Eigen::HouseholderSequence
ConjugateReturnType	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type ConjugateReturnType;$/;"	t
ConstAffinePart	external/Eigen/src/Geometry/Transform.h	/^                              const Block<const MatrixType,Dim,HDim> >::type ConstAffinePart;$/;"	t	class:Eigen::Transform
ConstAffinePart	external/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::ConstAffinePart ConstAffinePart;$/;"	t	struct:Eigen::internal::transform_take_affine_part
ConstAlignedMapType	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, Aligned> ConstAlignedMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstColXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, 1, !IsRowMajor> ConstColXpr;$/;"	t
ConstColsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, Dynamic, !IsRowMajor> ConstColsBlockXpr;$/;"	t
ConstColwiseReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Vertical> ConstColwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstDiagonalIndexReturnType	external/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
ConstDiagonalReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef const Diagonal<const Derived> ConstDiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
ConstFixedSegmentReturnType	external/Eigen/src/Core/DenseBase.h	/^    template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	s	class:Eigen::DenseBase
ConstLinearPart	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef const Block<const MatrixType,Dim,Dim> ConstLinearPart;$/;"	t	class:Eigen::Transform
ConstLinearPart	external/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,Dim,int(Mode)==(AffineCompact)> ConstLinearPart;$/;"	t	class:Eigen::Transform
ConstMapType	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef const Eigen::Map<const Derived, Unaligned> ConstMapType;$/;"	t	class:Eigen::PlainObjectBase
ConstMatrixType	external/Eigen/src/Geometry/Transform.h	/^  typedef const MatrixType ConstMatrixType;$/;"	t	class:Eigen::Transform
ConstNColsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
ConstNRowsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
ConstNormalReturnType	external/Eigen/src/Geometry/Hyperplane.h	/^  typedef const Block<const Coefficients,AmbientDimAtCompileTime,1> ConstNormalReturnType;$/;"	t	class:Eigen::Hyperplane
ConstReverseReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef const Reverse<const Derived, BothDirections> ConstReverseReturnType;$/;"	t	class:Eigen::DenseBase
ConstRowXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowXpr;$/;"	t
ConstRowsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef const Block<const Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> ConstRowsBlockXpr;$/;"	t
ConstRowwiseReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef const VectorwiseOp<const Derived, Horizontal> ConstRowwiseReturnType;$/;"	t	class:Eigen::DenseBase
ConstSegmentReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef const VectorBlock<const Derived> ConstSegmentReturnType;$/;"	t	class:Eigen::DenseBase
ConstSelfAdjointViewReturnType	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
ConstStartMinusOne	external/Eigen/src/Core/MatrixBase.h	/^                  internal::traits<Derived>::ColsAtCompileTime==1 ? 1 : SizeMinusOne> ConstStartMinusOne;$/;"	t	class:Eigen::MatrixBase
ConstTranslationPart	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef const Block<const MatrixType,Dim,1> ConstTranslationPart;$/;"	t	class:Eigen::Transform
ConstTranslationPart	external/Eigen/src/Geometry/Transform.h	/^  typedef const Block<ConstMatrixType,Dim,1,int(Mode)==(AffineCompact)> ConstTranslationPart;$/;"	t	class:Eigen::Transform
ConstTransposeReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef const Transpose<const Derived> ConstTransposeReturnType;$/;"	t	class:Eigen::DenseBase
ConstTransposeReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::ConstTransposeReturnType ConstTransposeReturnType;$/;"	t	class:Eigen::MatrixBase
ConstTriangularViewReturnType	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
Constant	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index rows, Index cols, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(Index size, const Scalar& value)$/;"	f	class:Eigen::DenseBase
Constant	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Constant(const Scalar& value)$/;"	f	class:Eigen::DenseBase
ConstantReturnType	external/Eigen/src/Core/ArrayBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Derived> ConstantReturnType;$/;"	t	class:Eigen::ArrayBase
ConstantReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Derived> ConstantReturnType;$/;"	t	class:Eigen::DenseBase
ConstantReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Derived> ConstantReturnType;$/;"	t	class:Eigen::MatrixBase
ConstantReturnType	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_constant_op<Scalar>,Matrix<Scalar,Dynamic,Dynamic> > ConstantReturnType;$/;"	t	class:Eigen::SparseMatrixBase
ControlPointVectorType	external/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::ControlPointVectorType ControlPointVectorType;$/;"	t	class:Eigen::Spline
ControlPointVectorType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dimension,Dynamic> ControlPointVectorType;$/;"	t	struct:Eigen::SplineTraits
CornerType	external/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	g	namespace:Eigen
CornerType	external/Eigen/src/Geometry/AlignedBox.h	/^  enum CornerType$/;"	g	class:Eigen::AlignedBox
Correspondence	OptApp.h	/^	Correspondence( int i0, int i1 ) : idx0_( i0 ), idx1_( i1 ) {}$/;"	f	struct:Correspondence
Correspondence	OptApp.h	/^struct Correspondence {$/;"	s
CorrespondencePair	OptApp.h	/^typedef std::pair< int, int > CorrespondencePair;$/;"	t
CosinusTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        CosinusTooSmall = 4,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = (NumTraits<LhsScalar>::MulCost + NumTraits<RhsScalar>::MulCost)\/2, \/\/ rough estimate!$/;"	e	enum:Eigen::internal::functor_traits::__anon44
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = 2 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon52
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon78
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon79
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon80
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon81
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon82
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = 5 * NumTraits<Scalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon83
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<LhsScalar>::MulCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon46
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon42
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon47
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon48
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon51
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon55
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon56
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<Scalar>::IsComplex ? NumTraits<Scalar>::AddCost : 0,$/;"	e	enum:Eigen::internal::functor_traits::__anon58
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon53
Cost	external/Eigen/src/Core/Functors.h	/^    Cost = NumTraits<bool>::AddCost,$/;"	e	enum:Eigen::internal::functor_traits::__anon54
Cost	external/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon50
Cost	external/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess=0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon49
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon106
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon107
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon108
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon109
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon60
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon61
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon62
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon63
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon104
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon105
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon100
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon101
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon93
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon94
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon95
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon96
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon97
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon98
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon99
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon71
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon69
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon68
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon87
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon84
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasExp }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon64
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon65
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon67
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon70
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon77
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon57
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon85
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon66
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon86
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon90
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon91
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon92
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon88
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon89
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon111
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon110
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon102
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon103
Cost	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon59
Cost	external/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon166
Cost	external/Eigen/src/Core/Redux.h	/^    Cost = (  Derived::SizeAtCompileTime == Dynamic$/;"	e	enum:Eigen::internal::redux_traits::__anon170
Cost	external/Eigen/src/Core/VectorwiseOp.h	/^  template<typename _Scalar, int Size> struct Cost$/;"	s	struct:Eigen::internal::member_redux
Cost	external/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon206
Cost	external/Eigen/src/Core/Visitor.h	/^    Cost = NumTraits<Scalar>::AddCost$/;"	e	enum:Eigen::internal::functor_traits::__anon207
CostOpType	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::template Cost<InputScalar,TraversalSize> CostOpType;$/;"	t	struct:Eigen::internal::traits
CostOpType	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::template Cost<InputScalar,int(TraversalSize)> CostOpType;$/;"	t	struct:Eigen::internal::traits
CrossReturnType	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::PlainObject CrossReturnType;$/;"	t	class:Eigen::VectorwiseOp
Cwise	external/Eigen/src/Eigen2Support/Cwise.h	/^    inline Cwise(const ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Cwise
Cwise	external/Eigen/src/Eigen2Support/Cwise.h	/^template<typename ExpressionType> class Cwise$/;"	c	namespace:Eigen
CwiseBinaryOp	external/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE CwiseBinaryOp(const Lhs& lhs, const Rhs& rhs, const BinaryOp& func = BinaryOp())$/;"	f	class:Eigen::CwiseBinaryOp
CwiseBinaryOp	external/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOp : internal::no_assignment_operator,$/;"	c	namespace:Eigen
CwiseBinaryOpImpl	external/Eigen/src/Core/CwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Dense>$/;"	c	namespace:Eigen
CwiseBinaryOpImpl	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    CwiseBinaryOpImpl()$/;"	f	class:Eigen::CwiseBinaryOpImpl
CwiseBinaryOpImpl	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp, Lhs, Rhs, Sparse>$/;"	c	namespace:Eigen
CwiseBinaryXpr	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryFunc, Lhs, Rhs> CwiseBinaryXpr;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
CwiseBinaryXpr	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> CwiseBinaryXpr;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
CwiseNullaryOp	external/Eigen/src/Core/CwiseNullaryOp.h	/^    CwiseNullaryOp(Index rows, Index cols, const NullaryOp& func = NullaryOp())$/;"	f	class:Eigen::CwiseNullaryOp
CwiseNullaryOp	external/Eigen/src/Core/CwiseNullaryOp.h	/^class CwiseNullaryOp : internal::no_assignment_operator,$/;"	c	namespace:Eigen
CwiseUnaryOp	external/Eigen/src/Core/CwiseUnaryOp.h	/^    inline CwiseUnaryOp(const XprType& xpr, const UnaryOp& func = UnaryOp())$/;"	f	class:Eigen::CwiseUnaryOp
CwiseUnaryOp	external/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOp : internal::no_assignment_operator,$/;"	c	namespace:Eigen
CwiseUnaryOpImpl	external/Eigen/src/Core/CwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,XprType,Dense>$/;"	c	namespace:Eigen
CwiseUnaryOpImpl	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>$/;"	c	namespace:Eigen
CwiseUnaryView	external/Eigen/src/Core/CwiseUnaryView.h	/^    inline CwiseUnaryView(const MatrixType& mat, const ViewOp& func = ViewOp())$/;"	f	class:Eigen::CwiseUnaryView
CwiseUnaryView	external/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryView : internal::no_assignment_operator,$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	external/Eigen/src/Core/CwiseUnaryView.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Dense>$/;"	c	namespace:Eigen
CwiseUnaryViewImpl	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>$/;"	c	namespace:Eigen
DEBUG	external/SuiteSparse/Include/cholmod_internal.h	388;"	d
DEBUG	external/SuiteSparse/Include/cholmod_internal.h	401;"	d
DEBUG	external/unsupported/test/mpreal/dlmalloc.c	1312;"	d	file:
DEBUG_INIT	external/SuiteSparse/Include/cholmod_internal.h	364;"	d
DEBUG_INIT	external/SuiteSparse/Include/cholmod_internal.h	394;"	d
DEC	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	453;"	d	file:
DEC	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	438;"	d	file:
DECL_GSISX	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	51;"	d
DECL_GSSVX	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	15;"	d
DEFAULT_GRANULARITY	external/unsupported/test/mpreal/dlmalloc.c	622;"	d	file:
DEFAULT_GRANULARITY	external/unsupported/test/mpreal/dlmalloc.c	624;"	d	file:
DEFAULT_MMAP_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.c	636;"	d	file:
DEFAULT_MMAP_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.c	638;"	d	file:
DEFAULT_TRIM_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.c	629;"	d	file:
DEFAULT_TRIM_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.c	631;"	d	file:
DINT	external/SuiteSparse/Include/cholmod_internal.h	268;"	d
DIRECT_MMAP	external/unsupported/test/mpreal/dlmalloc.c	1591;"	d	file:
DIRECT_MMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1504;"	d	file:
DIRECT_MMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1541;"	d	file:
DIV	external/SuiteSparse/Include/cholmod_template.h	126;"	d
DIV	external/SuiteSparse/Include/cholmod_template.h	177;"	d
DIV	external/SuiteSparse/Include/cholmod_template.h	228;"	d
DIV	external/SuiteSparse/Include/cholmod_template.h	33;"	d
DIV	external/SuiteSparse/Include/cholmod_template.h	81;"	d
DIV_REAL	external/SuiteSparse/Include/cholmod_template.h	127;"	d
DIV_REAL	external/SuiteSparse/Include/cholmod_template.h	178;"	d
DIV_REAL	external/SuiteSparse/Include/cholmod_template.h	229;"	d
DIV_REAL	external/SuiteSparse/Include/cholmod_template.h	34;"	d
DIV_REAL	external/SuiteSparse/Include/cholmod_template.h	82;"	d
DLMALLOC_VERSION	external/unsupported/test/mpreal/dlmalloc.c	490;"	d	file:
DOUBLE	external/SuiteSparse/Include/cholmod_internal.h	228;"	d
DOUBLE	external/SuiteSparse/Include/cholmod_internal.h	271;"	d
DST_CHAN	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	55;"	d
DST_CTRL	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	56;"	d
DTYPE	external/SuiteSparse/Include/cholmod_internal.h	230;"	d
DTYPE	external/SuiteSparse/Include/cholmod_internal.h	278;"	d
DataRowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^      DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic))$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon18
DataRowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon20
DataRowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    DataRowsAtCompileTime = ((Supers!=Dynamic) && (Subs!=Dynamic)) ? 1 + Supers + Subs : Dynamic$/;"	e	enum:Eigen::internal::traits::__anon21
Dec	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  typedef CholmodBase<_MatrixType,_UpLo,Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  typedef CholmodBase<_MatrixType,_UpLo,Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^  typedef DiagonalPreconditioner<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef BiCGSTAB<_MatrixType, _Preconditioner> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^  typedef IncompleteLUT<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef IterativeSolverBase<Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  typedef PastixBase<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  typedef PastixBase<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  typedef PardisoImpl<Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  typedef PardisoImpl<_Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SimplicialCholeskyBase<Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SimplicialCholeskyBase<Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef SuperLUBase<_MatrixType,Derived> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef SuperLUBase<_MatrixType,Derived> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  typedef UmfPackLU<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  typedef UmfPackLU<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::sparse_solve_retval
Dec	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef GMRES<_MatrixType, _Preconditioner> Dec;$/;"	t	struct:Eigen::internal::solve_retval
Dec	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^  typedef IncompleteLU<_MatrixType> Dec;$/;"	t	struct:Eigen::internal::solve_retval
DecompositionOptions	external/Eigen/src/Core/util/Constants.h	/^enum DecompositionOptions {$/;"	g	namespace:Eigen
DecompositionType	external/Eigen/src/misc/Image.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::image_retval_base
DecompositionType	external/Eigen/src/misc/Kernel.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::kernel_retval_base
DecompositionType	external/Eigen/src/misc/Solve.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::solve_retval_base
DecompositionType	external/Eigen/src/misc/SparseSolve.h	/^  typedef _DecompositionType DecompositionType;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
Default	external/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	e	enum:Eigen::Default_t
DefaultTraversal	external/Eigen/src/Core/util/Constants.h	/^  DefaultTraversal,$/;"	e	enum:Eigen::__anon266
Default_t	external/Eigen/src/Core/util/Constants.h	/^enum Default_t    { Default };$/;"	g	namespace:Eigen
Deg	external/unsupported/Eigen/src/Polynomials/Companion.h	/^      Deg = _Deg,$/;"	e	enum:Eigen::internal::companion::__anon446
Deg_1	external/unsupported/Eigen/src/Polynomials/Companion.h	/^      Deg_1=decrement_if_fixed_size<Deg>::ret$/;"	e	enum:Eigen::internal::companion::__anon446
Degree	external/unsupported/Eigen/src/Splines/Spline.h	/^    enum { Degree = _Degree \/*!< The spline curve's degree. *\/ };$/;"	e	enum:Eigen::Spline::__anon462
Degree	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { Degree = _Degree \/*!< The spline curve's degree. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon464
Dense	external/Eigen/src/Core/util/Constants.h	/^struct Dense {};$/;"	s	namespace:Eigen
DenseBase	external/Eigen/src/Core/DenseBase.h	/^    DenseBase()$/;"	f	class:Eigen::DenseBase
DenseBase	external/Eigen/src/Core/DenseBase.h	/^template<typename Derived> class DenseBase$/;"	c	namespace:Eigen
DenseCoeffsBase	external/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	external/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, DirectWriteAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	external/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived, WriteAccessors> : public DenseCoeffsBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
DenseCoeffsBase	external/Eigen/src/Core/DenseCoeffsBase.h	/^class DenseCoeffsBase<Derived,ReadOnlyAccessors> : public EigenBase<Derived>$/;"	c	namespace:Eigen
DenseCompanionMatrixType	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix<Scalar, Deg, Deg>               DenseCompanionMatrixType;$/;"	t	class:Eigen::internal::companion
DenseIndex	external/Eigen/src/Core/util/XprHelper.h	/^typedef EIGEN_DEFAULT_DENSE_INDEX_TYPE DenseIndex;$/;"	t	namespace:Eigen
DenseMatrixType	external/Eigen/src/Core/BandMatrix.h	/^    typedef Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::internal::BandMatrixBase
DenseMatrixType	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, ColsAtCompileTime, 0, MaxRowsAtCompileTime, MaxColsAtCompileTime> DenseMatrixType;$/;"	t	class:Eigen::DiagonalBase
DenseMatrixType	external/Eigen/src/Core/PermutationMatrix.h	/^            DenseMatrixType;$/;"	t	class:Eigen::PermutationBase
DenseMatrixType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Derived::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::Transpose
DenseMatrixType	external/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename MatrixType::PlainObject DenseMatrixType;$/;"	t	struct:Eigen::internal::traits
DenseMatrixType	external/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename TriangularView<MatrixType,Mode>::DenseMatrixType DenseMatrixType;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
DenseMatrixType	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::TriangularBase
DenseMatrixType	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::DenseMatrixType DenseMatrixType;$/;"	t	class:Eigen::TriangularView
DenseMatrixType	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename MatrixType::PlainObject DenseMatrixType;$/;"	t	struct:Eigen::internal::traits
DenseSparseProductReturnType	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs, int InnerSize> struct DenseSparseProductReturnType$/;"	s	namespace:Eigen
DenseSparseProductReturnType	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs> struct DenseSparseProductReturnType<Lhs,Rhs,1>$/;"	s	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex size, DenseIndex rows, DenseIndex cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex size, DenseIndex rows, DenseIndex) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_rows(rows)$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex size, DenseIndex, DenseIndex cols) : m_data(internal::conditional_aligned_new_auto<T,(_Options&DontAlign)==0>(size)), m_cols(cols)$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex, DenseIndex rows, DenseIndex cols) : m_rows(rows), m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex, DenseIndex rows, DenseIndex) : m_rows(rows) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex, DenseIndex, DenseIndex cols) : m_cols(cols) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(DenseIndex,DenseIndex,DenseIndex) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert) : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseStorage(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline explicit DenseStorage() : m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline explicit DenseStorage() : m_data(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline explicit DenseStorage() : m_data(0), m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline explicit DenseStorage() : m_data(0), m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline explicit DenseStorage() : m_rows(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline explicit DenseStorage() : m_rows(0), m_cols(0) {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline explicit DenseStorage() {}$/;"	f	class:Eigen::DenseStorage
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Cols, int _Options> class DenseStorage<T, Size, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Options> class DenseStorage<T, Size, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Cols, int _Options> class DenseStorage$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int Size, int _Rows, int _Options> class DenseStorage<T, Size, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, 0, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Cols, int _Options> class DenseStorage<T, Dynamic, Dynamic, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, 0, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Options> class DenseStorage<T, Dynamic, Dynamic, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Cols, int _Options> class DenseStorage<T, 0, _Rows, _Cols, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, 0, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^template<typename T, int _Rows, int _Options> class DenseStorage<T, Dynamic, _Rows, Dynamic, _Options>$/;"	c	namespace:Eigen
DenseTimeSkylineProduct	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	e	enum:Eigen::AdditionalProductEvaluationMode
DenseTimeSparseProduct	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    DenseTimeSparseProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::DenseTimeSparseProduct
DenseTimeSparseProduct	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^class DenseTimeSparseProduct$/;"	c	namespace:Eigen
DenseTimeSparseSelfAdjointProduct	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    DenseTimeSparseSelfAdjointProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::DenseTimeSparseSelfAdjointProduct
DenseTimeSparseSelfAdjointProduct	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class DenseTimeSparseSelfAdjointProduct$/;"	c	namespace:Eigen
DenseType	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::DiagonalBase
DenseType	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef Derived DenseType;$/;"	t	class:Eigen::PlainObjectBase
DenseType	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType DenseType;$/;"	t	class:Eigen::TriangularBase
Depth	external/Eigen/src/Core/GeneralProduct.h	/^    Depth = EIGEN_SIZE_MIN_PREFER_FIXED(_Lhs::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon114
DerType	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    typedef typename internal::remove_all<_DerType>::type DerType;$/;"	t	class:Eigen::AutoDiffScalar
DerType	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef typename remove_all<_DerType>::type DerType;$/;"	t	struct:Eigen::internal::auto_diff_special_op
DerivativeType	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> DerivativeType;$/;"	t	class:Eigen::AutoDiffJacobian
DerivativeType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dimension,Dynamic,ColMajor,Dimension,NumOfDerivativesAtCompileTime> DerivativeType;$/;"	t	struct:Eigen::SplineTraits
DerivativeType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<_Scalar,_Dim,Dynamic,ColMajor,_Dim,NumOfDerivativesAtCompileTime> DerivativeType;$/;"	t	struct:Eigen::SplineTraits
Derived	external/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Derived	external/Eigen/src/Core/CwiseUnaryOp.h	/^    typedef CwiseUnaryOp<UnaryOp, XprType> Derived;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Derived	external/Eigen/src/Core/CwiseUnaryView.h	/^    typedef CwiseUnaryView<ViewOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryViewImpl
Derived	external/Eigen/src/Core/Product.h	/^    typedef Product<Lhs, Rhs> Derived;$/;"	t	class:ProductImpl
Derived	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef CwiseBinaryOp<BinaryOp, Lhs, Rhs> Derived;$/;"	t	class:Eigen::CwiseBinaryOpImpl
Derived	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryOp<UnaryOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryOpImpl
Derived	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef CwiseUnaryView<ViewOp, MatrixType> Derived;$/;"	t	class:Eigen::CwiseUnaryViewImpl
DiagSizeAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^      DiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon402
DiagVectorType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTime, 1> DiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Diagonal	external/Eigen/src/Core/Diagonal.h	/^    inline Diagonal(MatrixType& matrix, Index index = DiagIndex) : m_matrix(matrix), m_index(index) {}$/;"	f	class:Eigen::Diagonal
Diagonal	external/Eigen/src/Core/Diagonal.h	/^template<typename MatrixType, int DiagIndex> class Diagonal$/;"	c	namespace:Eigen
DiagonalBase	external/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
DiagonalIndexReturnType	external/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	s	class:Eigen::MatrixBase
DiagonalIntReturnType	external/Eigen/src/Core/BandMatrix.h	/^    template<int Index> struct DiagonalIntReturnType {$/;"	s	class:Eigen::internal::BandMatrixBase
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    explicit inline DiagonalMatrix(const MatrixBase<OtherDerived>& other) : m_diagonal(other)$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix() {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(Index dim) : m_diagonal(dim) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalBase<OtherDerived>& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const DiagonalMatrix& other) : m_diagonal(other.diagonal()) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y) : m_diagonal(x,y) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalMatrix(const Scalar& x, const Scalar& y, const Scalar& z) : m_diagonal(x,y,z) {}$/;"	f	class:Eigen::DiagonalMatrix
DiagonalMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalMatrix$/;"	c	namespace:Eigen
DiagonalPreconditioner	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner() : m_isInitialized(false) {}$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner(const MatType& mat) : m_invdiag(mat.cols())$/;"	f	class:Eigen::DiagonalPreconditioner
DiagonalPreconditioner	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class DiagonalPreconditioner$/;"	c	namespace:Eigen
DiagonalProduct	external/Eigen/src/Core/DiagonalProduct.h	/^    inline DiagonalProduct(const MatrixType& matrix, const DiagonalType& diagonal)$/;"	f	class:Eigen::DiagonalProduct
DiagonalProduct	external/Eigen/src/Core/DiagonalProduct.h	/^class DiagonalProduct : internal::no_assignment_operator,$/;"	c	namespace:Eigen
DiagonalReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef Diagonal<Derived> DiagonalReturnType;$/;"	t	class:Eigen::MatrixBase
DiagonalReturnType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type DiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalSize	external/Eigen/src/Core/BandMatrix.h	/^        DiagonalSize = (RowsAtCompileTime==Dynamic || ColsAtCompileTime==Dynamic)$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon19
DiagonalType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type DiagonalType;$/;"	t	class:Eigen::Tridiagonalization
DiagonalVectorType	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalWrapper
DiagonalVectorType	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalBase
DiagonalVectorType	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::DiagonalVectorType DiagonalVectorType;$/;"	t	class:Eigen::DiagonalMatrix
DiagonalVectorType	external/Eigen/src/Core/DiagonalMatrix.h	/^  typedef Matrix<_Scalar,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1> DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalVectorType	external/Eigen/src/Core/DiagonalMatrix.h	/^  typedef _DiagonalVectorType DiagonalVectorType;$/;"	t	struct:Eigen::internal::traits
DiagonalWrapper	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalWrapper(DiagonalVectorType& diagonal) : m_diagonal(diagonal) {}$/;"	f	class:Eigen::DiagonalWrapper
DiagonalWrapper	external/Eigen/src/Core/DiagonalMatrix.h	/^class DiagonalWrapper$/;"	c	namespace:Eigen
Dim	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  enum { Dim = 3 };$/;"	e	enum:Eigen::AngleAxis::__anon327
Dim	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  enum { Dim = 2 };$/;"	e	enum:Eigen::Rotation2D::__anon330
Dim	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    enum { Dim = _Dim };$/;"	e	enum:Eigen::RotationBase::__anon331
Dim	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Scaling::__anon332
Dim	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^    Dim = _Dim,     \/\/\/< space dimension in which the transformation holds$/;"	e	enum:Eigen::Transform::__anon333
Dim	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Translation::__anon334
Dim	external/Eigen/src/Geometry/AngleAxis.h	/^  enum { Dim = 3 };$/;"	e	enum:Eigen::AngleAxis::__anon355
Dim	external/Eigen/src/Geometry/Rotation2D.h	/^  enum { Dim = 2 };$/;"	e	enum:Eigen::Rotation2D::__anon365
Dim	external/Eigen/src/Geometry/RotationBase.h	/^    enum { Dim = _Dim };$/;"	e	enum:Eigen::RotationBase::__anon366
Dim	external/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon367
Dim	external/Eigen/src/Geometry/RotationBase.h	/^  enum { Dim = RotationDerived::Dim };$/;"	e	enum:Eigen::internal::rotation_base_generic_product_selector::__anon368
Dim	external/Eigen/src/Geometry/Transform.h	/^    Dim = Transform::Dim,$/;"	e	enum:Eigen::internal::transform_traits::__anon369
Dim	external/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon373
Dim	external/Eigen/src/Geometry/Transform.h	/^    Dim = TransformType::Dim, $/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon374
Dim	external/Eigen/src/Geometry/Transform.h	/^    Dim = _Dim,     \/\/\/< space dimension in which the transformation holds$/;"	e	enum:Eigen::Transform::__anon370
Dim	external/Eigen/src/Geometry/Translation.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::Translation::__anon376
Dim	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  enum { Dim = _Dim };$/;"	e	enum:Eigen::KdBVH::__anon443
Dimension	external/unsupported/Eigen/src/Splines/Spline.h	/^    enum { Dimension = _Dim \/*!< The spline curve's dimension. *\/ };$/;"	e	enum:Eigen::Spline::__anon461
Dimension	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { Dimension = _Dim \/*!< The spline curve's dimension. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon463
DirectAccessBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int DirectAccessBit = 0x40;$/;"	m	namespace:Eigen
DirectAccessors	external/Eigen/src/Core/util/Constants.h	/^  DirectAccessors, $/;"	e	enum:Eigen::AccessorLevels
DirectLinearAccessType	external/Eigen/src/Core/util/BlasUtil.h	/^    >::type DirectLinearAccessType;$/;"	t	struct:Eigen::internal::blas_traits
DirectWriteAccessors	external/Eigen/src/Core/util/Constants.h	/^  DirectWriteAccessors$/;"	e	enum:Eigen::AccessorLevels
Direction	external/Eigen/src/Geometry/Homogeneous.h	/^    enum { Direction = _Direction };$/;"	e	enum:Eigen::Homogeneous::__anon357
DirectionType	external/Eigen/src/Core/util/Constants.h	/^enum DirectionType { $/;"	g	namespace:Eigen
DontAlign	external/Eigen/src/Core/util/Constants.h	/^  DontAlign = 0x2$/;"	e	enum:Eigen::__anon269
DontAlignCols	external/Eigen/src/Core/IO.h	/^enum { DontAlignCols = 1 };$/;"	e	enum:Eigen::__anon143
DoublePacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  struct DoublePacket$/;"	s	class:Eigen::internal::gebp_traits
DstHasDirectAccess	external/Eigen/src/Core/Assign.h	/^    DstHasDirectAccess = Derived::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::assign_traits::__anon6
DstHasDirectAccess	external/Eigen/src/Core/Assign_MKL.h	/^      DstHasDirectAccess = Dst::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
DstIsAligned	external/Eigen/src/Core/Assign.h	/^    DstIsAligned = Derived::Flags & AlignedBit,$/;"	e	enum:Eigen::internal::assign_traits::__anon6
DynMatrixType	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef Matrix<Scalar, Dynamic, Dynamic, Options, RowsAtCompileTime, ColsAtCompileTime> DynMatrixType;$/;"	t	class:Eigen::MatrixFunction
Dynamic	external/Eigen/src/Core/util/Constants.h	/^const int Dynamic = -1;$/;"	m	namespace:Eigen
DynamicIntVectorType	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef Matrix<Index, Dynamic, 1> DynamicIntVectorType;$/;"	t	class:Eigen::MatrixFunction
DynamicSparseMatrix	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED explicit inline DynamicSparseMatrix(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED inline DynamicSparseMatrix()$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED inline DynamicSparseMatrix(Index rows, Index cols)$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline DynamicSparseMatrix(const DynamicSparseMatrix& other)$/;"	f	class:Eigen::DynamicSparseMatrix
DynamicSparseMatrix	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^ class  DynamicSparseMatrix$/;"	c	namespace:Eigen
EIGEN2_GEOMETRY_MODULE_H	external/Eigen/src/Eigen2Support/Geometry/All.h	2;"	d
EIGEN2_LEASTSQUARES_H	external/Eigen/src/Eigen2Support/LeastSquares.h	11;"	d
EIGEN2_LU_H	external/Eigen/src/Eigen2Support/LU.h	11;"	d
EIGEN2_MACROS_H	external/Eigen/src/Eigen2Support/Macros.h	11;"	d
EIGEN2_MATH_FUNCTIONS_H	external/Eigen/src/Eigen2Support/MathFunctions.h	11;"	d
EIGEN2_MEMORY_H	external/Eigen/src/Eigen2Support/Memory.h	11;"	d
EIGEN2_META_H	external/Eigen/src/Eigen2Support/Meta.h	11;"	d
EIGEN2_QR_H	external/Eigen/src/Eigen2Support/QR.h	12;"	d
EIGEN2_SVD_H	external/Eigen/src/Eigen2Support/SVD.h	11;"	d
EIGEN2_VECTORBLOCK_H	external/Eigen/src/Eigen2Support/VectorBlock.h	12;"	d
EIGEN_ALIGN	external/Eigen/src/Core/util/Macros.h	73;"	d
EIGEN_ALIGN	external/Eigen/src/Core/util/Macros.h	75;"	d
EIGEN_ALIGN16	external/Eigen/src/Core/util/Macros.h	267;"	d
EIGEN_ALIGNEDBOX_H	external/Eigen/src/Geometry/AlignedBox.h	11;"	d
EIGEN_ALIGNED_ALLOCA	external/Eigen/src/Core/util/Memory.h	558;"	d
EIGEN_ALIGNED_ALLOCATOR	external/Eigen/src/StlSupport/details.h	15;"	d
EIGEN_ALIGN_128	external/Eigen/src/Eigen2Support/Macros.h	16;"	d
EIGEN_ALIGN_STATICALLY	external/Eigen/src/Core/util/Macros.h	81;"	d
EIGEN_ALIGN_STATICALLY	external/Eigen/src/Core/util/Macros.h	83;"	d
EIGEN_ALIGN_TO_BOUNDARY	external/Eigen/src/Core/util/Macros.h	257;"	d
EIGEN_ALLANDANY_H	external/Eigen/src/Core/BooleanRedux.h	11;"	d
EIGEN_ALLOCA	external/Eigen/src/Core/util/Memory.h	502;"	d
EIGEN_ALLOCA	external/Eigen/src/Core/util/Memory.h	504;"	d
EIGEN_ALWAYS_INLINE	external/Eigen/src/Core/util/Macros.h	141;"	d
EIGEN_ALWAYS_INLINE	external/Eigen/src/Core/util/Macros.h	143;"	d
EIGEN_AMBIVECTOR_H	external/Eigen/src/SparseCore/AmbiVector.h	11;"	d
EIGEN_ANGLEAXIS_H	external/Eigen/src/Geometry/AngleAxis.h	11;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	27;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	external/Eigen/src/Core/arch/Default/Settings.h	46;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	external/Eigen/src/Core/arch/NEON/PacketMath.h	26;"	d
EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS	external/Eigen/src/Core/arch/SSE/PacketMath.h	22;"	d
EIGEN_ARCH_WANTS_ALIGNMENT	external/Eigen/src/Eigen2Support/Macros.h	18;"	d
EIGEN_ARCH_WANTS_STACK_ALIGNMENT	external/Eigen/src/Core/util/Macros.h	64;"	d
EIGEN_ARCH_WANTS_STACK_ALIGNMENT	external/Eigen/src/Core/util/Macros.h	66;"	d
EIGEN_ARRAYBASE_H	external/Eigen/src/Core/ArrayBase.h	11;"	d
EIGEN_ARRAYWRAPPER_H	external/Eigen/src/Core/ArrayWrapper.h	11;"	d
EIGEN_ARRAY_CWISE_OPERATORS_H	external/Eigen/src/Eigen2Support/CwiseOperators.h	11;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_EIGEN_UNARY	external/Eigen/src/Core/GlobalFunctions.h	21;"	d
EIGEN_ARRAY_DECLARE_GLOBAL_STD_UNARY	external/Eigen/src/Core/GlobalFunctions.h	14;"	d
EIGEN_ARRAY_H	external/Eigen/src/Core/Array.h	11;"	d
EIGEN_ASM_COMMENT	external/Eigen/src/Core/util/Macros.h	244;"	d
EIGEN_ASSIGN_H	external/Eigen/src/Core/Assign.h	13;"	d
EIGEN_ASSIGN_VML_H	external/Eigen/src/Core/Assign_MKL.h	34;"	d
EIGEN_AUTODIFF_DECLARE_GLOBAL_UNARY	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	510;"	d
EIGEN_AUTODIFF_DECLARE_GLOBAL_UNARY	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	617;"	d
EIGEN_AUTODIFF_JACOBIAN_H	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	11;"	d
EIGEN_AUTODIFF_SCALAR_H	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	11;"	d
EIGEN_AUTODIFF_VECTOR_H	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	11;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	external/Eigen/src/Core/arch/SSE/PacketMath.h	233;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	external/Eigen/src/Core/arch/SSE/PacketMath.h	236;"	d
EIGEN_AVOID_CUSTOM_UNALIGNED_LOADS	external/Eigen/src/Core/arch/SSE/PacketMath.h	238;"	d
EIGEN_BANDMATRIX_H	external/Eigen/src/Core/BandMatrix.h	11;"	d
EIGEN_BASIC_PRECONDITIONERS_H	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	11;"	d
EIGEN_BICGSTAB_H	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	12;"	d
EIGEN_BIDIAGONALIZATION_H	external/Eigen/src/SVD/UpperBidiagonalization.h	11;"	d
EIGEN_BLASUTIL_H	external/Eigen/src/Core/util/BlasUtil.h	11;"	d
EIGEN_BLOCK2_H	external/Eigen/src/Eigen2Support/Block.h	12;"	d
EIGEN_BLOCKMETHODS_H	external/Eigen/src/plugins/BlockMethods.h	12;"	d
EIGEN_BLOCK_H	external/Eigen/src/Core/Block.h	12;"	d
EIGEN_BLOCK_HOUSEHOLDER_H	external/Eigen/src/Householder/BlockHouseholder.h	12;"	d
EIGEN_BROWSE_MATRICES_H	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	12;"	d
EIGEN_BVALGORITHMS_H	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	11;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	18;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	external/Eigen/src/Core/arch/Default/Settings.h	31;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	external/Eigen/src/Core/arch/NEON/PacketMath.h	20;"	d
EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD	external/Eigen/src/Core/arch/SSE/PacketMath.h	18;"	d
EIGEN_CAT	external/Eigen/src/Core/util/Macros.h	112;"	d
EIGEN_CAT2	external/Eigen/src/Core/util/Macros.h	111;"	d
EIGEN_CHECK_BINARY_COMPATIBILIY	external/Eigen/src/Core/CwiseBinaryOp.h	96;"	d
EIGEN_CHOLMODSUPPORT_H	external/Eigen/src/CholmodSupport/CholmodSupport.h	11;"	d
EIGEN_COEFFBASED_PRODUCT_H	external/Eigen/src/Core/products/CoeffBasedProduct.h	12;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_H	external/Eigen/src/QR/ColPivHouseholderQR.h	12;"	d
EIGEN_COLPIVOTINGHOUSEHOLDERQR_MKL_H	external/Eigen/src/QR/ColPivHouseholderQR_MKL.h	35;"	d
EIGEN_COMMAINITIALIZER_H	external/Eigen/src/Core/CommaInitializer.h	12;"	d
EIGEN_COMPANION_H	external/unsupported/Eigen/src/Polynomials/Companion.h	11;"	d
EIGEN_COMPLEX_ALTIVEC_H	external/Eigen/src/Core/arch/AltiVec/Complex.h	11;"	d
EIGEN_COMPLEX_EIGEN_SOLVER_H	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	13;"	d
EIGEN_COMPLEX_NEON_H	external/Eigen/src/Core/arch/NEON/Complex.h	11;"	d
EIGEN_COMPLEX_SCHUR_H	external/Eigen/src/Eigenvalues/ComplexSchur.h	13;"	d
EIGEN_COMPLEX_SCHUR_MKL_H	external/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	34;"	d
EIGEN_COMPLEX_SSE_H	external/Eigen/src/Core/arch/SSE/Complex.h	11;"	d
EIGEN_COMPRESSED_STORAGE_H	external/Eigen/src/SparseCore/CompressedStorage.h	11;"	d
EIGEN_CONJUGATE_GRADIENT_H	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	11;"	d
EIGEN_CONSERVATIVESPARSESPARSEPRODUCT_H	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	11;"	d
EIGEN_CONSTANTS_H	external/Eigen/src/Core/util/Constants.h	12;"	d
EIGEN_CONSTRAINEDCG_H	external/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	36;"	d
EIGEN_COREITERATORS_H	external/Eigen/src/SparseCore/CoreIterators.h	11;"	d
EIGEN_CPUID	external/Eigen/src/Core/util/Memory.h	740;"	d
EIGEN_CPUID	external/Eigen/src/Core/util/Memory.h	744;"	d
EIGEN_CPUID	external/Eigen/src/Core/util/Memory.h	749;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/Core/ArrayBase.h	106;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/Core/ArrayBase.h	116;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/Core/DenseBase.h	486;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/Core/DenseBase.h	491;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/Core/MatrixBase.h	135;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/Core/MatrixBase.h	143;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/SparseCore/SparseMatrixBase.h	134;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/SparseCore/SparseMatrixBase.h	142;"	d
EIGEN_CURRENT_STORAGE_BASE_CLASS	external/Eigen/src/SparseCore/SparseMatrixBase.h	143;"	d
EIGEN_CWISE_BINARY_OP_H	external/Eigen/src/Core/CwiseBinaryOp.h	12;"	d
EIGEN_CWISE_BINOP_RETURN_TYPE	external/Eigen/src/Eigen2Support/Cwise.h	18;"	d
EIGEN_CWISE_COMP_TO_SCALAR_RETURN_TYPE	external/Eigen/src/Eigen2Support/Cwise.h	28;"	d
EIGEN_CWISE_H	external/Eigen/src/Eigen2Support/Cwise.h	12;"	d
EIGEN_CWISE_NULLARY_OP_H	external/Eigen/src/Core/CwiseNullaryOp.h	11;"	d
EIGEN_CWISE_PRODUCT_RETURN_TYPE	external/Eigen/src/Core/util/Macros.h	400;"	d
EIGEN_CWISE_UNARY_OP_H	external/Eigen/src/Core/CwiseUnaryOp.h	12;"	d
EIGEN_CWISE_UNARY_VIEW_H	external/Eigen/src/Core/CwiseUnaryView.h	11;"	d
EIGEN_CWISE_UNOP_RETURN_TYPE	external/Eigen/src/Eigen2Support/Cwise.h	23;"	d
EIGEN_DBG_SKYLINE	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	16;"	d
EIGEN_DBG_SPARSE	external/Eigen/src/SparseCore/SparseUtil.h	16;"	d
EIGEN_DEBUG_ALIGNED_LOAD	external/Eigen/src/Core/GenericPacketMath.h	27;"	d
EIGEN_DEBUG_ALIGNED_STORE	external/Eigen/src/Core/GenericPacketMath.h	35;"	d
EIGEN_DEBUG_UNALIGNED_LOAD	external/Eigen/src/Core/GenericPacketMath.h	31;"	d
EIGEN_DEBUG_UNALIGNED_STORE	external/Eigen/src/Core/GenericPacketMath.h	39;"	d
EIGEN_DEBUG_VAR	external/Eigen/src/Core/util/Macros.h	108;"	d
EIGEN_DECLARE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	external/Eigen/src/Core/util/Macros.h	158;"	d
EIGEN_DEFAULT_DENSE_INDEX_TYPE	external/Eigen/src/Core/util/Macros.h	96;"	d
EIGEN_DEFAULT_IO_FORMAT	external/Eigen/src/Core/util/Macros.h	292;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	external/Eigen/src/Core/util/Macros.h	90;"	d
EIGEN_DEFAULT_MATRIX_STORAGE_ORDER_OPTION	external/Eigen/src/Core/util/Macros.h	92;"	d
EIGEN_DEFAULT_SETTINGS_H	external/Eigen/src/Core/arch/Default/Settings.h	17;"	d
EIGEN_DEFINE_FUNCTION_ALLOWING_MULTIPLE_DEFINITIONS	external/Eigen/src/Core/util/Macros.h	159;"	d
EIGEN_DEFINE_STL_DEQUE_SPECIALIZATION	external/Eigen/src/StlSupport/StdDeque.h	28;"	d
EIGEN_DEFINE_STL_LIST_SPECIALIZATION	external/Eigen/src/StlSupport/StdList.h	27;"	d
EIGEN_DEFINE_STL_VECTOR_SPECIALIZATION	external/Eigen/src/StlSupport/StdVector.h	21;"	d
EIGEN_DENSEBASE_H	external/Eigen/src/Core/DenseBase.h	12;"	d
EIGEN_DENSECOEFFSBASE_H	external/Eigen/src/Core/DenseCoeffsBase.h	11;"	d
EIGEN_DENSESTORAGEBASE_H	external/Eigen/src/Core/PlainObjectBase.h	12;"	d
EIGEN_DENSE_PUBLIC_INTERFACE	external/Eigen/src/Core/util/Macros.h	341;"	d
EIGEN_DEPRECATED	external/Eigen/src/Core/util/Macros.h	224;"	d
EIGEN_DETERMINANT_H	external/Eigen/src/LU/Determinant.h	11;"	d
EIGEN_DIAGONALMATRIX_H	external/Eigen/src/Core/DiagonalMatrix.h	12;"	d
EIGEN_DIAGONALPRODUCT_H	external/Eigen/src/Core/DiagonalProduct.h	12;"	d
EIGEN_DIAGONAL_H	external/Eigen/src/Core/Diagonal.h	12;"	d
EIGEN_DISABLE_UNALIGNED_ARRAY_ASSERT	external/Eigen/src/Core/util/Macros.h	85;"	d
EIGEN_DONT_ALIGN_STATICALLY	external/Eigen/src/Core/util/Macros.h	71;"	d
EIGEN_DONT_INLINE	external/Eigen/src/Core/util/Macros.h	147;"	d
EIGEN_DONT_INLINE	external/Eigen/src/Core/util/Macros.h	149;"	d
EIGEN_DONT_INLINE	external/Eigen/src/Core/util/Macros.h	151;"	d
EIGEN_DOT_H	external/Eigen/src/Core/Dot.h	11;"	d
EIGEN_DYNAMIC_SPARSEMATRIX_H	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	11;"	d
EIGEN_EIGENBASE_H	external/Eigen/src/Core/EigenBase.h	12;"	d
EIGEN_EIGENSOLVER_H	external/Eigen/src/Eigenvalues/EigenSolver.h	12;"	d
EIGEN_EMPTY	external/Eigen/src/Core/util/Macros.h	299;"	d
EIGEN_EMPTY_STRUCT_CTOR	external/Eigen/src/Core/util/XprHelper.h	18;"	d
EIGEN_EMPTY_STRUCT_CTOR	external/Eigen/src/Core/util/XprHelper.h	22;"	d
EIGEN_EULERANGLES_H	external/Eigen/src/Geometry/EulerAngles.h	11;"	d
EIGEN_EXPLICIT_STL_DEQUE_INSTANTIATION	external/Eigen/src/StlSupport/StdDeque.h	18;"	d
EIGEN_EXPLICIT_STL_DEQUE_INSTANTIATION	external/Eigen/src/StlSupport/StdDeque.h	20;"	d
EIGEN_EXPLICIT_STL_LIST_INSTANTIATION	external/Eigen/src/StlSupport/StdList.h	17;"	d
EIGEN_EXPLICIT_STL_LIST_INSTANTIATION	external/Eigen/src/StlSupport/StdList.h	19;"	d
EIGEN_FAST_MATH	external/Eigen/src/Core/util/Macros.h	105;"	d
EIGEN_FLAGGED_H	external/Eigen/src/Core/Flagged.h	11;"	d
EIGEN_FLATTEN_ATTRIB	external/Eigen/src/Core/util/Macros.h	119;"	d
EIGEN_FLATTEN_ATTRIB	external/Eigen/src/Core/util/Macros.h	121;"	d
EIGEN_FORCEALIGNEDACCESS_H	external/Eigen/src/Core/ForceAlignedAccess.h	11;"	d
EIGEN_FORWARDDECLARATIONS_H	external/Eigen/src/Core/util/ForwardDeclarations.h	12;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	external/Eigen/src/Core/util/Memory.h	41;"	d
EIGEN_FREEBSD_MALLOC_ALREADY_ALIGNED	external/Eigen/src/Core/util/Memory.h	43;"	d
EIGEN_FULLPIVOTINGHOUSEHOLDERQR_H	external/Eigen/src/QR/FullPivHouseholderQR.h	12;"	d
EIGEN_FUNCTORS_H	external/Eigen/src/Core/Functors.h	11;"	d
EIGEN_FUZZY_H	external/Eigen/src/Core/Fuzzy.h	12;"	d
EIGEN_GCC3_OR_OLDER	external/Eigen/src/Core/util/Macros.h	41;"	d
EIGEN_GCC3_OR_OLDER	external/Eigen/src/Core/util/Macros.h	43;"	d
EIGEN_GCC_AND_ARCH_DOESNT_WANT_STACK_ALIGNMENT	external/Eigen/src/Core/util/Macros.h	54;"	d
EIGEN_GCC_AND_ARCH_DOESNT_WANT_STACK_ALIGNMENT	external/Eigen/src/Core/util/Macros.h	56;"	d
EIGEN_GENERALIZEDSELFADJOINTEIGENSOLVER_H	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	12;"	d
EIGEN_GENERAL_BLOCK_PANEL_H	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_H	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_MKL_H	external/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	34;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_H	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	11;"	d
EIGEN_GENERAL_MATRIX_MATRIX_TRIANGULAR_MKL_H	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	34;"	d
EIGEN_GENERAL_MATRIX_VECTOR_H	external/Eigen/src/Core/products/GeneralMatrixVector.h	11;"	d
EIGEN_GENERAL_MATRIX_VECTOR_MKL_H	external/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	34;"	d
EIGEN_GENERAL_PRODUCT_H	external/Eigen/src/Core/GeneralProduct.h	12;"	d
EIGEN_GENERIC_PACKET_MATH_H	external/Eigen/src/Core/GenericPacketMath.h	12;"	d
EIGEN_GENERIC_PUBLIC_INTERFACE	external/Eigen/src/Core/util/Macros.h	325;"	d
EIGEN_GEOMETRY_SSE_H	external/Eigen/src/Geometry/arch/Geometry_SSE.h	12;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	external/Eigen/src/Core/util/Memory.h	31;"	d
EIGEN_GLIBC_MALLOC_ALREADY_ALIGNED	external/Eigen/src/Core/util/Memory.h	33;"	d
EIGEN_GLOBAL_FUNCTIONS_H	external/Eigen/src/Core/GlobalFunctions.h	12;"	d
EIGEN_GMRES_H	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	12;"	d
EIGEN_GNUC_AT_LEAST	external/Eigen/src/Core/util/Macros.h	22;"	d
EIGEN_GNUC_AT_LEAST	external/Eigen/src/Core/util/Macros.h	24;"	d
EIGEN_GNUC_AT_MOST	external/Eigen/src/Core/util/Macros.h	28;"	d
EIGEN_GNUC_AT_MOST	external/Eigen/src/Core/util/Macros.h	30;"	d
EIGEN_HAS_FUSE_CJMADD	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	22;"	d
EIGEN_HAS_MM_MALLOC	external/Eigen/src/Core/util/Memory.h	63;"	d
EIGEN_HAS_MM_MALLOC	external/Eigen/src/Core/util/Memory.h	65;"	d
EIGEN_HAS_POSIX_MEMALIGN	external/Eigen/src/Core/util/Memory.h	57;"	d
EIGEN_HAS_POSIX_MEMALIGN	external/Eigen/src/Core/util/Memory.h	59;"	d
EIGEN_HESSENBERGDECOMPOSITION_H	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	12;"	d
EIGEN_HOMOGENEOUS_H	external/Eigen/src/Geometry/Homogeneous.h	11;"	d
EIGEN_HOUSEHOLDER_H	external/Eigen/src/Householder/Householder.h	12;"	d
EIGEN_HOUSEHOLDER_SEQUENCE_H	external/Eigen/src/Householder/HouseholderSequence.h	12;"	d
EIGEN_HYBRIDNONLINEARSOLVER_H	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	14;"	d
EIGEN_HYPERPLANE_H	external/Eigen/src/Geometry/Hyperplane.h	12;"	d
EIGEN_IMPLIES	external/Eigen/src/Core/util/Macros.h	389;"	d
EIGEN_INCOMPLETE_LUT_H	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	11;"	d
EIGEN_INCOMPLETE_LU_H	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	11;"	d
EIGEN_INHERIT_ASSIGNMENT_EQUAL_OPERATOR	external/Eigen/src/Core/util/Macros.h	302;"	d
EIGEN_INHERIT_ASSIGNMENT_OPERATORS	external/Eigen/src/Core/util/Macros.h	314;"	d
EIGEN_INITIALIZE_BY_ZERO_IF_THAT_OPTION_IS_ENABLED	external/Eigen/src/Core/PlainObjectBase.h	15;"	d
EIGEN_INITIALIZE_BY_ZERO_IF_THAT_OPTION_IS_ENABLED	external/Eigen/src/Core/PlainObjectBase.h	17;"	d
EIGEN_INIT_NEON_PACKET2	external/Eigen/src/Core/arch/NEON/PacketMath.h	44;"	d
EIGEN_INIT_NEON_PACKET2	external/Eigen/src/Core/arch/NEON/PacketMath.h	48;"	d
EIGEN_INIT_NEON_PACKET4	external/Eigen/src/Core/arch/NEON/PacketMath.h	45;"	d
EIGEN_INIT_NEON_PACKET4	external/Eigen/src/Core/arch/NEON/PacketMath.h	49;"	d
EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE	external/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_COMPILATION_ERROR_OR_YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	external/Eigen/src/Core/DenseStorage.h	16;"	d
EIGEN_INTERNAL_DENSE_STORAGE_CTOR_PLUGIN	external/Eigen/src/Core/DenseStorage.h	18;"	d
EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT	external/Eigen/src/Core/util/StaticAssert.h	/^        EIGEN_INTERNAL_ERROR_PLEASE_FILE_A_BUG_REPORT,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
EIGEN_INVERSE_H	external/Eigen/src/LU/Inverse.h	11;"	d
EIGEN_INVERSE_SSE_H	external/Eigen/src/LU/arch/Inverse_SSE.h	28;"	d
EIGEN_IO_H	external/Eigen/src/Core/IO.h	12;"	d
EIGEN_ITERATION_CONTROLLER_H	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	63;"	d
EIGEN_ITERATIVE_SOLVER_BASE_H	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	11;"	d
EIGEN_JACOBISVD_H	external/Eigen/src/SVD/JacobiSVD.h	11;"	d
EIGEN_JACOBISVD_MKL_H	external/Eigen/src/SVD/JacobiSVD_MKL.h	34;"	d
EIGEN_JACOBI_H	external/Eigen/src/Jacobi/Jacobi.h	12;"	d
EIGEN_LAZY_H	external/Eigen/src/Eigen2Support/Lazy.h	11;"	d
EIGEN_LDLT_H	external/Eigen/src/Cholesky/LDLT.h	14;"	d
EIGEN_LEVENBERGMARQUARDT__H	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	14;"	d
EIGEN_LLT_H	external/Eigen/src/Cholesky/LLT.h	11;"	d
EIGEN_LLT_MKL_H	external/Eigen/src/Cholesky/LLT_MKL.h	34;"	d
EIGEN_LOGICAL_XOR	external/Eigen/src/Core/util/Macros.h	387;"	d
EIGEN_LU_H	external/Eigen/src/LU/FullPivLU.h	11;"	d
EIGEN_MACROS_H	external/Eigen/src/Core/util/Macros.h	12;"	d
EIGEN_MAJOR_VERSION	external/Eigen/src/Core/util/Macros.h	15;"	d
EIGEN_MAKESTRING	external/Eigen/src/Core/util/Macros.h	116;"	d
EIGEN_MAKESTRING2	external/Eigen/src/Core/util/Macros.h	115;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW	external/Eigen/src/Core/util/Memory.h	624;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF	external/Eigen/src/Core/util/Memory.h	600;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_IF_VECTORIZABLE_FIXED_SIZE	external/Eigen/src/Core/util/Memory.h	625;"	d
EIGEN_MAKE_ALIGNED_OPERATOR_NEW_NOTHROW	external/Eigen/src/Core/util/Memory.h	587;"	d
EIGEN_MAKE_ARRAY_FIXED_TYPEDEFS	external/Eigen/src/Core/Array.h	262;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	external/Eigen/src/Core/Array.h	256;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS	external/Eigen/src/Core/Array.h	284;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	external/Eigen/src/Core/Array.h	268;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_ALL_SIZES	external/Eigen/src/Core/Array.h	283;"	d
EIGEN_MAKE_ARRAY_TYPEDEFS_LARGE	external/Eigen/src/Core/Array.h	286;"	d
EIGEN_MAKE_CWISE_BINARY_OP	external/Eigen/src/Core/util/Macros.h	391;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	external/Eigen/src/Core/Matrix.h	378;"	d
EIGEN_MAKE_FIXED_TYPEDEFS	external/Eigen/src/Core/Matrix.h	401;"	d
EIGEN_MAKE_IMAGE_HELPERS	external/Eigen/src/misc/Image.h	68;"	d
EIGEN_MAKE_KERNEL_HELPERS	external/Eigen/src/misc/Kernel.h	67;"	d
EIGEN_MAKE_SCALAR_CWISE_UNARY_OP	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	189;"	d
EIGEN_MAKE_SOLVE_HELPERS	external/Eigen/src/misc/Solve.h	61;"	d
EIGEN_MAKE_SPARSE_SOLVE_HELPERS	external/Eigen/src/misc/SparseSolve.h	54;"	d
EIGEN_MAKE_TYPEDEFS	external/Eigen/src/Core/Matrix.h	370;"	d
EIGEN_MAKE_TYPEDEFS	external/Eigen/src/Core/Matrix.h	400;"	d
EIGEN_MAKE_TYPEDEFS	external/Eigen/src/Geometry/AlignedBox.h	355;"	d
EIGEN_MAKE_TYPEDEFS	external/Eigen/src/Geometry/AlignedBox.h	371;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	external/Eigen/src/Core/Matrix.h	384;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	external/Eigen/src/Core/Matrix.h	399;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	external/Eigen/src/Geometry/AlignedBox.h	359;"	d
EIGEN_MAKE_TYPEDEFS_ALL_SIZES	external/Eigen/src/Geometry/AlignedBox.h	370;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	external/Eigen/src/Core/DenseStorage.h	43;"	d
EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT	external/Eigen/src/Core/DenseStorage.h	45;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	external/Eigen/src/Core/util/Memory.h	50;"	d
EIGEN_MALLOC_ALREADY_ALIGNED	external/Eigen/src/Core/util/Memory.h	52;"	d
EIGEN_MAPBASE_H	external/Eigen/src/Core/MapBase.h	12;"	d
EIGEN_MAPPED_SPARSEMATRIX_H	external/Eigen/src/SparseCore/MappedSparseMatrix.h	11;"	d
EIGEN_MAP_H	external/Eigen/src/Core/Map.h	12;"	d
EIGEN_MATHFUNCTIONS_H	external/Eigen/src/Core/MathFunctions.h	11;"	d
EIGEN_MATHFUNC_IMPL	external/Eigen/src/Core/MathFunctions.h	54;"	d
EIGEN_MATHFUNC_RETVAL	external/Eigen/src/Core/MathFunctions.h	55;"	d
EIGEN_MATHFUNC_STANDARD_REAL_UNARY	external/Eigen/src/Core/MathFunctions.h	455;"	d
EIGEN_MATH_FUNCTIONS_SSE_H	external/Eigen/src/Core/arch/SSE/MathFunctions.h	16;"	d
EIGEN_MATRIXBASEEIGENVALUES_H	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	12;"	d
EIGEN_MATRIXBASE_H	external/Eigen/src/Core/MatrixBase.h	12;"	d
EIGEN_MATRIXSTORAGE_H	external/Eigen/src/Core/DenseStorage.h	13;"	d
EIGEN_MATRIX_EXPONENTIAL	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	12;"	d
EIGEN_MATRIX_FUNCTION	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	11;"	d
EIGEN_MATRIX_FUNCTION_ATOMIC	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	11;"	d
EIGEN_MATRIX_H	external/Eigen/src/Core/Matrix.h	12;"	d
EIGEN_MATRIX_LOGARITHM	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	12;"	d
EIGEN_MATRIX_SQUARE_ROOT	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	11;"	d
EIGEN_MEMBER_FUNCTOR	external/Eigen/src/Core/VectorwiseOp.h	104;"	d
EIGEN_MEMORY_H	external/Eigen/src/Core/util/Memory.h	20;"	d
EIGEN_META_H	external/Eigen/src/Core/util/Meta.h	12;"	d
EIGEN_MINOR_H	external/Eigen/src/Eigen2Support/Minor.h	11;"	d
EIGEN_MINOR_VERSION	external/Eigen/src/Core/util/Macros.h	16;"	d
EIGEN_MISC_IMAGE_H	external/Eigen/src/misc/Image.h	11;"	d
EIGEN_MISC_KERNEL_H	external/Eigen/src/misc/Kernel.h	11;"	d
EIGEN_MISC_SOLVE_H	external/Eigen/src/misc/Solve.h	11;"	d
EIGEN_MKL_EIG_SELFADJ	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	42;"	d
EIGEN_MKL_GEMV_SPECIALIZATION	external/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	89;"	d
EIGEN_MKL_GEMV_SPECIALIZE	external/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	53;"	d
EIGEN_MKL_HEMM_L	external/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	95;"	d
EIGEN_MKL_HEMM_R	external/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	221;"	d
EIGEN_MKL_LLT	external/Eigen/src/Cholesky/LLT_MKL.h	45;"	d
EIGEN_MKL_LU_PARTPIV	external/Eigen/src/LU/PartialPivLU_MKL.h	44;"	d
EIGEN_MKL_QR_COLPIV	external/Eigen/src/QR/ColPivHouseholderQR_MKL.h	43;"	d
EIGEN_MKL_QR_NOPIV	external/Eigen/src/QR/HouseholderQR_MKL.h	45;"	d
EIGEN_MKL_RANKUPDATE_C	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	99;"	d
EIGEN_MKL_RANKUPDATE_R	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	74;"	d
EIGEN_MKL_RANKUPDATE_SPECIALIZE	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	47;"	d
EIGEN_MKL_SCHUR_COMPLEX	external/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	42;"	d
EIGEN_MKL_SCHUR_REAL	external/Eigen/src/Eigenvalues/RealSchur_MKL.h	42;"	d
EIGEN_MKL_SUPPORT_H	external/Eigen/src/Core/util/MKL_support.h	34;"	d
EIGEN_MKL_SVD	external/Eigen/src/SVD/JacobiSVD_MKL.h	42;"	d
EIGEN_MKL_SYMM_L	external/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	43;"	d
EIGEN_MKL_SYMM_R	external/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	170;"	d
EIGEN_MKL_SYMV_SPECIALIZATION	external/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	74;"	d
EIGEN_MKL_SYMV_SPECIALIZE	external/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	50;"	d
EIGEN_MKL_TRMM_L	external/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	78;"	d
EIGEN_MKL_TRMM_R	external/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	192;"	d
EIGEN_MKL_TRMM_SPECIALIZE	external/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	53;"	d
EIGEN_MKL_TRMV_CM	external/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	74;"	d
EIGEN_MKL_TRMV_RM	external/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	159;"	d
EIGEN_MKL_TRMV_SPECIALIZE	external/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	50;"	d
EIGEN_MKL_TRSM_L	external/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	41;"	d
EIGEN_MKL_TRSM_R	external/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	96;"	d
EIGEN_MKL_VML_DECLARE_POW_CALL	external/Eigen/src/Core/Assign_MKL.h	162;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALL	external/Eigen/src/Core/Assign_MKL.h	143;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS	external/Eigen/src/Core/Assign_MKL.h	182;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_COMPLEX	external/Eigen/src/Core/Assign_MKL.h	178;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_COMPLEX_LA	external/Eigen/src/Core/Assign_MKL.h	191;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_LA	external/Eigen/src/Core/Assign_MKL.h	195;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_REAL	external/Eigen/src/Core/Assign_MKL.h	174;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALLS_REAL_LA	external/Eigen/src/Core/Assign_MKL.h	187;"	d
EIGEN_MKL_VML_DECLARE_UNARY_CALL_LA	external/Eigen/src/Core/Assign_MKL.h	152;"	d
EIGEN_MKL_VML_MODE	external/Eigen/src/Core/Assign_MKL.h	138;"	d
EIGEN_MKL_VML_SPECIALIZE_ASSIGN	external/Eigen/src/Core/Assign_MKL.h	116;"	d
EIGEN_MKL_VML_THRESHOLD	external/Eigen/src/Core/util/MKL_support.h	60;"	d
EIGEN_MOREVECTORIZATION_MATHFUNCTIONS_H	external/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	12;"	d
EIGEN_NESTBYVALUE_H	external/Eigen/src/Core/NestByValue.h	12;"	d
EIGEN_NOALIAS_H	external/Eigen/src/Core/NoAlias.h	11;"	d
EIGEN_NO_DEBUG	external/Eigen/src/Core/util/Macros.h	163;"	d
EIGEN_NO_DEPRECATED_WARNING	external/unsupported/test/sparse_extra.cpp	12;"	d	file:
EIGEN_NUMERICAL_DIFF_H	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	14;"	d
EIGEN_NUMTRAITS_H	external/Eigen/src/Core/NumTraits.h	11;"	d
EIGEN_ONLY_USED_FOR_DEBUG	external/Eigen/src/Core/util/Macros.h	217;"	d
EIGEN_ORTHOMETHODS_H	external/Eigen/src/Geometry/OrthoMethods.h	12;"	d
EIGEN_PACKET_MATH_ALTIVEC_H	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	11;"	d
EIGEN_PACKET_MATH_NEON_H	external/Eigen/src/Core/arch/NEON/PacketMath.h	13;"	d
EIGEN_PACKET_MATH_SSE_H	external/Eigen/src/Core/arch/SSE/PacketMath.h	11;"	d
EIGEN_PARALLELIZER_H	external/Eigen/src/Core/products/Parallelizer.h	11;"	d
EIGEN_PARAMETRIZEDLINE_H	external/Eigen/src/Geometry/ParametrizedLine.h	12;"	d
EIGEN_PARDISOSUPPORT_H	external/Eigen/src/PardisoSupport/PardisoSupport.h	33;"	d
EIGEN_PARTIALLU_H	external/Eigen/src/LU/PartialPivLU.h	12;"	d
EIGEN_PARTIALLU_LAPACK_H	external/Eigen/src/LU/PartialPivLU_MKL.h	34;"	d
EIGEN_PARTIAL_REDUX_H	external/Eigen/src/Core/VectorwiseOp.h	12;"	d
EIGEN_PASTIXSUPPORT_H	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	11;"	d
EIGEN_PERMUTATIONMATRIX_H	external/Eigen/src/Core/PermutationMatrix.h	12;"	d
EIGEN_PLAIN_ENUM_MAX	external/Eigen/src/Core/util/Macros.h	363;"	d
EIGEN_PLAIN_ENUM_MIN	external/Eigen/src/Core/util/Macros.h	362;"	d
EIGEN_POLYNOMIAL_SOLVER_BASE_INHERITED_TYPES	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	290;"	d
EIGEN_POLYNOMIAL_SOLVER_H	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	11;"	d
EIGEN_POLYNOMIAL_UTILS_H	external/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	11;"	d
EIGEN_PREDICATE_SAME_MATRIX_SIZE	external/Eigen/src/Core/util/StaticAssert.h	157;"	d
EIGEN_PRODUCTBASE_H	external/Eigen/src/Core/ProductBase.h	11;"	d
EIGEN_PRODUCT_H	external/Eigen/src/Core/Product.h	11;"	d
EIGEN_PRODUCT_PUBLIC_INTERFACE	external/Eigen/src/Core/ProductBase.h	46;"	d
EIGEN_QR_H	external/Eigen/src/QR/HouseholderQR.h	13;"	d
EIGEN_QR_MKL_H	external/Eigen/src/QR/HouseholderQR_MKL.h	35;"	d
EIGEN_QUATERNION_H	external/Eigen/src/Geometry/Quaternion.h	12;"	d
EIGEN_RANDOMSETTER_H	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	11;"	d
EIGEN_RANDOM_H	external/Eigen/src/Core/Random.h	11;"	d
EIGEN_REAL_SCHUR_H	external/Eigen/src/Eigenvalues/RealSchur.h	12;"	d
EIGEN_REAL_SCHUR_MKL_H	external/Eigen/src/Eigenvalues/RealSchur_MKL.h	34;"	d
EIGEN_REDUX_H	external/Eigen/src/Core/Redux.h	12;"	d
EIGEN_REPLICATE_H	external/Eigen/src/Core/Replicate.h	11;"	d
EIGEN_RESTRICT	external/Eigen/src/Core/util/Macros.h	278;"	d
EIGEN_RESTRICT	external/Eigen/src/Core/util/Macros.h	281;"	d
EIGEN_RETURNBYVALUE_H	external/Eigen/src/Core/ReturnByValue.h	12;"	d
EIGEN_REVERSE_H	external/Eigen/src/Core/Reverse.h	13;"	d
EIGEN_ROTATION2D_H	external/Eigen/src/Geometry/Rotation2D.h	11;"	d
EIGEN_ROTATIONBASE_H	external/Eigen/src/Geometry/RotationBase.h	11;"	d
EIGEN_SAEIGENSOLVER_MKL_H	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	34;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	external/Eigen/src/Core/util/Macros.h	35;"	d
EIGEN_SAFE_TO_USE_STANDARD_ASSERT_MACRO	external/Eigen/src/Core/util/Macros.h	37;"	d
EIGEN_SCALING_H	external/Eigen/src/Geometry/Scaling.h	11;"	d
EIGEN_SCALING_H	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	11;"	d
EIGEN_SELECT_H	external/Eigen/src/Core/Select.h	11;"	d
EIGEN_SELFADJOINTEIGENSOLVER_H	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	12;"	d
EIGEN_SELFADJOINTMATRIX_H	external/Eigen/src/Core/SelfAdjointView.h	11;"	d
EIGEN_SELFADJOINTRANK2UPTADE_H	external/Eigen/src/Core/products/SelfadjointRank2Update.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_H	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_MATRIX_MKL_H	external/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	34;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_H	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	11;"	d
EIGEN_SELFADJOINT_MATRIX_VECTOR_MKL_H	external/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	34;"	d
EIGEN_SELFADJOINT_PRODUCT_H	external/Eigen/src/Core/products/SelfadjointProduct.h	11;"	d
EIGEN_SELFCWISEBINARYOP_H	external/Eigen/src/Core/SelfCwiseBinaryOp.h	11;"	d
EIGEN_SIMPLICIAL_CHOLESKY_H	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	51;"	d
EIGEN_SIZE_MAX	external/Eigen/src/Core/util/Macros.h	384;"	d
EIGEN_SIZE_MIN_PREFER_DYNAMIC	external/Eigen/src/Core/util/Macros.h	368;"	d
EIGEN_SIZE_MIN_PREFER_FIXED	external/Eigen/src/Core/util/Macros.h	376;"	d
EIGEN_SKYLINEINPLACELU_H	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	11;"	d
EIGEN_SKYLINEMATRIXBASE_H	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	11;"	d
EIGEN_SKYLINEMATRIX_H	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	11;"	d
EIGEN_SKYLINEPRODUCT_H	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	11;"	d
EIGEN_SKYLINEUTIL_H	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	11;"	d
EIGEN_SKYLINE_GENERIC_PUBLIC_INTERFACE	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	60;"	d
EIGEN_SKYLINE_INHERIT_ASSIGNMENT_OPERATOR	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	27;"	d
EIGEN_SKYLINE_INHERIT_ASSIGNMENT_OPERATORS	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	45;"	d
EIGEN_SKYLINE_INHERIT_SCALAR_ASSIGNMENT_OPERATOR	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	38;"	d
EIGEN_SKYLINE_STORAGE_H	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	11;"	d
EIGEN_SOLVETRIANGULAR_H	external/Eigen/src/Core/SolveTriangular.h	11;"	d
EIGEN_SPARSEDENSEPRODUCT_H	external/Eigen/src/SparseCore/SparseDenseProduct.h	11;"	d
EIGEN_SPARSEMATRIXBASE_H	external/Eigen/src/SparseCore/SparseMatrixBase.h	11;"	d
EIGEN_SPARSEMATRIX_H	external/Eigen/src/SparseCore/SparseMatrix.h	11;"	d
EIGEN_SPARSEPRODUCT_H	external/Eigen/src/SparseCore/SparseProduct.h	11;"	d
EIGEN_SPARSEREDUX_H	external/Eigen/src/SparseCore/SparseRedux.h	11;"	d
EIGEN_SPARSESPARSEPRODUCTWITHPRUNING_H	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	11;"	d
EIGEN_SPARSETRANSPOSE_H	external/Eigen/src/SparseCore/SparseTranspose.h	11;"	d
EIGEN_SPARSETRIANGULARSOLVER_H	external/Eigen/src/SparseCore/TriangularSolver.h	11;"	d
EIGEN_SPARSEUTIL_H	external/Eigen/src/SparseCore/SparseUtil.h	11;"	d
EIGEN_SPARSEVECTOR_H	external/Eigen/src/SparseCore/SparseVector.h	11;"	d
EIGEN_SPARSEVIEW_H	external/Eigen/src/SparseCore/SparseView.h	12;"	d
EIGEN_SPARSE_AMD_H	external/Eigen/src/OrderingMethods/Amd.h	36;"	d
EIGEN_SPARSE_BLOCKFORDYNAMICMATRIX_H	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	11;"	d
EIGEN_SPARSE_BLOCK_H	external/Eigen/src/SparseCore/SparseBlock.h	11;"	d
EIGEN_SPARSE_CWISE_BINARY_OP_H	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	11;"	d
EIGEN_SPARSE_CWISE_PRODUCT_RETURN_TYPE	external/Eigen/src/SparseCore/SparseMatrixBase.h	317;"	d
EIGEN_SPARSE_CWISE_UNARY_OP_H	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	11;"	d
EIGEN_SPARSE_DIAGONAL_PRODUCT_H	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	11;"	d
EIGEN_SPARSE_DOT_H	external/Eigen/src/SparseCore/SparseDot.h	11;"	d
EIGEN_SPARSE_FUZZY_H	external/Eigen/src/SparseCore/SparseFuzzy.h	11;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATOR	external/Eigen/src/SparseCore/SparseUtil.h	21;"	d
EIGEN_SPARSE_INHERIT_ASSIGNMENT_OPERATORS	external/Eigen/src/SparseCore/SparseUtil.h	39;"	d
EIGEN_SPARSE_INHERIT_SCALAR_ASSIGNMENT_OPERATOR	external/Eigen/src/SparseCore/SparseUtil.h	32;"	d
EIGEN_SPARSE_MARKET_IO_H	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	12;"	d
EIGEN_SPARSE_PERMUTATION_H	external/Eigen/src/SparseCore/SparsePermutation.h	11;"	d
EIGEN_SPARSE_PUBLIC_INTERFACE	external/Eigen/src/SparseCore/SparseUtil.h	62;"	d
EIGEN_SPARSE_SELFADJOINTVIEW_H	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	11;"	d
EIGEN_SPARSE_SOLVE_H	external/Eigen/src/misc/SparseSolve.h	11;"	d
EIGEN_SPARSE_TRIANGULARVIEW_H	external/Eigen/src/SparseCore/SparseTriangularView.h	11;"	d
EIGEN_SPLINES_FWD_H	external/unsupported/Eigen/src/Splines/SplineFwd.h	11;"	d
EIGEN_SPLINE_FITTING_H	external/unsupported/Eigen/src/Splines/SplineFitting.h	11;"	d
EIGEN_SPLINE_H	external/unsupported/Eigen/src/Splines/Spline.h	11;"	d
EIGEN_STABLENORM_H	external/Eigen/src/Core/StableNorm.h	11;"	d
EIGEN_STACK_ALLOCATION_LIMIT	external/Eigen/src/Core/util/Macros.h	285;"	d
EIGEN_STATIC_ASSERT	external/Eigen/src/Core/util/StaticAssert.h	105;"	d
EIGEN_STATIC_ASSERT	external/Eigen/src/Core/util/StaticAssert.h	32;"	d
EIGEN_STATIC_ASSERT_ARRAYXPR	external/Eigen/src/Core/util/StaticAssert.h	194;"	d
EIGEN_STATIC_ASSERT_DYNAMIC_SIZE	external/Eigen/src/Core/util/StaticAssert.h	135;"	d
EIGEN_STATIC_ASSERT_FIXED_SIZE	external/Eigen/src/Core/util/StaticAssert.h	130;"	d
EIGEN_STATIC_ASSERT_H	external/Eigen/src/Core/util/StaticAssert.h	12;"	d
EIGEN_STATIC_ASSERT_INDEX_BASED_ACCESS	external/Eigen/src/Core/MapBase.h	14;"	d
EIGEN_STATIC_ASSERT_LVALUE	external/Eigen/src/Core/util/StaticAssert.h	190;"	d
EIGEN_STATIC_ASSERT_MATRIX_SPECIFIC_SIZE	external/Eigen/src/Core/util/StaticAssert.h	145;"	d
EIGEN_STATIC_ASSERT_NON_INTEGER	external/Eigen/src/Core/util/StaticAssert.h	171;"	d
EIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE	external/Eigen/src/Core/util/StaticAssert.h	180;"	d
EIGEN_STATIC_ASSERT_SAME_VECTOR_SIZE	external/Eigen/src/Core/util/StaticAssert.h	150;"	d
EIGEN_STATIC_ASSERT_SAME_XPR_KIND	external/Eigen/src/Core/util/StaticAssert.h	198;"	d
EIGEN_STATIC_ASSERT_SIZE_1x1	external/Eigen/src/Core/util/StaticAssert.h	185;"	d
EIGEN_STATIC_ASSERT_VECTOR_ONLY	external/Eigen/src/Core/util/StaticAssert.h	125;"	d
EIGEN_STATIC_ASSERT_VECTOR_SPECIFIC_SIZE	external/Eigen/src/Core/util/StaticAssert.h	140;"	d
EIGEN_STDDEQUE_H	external/Eigen/src/StlSupport/StdDeque.h	12;"	d
EIGEN_STDLIST_H	external/Eigen/src/StlSupport/StdList.h	11;"	d
EIGEN_STDVECTOR_H	external/Eigen/src/StlSupport/StdVector.h	12;"	d
EIGEN_STD_DEQUE_SPECIALIZATION_BODY	external/Eigen/src/StlSupport/StdDeque.h	60;"	d
EIGEN_STD_LIST_SPECIALIZATION_BODY	external/Eigen/src/StlSupport/StdList.h	60;"	d
EIGEN_STD_VECTOR_SPECIALIZATION_BODY	external/Eigen/src/StlSupport/StdVector.h	49;"	d
EIGEN_STEM_FUNCTION	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	11;"	d
EIGEN_STL_DETAILS_H	external/Eigen/src/StlSupport/details.h	12;"	d
EIGEN_STRIDE_H	external/Eigen/src/Core/Stride.h	11;"	d
EIGEN_STRONG_INLINE	external/Eigen/src/Core/util/Macros.h	128;"	d
EIGEN_STRONG_INLINE	external/Eigen/src/Core/util/Macros.h	130;"	d
EIGEN_SUPERLUSUPPORT_H	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	11;"	d
EIGEN_SUPERLU_HAS_ILU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	45;"	d
EIGEN_SUPERLU_HAS_ILU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	800;"	d
EIGEN_SWAP_H	external/Eigen/src/Core/Swap.h	11;"	d
EIGEN_TRANSFORM_H	external/Eigen/src/Geometry/Transform.h	13;"	d
EIGEN_TRANSLATION_H	external/Eigen/src/Geometry/Translation.h	11;"	d
EIGEN_TRANSPOSE_H	external/Eigen/src/Core/Transpose.h	12;"	d
EIGEN_TRANSPOSITIONS_H	external/Eigen/src/Core/Transpositions.h	11;"	d
EIGEN_TRIANGULARMATRIXVECTOR_H	external/Eigen/src/Core/products/TriangularMatrixVector.h	11;"	d
EIGEN_TRIANGULARMATRIX_H	external/Eigen/src/Core/TriangularMatrix.h	12;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_H	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	11;"	d
EIGEN_TRIANGULAR_MATRIX_MATRIX_MKL_H	external/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	34;"	d
EIGEN_TRIANGULAR_MATRIX_VECTOR_MKL_H	external/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	34;"	d
EIGEN_TRIANGULAR_SOLVER2_H	external/Eigen/src/Eigen2Support/TriangularSolver.h	11;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_H	external/Eigen/src/Core/products/TriangularSolverMatrix.h	11;"	d
EIGEN_TRIANGULAR_SOLVER_MATRIX_MKL_H	external/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	34;"	d
EIGEN_TRIANGULAR_SOLVER_VECTOR_H	external/Eigen/src/Core/products/TriangularSolverVector.h	11;"	d
EIGEN_TRIDIAGONALIZATION_H	external/Eigen/src/Eigenvalues/Tridiagonalization.h	12;"	d
EIGEN_TUNE_TRIANGULAR_PANEL_WIDTH	external/Eigen/src/Core/arch/Default/Settings.h	38;"	d
EIGEN_UMEYAMA_H	external/Eigen/src/Geometry/Umeyama.h	11;"	d
EIGEN_UMFPACKSUPPORT_H	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	11;"	d
EIGEN_UNROLLING_LIMIT	external/Eigen/src/Core/arch/Default/Settings.h	24;"	d
EIGEN_UNUSED	external/Eigen/src/Core/util/Macros.h	235;"	d
EIGEN_UNUSED_VARIABLE	external/Eigen/src/Core/util/Macros.h	241;"	d
EIGEN_USER_ALIGN16	external/Eigen/src/Core/util/Macros.h	271;"	d
EIGEN_USER_ALIGN_TO_BOUNDARY	external/Eigen/src/Core/util/Macros.h	270;"	d
EIGEN_USE_BLAS	external/Eigen/src/Core/util/MKL_support.h	38;"	d
EIGEN_USE_LAPACKE	external/Eigen/src/Core/util/MKL_support.h	41;"	d
EIGEN_USE_LAPACKE	external/Eigen/src/Core/util/MKL_support.h	49;"	d
EIGEN_USE_MKL	external/Eigen/src/Core/util/MKL_support.h	53;"	d
EIGEN_USE_MKL_VML	external/Eigen/src/Core/util/MKL_support.h	44;"	d
EIGEN_USING_ARRAY_TYPEDEFS	external/Eigen/src/Core/Array.h	299;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE	external/Eigen/src/Core/Array.h	293;"	d
EIGEN_USING_ARRAY_TYPEDEFS_FOR_TYPE_AND_SIZE	external/Eigen/src/Core/Array.h	288;"	d
EIGEN_VECTORBLOCK_H	external/Eigen/src/Core/VectorBlock.h	12;"	d
EIGEN_VERSION_AT_LEAST	external/Eigen/src/Core/util/Macros.h	18;"	d
EIGEN_VISITOR_H	external/Eigen/src/Core/Visitor.h	11;"	d
EIGEN_WARNINGS_DISABLED	external/Eigen/src/Core/util/DisableStupidWarnings.h	2;"	d
EIGEN_WARNINGS_DISABLED	external/Eigen/src/Core/util/ReenableStupidWarnings.h	2;"	d
EIGEN_WORKAROUND_MSVC_STL_SUPPORT	external/Eigen/src/StlSupport/details.h	54;"	d
EIGEN_WORLD_VERSION	external/Eigen/src/Core/util/Macros.h	14;"	d
EIGEN_XPRHELPER_H	external/Eigen/src/Core/util/XprHelper.h	12;"	d
EMPTY	external/SuiteSparse/Include/cholmod_internal.h	93;"	d
ENTRY_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	102;"	d
ENTRY_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	13;"	d
ENTRY_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	159;"	d
ENTRY_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	210;"	d
ENTRY_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	59;"	d
ENTRY_IS_ONE	external/SuiteSparse/Include/cholmod_template.h	104;"	d
ENTRY_IS_ONE	external/SuiteSparse/Include/cholmod_template.h	15;"	d
ENTRY_IS_ONE	external/SuiteSparse/Include/cholmod_template.h	161;"	d
ENTRY_IS_ONE	external/SuiteSparse/Include/cholmod_template.h	212;"	d
ENTRY_IS_ONE	external/SuiteSparse/Include/cholmod_template.h	61;"	d
ENTRY_IS_ZERO	external/SuiteSparse/Include/cholmod_template.h	103;"	d
ENTRY_IS_ZERO	external/SuiteSparse/Include/cholmod_template.h	14;"	d
ENTRY_IS_ZERO	external/SuiteSparse/Include/cholmod_template.h	160;"	d
ENTRY_IS_ZERO	external/SuiteSparse/Include/cholmod_template.h	211;"	d
ENTRY_IS_ZERO	external/SuiteSparse/Include/cholmod_template.h	60;"	d
ENTRY_SIZE	external/SuiteSparse/Include/cholmod_template.h	106;"	d
ENTRY_SIZE	external/SuiteSparse/Include/cholmod_template.h	163;"	d
ENTRY_SIZE	external/SuiteSparse/Include/cholmod_template.h	214;"	d
ENTRY_SIZE	external/SuiteSparse/Include/cholmod_template.h	40;"	d
ENTRY_SIZE	external/SuiteSparse/Include/cholmod_template.h	63;"	d
EQ	external/SuiteSparse/Include/cholmod_blas.h	173;"	d
EQUALS	build/Makefile	/^EQUALS = =$/;"	m
ERROR	external/SuiteSparse/Include/cholmod_internal.h	111;"	d
EXTERN	external/SuiteSparse/Include/cholmod_internal.h	313;"	d
EXTERN_BIT	external/unsupported/test/mpreal/dlmalloc.c	1614;"	d	file:
EigVecMask	external/Eigen/src/Core/util/Constants.h	/^  EigVecMask = EigenvaluesOnly | ComputeEigenvectors,$/;"	e	enum:Eigen::DecompositionOptions
Eigen	external/Eigen/src/Cholesky/LDLT.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Cholesky/LLT.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Cholesky/LLT_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Array.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/ArrayBase.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/ArrayWrapper.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Assign.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/Assign_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/BandMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Block.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/BooleanRedux.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/CommaInitializer.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/CwiseBinaryOp.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/CwiseNullaryOp.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/CwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/CwiseUnaryView.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/DenseBase.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/DenseCoeffsBase.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/DenseStorage.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/Diagonal.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/DiagonalMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/DiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Dot.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/EigenBase.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/Flagged.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/ForceAlignedAccess.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/Functors.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/Fuzzy.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/GeneralProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/GenericPacketMath.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/GlobalFunctions.h	/^namespace Eigen$/;"	n
Eigen	external/Eigen/src/Core/IO.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Map.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/MapBase.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/Matrix.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/MatrixBase.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/NestByValue.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/NoAlias.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/NumTraits.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/PermutationMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/PlainObjectBase.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/ProductBase.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Random.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Redux.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Replicate.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/ReturnByValue.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/Reverse.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Select.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/SelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/SolveTriangular.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/StableNorm.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Stride.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Swap.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Transpose.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Transpositions.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/TriangularMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/VectorBlock.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/VectorwiseOp.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/Visitor.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/arch/NEON/Complex.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/arch/SSE/Complex.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/Parallelizer.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/SelfadjointProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Core/util/BlasUtil.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/Constants.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/MKL_support.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/Macros.h	/^    namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/Memory.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/Meta.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/StaticAssert.h	/^    namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Core/util/XprHelper.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Eigen2Support/Block.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Cwise.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/LU.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Lazy.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/LeastSquares.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/MathFunctions.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Memory.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Meta.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/Minor.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/QR.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/SVD.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigen2Support/VectorBlock.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/ComplexSchur_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/EigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/RealSchur.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/RealSchur_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/AlignedBox.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/AngleAxis.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/EulerAngles.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Homogeneous.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Hyperplane.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/OrthoMethods.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/ParametrizedLine.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Quaternion.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Rotation2D.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/RotationBase.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Scaling.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Transform.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Translation.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/Umeyama.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Householder/BlockHouseholder.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Householder/Householder.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Householder/HouseholderSequence.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/Jacobi/Jacobi.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/LU/Determinant.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/LU/FullPivLU.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/LU/Inverse.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/LU/PartialPivLU.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/LU/PartialPivLU_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/OrderingMethods/Amd.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/QR/ColPivHouseholderQR_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/QR/HouseholderQR.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/QR/HouseholderQR_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SVD/JacobiSVD.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SVD/JacobiSVD_MKL.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/AmbiVector.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/CompressedStorage.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/CoreIterators.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseBlock.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseDot.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparsePermutation.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseRedux.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseTranspose.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseUtil.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseVector.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/SparseView.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/SparseCore/TriangularSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/StlSupport/details.h	/^namespace Eigen {$/;"	n
Eigen	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/misc/Image.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/misc/Kernel.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/misc/Solve.h	/^namespace Eigen { $/;"	n
Eigen	external/Eigen/src/misc/SparseSolve.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^namespace Eigen$/;"	n
Eigen	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^namespace Eigen {$/;"	n
Eigen	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^namespace Eigen {$/;"	n
Eigen	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/BVH/KdBVH.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/chkder.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/covar.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/dogleg.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/r1updt.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Polynomials/Companion.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^namespace Eigen {$/;"	n
Eigen	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^namespace Eigen { $/;"	n
Eigen	external/unsupported/Eigen/src/Splines/Spline.h	/^namespace Eigen$/;"	n
Eigen	external/unsupported/Eigen/src/Splines/SplineFitting.h	/^namespace Eigen$/;"	n
Eigen	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^namespace Eigen$/;"	n
Eigen	external/unsupported/doc/examples/BVH_Example.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	external/unsupported/test/BVH.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	external/unsupported/test/polynomialsolver.cpp	/^namespace Eigen {$/;"	n	file:
Eigen	external/unsupported/test/polynomialutils.cpp	/^namespace Eigen {$/;"	n	file:
EigenBase	external/Eigen/src/Core/EigenBase.h	/^template<typename Derived> struct EigenBase$/;"	s	namespace:Eigen
EigenSolver	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver(Index size)$/;"	f	class:Eigen::EigenSolver
EigenSolver	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenSolver(const MatrixType& matrix, bool computeEigenvectors = true)$/;"	f	class:Eigen::EigenSolver
EigenSolver	external/Eigen/src/Eigenvalues/EigenSolver.h	/^ EigenSolver() : m_eivec(), m_eivalues(), m_isInitialized(false), m_realSchur(), m_matT(), m_tmp() {}$/;"	f	class:Eigen::EigenSolver
EigenSolver	external/Eigen/src/Eigenvalues/EigenSolver.h	/^template<typename _MatrixType> class EigenSolver$/;"	c	namespace:Eigen
EigenSolverType	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef EigenSolver<CompanionMatrixType>         EigenSolverType;$/;"	t	class:Eigen::PolynomialSolver
EigenVectorContainer	external/unsupported/test/FFTW.cpp	/^enum { StdVectorContainer, EigenVectorContainer };$/;"	e	enum:__anon469	file:
Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl	external/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl;$/;"	t	class:Eigen::ArrayBase
EigenvalueType	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options&(~RowMajor), MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvalueType	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::EigenSolver
EigenvalueType	external/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<ComplexScalar, ColsAtCompileTime, 1, Options & ~RowMajor, MaxColsAtCompileTime, 1> EigenvalueType;$/;"	t	class:Eigen::RealSchur
EigenvaluesOnly	external/Eigen/src/Core/util/Constants.h	/^  EigenvaluesOnly     = 0x40,$/;"	e	enum:Eigen::DecompositionOptions
EigenvaluesReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef Matrix<typename NumTraits<typename internal::traits<Derived>::Scalar>::Real, internal::traits<Derived>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::DenseBase
EigenvaluesReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef Matrix<std::complex<RealScalar>, internal::traits<Derived>::ColsAtCompileTime, 1, ColMajor> EigenvaluesReturnType;$/;"	t	class:Eigen::MatrixBase
EigenvaluesReturnType	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef Matrix<RealScalar, internal::traits<MatrixType>::ColsAtCompileTime, 1> EigenvaluesReturnType;$/;"	t	class:Eigen::SelfAdjointView
EigenvectorType	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorType;$/;"	t	class:Eigen::ComplexEigenSolver
EigenvectorsType	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef Matrix<ComplexScalar, RowsAtCompileTime, ColsAtCompileTime, Options, MaxRowsAtCompileTime, MaxColsAtCompileTime> EigenvectorsType;$/;"	t	class:Eigen::EigenSolver
ElseMatrixNested	external/Eigen/src/Core/Select.h	/^  typedef typename ElseMatrixType::Nested ElseMatrixNested;$/;"	t	struct:Eigen::internal::traits
EssentialVectorType	external/Eigen/src/Householder/HouseholderSequence.h	/^            EssentialVectorType;$/;"	t	class:Eigen::HouseholderSequence
EssentialVectorType	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Block<const VectorsType, Dynamic, 1> EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EssentialVectorType	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef Transpose<Block<const VectorsType, 1, Dynamic> > EssentialVectorType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
EvalBeforeAssigningBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeAssigningBit = 0x4;$/;"	m	namespace:Eigen
EvalBeforeNestingBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int EvalBeforeNestingBit = 0x2;$/;"	m	namespace:Eigen
EvalReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::add_const_on_value_type<typename internal::eval<Derived>::type>::type EvalReturnType;$/;"	t	class:Eigen::DenseBase
EvalToRowMajor	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      EvalToRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon233
EvalToRowMajor	external/Eigen/src/SparseCore/SparseProduct.h	/^    EvalToRowMajor = (RhsFlags & LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon429
EvalToRowMajor	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        EvalToRowMajor = (RhsFlags & LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon449
ExpandCtr	OptApp.cpp	/^void COptApp::ExpandCtr( const Eigen::VectorXd & ctr, Eigen::VectorXd & expand_ctr )$/;"	f	class:COptApp
ExpressionType	external/Eigen/src/Core/SelfAdjointView.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionType	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef MatrixType ExpressionType;$/;"	t	struct:Eigen::internal::traits
ExpressionTypeNested	external/Eigen/src/Core/Flagged.h	/^        ExpressionType, const ExpressionType&>::type ExpressionTypeNested;$/;"	t	class:Eigen::Flagged
ExpressionTypeNested	external/Eigen/src/Core/VectorwiseOp.h	/^        ExpressionType, ExpressionType&>::type ExpressionTypeNested;$/;"	t	class:Eigen::VectorwiseOp
ExpressionTypeNested	external/Eigen/src/Eigen2Support/Cwise.h	/^        ExpressionType, const ExpressionType&>::type ExpressionTypeNested;$/;"	t	class:Eigen::Cwise
ExpressionTypeNestedCleaned	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::remove_all<ExpressionTypeNested>::type ExpressionTypeNestedCleaned;$/;"	t	class:Eigen::VectorwiseOp
ExtendedType	external/Eigen/src/Core/VectorwiseOp.h	/^    template<typename OtherDerived> struct ExtendedType {$/;"	s	class:Eigen::VectorwiseOp
ExtractType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType>  ExtractType; \/\/ const to get rid of a compile error; anyway blas traits are only used on the RHS$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef const XprType& ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
ExtractType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename Base::ExtractType ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
FALSE	external/SuiteSparse/Include/cholmod_internal.h	79;"	d
FALSE	external/SuiteSparse/Include/cholmod_internal.h	81;"	d
FENCEPOST_HEAD	external/unsupported/test/mpreal/dlmalloc.c	2127;"	d	file:
FLAG4_BIT	external/unsupported/test/mpreal/dlmalloc.c	2122;"	d	file:
FLAG_BITS	external/unsupported/test/mpreal/dlmalloc.c	2124;"	d	file:
FLIP	external/SuiteSparse/Include/cholmod_internal.h	94;"	d
FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED	external/Eigen/src/Core/util/StaticAssert.h	/^        FLOATING_POINT_ARGUMENT_PASSED__INTEGER_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
FOOTERS	external/unsupported/test/mpreal/dlmalloc.c	565;"	d	file:
FORCEINLINE	external/unsupported/test/mpreal/dlmalloc.c	730;"	d	file:
FORCEINLINE	external/unsupported/test/mpreal/dlmalloc.c	732;"	d	file:
FORCEINLINE	external/unsupported/test/mpreal/dlmalloc.c	748;"	d	file:
FORCEINLINE	external/unsupported/test/mpreal/dlmalloc.c	752;"	d	file:
FOUR_SIZE_T_SIZES	external/unsupported/test/mpreal/dlmalloc.c	1452;"	d	file:
FVectorType	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef Matrix< Scalar, Dynamic, 1 > FVectorType;$/;"	t	class:Eigen::HybridNonLinearSolver
FVectorType	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    typedef Matrix< Scalar, Dynamic, 1 > FVectorType;$/;"	t	class:Eigen::LevenbergMarquardt
Factor	external/Eigen/src/Core/Replicate.h	/^    Factor = (RowFactor==Dynamic || ColFactor==Dynamic) ? Dynamic : RowFactor*ColFactor$/;"	e	enum:Eigen::internal::traits::__anon177
FactorType	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseMatrix<Scalar,RowMajor> FactorType;$/;"	t	class:Eigen::IncompleteLUT
FactorType	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef SparseMatrix<Scalar,RowMajor> FactorType;$/;"	t	class:Eigen::IncompleteLU
Fileexists	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline bool Fileexists(std::string file)$/;"	f	class:Eigen::MatrixMarketIterator
FixedSegmentReturnType	external/Eigen/src/Core/DenseBase.h	/^    template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	s	class:Eigen::DenseBase
Flag	external/SuiteSparse/Include/cholmod_core.h	/^    void *Flag ;	\/* size nrow, an integer array.  Kept cleared between$/;"	m	struct:cholmod_common_struct
Flagged	external/Eigen/src/Core/Flagged.h	/^    inline Flagged(const ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Flagged
Flagged	external/Eigen/src/Core/Flagged.h	/^template<typename ExpressionType, unsigned int Added, unsigned int Removed> class Flagged$/;"	c	namespace:Eigen
Flags	external/Eigen/src/Core/BandMatrix.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
Flags	external/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon20
Flags	external/Eigen/src/Core/BandMatrix.h	/^    Flags = LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon21
Flags	external/Eigen/src/Core/Block.h	/^    Flags = Flags0 | FlagsLinearAccessBit | FlagsLvalueBit | FlagsRowMajorBit$/;"	e	enum:Eigen::internal::traits::__anon22
Flags	external/Eigen/src/Core/CwiseBinaryOp.h	/^    Flags = (Flags0 & ~RowMajorBit) | (LhsFlags & RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon26
Flags	external/Eigen/src/Core/CwiseNullaryOp.h	/^    Flags = (traits<PlainObjectType>::Flags$/;"	e	enum:Eigen::internal::traits::__anon27
Flags	external/Eigen/src/Core/CwiseUnaryOp.h	/^    Flags = _XprTypeNested::Flags & ($/;"	e	enum:Eigen::internal::traits::__anon28
Flags	external/Eigen/src/Core/CwiseUnaryView.h	/^    Flags = (traits<_MatrixTypeNested>::Flags & (HereditaryBits | LvalueBit | LinearAccessBit | DirectAccessBit)),$/;"	e	enum:Eigen::internal::traits::__anon29
Flags	external/Eigen/src/Core/DenseBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::DenseBase::__anon30
Flags	external/Eigen/src/Core/Diagonal.h	/^    Flags = (unsigned int)_MatrixTypeNested::Flags & (HereditaryBits | LinearAccessBit | MaskLvalueBit | DirectAccessBit) & ~RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon36
Flags	external/Eigen/src/Core/DiagonalMatrix.h	/^      Flags = 0$/;"	e	enum:Eigen::DiagonalBase::__anon37
Flags	external/Eigen/src/Core/DiagonalMatrix.h	/^    Flags =  traits<DiagonalVectorType>::Flags & LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon39
Flags	external/Eigen/src/Core/DiagonalMatrix.h	/^    Flags = LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon38
Flags	external/Eigen/src/Core/DiagonalProduct.h	/^    Flags = (HereditaryBits & (unsigned int)(MatrixType::Flags)) | (_Vectorizable ? PacketAccessBit : 0),$/;"	e	enum:Eigen::internal::traits::__anon40
Flags	external/Eigen/src/Core/Flagged.h	/^  enum { Flags = (ExpressionType::Flags | Added) & ~Removed };$/;"	e	enum:Eigen::internal::traits::__anon41
Flags	external/Eigen/src/Core/Map.h	/^    Flags = KeepsPacketAccess ? int(Flags3) : (int(Flags3) & ~PacketAccessBit)$/;"	e	enum:Eigen::internal::traits::__anon145
Flags	external/Eigen/src/Core/Matrix.h	/^    Flags = compute_matrix_flags<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::ret,$/;"	e	enum:Eigen::internal::traits::__anon153
Flags	external/Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::PermutationBase::__anon158
Flags	external/Eigen/src/Core/PermutationMatrix.h	/^      Flags = Traits::Flags,$/;"	e	enum:Eigen::Transpose::__anon160
Flags	external/Eigen/src/Core/PermutationMatrix.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon159
Flags	external/Eigen/src/Core/Product.h	/^    Flags = (MaxRowsAtCompileTime==1 ? RowMajorBit : 0), \/\/ TODO should be no storage order$/;"	e	enum:internal::traits::__anon164
Flags	external/Eigen/src/Core/ProductBase.h	/^    Flags = (MaxRowsAtCompileTime==1 ? RowMajorBit : 0)$/;"	e	enum:Eigen::internal::traits::__anon165
Flags	external/Eigen/src/Core/Replicate.h	/^    Flags = (_MatrixTypeNested::Flags & HereditaryBits & ~RowMajorBit) | (IsRowMajor ? RowMajorBit : 0),$/;"	e	enum:Eigen::internal::traits::__anon178
Flags	external/Eigen/src/Core/ReturnByValue.h	/^    Flags = (traits<typename traits<Derived>::ReturnType>::Flags$/;"	e	enum:Eigen::internal::traits::__anon179
Flags	external/Eigen/src/Core/Reverse.h	/^    Flags = int(_MatrixTypeNested::Flags) & (HereditaryBits | LvalueBit | PacketAccessBit | LinearAccess),$/;"	e	enum:Eigen::internal::traits::__anon180
Flags	external/Eigen/src/Core/Select.h	/^    Flags = (unsigned int)ThenMatrixType::Flags & ElseMatrixType::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon182
Flags	external/Eigen/src/Core/SelfAdjointView.h	/^    Flags =  MatrixTypeNestedCleaned::Flags & (HereditaryBits)$/;"	e	enum:Eigen::internal::traits::__anon183
Flags	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    Flags = traits<CwiseBinaryOp<BinaryOp,Lhs,Rhs> >::Flags | (Lhs::Flags&DirectAccessBit) | (Lhs::Flags&LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon187
Flags	external/Eigen/src/Core/Transpose.h	/^    Flags = Flags1 ^ RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon192
Flags	external/Eigen/src/Core/TriangularMatrix.h	/^    Flags = (MatrixTypeNestedCleaned::Flags & (HereditaryBits) & (~(PacketAccessBit | DirectAccessBit | LinearAccessBit))) | Mode,$/;"	e	enum:Eigen::internal::traits::__anon196
Flags	external/Eigen/src/Core/VectorwiseOp.h	/^    Flags = (Flags0 & ~RowMajorBit) | (RowsAtCompileTime == 1 ? RowMajorBit : 0),$/;"	e	enum:Eigen::internal::traits::__anon200
Flags	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      Flags = ((unsigned int)(LhsFlags | RhsFlags) & HereditaryBits & ~RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon233
Flags	external/Eigen/src/Eigen2Support/Minor.h	/^    Flags = _MatrixTypeNested::Flags & (HereditaryBits | LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon345
Flags	external/Eigen/src/Geometry/Homogeneous.h	/^    Flags = ColsAtCompileTime==1 ? (TmpFlags & ~RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon356
Flags	external/Eigen/src/Geometry/Quaternion.h	/^      Flags = TraitsBase::Flags & ~LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon364
Flags	external/Eigen/src/Geometry/Quaternion.h	/^      Flags = TraitsBase::Flags$/;"	e	enum:Eigen::internal::traits::__anon363
Flags	external/Eigen/src/Geometry/Quaternion.h	/^    Flags = Eigen::internal::traits<Derived>::Flags$/;"	e	enum:Eigen::QuaternionBase::__anon360
Flags	external/Eigen/src/Geometry/Quaternion.h	/^    Flags = IsAligned ? (AlignedBit | LvalueBit) : LvalueBit$/;"	e	enum:Eigen::internal::traits::__anon361
Flags	external/Eigen/src/Householder/HouseholderSequence.h	/^    Flags = 0$/;"	e	enum:Eigen::internal::traits::__anon379
Flags	external/Eigen/src/SparseCore/SparseBlock.h	/^    Flags = MatrixType::Flags,$/;"	e	enum:Eigen::internal::traits::__anon413
Flags	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Flags = Tr ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon418
Flags	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    Flags = (SparseFlags&RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon419
Flags	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = 0,$/;"	e	enum:Eigen::internal::traits::__anon423
Flags	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon422
Flags	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
Flags	external/Eigen/src/SparseCore/SparseProduct.h	/^    Flags = (int(LhsFlags | RhsFlags) & HereditaryBits & RemovedBits)$/;"	e	enum:Eigen::internal::traits::__anon429
Flags	external/Eigen/src/SparseCore/SparseVector.h	/^    Flags = _Options | NestByRefBit | LvalueBit | (IsColVector ? 0 : RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon435
Flags	external/Eigen/src/SparseCore/SparseView.h	/^    Flags = int(traits<MatrixType>::Flags) & (RowMajorBit)$/;"	e	enum:Eigen::internal::traits::__anon438
Flags	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        Flags = SkylineBit | _Options,$/;"	e	enum:Eigen::internal::traits::__anon447
Flags	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        Flags = internal::traits<Derived>::Flags,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
Flags	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        Flags = (int(LhsFlags | RhsFlags) & HereditaryBits & RemovedBits)$/;"	e	enum:Eigen::internal::traits::__anon449
Flags	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    Flags = _Options | NestByRefBit | LvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon453
Flags0	external/Eigen/src/Core/Block.h	/^    Flags0 = traits<XprType>::Flags & ( (HereditaryBits & ~RowMajorBit) |$/;"	e	enum:Eigen::internal::traits::__anon22
Flags0	external/Eigen/src/Core/CwiseBinaryOp.h	/^    Flags0 = (int(LhsFlags) | int(RhsFlags)) & ($/;"	e	enum:Eigen::internal::traits::__anon26
Flags0	external/Eigen/src/Core/Map.h	/^    Flags0 = TraitsBase::Flags & (~NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon145
Flags0	external/Eigen/src/Core/Transpose.h	/^    Flags0 = MatrixTypeNestedPlain::Flags & ~(LvalueBit | NestByRefBit),$/;"	e	enum:Eigen::internal::traits::__anon192
Flags0	external/Eigen/src/Core/VectorwiseOp.h	/^    Flags0 = (unsigned int)_MatrixTypeNested::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon200
Flags1	external/Eigen/src/Core/Map.h	/^    Flags1 = IsAligned ? (int(Flags0) | AlignedBit) : (int(Flags0) & ~AlignedBit),$/;"	e	enum:Eigen::internal::traits::__anon145
Flags1	external/Eigen/src/Core/Transpose.h	/^    Flags1 = Flags0 | FlagsLvalueBit,$/;"	e	enum:Eigen::internal::traits::__anon192
Flags2	external/Eigen/src/Core/Map.h	/^    Flags2 = (bool(HasNoStride) || bool(PlainObjectType::IsVectorAtCompileTime))$/;"	e	enum:Eigen::internal::traits::__anon145
Flags3	external/Eigen/src/Core/Map.h	/^    Flags3 = is_lvalue<PlainObjectType>::value ? int(Flags2) : (int(Flags2) & ~LvalueBit),$/;"	e	enum:Eigen::internal::traits::__anon145
FlagsLinearAccessBit	external/Eigen/src/Core/Block.h	/^    FlagsLinearAccessBit = (RowsAtCompileTime == 1 || ColsAtCompileTime == 1) ? LinearAccessBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon22
FlagsLvalueBit	external/Eigen/src/Core/Block.h	/^    FlagsLvalueBit = is_lvalue<XprType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon22
FlagsLvalueBit	external/Eigen/src/Core/Transpose.h	/^    FlagsLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon192
FlagsRowMajorBit	external/Eigen/src/Core/Block.h	/^    FlagsRowMajorBit = IsRowMajor ? RowMajorBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon22
ForceAlignedAccess	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline ForceAlignedAccess(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::ForceAlignedAccess
ForceAlignedAccess	external/Eigen/src/Core/ForceAlignedAccess.h	/^template<typename ExpressionType> class ForceAlignedAccess$/;"	c	namespace:Eigen
Forward	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    Forward,$/;"	e	enum:Eigen::NumericalDiffMode
FramedTransformation	RGBDTrajectory.h	/^	FramedTransformation( int id1, int id2, int f, Eigen::Matrix4d t )$/;"	f	struct:FramedTransformation
FramedTransformation	RGBDTrajectory.h	/^struct FramedTransformation {$/;"	s
FromTwoVectors	external/Eigen/src/Geometry/Quaternion.h	/^Quaternion<Scalar,Options> Quaternion<Scalar,Options>::FromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::Quaternion
FtolTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        FtolTooSmall = 6,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
FullPivHouseholderQR	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR()$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
FullPivHouseholderQR	external/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename _MatrixType> class FullPivHouseholderQR$/;"	c	namespace:Eigen
FullPivHouseholderQRMatrixQReturnType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  FullPivHouseholderQRMatrixQReturnType(const MatrixType&       qr,$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
FullPivHouseholderQRMatrixQReturnType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^template<typename MatrixType> struct FullPivHouseholderQRMatrixQReturnType$/;"	s	namespace:Eigen::internal
FullPivHouseholderQRPreconditioner	external/Eigen/src/Core/util/Constants.h	/^  FullPivHouseholderQRPreconditioner$/;"	e	enum:Eigen::QRPreconditioners
FullPivLU	external/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU()$/;"	f	class:Eigen::FullPivLU
FullPivLU	external/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(Index rows, Index cols)$/;"	f	class:Eigen::FullPivLU
FullPivLU	external/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>::FullPivLU(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivLU
FullPivLU	external/Eigen/src/LU/FullPivLU.h	/^template<typename _MatrixType> class FullPivLU$/;"	c	namespace:Eigen
FullPrecision	external/Eigen/src/Core/IO.h	/^       FullPrecision = -2 };$/;"	e	enum:Eigen::__anon144
FullyLazyCoeffBaseProductType	external/Eigen/src/Core/ProductBase.h	/^    typedef CoeffBasedProduct<LhsNested, RhsNested, 0> FullyLazyCoeffBaseProductType;$/;"	t	class:Eigen::ProductBase
Functor	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef _Functor Functor;$/;"	t	class:Eigen::NumericalDiff
Functor	external/unsupported/test/NonLinearOptimization.cpp	/^  Functor() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:Functor
Functor	external/unsupported/test/NonLinearOptimization.cpp	/^  Functor(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:Functor
Functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct Functor$/;"	s	file:
Functor	external/unsupported/test/NumericalDiff.cpp	/^  Functor() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:Functor
Functor	external/unsupported/test/NumericalDiff.cpp	/^  Functor(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:Functor
Functor	external/unsupported/test/NumericalDiff.cpp	/^struct Functor$/;"	s	file:
FunctorType	external/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon317
FunctorType	external/Eigen/src/Core/util/Meta.h	/^    enum {FunctorType = sizeof(testFunctor(static_cast<Func*>(0)))};$/;"	e	enum:Eigen::internal::result_of::__anon318
GEMM_SPECIALIZATION	external/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	49;"	d
GMRES	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  GMRES() : Base(), m_restart(30) {}$/;"	f	class:Eigen::GMRES
GMRES	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  GMRES(const MatrixType& A) : Base(A), m_restart(30) {}$/;"	f	class:Eigen::GMRES
GMRES	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^class GMRES : public IterativeSolverBase<GMRES<_MatrixType,_Preconditioner> >$/;"	c	namespace:Eigen
GemmParallelInfo	external/Eigen/src/Core/products/Parallelizer.h	/^  GemmParallelInfo() : sync(-1), users(0), rhs_start(0), rhs_length(0) {}$/;"	f	struct:Eigen::internal::GemmParallelInfo
GemmParallelInfo	external/Eigen/src/Core/products/Parallelizer.h	/^template<typename Index> struct GemmParallelInfo$/;"	s	namespace:Eigen::internal
GemmProduct	external/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon272
GemmUsed	external/SuiteSparse/Include/cholmod_core.h	/^    int GemmUsed ;              \/* TRUE if cuda dgemm used, false otherwise *\/$/;"	m	struct:cholmod_common_struct
GemvProduct	external/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon272
GenEigMask	external/Eigen/src/Core/util/Constants.h	/^  GenEigMask = Ax_lBx | ABx_lx | BAx_lx$/;"	e	enum:Eigen::DecompositionOptions
GeneralProduct	external/Eigen/src/Core/GeneralProduct.h	/^    GeneralProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::GeneralProduct
GeneralProduct	external/Eigen/src/Core/GeneralProduct.h	/^    GeneralProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::GeneralProduct
GeneralProduct	external/Eigen/src/Core/GeneralProduct.h	/^class GeneralProduct<Lhs, Rhs, GemvProduct>$/;"	c	namespace:Eigen
GeneralProduct	external/Eigen/src/Core/GeneralProduct.h	/^class GeneralProduct<Lhs, Rhs, InnerProduct>$/;"	c	namespace:Eigen
GeneralProduct	external/Eigen/src/Core/GeneralProduct.h	/^class GeneralProduct<Lhs, Rhs, OuterProduct>$/;"	c	namespace:Eigen
GeneralProduct	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    GeneralProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::GeneralProduct
GeneralProduct	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class GeneralProduct<Lhs, Rhs, GemmProduct>$/;"	c	namespace:Eigen
GeneralizedSelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver() : Base() {}$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    GeneralizedSelfAdjointEigenSolver(const MatrixType& matA, const MatrixType& matB,$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
GeneralizedSelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^class GeneralizedSelfAdjointEigenSolver : public SelfAdjointEigenSolver<_MatrixType>$/;"	c	namespace:Eigen
Generic	external/Eigen/src/Core/util/Constants.h	/^    Generic = 0x0,$/;"	e	enum:Eigen::Architecture::Type
GenericNumTraits	external/Eigen/src/Core/NumTraits.h	/^template<typename T> struct GenericNumTraits$/;"	s	namespace:Eigen
GetAction	external/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
GetCoordinate	PointCloud.h	/^	inline bool GetCoordinate( float pt[ 6 ], Point & point ) {$/;"	f	class:PointCloud
GetIndex	OptApp.h	/^	inline int GetIndex( int i, int j, int k ) {$/;"	f	class:COptApp
GetIndex	PointCloud.h	/^	inline int GetIndex( int i, int j, int k ) {$/;"	f	class:PointCloud
GetMarketLine	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline bool GetMarketLine (std::stringstream& line, int& M, int& N, int& i, int& j, Scalar& value)$/;"	f	namespace:Eigen::internal
GetMarketLine	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline bool GetMarketLine (std::stringstream& line, int& M, int& N, int& i, int& j, std::complex<Scalar>& value)$/;"	f	namespace:Eigen::internal
GetRotation	OptApp.cpp	/^Eigen::Matrix3d COptApp::GetRotation( const int idx, const std::vector< int > & idxx, const Eigen::VectorXd & ictr, const Eigen::VectorXd & ctr )$/;"	f	class:COptApp
GetVectorElt	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void  GetVectorElt (const std::string& line, RealScalar& val)$/;"	f	namespace:Eigen::internal
GetVectorElt	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void GetVectorElt (const std::string& line, std::complex<RealScalar>& val)$/;"	f	namespace:Eigen::internal
Getnextvalidmatrix	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    void Getnextvalidmatrix( )$/;"	f	class:Eigen::MatrixMarketIterator
GoogleDenseHashMapTraits	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct GoogleDenseHashMapTraits$/;"	s	namespace:Eigen
GoogleSparseHashMapTraits	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct GoogleSparseHashMapTraits$/;"	s	namespace:Eigen
GtolTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        GtolTooSmall = 8,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
HALF_MAX_SIZE_T	external/unsupported/test/mpreal/dlmalloc.c	1454;"	d	file:
HAVE_MMAP	external/unsupported/test/mpreal/dlmalloc.c	505;"	d	file:
HAVE_MMAP	external/unsupported/test/mpreal/dlmalloc.c	528;"	d	file:
HAVE_MMAP	external/unsupported/test/mpreal/dlmalloc.c	590;"	d	file:
HAVE_MORECORE	external/unsupported/test/mpreal/dlmalloc.c	506;"	d	file:
HAVE_MORECORE	external/unsupported/test/mpreal/dlmalloc.c	527;"	d	file:
HAVE_MORECORE	external/unsupported/test/mpreal/dlmalloc.c	607;"	d	file:
HAVE_MORECORE	external/unsupported/test/mpreal/dlmalloc.c	609;"	d	file:
HAVE_MREMAP	external/unsupported/test/mpreal/dlmalloc.c	597;"	d	file:
HAVE_MREMAP	external/unsupported/test/mpreal/dlmalloc.c	599;"	d	file:
HCoeffsType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::ColPivHouseholderQR
HCoeffsType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::FullPivHouseholderQR
HCoeffsType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
HCoeffsType	external/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_diag_type<MatrixType>::type HCoeffsType;$/;"	t	class:Eigen::HouseholderQR
HDim	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^    HDim = _Dim+1   \/\/\/< size of a respective homogeneous vector$/;"	e	enum:Eigen::Transform::__anon333
HDim	external/Eigen/src/Geometry/Transform.h	/^    HDim = Transform::HDim,$/;"	e	enum:Eigen::internal::transform_traits::__anon369
HDim	external/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon373
HDim	external/Eigen/src/Geometry/Transform.h	/^    HDim = TransformType::HDim,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon374
HDim	external/Eigen/src/Geometry/Transform.h	/^    HDim = _Dim+1,  \/\/\/< size of a respective homogeneous vector$/;"	e	enum:Eigen::Transform::__anon370
HEX	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	464;"	d	file:
HEX	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	449;"	d	file:
HNormalizedReturnType	external/Eigen/src/Core/MatrixBase.h	/^                const ConstStartMinusOne > HNormalizedReturnType;$/;"	t	class:Eigen::MatrixBase
HNormalizedReturnType	external/Eigen/src/Core/VectorwiseOp.h	/^            HNormalizedReturnType;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Block	external/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Block;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Factors	external/Eigen/src/Core/VectorwiseOp.h	/^            HNormalized_Factors;$/;"	t	class:Eigen::VectorwiseOp
HNormalized_Size	external/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_Size = Direction==Vertical ? internal::traits<ExpressionType>::RowsAtCompileTime$/;"	e	enum:Eigen::VectorwiseOp::__anon204
HNormalized_SizeMinusOne	external/Eigen/src/Core/VectorwiseOp.h	/^      HNormalized_SizeMinusOne = HNormalized_Size==Dynamic ? Dynamic : HNormalized_Size-1$/;"	e	enum:Eigen::VectorwiseOp::__anon204
HUGE_DOUBLE	external/SuiteSparse/Include/cholmod_internal.h	154;"	d
HalfLength	external/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon172
HalfLength	external/Eigen/src/Core/Redux.h	/^    HalfLength = Length\/2$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon174
HasACos	external/Eigen/src/Core/GenericPacketMath.h	/^    HasACos   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasASin	external/Eigen/src/Core/GenericPacketMath.h	/^    HasASin   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasATan	external/Eigen/src/Core/GenericPacketMath.h	/^    HasATan   = 0$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAbs	external/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasAbs	external/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAbs	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasAbs	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasAbs	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasAbs	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasAbs2	external/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasAbs2	external/Eigen/src/Core/GenericPacketMath.h	/^    HasAbs2   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAbs2	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasAbs2	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasAbs2	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasAbs2	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAbs2   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasAdd	external/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasAdd	external/Eigen/src/Core/GenericPacketMath.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasAdd	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasAdd	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasAdd	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasAdd	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasAdd    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasConj	external/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasConj	external/Eigen/src/Core/GenericPacketMath.h	/^    HasConj   = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasCos	external/Eigen/src/Core/GenericPacketMath.h	/^    HasCos    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasCos	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasCos	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasCos  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasCos	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasCos  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
HasDiv	external/Eigen/src/Core/GenericPacketMath.h	/^    HasDiv    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasDiv	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasDiv	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasDiv	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasDiv  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasDiv	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasDiv	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasDiv	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv    = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon228
HasDiv	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasDiv    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
HasExp	external/Eigen/src/Core/GenericPacketMath.h	/^    HasExp    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasExp	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasExp	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasExp  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasExp	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasExp  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
HasLog	external/Eigen/src/Core/GenericPacketMath.h	/^    HasLog    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasLog	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasLog	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasLog  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasLog	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasLog  = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
HasMax	external/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasMax	external/Eigen/src/Core/GenericPacketMath.h	/^    HasMax    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasMax	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasMax	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasMax	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasMax	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMax    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasMin	external/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasMin	external/Eigen/src/Core/GenericPacketMath.h	/^    HasMin    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasMin	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasMin	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasMin	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasMin	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMin    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasMul	external/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasMul	external/Eigen/src/Core/GenericPacketMath.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasMul	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasMul	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasMul	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasMul	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasMul    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasNegate	external/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasNegate	external/Eigen/src/Core/GenericPacketMath.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasNegate	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasNegate	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasNegate	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasNegate	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasNegate = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasNoInnerStride	external/Eigen/src/Core/Map.h	/^    HasNoInnerStride = InnerStrideAtCompileTime == 1,$/;"	e	enum:Eigen::internal::traits::__anon145
HasNoOuterStride	external/Eigen/src/Core/Map.h	/^    HasNoOuterStride = StrideType::OuterStrideAtCompileTime == 0,$/;"	e	enum:Eigen::internal::traits::__anon145
HasNoStride	external/Eigen/src/Core/Map.h	/^    HasNoStride = HasNoInnerStride && HasNoOuterStride,$/;"	e	enum:Eigen::internal::traits::__anon145
HasPow	external/Eigen/src/Core/GenericPacketMath.h	/^    HasPow    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSameStorageOrderAsXprType	external/Eigen/src/Core/Block.h	/^    HasSameStorageOrderAsXprType = (IsRowMajor == XprTypeIsRowMajor),$/;"	e	enum:Eigen::internal::traits::__anon22
HasSetLinear	external/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasSetLinear	external/Eigen/src/Core/GenericPacketMath.h	/^    HasSetLinear = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSetLinear	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasSetLinear	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasSetLinear	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasSetLinear	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSetLinear = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasSin	external/Eigen/src/Core/GenericPacketMath.h	/^    HasSin    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSin	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasSin	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSin  = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasSin	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSin  = EIGEN_FAST_MATH,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
HasSqrt	external/Eigen/src/Core/GenericPacketMath.h	/^    HasSqrt   = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSqrt	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon210
HasSqrt	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    HasSqrt = 0$/;"	e	enum:Eigen::internal::packet_traits::__anon216
HasSqrt	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    HasSqrt = 1$/;"	e	enum:Eigen::internal::packet_traits::__anon227
HasSub	external/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon142
HasSub	external/Eigen/src/Core/GenericPacketMath.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasSub	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
HasSub	external/Eigen/src/Core/arch/NEON/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
HasSub	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
HasSub	external/Eigen/src/Core/arch/SSE/Complex.h	/^    HasSub    = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
HasTan	external/Eigen/src/Core/GenericPacketMath.h	/^    HasTan    = 0,$/;"	e	enum:Eigen::internal::default_packet_traits::__anon140
HasUnitDiag	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon257
HasUnitDiag	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasUnitDiag = (Mode & UnitDiag)==UnitDiag,$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon258
HasUnitDiag	external/Eigen/src/SparseCore/SparseTriangularView.h	/^           HasUnitDiag = (Mode&UnitDiag) ? 1 : 0$/;"	e	enum:Eigen::SparseTriangularView::__anon430
HasUsableDirectAccess	external/Eigen/src/Core/util/BlasUtil.h	/^    HasUsableDirectAccess = (    (int(XprType::Flags)&DirectAccessBit)$/;"	e	enum:Eigen::internal::blas_traits::__anon261
HasZeroDiag	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon257
HasZeroDiag	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^    HasZeroDiag = (Mode & ZeroDiag)==ZeroDiag$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon258
HashMap	HashSparseMatrix.h	/^typedef std::unordered_map< int, int > HashMap;$/;"	t
HashMapIterator	HashSparseMatrix.h	/^typedef std::unordered_map< int, int >::const_iterator HashMapIterator;$/;"	t
HashMapType	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename MapTraits<ScalarWrapper>::Type HashMapType;$/;"	t	class:Eigen::RandomSetter
HashSparseMatrix	HashSparseMatrix.cpp	/^HashSparseMatrix::HashSparseMatrix( int ioffset, int joffset )$/;"	f	class:HashSparseMatrix
HashSparseMatrix	HashSparseMatrix.h	/^class HashSparseMatrix$/;"	c
Head	external/SuiteSparse/Include/cholmod_core.h	/^    void *Head ;	\/* size nrow+1, an integer array. Kept cleared between$/;"	m	struct:cholmod_common_struct
HereditaryBits	external/Eigen/src/Core/util/Constants.h	/^const unsigned int HereditaryBits = RowMajorBit$/;"	m	namespace:Eigen
HessenbergDecomposition	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition(const MatrixType& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
HessenbergDecomposition	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename _MatrixType> class HessenbergDecomposition$/;"	c	namespace:Eigen
HessenbergDecompositionMatrixHReturnType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecompositionMatrixHReturnType(const HessenbergDecomposition<MatrixType>& hess) : m_hess(hess) { }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
HessenbergDecompositionMatrixHReturnType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^template<typename MatrixType> struct HessenbergDecompositionMatrixHReturnType$/;"	s	namespace:Eigen::internal
Homogeneous	external/Eigen/src/Geometry/Homogeneous.h	/^    inline Homogeneous(const MatrixType& matrix)$/;"	f	class:Eigen::Homogeneous
Homogeneous	external/Eigen/src/Geometry/Homogeneous.h	/^template<typename MatrixType,int _Direction> class Homogeneous$/;"	c	namespace:Eigen
HomogeneousDimension	external/Eigen/src/Geometry/Umeyama.h	/^    HomogeneousDimension = int(MinRowsAtCompileTime) == Dynamic ? Dynamic : int(MinRowsAtCompileTime)+1$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon377
HomogeneousReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef Homogeneous<Derived, HomogeneousReturnTypeDirection> HomogeneousReturnType;$/;"	t	class:Eigen::MatrixBase
HomogeneousReturnTypeDirection	external/Eigen/src/Core/MatrixBase.h	/^    enum { HomogeneousReturnTypeDirection = ColsAtCompileTime==1?Vertical:Horizontal };$/;"	e	enum:Eigen::MatrixBase::__anon155
Horizontal	external/Eigen/src/Core/util/Constants.h	/^  Horizontal, $/;"	e	enum:Eigen::DirectionType
HostPinnedMemory	external/SuiteSparse/Include/cholmod_core.h	/^    void *HostPinnedMemory ;$/;"	m	struct:cholmod_common_struct
HouseholderQR	external/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR() : m_qr(), m_hCoeffs(), m_temp(), m_isInitialized(false) {}$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	external/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR(Index rows, Index cols)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	external/Eigen/src/QR/HouseholderQR.h	/^    HouseholderQR(const MatrixType& matrix)$/;"	f	class:Eigen::HouseholderQR
HouseholderQR	external/Eigen/src/QR/HouseholderQR.h	/^template<typename _MatrixType> class HouseholderQR$/;"	c	namespace:Eigen
HouseholderQRPreconditioner	external/Eigen/src/Core/util/Constants.h	/^  HouseholderQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
HouseholderSequence	external/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const HouseholderSequence& other)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	external/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	class:Eigen::HouseholderSequence
HouseholderSequence	external/Eigen/src/Householder/HouseholderSequence.h	/^template<typename VectorsType, typename CoeffsType, int Side> class HouseholderSequence$/;"	c	namespace:Eigen
HouseholderSequenceType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename HouseholderSequence<MatrixType,CoeffVectorType>::ConjugateReturnType HouseholderSequenceType;$/;"	t	class:Eigen::HessenbergDecomposition
HouseholderSequenceType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename HouseholderSequence<MatrixType,CoeffVectorType>::ConjugateReturnType HouseholderSequenceType;$/;"	t	class:Eigen::Tridiagonalization
HouseholderSequenceType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename Tridiagonalization<MatrixType>::HouseholderSequenceType HouseholderSequenceType;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
HouseholderSequenceType	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheLeft> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef HouseholderSequence<VectorsType, CoeffsType, OnTheRight> HouseholderSequenceType;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
HouseholderSequenceType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename HouseholderSequence<MatrixType,HCoeffsType>::ConjugateReturnType HouseholderSequenceType;$/;"	t	class:Eigen::ColPivHouseholderQR
HouseholderSequenceType	external/Eigen/src/QR/HouseholderQR.h	/^    typedef typename HouseholderSequence<MatrixType,HCoeffsType>::ConjugateReturnType HouseholderSequenceType;$/;"	t	class:Eigen::HouseholderQR
HouseholderUSequenceType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderUSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HouseholderVSequenceType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^            > HouseholderVSequenceType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
HybridNonLinearSolver	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    HybridNonLinearSolver(FunctorType &_functor)$/;"	f	class:Eigen::HybridNonLinearSolver
HybridNonLinearSolver	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^class HybridNonLinearSolver$/;"	c	namespace:Eigen
HybridNonLinearSolverSpace	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^namespace HybridNonLinearSolverSpace { $/;"	n	namespace:Eigen
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/All.h	112;"	d
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/All.h	57;"	d
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  explicit Hyperplane(const ParametrizedLine<Scalar, AmbientDimAtCompileTime>& parametrized)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, Scalar d)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, const VectorType& e)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline explicit Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(const Hyperplane<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(int _dim) : m_coeffs(_dim+1) {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^class Hyperplane$/;"	c	namespace:Eigen
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  Hyperplane(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  explicit Hyperplane(const ParametrizedLine<Scalar, AmbientDimAtCompileTime>& parametrized)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, Scalar d)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane(const VectorType& n, const VectorType& e)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  inline explicit Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(Index _dim) : m_coeffs(_dim+1) {}$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  inline explicit Hyperplane(const Hyperplane<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::Hyperplane
Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^class Hyperplane$/;"	c	namespace:Eigen
I	external/Eigen/src/Core/SolveTriangular.h	/^    I = IsLower ? Index : Size - Index - 1,$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon190
ID	external/SuiteSparse/Include/cholmod_internal.h	231;"	d
ID	external/SuiteSparse/Include/cholmod_internal.h	279;"	d
ID_VOID_MAIN	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	6;"	d	file:
IMAG_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	105;"	d
IMAG_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	162;"	d
IMAG_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	16;"	d
IMAG_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	213;"	d
IMAG_IS_NONZERO	external/SuiteSparse/Include/cholmod_template.h	62;"	d
IMPLIES	external/SuiteSparse/Include/cholmod_internal.h	102;"	d
INITIAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1662;"	d	file:
INITIAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1762;"	d	file:
INITIAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1827;"	d	file:
INITIAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1858;"	d	file:
INITIAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1905;"	d	file:
INSECURE	external/unsupported/test/mpreal/dlmalloc.c	587;"	d	file:
INT	external/SuiteSparse/Include/cholmod_internal.h	270;"	d
INUSE_BITS	external/unsupported/test/mpreal/dlmalloc.c	2123;"	d	file:
INVALID_MATRIXBASE_TEMPLATE_PARAMETERS	external/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIXBASE_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
INVALID_MATRIX_PRODUCT	external/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION	external/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_PRODUCT__IF_YOU_WANTED_A_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTION,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
INVALID_MATRIX_TEMPLATE_PARAMETERS	external/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_MATRIX_TEMPLATE_PARAMETERS,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION	external/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_STORAGE_ORDER_FOR_THIS_VECTOR_EXPRESSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS	external/Eigen/src/Core/util/StaticAssert.h	/^        INVALID_VECTOR_VECTOR_PRODUCT__IF_YOU_WANTED_A_DOT_OR_COEFF_WISE_PRODUCT_YOU_MUST_USE_THE_EXPLICIT_FUNCTIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
IOFormat	external/Eigen/src/Core/IO.h	/^  IOFormat(int _precision = StreamPrecision, int _flags = 0,$/;"	f	struct:Eigen::IOFormat
IOFormat	external/Eigen/src/Core/IO.h	/^struct IOFormat$/;"	s	namespace:Eigen
IPoseFromFile	OptApp.h	/^	void IPoseFromFile( std::string filename ) {$/;"	f	class:COptApp
IS_GT_ZERO	external/SuiteSparse/Include/cholmod_internal.h	146;"	d
IS_LE_ZERO	external/SuiteSparse/Include/cholmod_internal.h	147;"	d
IS_LT_ZERO	external/SuiteSparse/Include/cholmod_internal.h	145;"	d
IS_NAN	external/SuiteSparse/Include/cholmod_internal.h	142;"	d
IS_NONZERO	external/SuiteSparse/Include/cholmod_internal.h	144;"	d
IS_ZERO	external/SuiteSparse/Include/cholmod_internal.h	143;"	d
ITYPE	external/SuiteSparse/Include/cholmod_internal.h	229;"	d
ITYPE	external/SuiteSparse/Include/cholmod_internal.h	277;"	d
Identity	external/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity()$/;"	f	class:Eigen::MatrixBase
Identity	external/Eigen/src/Core/CwiseNullaryOp.h	/^MatrixBase<Derived>::Identity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
Identity	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  static inline Quaternion Identity() { return Quaternion(1, 0, 0, 0); }$/;"	f	class:Eigen::Quaternion
Identity	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  static const typename MatrixType::IdentityReturnType Identity()$/;"	f	class:Eigen::Transform
Identity	external/Eigen/src/Geometry/AngleAxis.h	/^  static inline const AngleAxis Identity() { return AngleAxis(0, Vector3::UnitX()); }$/;"	f	class:Eigen::AngleAxis
Identity	external/Eigen/src/Geometry/Quaternion.h	/^  static inline Quaternion<Scalar> Identity() { return Quaternion<Scalar>(1, 0, 0, 0); }$/;"	f	class:Eigen::QuaternionBase
Identity	external/Eigen/src/Geometry/Rotation2D.h	/^  static inline Rotation2D Identity() { return Rotation2D(0); }$/;"	f	class:Eigen::Rotation2D
Identity	external/Eigen/src/Geometry/Transform.h	/^  static const Transform Identity()$/;"	f	class:Eigen::Transform
Identity	external/Eigen/src/Geometry/Translation.h	/^  static const Translation Identity() { return Translation(VectorType::Zero()); }$/;"	f	class:Eigen::Translation
IdentityPreconditioner	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner() {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner(const MatrixType& ) {}$/;"	f	class:Eigen::IdentityPreconditioner
IdentityPreconditioner	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^class IdentityPreconditioner$/;"	c	namespace:Eigen
IdentityReturnType	external/Eigen/src/Core/MatrixBase.h	/^    typedef CwiseNullaryOp<internal::scalar_identity_op<Scalar>,Derived> IdentityReturnType;$/;"	t	class:Eigen::MatrixBase
ImagReturnType	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_imag_op<Scalar>, const Derived> ImagReturnType;$/;"	t
ImageResultType	external/Eigen/src/Eigen2Support/LU.h	/^    > ImageResultType;$/;"	t	class:Eigen::LU
ImproperInputParameters	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        ImproperInputParameters = 0,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
ImproperInputParameters	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        ImproperInputParameters = 0,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
IncompleteLU	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    IncompleteLU() : m_isInitialized(false) {}$/;"	f	class:Eigen::IncompleteLU
IncompleteLU	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    IncompleteLU(const MatrixType& mat) : m_isInitialized(false)$/;"	f	class:Eigen::IncompleteLU
IncompleteLU	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^class IncompleteLU$/;"	c	namespace:Eigen
IncompleteLUT	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT()$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT(const MatrixType& mat, RealScalar droptol=NumTraits<Scalar>::dummy_precision(), int fillfactor = 10)$/;"	f	class:Eigen::IncompleteLUT
IncompleteLUT	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^class IncompleteLUT : internal::noncopyable$/;"	c	namespace:Eigen
Index	external/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::LDLT
Index	external/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::LLT
Index	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::CholmodBase
Index	external/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::ArrayBase
Index	external/Eigen/src/Core/Assign.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::assign_impl
Index	external/Eigen/src/Core/Assign_MKL.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::vml_assign_impl
Index	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::internal::TridiagonalMatrix
Index	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename DenseMatrixType::Index Index;$/;"	t	class:Eigen::internal::BandMatrixBase
Index	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::Index Index;$/;"	t	class:Eigen::internal::BandMatrix
Index	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::Index Index;$/;"	t	class:Eigen::internal::BandMatrixWrapper
Index	external/Eigen/src/Core/BandMatrix.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/CommaInitializer.h	/^  typedef typename XprType::Index Index;$/;"	t	struct:Eigen::CommaInitializer
Index	external/Eigen/src/Core/CwiseBinaryOp.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/CwiseNullaryOp.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::setIdentity_impl
Index	external/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::Index Index; $/;"	t	class:Eigen::DenseBase
Index	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::DenseCoeffsBase
Index	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::DiagonalBase
Index	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::Index Index;$/;"	t	class:Eigen::DiagonalMatrix
Index	external/Eigen/src/Core/DiagonalMatrix.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/EigenBase.h	/^  typedef typename internal::traits<Derived>::Index Index;$/;"	t	struct:Eigen::EigenBase
Index	external/Eigen/src/Core/Map.h	/^  typedef typename PlainObjectType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/MapBase.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::MapBase
Index	external/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::MapBase
Index	external/Eigen/src/Core/Matrix.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::MatrixBase
Index	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::Map
Index	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::Index Index;$/;"	t	class:Eigen::PermutationBase
Index	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef IndexType Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::PlainObjectBase
Index	external/Eigen/src/Core/PlainObjectBase.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::conservative_resize_like_impl
Index	external/Eigen/src/Core/Product.h	/^                                      typename traits<RhsCleaned>::Index>::type Index;$/;"	t	struct:internal::traits
Index	external/Eigen/src/Core/ProductBase.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::redux_impl
Index	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SelfAdjointView
Index	external/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::triangular_assignment_selector
Index	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::triangular_solve_retval
Index	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Index Index;$/;"	t	struct:Eigen::internal::triangular_solver_selector
Index	external/Eigen/src/Core/Stride.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::InnerStride
Index	external/Eigen/src/Core/Stride.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::OuterStride
Index	external/Eigen/src/Core/Stride.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::Stride
Index	external/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::Map
Index	external/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::Transpositions
Index	external/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::TranspositionsBase
Index	external/Eigen/src/Core/Transpositions.h	/^    typedef typename IndicesType::Scalar Index;$/;"	t	class:Eigen::TranspositionsWrapper
Index	external/Eigen/src/Core/Transpositions.h	/^    typedef typename TranspositionType::Index Index;$/;"	t	struct:Eigen::internal::transposition_matrix_product_retval
Index	external/Eigen/src/Core/Transpositions.h	/^  typedef IndexType Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/Transpositions.h	/^  typedef typename _IndicesType::Scalar Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::TriangularBase
Index	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::Index Index;$/;"	t	class:Eigen::TriangularView
Index	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Derived1::Index Index;$/;"	t	struct:Eigen::internal::triangular_assignment_selector
Index	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::Index Index;$/;"	t	class:Eigen::VectorwiseOp
Index	external/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::coeff_visitor
Index	external/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::max_coeff_visitor
Index	external/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::min_coeff_visitor
Index	external/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::visitor_impl
Index	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^                                         typename traits<_RhsNested>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_coeff_impl
Index	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
Index	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_coeff_vectorized_unroller
Index	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::product_packet_impl
Index	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ComplexEigenSolver
Index	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ComplexSchur
Index	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::EigenSolver
Index	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
Index	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::HessenbergDecomposition
Index	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
Index	external/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::RealSchur
Index	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Index	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::Tridiagonalization
Index	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
Index	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Index	external/Eigen/src/Geometry/AlignedBox.h	/^  typedef DenseIndex                                Index;$/;"	t	class:Eigen::AlignedBox
Index	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
Index	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::homogeneous_right_product_impl
Index	external/Eigen/src/Geometry/Hyperplane.h	/^  typedef DenseIndex Index;$/;"	t	class:Eigen::Hyperplane
Index	external/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename Derived::Index Index;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Index	external/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef DenseIndex Index;$/;"	t	class:Eigen::ParametrizedLine
Index	external/Eigen/src/Geometry/Quaternion.h	/^  typedef DenseIndex Index;$/;"	t	struct:Eigen::internal::quaternionbase_assign_impl
Index	external/Eigen/src/Geometry/Transform.h	/^  typedef DenseIndex Index;$/;"	t	class:Eigen::Transform
Index	external/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename VectorsType::Index Index;$/;"	t	class:Eigen::HouseholderSequence
Index	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Index Index;$/;"	t	struct:Eigen::internal::hseq_side_dependent_impl
Index	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef typename Vector::Index Index;$/;"	t	class:Eigen::DiagonalPreconditioner
Index	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::BiCGSTAB
Index	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ConjugateGradient
Index	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef typename FactorType::Index Index;$/;"	t	class:Eigen::IncompleteLUT
Index	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::IterativeSolverBase
Index	external/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::FullPivLU
Index	external/Eigen/src/LU/Inverse.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::inverse_impl
Index	external/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::PartialPivLU
Index	external/Eigen/src/LU/PartialPivLU.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::partial_lu_impl
Index	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::PastixBase
Index	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::PastixLU
Index	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::Index Index;$/;"	t	struct:Eigen::internal::pastix_traits
Index	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef long long int Index;$/;"	t	struct:Eigen::internal::pardiso_run_selector
Index	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::PardisoLDLT
Index	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::PardisoLLT
Index	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::Index Index;$/;"	t	class:Eigen::PardisoImpl
Index	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Index Index;    $/;"	t	struct:Eigen::internal::pardiso_traits
Index	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Index Index;$/;"	t	struct:Eigen::internal::pardiso_traits
Index	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::ColPivHouseholderQR
Index	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::FullPivHouseholderQR
Index	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename MatrixType::Index Index;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
Index	external/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::HouseholderQR
Index	external/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::JacobiSVD
Index	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Index	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename SVD::Index Index;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
Index	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Index	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialCholesky
Index	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialCholeskyBase
Index	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialLDLT
Index	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SimplicialLLT
Index	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Index                              Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Index                          Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Index Index;$/;"	t	class:Eigen::internal::AmbiVector
Index	external/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _Index Index;$/;"	t	class:Eigen::internal::CompressedStorage
Index	external/Eigen/src/SparseCore/CoreIterators.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::DenseBase::InnerIterator
Index	external/Eigen/src/SparseCore/SparseBlock.h	/^  typedef typename traits<MatrixType>::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename Lhs::Index Index;$/;"	t	class:Eigen::CwiseBinaryOpImpl::InnerIterator
Index	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename Lhs::Index Index;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
Index	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
Index	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename Lhs::Index Index;$/;"	t	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
Index	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::Index Index;$/;"	t	class:Eigen::SparseMatrixBase
Index	external/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeNestedCleaned::Index Index;$/;"	t	struct:Eigen::internal::permut_sparsematrix_product_retval
Index	external/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename MatrixTypeNestedCleaned::Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/SparseProduct.h	/^                                         typename traits<_RhsNested>::Index>::type Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SparseSelfAdjointView
Index	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Index	external/Eigen/src/SparseCore/SparseVector.h	/^  typedef _Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/SparseView.h	/^  typedef int Index;$/;"	t	struct:Eigen::internal::traits
Index	external/Eigen/src/SparseCore/TriangularSolver.h	/^                                         typename traits<Rhs>::Index>::type Index;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
Index	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::SuperILU
Index	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Index Index;$/;"	t	class:Eigen::SuperLU
Index	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SuperLUBase
Index	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::UmfPackLU
Index	external/Eigen/src/misc/Image.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::image_retval_base
Index	external/Eigen/src/misc/Kernel.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::kernel_retval_base
Index	external/Eigen/src/misc/Solve.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::solve_retval_base
Index	external/Eigen/src/misc/SparseSolve.h	/^  typedef typename Base::Index Index;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
Index	external/Eigen/src/misc/SparseSolve.h	/^  typedef typename DecompositionType::Index Index;$/;"	t	struct:Eigen::internal::solve_retval_with_guess
Index	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename JacobianType::Index Index;$/;"	t	class:Eigen::AutoDiffJacobian
Index	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef typename JacobianType::Index Index;$/;"	t	class:Eigen::AutoDiffVector
Index	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef int Index;$/;"	t	class:Eigen::KdBVH
Index	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::GMRES
Index	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef typename Vector::Index Index;$/;"	t	class:Eigen::IncompleteLU
Index	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Scaling
Index	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    typedef typename Derived::Index Index;$/;"	t	struct:Eigen::MatrixExponentialReturnValue
Index	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixFunctionReturnValue
Index	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::MatrixFunction
Index	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::MatrixFunctionAtomic
Index	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixLogarithmReturnValue
Index	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    typedef typename Derived::Index Index;$/;"	t	class:Eigen::MatrixSquareRootReturnValue
Index	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::MatrixSquareRootQuasiTriangular
Index	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::HybridNonLinearSolver
Index	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::LevenbergMarquardt
Index	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::internal::companion
Index	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef DenseIndex Index;$/;"	t	class:Eigen::PolynomialSolverBase
Index	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    typedef typename MatrixType::Index Index;$/;"	t	class:Eigen::SkylineInplaceLU
Index	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename internal::index<StorageKind>::type Index;$/;"	t	class:Eigen::SkylineMatrixBase
Index	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    typedef SparseIndex Index;$/;"	t	class:Eigen::SkylineStorage
Index	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef _Index Index;$/;"	t	struct:Eigen::internal::traits
Index	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename SparseMatrixType::Index Index;$/;"	t	class:Eigen::RandomSetter
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationBase
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationMatrix
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::PermutationWrapper
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef Map<const Matrix<IndexType, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef Matrix<IndexType, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef _IndicesType IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	external/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Map
IndicesType	external/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::Transpositions
IndicesType	external/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsBase
IndicesType	external/Eigen/src/Core/Transpositions.h	/^    typedef typename Traits::IndicesType IndicesType;$/;"	t	class:Eigen::TranspositionsWrapper
IndicesType	external/Eigen/src/Core/Transpositions.h	/^    typedef typename TranspositionType::IndicesType IndicesType;$/;"	t	class:Eigen::Transpose
IndicesType	external/Eigen/src/Core/Transpositions.h	/^  typedef Map<const Matrix<Index,SizeAtCompileTime,1,0,MaxSizeAtCompileTime,1>, _PacketAccess> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	external/Eigen/src/Core/Transpositions.h	/^  typedef Matrix<Index, SizeAtCompileTime, 1, 0, MaxSizeAtCompileTime, 1> IndicesType;$/;"	t	struct:Eigen::internal::traits
IndicesType	external/Eigen/src/Core/Transpositions.h	/^  typedef _IndicesType IndicesType;$/;"	t	struct:Eigen::internal::traits
Infinity	external/Eigen/src/Core/util/Constants.h	/^const int Infinity = -1;$/;"	m	namespace:Eigen
InitBaseAA	OptApp.cpp	/^void COptApp::InitBaseAA( SparseMatrix & baseAA )$/;"	f	class:COptApp
InitBaseJJ	OptApp.cpp	/^void COptApp::InitBaseJJ( SparseMatrix & baseJJ )$/;"	f	class:COptApp
InitCorrespondences	OptApp.cpp	/^void COptApp::InitCorrespondences()$/;"	f	class:COptApp
InitCtr	OptApp.cpp	/^void COptApp::InitCtr( Eigen::VectorXd & ctr )$/;"	f	class:COptApp
InitCtrSLAC	OptApp.cpp	/^void COptApp::InitCtrSLAC( Eigen::VectorXd & ctr, Eigen::VectorXd & thisCtr )$/;"	f	class:COptApp
InitIPose	OptApp.cpp	/^void COptApp::InitIPose()$/;"	f	class:COptApp
InitMap	OptApp.cpp	/^void COptApp::InitMap()$/;"	f	class:COptApp
InitPointClouds	OptApp.cpp	/^void COptApp::InitPointClouds()$/;"	f	class:COptApp
InnerIterator	external/Eigen/src/Core/Flagged.h	/^    typedef typename ExpressionType::InnerIterator InnerIterator;$/;"	t	class:Eigen::Flagged
InnerIterator	external/Eigen/src/SparseCore/CoreIterators.h	/^    EIGEN_STRONG_INLINE InnerIterator(const Derived& expr, Index outer)$/;"	f	class:Eigen::DenseBase::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/CoreIterators.h	/^template<typename Derived> class DenseBase<Derived>::InnerIterator$/;"	c	class:Eigen::DenseBase
InnerIterator	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    InnerIterator(const MappedSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix<Scalar,_Flags,_Index>::InnerIterator$/;"	c	class:Eigen::MappedSparseMatrix
InnerIterator	external/Eigen/src/SparseCore/SparseBlock.h	/^        inline InnerIterator(const SparseInnerVectorSet& xpr, Index outer)$/;"	f	class:Eigen::SparseInnerVectorSet::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseBlock.h	/^    class InnerIterator: public MatrixType::InnerIterator$/;"	c	class:Eigen::SparseInnerVectorSet
InnerIterator	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const CwiseBinaryOpImpl& binOp, typename CwiseBinaryOpImpl::Index outer)$/;"	f	class:Eigen::CwiseBinaryOpImpl::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class CwiseBinaryOpImpl<BinaryOp,Lhs,Rhs,Sparse>::InnerIterator$/;"	c	class:Eigen::CwiseBinaryOpImpl
InnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const CwiseUnaryOpImpl& unaryOp, typename CwiseUnaryOpImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryOpImpl::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator(const CwiseUnaryViewImpl& unaryOp, typename CwiseUnaryViewImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::InnerIterator$/;"	c	class:Eigen::CwiseUnaryOpImpl
InnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::InnerIterator$/;"	c	class:Eigen::CwiseUnaryViewImpl
InnerIterator	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE InnerIterator(const SparseDenseOuterProduct& prod, Index outer)$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^class SparseDenseOuterProduct<Lhs,Rhs,Transpose>::InnerIterator : public _LhsNested::InnerIterator$/;"	c	class:Eigen::SparseDenseOuterProduct
InnerIterator	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^                <_LhsNested,_RhsNested,SparseDiagonalProduct,LhsMode,RhsMode> InnerIterator;$/;"	t	class:Eigen::SparseDiagonalProduct
InnerIterator	external/Eigen/src/SparseCore/SparseMatrix.h	/^    InnerIterator(const SparseMatrix& mat, Index outer)$/;"	f	class:Eigen::SparseMatrix::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix<Scalar,_Options,_Index>::InnerIterator$/;"	c	class:Eigen::SparseMatrix
InnerIterator	external/Eigen/src/SparseCore/SparseTranspose.h	/^    EIGEN_STRONG_INLINE InnerIterator(const TransposeImpl& trans, typename TransposeImpl<MatrixType,Sparse>::Index outer)$/;"	f	class:Eigen::TransposeImpl::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>::InnerIterator$/;"	c	class:Eigen::TransposeImpl
InnerIterator	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE InnerIterator(const SparseTriangularView& view, Index outer)$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseTriangularView.h	/^class SparseTriangularView<MatrixType,Mode>::InnerIterator : public MatrixTypeNestedCleaned::InnerIterator$/;"	c	class:Eigen::SparseTriangularView
InnerIterator	external/Eigen/src/SparseCore/SparseVector.h	/^    InnerIterator(const SparseVector& vec, Index outer=0)$/;"	f	class:Eigen::SparseVector::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseVector.h	/^    InnerIterator(const internal::CompressedStorage<Scalar,Index>& data)$/;"	f	class:Eigen::SparseVector::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector<Scalar,_Options,_Index>::InnerIterator$/;"	c	class:Eigen::SparseVector
InnerIterator	external/Eigen/src/SparseCore/SparseView.h	/^  InnerIterator(const SparseView& view, Index outer) :$/;"	f	class:Eigen::SparseView::InnerIterator
InnerIterator	external/Eigen/src/SparseCore/SparseView.h	/^class SparseView<MatrixType>::InnerIterator : public _MatrixTypeNested::InnerIterator$/;"	c	class:Eigen::SparseView
InnerIterator	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^        inline InnerIterator(const SparseInnerVectorSet& xpr, Index outer)$/;"	f	class:Eigen::SparseInnerVectorSet::InnerIterator
InnerIterator	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    class InnerIterator: public MatrixType::InnerIterator$/;"	c	class:Eigen::SparseInnerVectorSet
InnerIterator	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    InnerIterator(const DynamicSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::DynamicSparseMatrix::InnerIterator
InnerIterator	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^class DynamicSparseMatrix<Scalar,_Options,_Index>::InnerIterator : public SparseVector<Scalar,_Options,_Index>::InnerIterator$/;"	c	class:Eigen::DynamicSparseMatrix
InnerLowerIterator	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    InnerLowerIterator(const SkylineMatrix& mat, Index outer)$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
InnerLowerIterator	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^class SkylineMatrix<Scalar, _Options>::InnerLowerIterator {$/;"	c	class:Eigen::SkylineMatrix
InnerMaxSize	external/Eigen/src/Core/Assign.h	/^    InnerMaxSize = int(Derived::IsVectorAtCompileTime) ? int(Derived::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::assign_traits::__anon7
InnerMaxSize	external/Eigen/src/Core/Assign_MKL.h	/^      InnerMaxSize  = int(Dst::IsVectorAtCompileTime) ? int(Dst::MaxSizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
InnerMaxSize	external/Eigen/src/Core/Redux.h	/^    InnerMaxSize = int(Derived::IsRowMajor)$/;"	e	enum:Eigen::internal::redux_traits::__anon167
InnerProduct	external/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon272
InnerRandomAccessPattern	external/Eigen/src/SparseCore/SparseUtil.h	/^const int InnerRandomAccessPattern  = 0x2 | CoherentAccessPattern;$/;"	m	namespace:Eigen
InnerSize	external/Eigen/src/Core/Assign.h	/^    InnerSize = int(Derived::IsVectorAtCompileTime) ? int(Derived::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::assign_traits::__anon7
InnerSize	external/Eigen/src/Core/Assign_MKL.h	/^      InnerSize = int(Dst::IsVectorAtCompileTime) ? int(Dst::SizeAtCompileTime)$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
InnerSize	external/Eigen/src/Core/Block.h	/^    InnerSize = IsRowMajor ? int(ColsAtCompileTime) : int(RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon22
InnerSize	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      InnerSize  = internal::traits<CoeffBasedProduct>::InnerSize,$/;"	e	enum:Eigen::CoeffBasedProduct::__anon234
InnerSize	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(_LhsNested::ColsAtCompileTime, _RhsNested::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon233
InnerSize	external/Eigen/src/SparseCore/SparseProduct.h	/^    InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(_LhsNested::ColsAtCompileTime, _RhsNested::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon429
InnerSize	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        InnerSize = EIGEN_SIZE_MIN_PREFER_FIXED(_LhsNested::ColsAtCompileTime, _RhsNested::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon449
InnerSizeAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      InnerSizeAtCompileTime = int(IsVectorAtCompileTime) ? int(SizeAtCompileTime)$/;"	e	enum:Eigen::DenseBase::__anon30
InnerStride	external/Eigen/src/Core/Stride.h	/^    InnerStride() : Base() {}$/;"	f	class:Eigen::InnerStride
InnerStride	external/Eigen/src/Core/Stride.h	/^    InnerStride(Index v) : Base(0, v) {}$/;"	f	class:Eigen::InnerStride
InnerStride	external/Eigen/src/Core/Stride.h	/^class InnerStride : public Stride<0, Value>$/;"	c	namespace:Eigen
InnerStrideAtCompileTime	external/Eigen/src/Core/Block.h	/^    InnerStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon22
InnerStrideAtCompileTime	external/Eigen/src/Core/CwiseUnaryView.h	/^    InnerStrideAtCompileTime = MatrixTypeInnerStride == Dynamic$/;"	e	enum:Eigen::internal::traits::__anon29
InnerStrideAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      InnerStrideAtCompileTime = internal::inner_stride_at_compile_time<Derived>::ret,$/;"	e	enum:Eigen::DenseBase::__anon30
InnerStrideAtCompileTime	external/Eigen/src/Core/Diagonal.h	/^    InnerStrideAtCompileTime = MatrixTypeOuterStride == Dynamic ? Dynamic : MatrixTypeOuterStride+1,$/;"	e	enum:Eigen::internal::traits::__anon36
InnerStrideAtCompileTime	external/Eigen/src/Core/Map.h	/^    InnerStrideAtCompileTime = StrideType::InnerStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon145
InnerStrideAtCompileTime	external/Eigen/src/Core/Matrix.h	/^    InnerStrideAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon153
InnerStrideAtCompileTime	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    InnerStrideAtCompileTime = Lhs::InnerStrideAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon187
InnerStrideAtCompileTime	external/Eigen/src/Core/Stride.h	/^      InnerStrideAtCompileTime = _InnerStrideAtCompileTime,$/;"	e	enum:Eigen::Stride::__anon191
InnerStrideAtCompileTime	external/Eigen/src/Core/Transpose.h	/^    InnerStrideAtCompileTime = inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon192
InnerUnrolling	external/Eigen/src/Core/util/Constants.h	/^  InnerUnrolling,$/;"	e	enum:Eigen::__anon267
InnerUpperIterator	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    InnerUpperIterator(const SkylineMatrix& mat, Index outer)$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
InnerUpperIterator	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^class SkylineMatrix<Scalar, _Options>::InnerUpperIterator {$/;"	c	class:Eigen::SkylineMatrix
InnerVectorizedTraversal	external/Eigen/src/Core/util/Constants.h	/^  InnerVectorizedTraversal,$/;"	e	enum:Eigen::__anon266
InputScalar	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MatrixType::Scalar InputScalar;$/;"	t	struct:Eigen::internal::traits
InputType	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename Functor::InputType InputType;$/;"	t	class:Eigen::AutoDiffJacobian
InputType	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::InputType InputType;$/;"	t	class:Eigen::NumericalDiff
InputType	external/unsupported/test/NonLinearOptimization.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:Functor	file:
InputType	external/unsupported/test/NumericalDiff.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:Functor	file:
InputType	external/unsupported/test/autodiff.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:TestFunc1	file:
InputType	external/unsupported/test/forward_adolc.cpp	/^  typedef Matrix<Scalar,InputsAtCompileTime,1> InputType;$/;"	t	struct:TestFunc1	file:
InputsAtCompileTime	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^    InputsAtCompileTime = Functor::InputsAtCompileTime,$/;"	e	enum:Eigen::AutoDiffJacobian::__anon441
InputsAtCompileTime	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        InputsAtCompileTime = Functor::InputsAtCompileTime,$/;"	e	enum:Eigen::NumericalDiff::__anon444
InputsAtCompileTime	external/unsupported/test/NonLinearOptimization.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:Functor::__anon470	file:
InputsAtCompileTime	external/unsupported/test/NumericalDiff.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:Functor::__anon471	file:
InputsAtCompileTime	external/unsupported/test/autodiff.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:TestFunc1::__anon472	file:
InputsAtCompileTime	external/unsupported/test/forward_adolc.cpp	/^    InputsAtCompileTime = NX,$/;"	e	enum:TestFunc1::__anon473	file:
Int	external/SuiteSparse/Include/cholmod_internal.h	224;"	d
Int	external/SuiteSparse/Include/cholmod_internal.h	274;"	d
IntColVectorType	external/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1, MatrixType::Options, MatrixType::MaxRowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::LU
IntColVectorType	external/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_col_type<MatrixType, Index>::type IntColVectorType;$/;"	t	class:Eigen::FullPivLU
IntColVectorType	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Index, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::PardisoImpl
IntColVectorType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_col_type<MatrixType, Index>::type IntColVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
IntColVectorType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename internal::plain_col_type<MatrixType, Index>::type IntColVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
IntColVectorType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;    $/;"	t	class:Eigen::SuperLUBase
IntColVectorType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntColVectorType IntColVectorType;    $/;"	t	class:Eigen::SuperLU
IntColVectorType	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, MatrixType::RowsAtCompileTime, 1> IntColVectorType;$/;"	t	class:Eigen::UmfPackLU
IntPair	HashSparseMatrix.h	/^typedef std::pair< int, int > IntPair;$/;"	t
IntRowVectorType	external/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime, MatrixType::Options, 1, MatrixType::MaxColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::LU
IntRowVectorType	external/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::plain_row_type<MatrixType, Index>::type IntRowVectorType;$/;"	t	class:Eigen::FullPivLU
IntRowVectorType	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Index, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::PardisoImpl
IntRowVectorType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, Index>::type IntRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
IntRowVectorType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef Matrix<Index, 1, ColsAtCompileTime, RowMajor, 1, MaxColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
IntRowVectorType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::SuperLUBase
IntRowVectorType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::IntRowVectorType IntRowVectorType;$/;"	t	class:Eigen::SuperLU
IntRowVectorType	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<int, 1, MatrixType::ColsAtCompileTime> IntRowVectorType;$/;"	t	class:Eigen::UmfPackLU
IntVectorType	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef Matrix<Index, Traits::RowsAtCompileTime, 1> IntVectorType;$/;"	t	class:Eigen::MatrixFunction
Int_max	external/SuiteSparse/Include/cholmod_internal.h	225;"	d
Int_max	external/SuiteSparse/Include/cholmod_internal.h	275;"	d
Interpolate	external/unsupported/Eigen/src/Splines/SplineFitting.h	/^  SplineType SplineFitting<SplineType>::Interpolate(const PointArrayType& pts, DenseIndex degree)$/;"	f	class:Eigen::SplineFitting
Interpolate	external/unsupported/Eigen/src/Splines/SplineFitting.h	/^  SplineType SplineFitting<SplineType>::Interpolate(const PointArrayType& pts, DenseIndex degree, const KnotVectorType& knot_parameters)$/;"	f	class:Eigen::SplineFitting
InvalidInput	external/Eigen/src/Core/util/Constants.h	/^  InvalidInput = 3$/;"	e	enum:Eigen::ComputationInfo
InvalidTraversal	external/Eigen/src/Core/util/Constants.h	/^  InvalidTraversal$/;"	e	enum:Eigen::__anon266
IsAligned	external/Eigen/src/Core/Map.h	/^    IsAligned = bool(EIGEN_ALIGN) && ((int(MapOptions)&Aligned)==Aligned),$/;"	e	enum:Eigen::internal::traits::__anon145
IsAligned	external/Eigen/src/Geometry/Quaternion.h	/^      IsAligned = TraitsBase::IsAligned,$/;"	e	enum:Eigen::internal::traits::__anon363
IsAligned	external/Eigen/src/Geometry/Quaternion.h	/^      IsAligned = TraitsBase::IsAligned,$/;"	e	enum:Eigen::internal::traits::__anon364
IsAligned	external/Eigen/src/Geometry/Quaternion.h	/^    IsAligned = internal::traits<Coefficients>::Flags & AlignedBit,$/;"	e	enum:Eigen::internal::traits::__anon361
IsAligned	external/Eigen/src/Geometry/Quaternion.h	/^  enum { IsAligned = internal::traits<Quaternion>::IsAligned };$/;"	e	enum:Eigen::Quaternion::__anon362
IsColMajor	external/Eigen/src/Core/Reverse.h	/^      IsColMajor = !IsRowMajor,$/;"	e	enum:Eigen::Reverse::__anon181
IsColVector	external/Eigen/src/Core/VectorBlock.h	/^      IsColVector = !(internal::traits<VectorType>::Flags & RowMajorBit)$/;"	e	enum:Eigen::VectorBlock::__anon199
IsColVector	external/Eigen/src/SparseCore/SparseVector.h	/^    IsColVector = (_Options & RowMajorBit) ? 0 : 1,$/;"	e	enum:Eigen::internal::traits::__anon435
IsColVector	external/Eigen/src/SparseCore/SparseVector.h	/^    enum { IsColVector = internal::traits<SparseVector>::IsColVector };$/;"	e	enum:Eigen::SparseVector::__anon436
IsComplex	external/Eigen/src/Core/NumTraits.h	/^    IsComplex = 0,$/;"	e	enum:Eigen::GenericNumTraits::__anon157
IsComplex	external/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon261
IsComplex	external/Eigen/src/Core/util/BlasUtil.h	/^    IsComplex = NumTraits<Scalar>::IsComplex,$/;"	e	enum:Eigen::internal::blas_traits::__anon262
IsDense	external/Eigen/src/Core/util/Constants.h	/^  IsDense         = 0,$/;"	e	enum:Eigen::__anon271
IsDynamicSize	external/Eigen/src/Core/Map.h	/^    IsDynamicSize = PlainObjectType::SizeAtCompileTime==Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon145
IsHorizontal	external/Eigen/src/Core/VectorwiseOp.h	/^      IsHorizontal = (Direction==Horizontal) ? 1 : 0$/;"	e	enum:Eigen::VectorwiseOp::__anon203
IsInf	external/unsupported/test/mpreal/mpreal.h	75;"	d
IsInf	external/unsupported/test/mpreal/mpreal.h	78;"	d
IsInf	external/unsupported/test/mpreal/mpreal.h	81;"	d
IsInf	external/unsupported/test/mpreal/mpreal.h	84;"	d
IsInteger	external/Eigen/src/Core/NumTraits.h	/^    IsInteger = std::numeric_limits<T>::is_integer,$/;"	e	enum:Eigen::GenericNumTraits::__anon157
IsLower	external/Eigen/src/Core/SolveTriangular.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon190
IsLower	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon255
IsLower	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    IsLower = (Mode&Lower) == Lower,$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon256
IsLower	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon257
IsLower	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^    IsLower = ((Mode&Lower)==Lower),$/;"	e	enum:Eigen::internal::triangular_matrix_vector_product::__anon258
IsLower	external/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon259
IsLower	external/Eigen/src/Core/products/TriangularSolverVector.h	/^    IsLower = ((Mode&Lower)==Lower)$/;"	e	enum:Eigen::internal::triangular_solve_vector::__anon260
IsProjective	external/Eigen/src/Geometry/Transform.h	/^    IsProjective = (int(Mode)==int(Projective))$/;"	e	enum:Eigen::internal::transform_traits::__anon369
IsRepeatable	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon71
IsRepeatable	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon69
IsRepeatable	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon70
IsRepeatable	external/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon166
IsRowMajor	external/Eigen/src/Core/Block.h	/^    IsRowMajor = (MaxRowsAtCompileTime==1&&MaxColsAtCompileTime!=1) ? 1$/;"	e	enum:Eigen::internal::traits::__anon22
IsRowMajor	external/Eigen/src/Core/DenseBase.h	/^      IsRowMajor = int(Flags) & RowMajorBit, \/**< True if this expression has row-major storage order. *\/$/;"	e	enum:Eigen::DenseBase::__anon30
IsRowMajor	external/Eigen/src/Core/Replicate.h	/^    IsRowMajor = MaxRowsAtCompileTime==1 && MaxColsAtCompileTime!=1 ? 1$/;"	e	enum:Eigen::internal::traits::__anon178
IsRowMajor	external/Eigen/src/SparseCore/CoreIterators.h	/^    enum { IsRowMajor = (Derived::Flags&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::DenseBase::InnerIterator::__anon411
IsRowMajor	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    enum { IsRowMajor = Base::IsRowMajor };$/;"	e	enum:Eigen::MappedSparseMatrix::__anon412
IsRowMajor	external/Eigen/src/SparseCore/SparseBlock.h	/^    IsRowMajor = (int(MatrixType::Flags)&RowMajorBit)==RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon413
IsRowMajor	external/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<SparseInnerVectorSet>::IsRowMajor };$/;"	e	enum:Eigen::SparseInnerVectorSet::__anon414
IsRowMajor	external/Eigen/src/SparseCore/SparseBlock.h	/^    enum { IsRowMajor = internal::traits<SparseInnerVectorSet>::IsRowMajor };$/;"	e	enum:Eigen::SparseInnerVectorSet::__anon415
IsRowMajor	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Lhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector::__anon416
IsRowMajor	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    enum { IsRowMajor = (int(Rhs::Flags)&RowMajorBit)==RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector::__anon417
IsRowMajor	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsRowMajor = Flags&RowMajorBit ? 1 : 0,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
IsRowMajor	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        IsRowMajor = Flags & RowMajorBit ? 1 : 0$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
IsRowMajor	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    enum { IsRowMajor = internal::traits<SparseInnerVectorSet>::IsRowMajor };$/;"	e	enum:Eigen::SparseInnerVectorSet::__anon452
IsSigned	external/Eigen/src/Core/NumTraits.h	/^    IsSigned = std::numeric_limits<T>::is_signed,$/;"	e	enum:Eigen::GenericNumTraits::__anon157
IsSkyline	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum {IsSkyline = SkylineBit};$/;"	e	enum:Eigen::__anon450
IsSorted	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 0$/;"	e	enum:Eigen::GoogleDenseHashMapTraits::__anon458
IsSorted	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 0$/;"	e	enum:Eigen::GoogleSparseHashMapTraits::__anon459
IsSorted	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 0$/;"	e	enum:Eigen::StdUnorderedMapTraits::__anon457
IsSorted	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    IsSorted = 1$/;"	e	enum:Eigen::StdMapTraits::__anon456
IsSparse	external/Eigen/src/Core/util/Constants.h	/^  IsSparse$/;"	e	enum:Eigen::__anon271
IsSupported	external/Eigen/src/Core/Assign_MKL.h	/^{ enum { IsSupported = 0 }; };$/;"	e	enum:Eigen::internal::vml_call::__anon14
IsTransposed	external/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = Base::IsTransposed ? 0 : 1$/;"	e	enum:Eigen::internal::blas_traits::__anon263
IsTransposed	external/Eigen/src/Core/util/BlasUtil.h	/^    IsTransposed = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon261
IsVectorAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      IsVectorAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime == 1$/;"	e	enum:Eigen::DenseBase::__anon30
IsVectorAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^      IsVectorAtCompileTime = 0,$/;"	e	enum:Eigen::DiagonalBase::__anon37
IsVectorAtCompileTime	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      IsVectorAtCompileTime = RowsAtCompileTime == 1 || ColsAtCompileTime == 1,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
IsVectorAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        IsVectorAtCompileTime = RowsAtCompileTime == 1 || ColsAtCompileTime == 1,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
IsVertical	external/Eigen/src/Core/VectorwiseOp.h	/^      IsVertical   = (Direction==Vertical) ? 1 : 0,$/;"	e	enum:Eigen::VectorwiseOp::__anon203
Isometry	external/Eigen/src/Core/util/Constants.h	/^  Isometry      = 0x1,$/;"	e	enum:Eigen::TransformTraits
Isometry2d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Isometry> Isometry2d;$/;"	t	namespace:Eigen
Isometry2f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Isometry> Isometry2f;$/;"	t	namespace:Eigen
Isometry3d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Isometry> Isometry3d;$/;"	t	namespace:Eigen
Isometry3f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Isometry> Isometry3f;$/;"	t	namespace:Eigen
IsometryTransformType	external/Eigen/src/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim,Isometry> IsometryTransformType;$/;"	t	class:Eigen::Translation
IterBase	external/Eigen/src/SparseCore/SparseView.h	/^  typedef typename _MatrixTypeNested::InnerIterator IterBase;$/;"	t	class:Eigen::SparseView::InnerIterator
IterationController	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    IterationController(double r = 1.0E-8, int noi = 0, size_t mit = size_t(-1))$/;"	f	class:Eigen::IterationController
IterationController	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^class IterationController$/;"	c	namespace:Eigen
IterativeSolverBase	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  IterativeSolverBase()$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  IterativeSolverBase(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
IterativeSolverBase	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^class IterativeSolverBase : internal::noncopyable$/;"	c	namespace:Eigen
Iterator	external/Eigen/src/SparseCore/AmbiVector.h	/^    Iterator(const AmbiVector& vec, RealScalar epsilon = 0)$/;"	f	class:Eigen::internal::AmbiVector::Iterator
Iterator	external/Eigen/src/SparseCore/AmbiVector.h	/^class AmbiVector<_Scalar,_Index>::Iterator$/;"	c	class:Eigen::internal::AmbiVector
Iwork	external/SuiteSparse/Include/cholmod_core.h	/^    void *Iwork ;	\/* size iworksize, 2*nrow+ncol for most routines,$/;"	m	struct:cholmod_common_struct
JacobiRotation	external/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation() {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	external/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation(const Scalar& c, const Scalar& s) : m_c(c), m_s(s) {}$/;"	f	class:Eigen::JacobiRotation
JacobiRotation	external/Eigen/src/Jacobi/Jacobi.h	/^template<typename Scalar> class JacobiRotation$/;"	c	namespace:Eigen
JacobiSVD	external/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD()$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	external/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD(Index rows, Index cols, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	external/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD(const MatrixType& matrix, unsigned int computationOptions = 0)$/;"	f	class:Eigen::JacobiSVD
JacobiSVD	external/Eigen/src/SVD/JacobiSVD.h	/^template<typename _MatrixType, int QRPreconditioner> class JacobiSVD$/;"	c	namespace:Eigen
JacobiSVDType	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef JacobiSVD<_MatrixType, QRPreconditioner> JacobiSVDType;$/;"	t	struct:Eigen::internal::solve_retval
JacobianType	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename Functor::JacobianType JacobianType;$/;"	t	class:Eigen::AutoDiffJacobian
JacobianType	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef Matrix< Scalar, Dynamic, Dynamic > JacobianType;$/;"	t	class:Eigen::HybridNonLinearSolver
JacobianType	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    typedef Matrix< Scalar, Dynamic, Dynamic > JacobianType;$/;"	t	class:Eigen::LevenbergMarquardt
JacobianType	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::JacobianType JacobianType;$/;"	t	class:Eigen::NumericalDiff
JacobianType	external/unsupported/test/NonLinearOptimization.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:Functor	file:
JacobianType	external/unsupported/test/NumericalDiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:Functor	file:
JacobianType	external/unsupported/test/autodiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:TestFunc1	file:
JacobianType	external/unsupported/test/forward_adolc.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,InputsAtCompileTime> JacobianType;$/;"	t	struct:TestFunc1	file:
JointAlignment	external/Eigen/src/Core/Assign.h	/^    JointAlignment = assign_traits<Derived1,Derived2>::JointAlignment$/;"	e	enum:Eigen::internal::assign_innervec_CompleteUnrolling::__anon13
JointAlignment	external/Eigen/src/Core/Assign.h	/^    JointAlignment = bool(DstIsAligned) && bool(SrcIsAligned) ? Aligned : Unaligned$/;"	e	enum:Eigen::internal::assign_traits::__anon6
KDBVH_H_INCLUDED	external/unsupported/Eigen/src/BVH/KdBVH.h	11;"	d
KRONECKER_TENSOR_PRODUCT_H	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	13;"	d
KdBVH	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  KdBVH() {}$/;"	f	class:Eigen::KdBVH
KdBVH	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename Iter> KdBVH(Iter begin, Iter end) { init(begin, end, 0, 0); } \/\/int is recognized by init as not being an iterator type$/;"	f	class:Eigen::KdBVH
KdBVH	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename OIter, typename BIter> KdBVH(OIter begin, OIter end, BIter boxBegin, BIter boxEnd) { init(begin, end, boxBegin, boxEnd); }$/;"	f	class:Eigen::KdBVH
KdBVH	external/unsupported/Eigen/src/BVH/KdBVH.h	/^template<typename _Scalar, int _Dim, typename _Object> class KdBVH$/;"	c	namespace:Eigen
KeepsPacketAccess	external/Eigen/src/Core/Map.h	/^    KeepsPacketAccess = bool(HasNoInnerStride)$/;"	e	enum:Eigen::internal::traits::__anon145
KernelResultType	external/Eigen/src/Eigen2Support/LU.h	/^    > KernelResultType;$/;"	t	class:Eigen::LU
KeyType	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename MapTraits<ScalarWrapper>::KeyType KeyType;$/;"	t	class:Eigen::RandomSetter
KeyType	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::GoogleDenseHashMapTraits
KeyType	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::GoogleSparseHashMapTraits
KeyType	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::StdMapTraits
KeyType	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef int KeyType;$/;"	t	struct:Eigen::StdUnorderedMapTraits
KnotAveraging	external/unsupported/Eigen/src/Splines/SplineFitting.h	/^  void KnotAveraging(const KnotVectorType& parameters, DenseIndex degree, KnotVectorType& knots)$/;"	f	namespace:Eigen
KnotVectorType	external/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::KnotVectorType KnotVectorType;$/;"	t	class:Eigen::Spline
KnotVectorType	external/unsupported/Eigen/src/Splines/SplineFitting.h	/^    typedef typename SplineType::KnotVectorType KnotVectorType;$/;"	t	struct:Eigen::SplineFitting
KnotVectorType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,1,Dynamic> KnotVectorType;$/;"	t	struct:Eigen::SplineTraits
LACKS_ERRNO_H	external/unsupported/test/mpreal/dlmalloc.c	513;"	d	file:
LACKS_FCNTL_H	external/unsupported/test/mpreal/dlmalloc.c	498;"	d	file:
LACKS_STRINGS_H	external/unsupported/test/mpreal/dlmalloc.c	511;"	d	file:
LACKS_STRING_H	external/unsupported/test/mpreal/dlmalloc.c	510;"	d	file:
LACKS_SYS_MMAN_H	external/unsupported/test/mpreal/dlmalloc.c	509;"	d	file:
LACKS_SYS_PARAM_H	external/unsupported/test/mpreal/dlmalloc.c	508;"	d	file:
LACKS_SYS_TYPES_H	external/unsupported/test/mpreal/dlmalloc.c	512;"	d	file:
LACKS_UNISTD_H	external/unsupported/test/mpreal/dlmalloc.c	507;"	d	file:
LAPACK_DPOTRF	external/SuiteSparse/Include/cholmod_blas.h	119;"	d
LAPACK_DPOTRF	external/SuiteSparse/Include/cholmod_blas.h	139;"	d
LAPACK_DPOTRF	external/SuiteSparse/Include/cholmod_blas.h	99;"	d
LAPACK_ZPOTRF	external/SuiteSparse/Include/cholmod_blas.h	108;"	d
LAPACK_ZPOTRF	external/SuiteSparse/Include/cholmod_blas.h	128;"	d
LAPACK_ZPOTRF	external/SuiteSparse/Include/cholmod_blas.h	148;"	d
LAPACK_dpotrf	external/SuiteSparse/Include/cholmod_blas.h	360;"	d
LAPACK_zpotrf	external/SuiteSparse/Include/cholmod_blas.h	377;"	d
LDLDOT	external/SuiteSparse/Include/cholmod_template.h	129;"	d
LDLDOT	external/SuiteSparse/Include/cholmod_template.h	180;"	d
LDLDOT	external/SuiteSparse/Include/cholmod_template.h	231;"	d
LDLDOT	external/SuiteSparse/Include/cholmod_template.h	37;"	d
LDLDOT	external/SuiteSparse/Include/cholmod_template.h	84;"	d
LDLT	external/Eigen/src/Cholesky/LDLT.h	/^    LDLT() : m_matrix(), m_transpositions(), m_isInitialized(false) {}$/;"	f	class:Eigen::LDLT
LDLT	external/Eigen/src/Cholesky/LDLT.h	/^    LDLT(Index size)$/;"	f	class:Eigen::LDLT
LDLT	external/Eigen/src/Cholesky/LDLT.h	/^    LDLT(const MatrixType& matrix)$/;"	f	class:Eigen::LDLT
LDLT	external/Eigen/src/Cholesky/LDLT.h	/^template<typename _MatrixType, int _UpLo> class LDLT$/;"	c	namespace:Eigen
LDLTTraits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT<MatrixType,UpLo> > LDLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LDLTType	external/Eigen/src/Cholesky/LDLT.h	/^  typedef LDLT<_MatrixType,_UpLo> LDLTType;$/;"	t	struct:Eigen::internal::solve_retval
LDLT_Traits	external/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LDLT_Traits	external/Eigen/src/Cholesky/LDLT.h	/^template<typename MatrixType> struct LDLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LLDOT	external/SuiteSparse/Include/cholmod_template.h	123;"	d
LLDOT	external/SuiteSparse/Include/cholmod_template.h	174;"	d
LLDOT	external/SuiteSparse/Include/cholmod_template.h	225;"	d
LLDOT	external/SuiteSparse/Include/cholmod_template.h	31;"	d
LLDOT	external/SuiteSparse/Include/cholmod_template.h	78;"	d
LLT	external/Eigen/src/Cholesky/LLT.h	/^    LLT() : m_matrix(), m_isInitialized(false) {}$/;"	f	class:Eigen::LLT
LLT	external/Eigen/src/Cholesky/LLT.h	/^    LLT(Index size) : m_matrix(size, size),$/;"	f	class:Eigen::LLT
LLT	external/Eigen/src/Cholesky/LLT.h	/^    LLT(const MatrixType& matrix)$/;"	f	class:Eigen::LLT
LLT	external/Eigen/src/Cholesky/LLT.h	/^template<typename _MatrixType, int _UpLo> class LLT$/;"	c	namespace:Eigen
LLTTraits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT<MatrixType,UpLo>  > LLTTraits;$/;"	t	class:Eigen::SimplicialCholesky
LLTType	external/Eigen/src/Cholesky/LLT.h	/^  typedef LLT<_MatrixType,UpLo> LLTType;$/;"	t	struct:Eigen::internal::solve_retval
LLT_Traits	external/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Lower>$/;"	s	namespace:Eigen::internal
LLT_Traits	external/Eigen/src/Cholesky/LLT.h	/^template<typename MatrixType> struct LLT_Traits<MatrixType,Upper>$/;"	s	namespace:Eigen::internal
LMatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType, Lower|UnitDiag>  LMatrixType;$/;"	t	class:Eigen::SuperLU
LONG	external/SuiteSparse/Include/cholmod_internal.h	227;"	d
LU	external/Eigen/src/Eigen2Support/LU.h	/^    explicit LU(const T& t) : Base(t), m_originalMatrix(t) {}$/;"	f	class:Eigen::LU
LU	external/Eigen/src/Eigen2Support/LU.h	/^class LU : public FullPivLU<MatrixType>$/;"	c	namespace:Eigen
LUMatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::SuperLUBase
LUMatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::LUMatrixType LUMatrixType;$/;"	t	class:Eigen::SuperLU
LUMatrixType	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar> LUMatrixType;$/;"	t	class:Eigen::UmfPackLU
Large	external/Eigen/src/Core/GeneralProduct.h	/^  Large = 2,$/;"	e	enum:Eigen::__anon112
LargeEnough	external/Eigen/src/Core/Assign_MKL.h	/^      LargeEnough = VmlSize==Dynamic || VmlSize>=EIGEN_MKL_VML_THRESHOLD,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
LargeThreshold	external/Eigen/src/Core/GeneralProduct.h	/^    LargeThreshold = EIGEN_CACHEFRIENDLY_PRODUCT_THRESHOLD$/;"	e	enum:Eigen::internal::product_type::__anon114
LazyCoeffBasedProductMode	external/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon272
LazyCoeffBasedProductType	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef CoeffBasedProduct<LhsNested,RhsNested,NestByRefBit> LazyCoeffBasedProductType;$/;"	t	class:Eigen::CoeffBasedProduct
LazyProductReturnType	external/Eigen/src/Core/GeneralProduct.h	/^struct LazyProductReturnType : public ProductReturnType<Lhs,Rhs,LazyCoeffBasedProductMode>$/;"	s	namespace:Eigen
LeftBlock	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix< Scalar, _Deg, Deg_1 >          LeftBlock;$/;"	t	class:Eigen::internal::companion
LeftBlockFirstRow	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix< Scalar, 1, Deg_1 >             LeftBlockFirstRow;$/;"	t	class:Eigen::internal::companion
LeftScaling	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd& LeftScaling()$/;"	f	class:Scaling
LevenbergMarquardt	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    LevenbergMarquardt(FunctorType &_functor)$/;"	f	class:Eigen::LevenbergMarquardt
LevenbergMarquardt	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^class LevenbergMarquardt$/;"	c	namespace:Eigen
LevenbergMarquardtSpace	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^namespace LevenbergMarquardtSpace {$/;"	n	namespace:Eigen
Lhs	external/Eigen/src/Core/ProductBase.h	/^  typedef typename remove_all<_Lhs>::type Lhs;$/;"	t	struct:Eigen::internal::traits
Lhs	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,LhsMode,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,LhsOptions> Lhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Lhs	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<SparseLhsType>::type Lhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsBlasTraits	external/Eigen/src/Core/ProductBase.h	/^    typedef internal::blas_traits<_LhsNested> LhsBlasTraits;$/;"	t	class:Eigen::ProductBase
LhsCleaned	external/Eigen/src/Core/Product.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:internal::traits
LhsCleaned	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename remove_all<Lhs>::type LhsCleaned;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
LhsCoeffReadCost	external/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon26
LhsCoeffReadCost	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon233
LhsCoeffReadCost	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    LhsCoeffReadCost = traits<_LhsNested>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon418
LhsCoeffReadCost	external/Eigen/src/SparseCore/SparseProduct.h	/^    LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon429
LhsCoeffReadCost	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        LhsCoeffReadCost = _LhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon449
LhsFlags	external/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon26
LhsFlags	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon233
LhsFlags	external/Eigen/src/SparseCore/SparseProduct.h	/^    LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon429
LhsFlags	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        LhsFlags = _LhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon449
LhsInnerIterator	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::InnerIterator LhsInnerIterator;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
LhsIsSelfAdjoint	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsSelfAdjoint = (LhsMode&SelfAdjoint)==SelfAdjoint,$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon252
LhsIsUpper	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    LhsIsUpper = (LhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon252
LhsIterator	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename _LhsNested::InnerIterator LhsIterator;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
LhsMatrixType	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename take_matrix_for_product<Lhs>::type LhsMatrixType;$/;"	t	struct:Eigen::internal::traits
LhsMatrixType	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<homogeneous_left_product_impl>::LhsMatrixType LhsMatrixType;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMatrixTypeCleaned	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<LhsMatrixType>::type LhsMatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
LhsMatrixTypeNested	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename LhsMatrixTypeCleaned::Nested>::type LhsMatrixTypeNested;$/;"	t	struct:Eigen::internal::homogeneous_left_product_impl
LhsMode	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      LhsMode = internal::is_diagonal<_LhsNested>::ret ? internal::SDP_IsDiagonal$/;"	e	enum:Eigen::SparseDiagonalProduct::__anon421
LhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::nested<Lhs>::type LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
LhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Lhs::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	external/Eigen/src/Core/GeneralProduct.h	/^  typedef typename internal::nested<Lhs, Rhs::ColsAtCompileTime, typename internal::plain_matrix_type<Lhs>::type >::type LhsNested;$/;"	t	struct:Eigen::ProductReturnType
LhsNested	external/Eigen/src/Core/Product.h	/^    typedef typename Lhs::Nested LhsNested;$/;"	t	class:Product
LhsNested	external/Eigen/src/Core/ProductBase.h	/^    typedef typename Lhs::Nested LhsNested;$/;"	t	class:Eigen::ProductBase
LhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::LhsNested LhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
LhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Lhs::Nested LhsNested;$/;"	t	struct:Eigen::internal::traits
LhsNested	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename Lhs::Nested LhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
LhsNested	external/Eigen/src/SparseCore/SparseProduct.h	/^    typename internal::nested<Lhs,Rhs::RowsAtCompileTime>::type>::type LhsNested;$/;"	t	struct:Eigen::SparseSparseProductReturnType
LhsNested	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef const typename internal::nested<Lhs, Rhs::RowsAtCompileTime>::type LhsNested;$/;"	t	struct:Eigen::SkylineProductReturnType
LhsNestedCleaned	external/Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<LhsNested>::type LhsNestedCleaned;$/;"	t	class:Product
LhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::LhsPacket LhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
LhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,RealPacket,  Scalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
LhsPacket	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_LhsPacket,LhsScalar>::type LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
LhsPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
LhsPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
LhsPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
LhsPacketSize	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon249
LhsPacketSize	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  LhsPacketSize = Vectorizable ? packet_traits<LhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon250
LhsProductTraits	external/Eigen/src/Core/SolveTriangular.h	/^  typedef blas_traits<Lhs> LhsProductTraits;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress   = Traits::LhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon241
LhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
LhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
LhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
LhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    LhsProgress = ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
LhsRowMajor	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      LhsRowMajor = LhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon233
LhsRowMajor	external/Eigen/src/SparseCore/SparseProduct.h	/^    LhsRowMajor = internal::traits<Lhs>::Flags & RowMajorBit,$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon428
LhsScalar	external/Eigen/src/Core/GeneralProduct.h	/^    typedef typename Lhs::Scalar LhsScalar;$/;"	t	class:Eigen::GeneralProduct
LhsScalar	external/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::traits<Lhs>::Scalar LhsScalar;$/;"	t	class:Eigen::ProductBase
LhsScalar	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Lhs::Scalar LhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
LhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar> LhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
LhsScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _LhsScalar LhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
LhsScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename  Lhs::Scalar LhsScalar;$/;"	t	class:Eigen::GeneralProduct
LhsScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_RhsScalar,_LhsScalar>::type LhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
LhsUpLo	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^    LhsUpLo = LhsMode&(Upper|Lower)$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon253
LinSpaced	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(Sequential_t, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinSpaced	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::LinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
LinearAccess	external/Eigen/src/Core/Reverse.h	/^    LinearAccess = ( (Direction==BothDirections) && (int(_MatrixTypeNested::Flags)&PacketAccessBit) )$/;"	e	enum:Eigen::internal::traits::__anon180
LinearAccessBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int LinearAccessBit = 0x10;$/;"	m	namespace:Eigen
LinearMatrixType	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Scaling
LinearMatrixType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Transform
LinearMatrixType	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Translation
LinearMatrixType	external/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,Dim,Options> LinearMatrixType;$/;"	t	class:Eigen::Transform
LinearMatrixType	external/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,Dim> LinearMatrixType;$/;"	t	class:Eigen::Translation
LinearPart	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,Dim> LinearPart;$/;"	t	class:Eigen::Transform
LinearPart	external/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,Dim,int(Mode)==(AffineCompact)> LinearPart;$/;"	t	class:Eigen::Transform
LinearTraversal	external/Eigen/src/Core/util/Constants.h	/^  LinearTraversal,$/;"	e	enum:Eigen::__anon266
LinearVectorizedTraversal	external/Eigen/src/Core/util/Constants.h	/^  LinearVectorizedTraversal,$/;"	e	enum:Eigen::__anon266
ListEl	external/Eigen/src/SparseCore/AmbiVector.h	/^    struct ListEl$/;"	s	class:Eigen::internal::AmbiVector
ListOfClusters	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef std::list<Cluster> ListOfClusters;$/;"	t	class:Eigen::MatrixFunction
LoadFromFile	OptApp.h	/^	void LoadFromFile( std::string filename ) {$/;"	f	struct:Correspondence
LoadFromFile	RGBDTrajectory.h	/^	void LoadFromFile( std::string filename ) {$/;"	f	struct:RGBDTrajectory
LoadFromPCDFile	PointCloud.cpp	/^void PointCloud::LoadFromPCDFile( const char * filename )$/;"	f	class:PointCloud
LoadFromXYZNFile	PointCloud.cpp	/^void PointCloud::LoadFromXYZNFile( const char * filename )$/;"	f	class:PointCloud
Lower	external/Eigen/src/Core/util/Constants.h	/^  Lower=0x1,                      $/;"	e	enum:Eigen::__anon264
LowerTriangular	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int LowerTriangular = Lower;$/;"	m	namespace:Eigen
LowerTriangularBit	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int LowerTriangularBit = Lower;$/;"	m	namespace:Eigen
LvalueBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int LvalueBit = 0x20;$/;"	m	namespace:Eigen
MADD	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	106;"	d
MADD	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	131;"	d
MALLINFO_FIELD_TYPE	external/unsupported/test/mpreal/dlmalloc.c	658;"	d	file:
MALLINFO_FIELD_TYPE	external/unsupported/test/mpreal/dlmalloc.h	67;"	d
MALLOC_280_H	external/unsupported/test/mpreal/dlmalloc.h	26;"	d
MALLOC_ALIGNMENT	external/unsupported/test/mpreal/dlmalloc.c	531;"	d	file:
MALLOC_ALIGNMENT	external/unsupported/test/mpreal/dlmalloc.c	562;"	d	file:
MALLOC_FAILURE_ACTION	external/unsupported/test/mpreal/dlmalloc.c	515;"	d	file:
MALLOC_FAILURE_ACTION	external/unsupported/test/mpreal/dlmalloc.c	603;"	d	file:
MAP_ANONYMOUS	external/unsupported/test/mpreal/dlmalloc.c	1486;"	d	file:
MAX	external/SuiteSparse/Include/cholmod_internal.h	98;"	d
MAX3	external/SuiteSparse/Include/cholmod_internal.h	99;"	d
MAX4	external/SuiteSparse/Include/cholmod_internal.h	100;"	d
MAX_RELEASE_CHECK_RATE	external/unsupported/test/mpreal/dlmalloc.c	643;"	d	file:
MAX_RELEASE_CHECK_RATE	external/unsupported/test/mpreal/dlmalloc.c	645;"	d	file:
MAX_REQUEST	external/unsupported/test/mpreal/dlmalloc.c	2098;"	d	file:
MAX_SIZE_T	external/unsupported/test/mpreal/dlmalloc.c	547;"	d	file:
MAX_SMALL_REQUEST	external/unsupported/test/mpreal/dlmalloc.c	2445;"	d	file:
MAX_SMALL_SIZE	external/unsupported/test/mpreal/dlmalloc.c	2444;"	d	file:
MCHUNK_SIZE	external/unsupported/test/mpreal/dlmalloc.c	2074;"	d	file:
MFAIL	external/unsupported/test/mpreal/dlmalloc.c	1477;"	d	file:
MGH09_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    MGH09_functor(void) : Functor<double>(4,11) {}$/;"	f	struct:MGH09_functor
MGH09_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct MGH09_functor : Functor<double>$/;"	s	file:
MGH10_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    MGH10_functor(void) : Functor<double>(3,16) {}$/;"	f	struct:MGH10_functor
MGH10_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct MGH10_functor : Functor<double>$/;"	s	file:
MGH17_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    MGH17_functor(void) : Functor<double>(5,33) {}$/;"	f	struct:MGH17_functor
MGH17_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct MGH17_functor : Functor<double>$/;"	s	file:
MIN	external/SuiteSparse/Include/cholmod_internal.h	101;"	d
MIN_CHUNK_SIZE	external/unsupported/test/mpreal/dlmalloc.c	2088;"	d	file:
MIN_LARGE_SIZE	external/unsupported/test/mpreal/dlmalloc.c	2443;"	d	file:
MIN_REQUEST	external/unsupported/test/mpreal/dlmalloc.c	2099;"	d	file:
MIN_SMALL_INDEX	external/unsupported/test/mpreal/dlmalloc.c	2686;"	d	file:
MLOCK_T	external/unsupported/test/mpreal/dlmalloc.c	1660;"	d	file:
MLOCK_T	external/unsupported/test/mpreal/dlmalloc.c	1760;"	d	file:
MLOCK_T	external/unsupported/test/mpreal/dlmalloc.c	1825;"	d	file:
MLOCK_T	external/unsupported/test/mpreal/dlmalloc.c	1856;"	d	file:
MMAP	external/unsupported/test/mpreal/dlmalloc.c	1589;"	d	file:
MMAP_CHUNK_OVERHEAD	external/unsupported/test/mpreal/dlmalloc.c	2083;"	d	file:
MMAP_CLEARS	external/unsupported/test/mpreal/dlmalloc.c	518;"	d	file:
MMAP_CLEARS	external/unsupported/test/mpreal/dlmalloc.c	520;"	d	file:
MMAP_CLEARS	external/unsupported/test/mpreal/dlmalloc.c	593;"	d	file:
MMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1490;"	d	file:
MMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1498;"	d	file:
MMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1539;"	d	file:
MMAP_FLAGS	external/unsupported/test/mpreal/dlmalloc.c	1489;"	d	file:
MMAP_FLAGS	external/unsupported/test/mpreal/dlmalloc.c	1496;"	d	file:
MMAP_FOOT_PAD	external/unsupported/test/mpreal/dlmalloc.c	2085;"	d	file:
MMAP_PROT	external/unsupported/test/mpreal/dlmalloc.c	1484;"	d	file:
MORECORE_CONTIGUOUS	external/unsupported/test/mpreal/dlmalloc.c	613;"	d	file:
MORECORE_CONTIGUOUS	external/unsupported/test/mpreal/dlmalloc.c	617;"	d	file:
MORECORE_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	615;"	d	file:
MPFR_USE_INTMAX_T	external/unsupported/test/mpreal/mpreal.h	106;"	d
MPFR_USE_INTMAX_T	external/unsupported/test/mpreal/mpreal.h	89;"	d
MPFR_USE_INTMAX_T	external/unsupported/test/mpreal/mpreal.h	96;"	d
MPREAL_HAVE_INT64_SUPPORT	external/unsupported/test/mpreal/mpreal.h	105;"	d
MPREAL_HAVE_INT64_SUPPORT	external/unsupported/test/mpreal/mpreal.h	70;"	d
MPREAL_HAVE_INT64_SUPPORT	external/unsupported/test/mpreal/mpreal.h	95;"	d
MPREAL_HAVE_MSVC_DEBUGVIEW	external/unsupported/test/mpreal/mpreal.h	71;"	d
MPREAL_MSVC_DEBUGVIEW_CODE	external/unsupported/test/mpreal/mpreal.h	115;"	d
MPREAL_MSVC_DEBUGVIEW_CODE	external/unsupported/test/mpreal/mpreal.h	118;"	d
MPREAL_MSVC_DEBUGVIEW_DATA	external/unsupported/test/mpreal/mpreal.h	116;"	d
MPREAL_MSVC_DEBUGVIEW_DATA	external/unsupported/test/mpreal/mpreal.h	119;"	d
MREMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1547;"	d	file:
MSPACES	external/unsupported/test/mpreal/dlmalloc.c	556;"	d	file:
MSPACES	external/unsupported/test/mpreal/dlmalloc.c	558;"	d	file:
MULT	external/SuiteSparse/Include/cholmod_template.h	114;"	d
MULT	external/SuiteSparse/Include/cholmod_template.h	166;"	d
MULT	external/SuiteSparse/Include/cholmod_template.h	217;"	d
MULT	external/SuiteSparse/Include/cholmod_template.h	24;"	d
MULT	external/SuiteSparse/Include/cholmod_template.h	71;"	d
MULTADD	external/SuiteSparse/Include/cholmod_template.h	115;"	d
MULTADD	external/SuiteSparse/Include/cholmod_template.h	165;"	d
MULTADD	external/SuiteSparse/Include/cholmod_template.h	216;"	d
MULTADD	external/SuiteSparse/Include/cholmod_template.h	25;"	d
MULTADD	external/SuiteSparse/Include/cholmod_template.h	72;"	d
MULTADDCONJ	external/SuiteSparse/Include/cholmod_template.h	119;"	d
MULTADDCONJ	external/SuiteSparse/Include/cholmod_template.h	170;"	d
MULTADDCONJ	external/SuiteSparse/Include/cholmod_template.h	221;"	d
MULTADDCONJ	external/SuiteSparse/Include/cholmod_template.h	29;"	d
MULTADDCONJ	external/SuiteSparse/Include/cholmod_template.h	76;"	d
MULTSUB	external/SuiteSparse/Include/cholmod_template.h	118;"	d
MULTSUB	external/SuiteSparse/Include/cholmod_template.h	169;"	d
MULTSUB	external/SuiteSparse/Include/cholmod_template.h	220;"	d
MULTSUB	external/SuiteSparse/Include/cholmod_template.h	28;"	d
MULTSUB	external/SuiteSparse/Include/cholmod_template.h	75;"	d
MULTSUBCONJ	external/SuiteSparse/Include/cholmod_template.h	121;"	d
MULTSUBCONJ	external/SuiteSparse/Include/cholmod_template.h	172;"	d
MULTSUBCONJ	external/SuiteSparse/Include/cholmod_template.h	223;"	d
MULTSUBCONJ	external/SuiteSparse/Include/cholmod_template.h	30;"	d
MULTSUBCONJ	external/SuiteSparse/Include/cholmod_template.h	77;"	d
MULT_REAL	external/SuiteSparse/Include/cholmod_template.h	128;"	d
MULT_REAL	external/SuiteSparse/Include/cholmod_template.h	179;"	d
MULT_REAL	external/SuiteSparse/Include/cholmod_template.h	230;"	d
MULT_REAL	external/SuiteSparse/Include/cholmod_template.h	35;"	d
MULT_REAL	external/SuiteSparse/Include/cholmod_template.h	83;"	d
MUNMAP	external/unsupported/test/mpreal/dlmalloc.c	1590;"	d	file:
MUNMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1483;"	d	file:
MUNMAP_DEFAULT	external/unsupported/test/mpreal/dlmalloc.c	1540;"	d	file:
M_GRANULARITY	external/unsupported/test/mpreal/dlmalloc.c	672;"	d	file:
M_GRANULARITY	external/unsupported/test/mpreal/dlmalloc.h	185;"	d
M_MMAP_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.c	673;"	d	file:
M_MMAP_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.h	186;"	d
M_PI	external/Eigen/src/Eigen2Support/Geometry/All.h	7;"	d
M_PI	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	15;"	d
M_TRIM_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.c	671;"	d	file:
M_TRIM_THRESHOLD	external/unsupported/test/mpreal/dlmalloc.h	184;"	d
Map	external/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType data, Index rows, Index cols, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType data, Index size, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Core/Map.h	/^    inline Map(PointerArgType data, const StrideType& stride = StrideType())$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Core/Map.h	/^template<typename PlainObjectType, int MapOptions, typename StrideType> class Map$/;"	c	namespace:Eigen
Map	external/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const Index* indices)$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Core/PermutationMatrix.h	/^    inline Map(const Index* indices, Index size)$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Core/PermutationMatrix.h	/^class Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType>,_PacketAccess>$/;"	c	namespace:Eigen
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstMapType Map(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline MapType Map(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstMapType<Stride<Outer, Inner> >::type Map(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedMapType<Stride<Outer, Inner> >::type Map(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
Map	external/Eigen/src/Core/Transpositions.h	/^    inline Map(const Index* indices)$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Core/Transpositions.h	/^    inline Map(const Index* indices, Index size)$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Core/Transpositions.h	/^class Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType>,PacketAccess>$/;"	c	namespace:Eigen
Map	external/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_STRONG_INLINE Map(Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Geometry/Quaternion.h	/^    EIGEN_STRONG_INLINE Map(const Scalar* coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Map
Map	external/Eigen/src/Geometry/Quaternion.h	/^class Map<Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	external/Eigen/src/Geometry/Quaternion.h	/^class Map<const Quaternion<_Scalar>, _Options >$/;"	c	namespace:Eigen
Map	external/Eigen/src/SparseCore/CompressedStorage.h	/^    static CompressedStorage Map(Index* indices, Scalar* values, size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
Map	external/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef MappedSparseMatrix<Scalar,Flags> Map;$/;"	t	class:Eigen::SparseMatrix
Map	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(MatrixBase<MatrixType>& _mat)$/;"	f	struct:Eigen::SluMatrix
Map	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static SluMatrix Map(SparseMatrixBase<MatrixType>& mat)$/;"	f	struct:Eigen::SluMatrix
Map	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    static SkylineStorage Map(Index* upperProfile, Index* lowerProfile, Scalar* diag, Scalar* upper, Scalar* lower, Index size, Index upperSize, Index lowerSize) {$/;"	f	class:Eigen::SkylineStorage
Map	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef MappedSparseMatrix<Scalar,Flags> Map;$/;"	t	class:Eigen::DynamicSparseMatrix
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline AlignedMapType MapAligned(Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline ConstAlignedMapType MapAligned(const Scalar* data, Index size)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedAlignedMapType<Stride<Outer, Inner> >::type MapAligned(Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index rows, Index cols, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, Index size, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapAligned	external/Eigen/src/Core/PlainObjectBase.h	/^    static inline typename StridedConstAlignedMapType<Stride<Outer, Inner> >::type MapAligned(const Scalar* data, const Stride<Outer, Inner>& stride)$/;"	f	class:Eigen::PlainObjectBase
MapBase	external/Eigen/src/Core/MapBase.h	/^    explicit inline MapBase(PointerType data) : Base(data) {}$/;"	f	class:Eigen::MapBase
MapBase	external/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType data) : m_data(data), m_rows(RowsAtCompileTime), m_cols(ColsAtCompileTime)$/;"	f	class:Eigen::MapBase
MapBase	external/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType data, Index rows, Index cols) : Base(data, rows, cols) {}$/;"	f	class:Eigen::MapBase
MapBase	external/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType data, Index rows, Index cols)$/;"	f	class:Eigen::MapBase
MapBase	external/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType data, Index size) : Base(data, size) {}$/;"	f	class:Eigen::MapBase
MapBase	external/Eigen/src/Core/MapBase.h	/^    inline MapBase(PointerType data, Index size)$/;"	f	class:Eigen::MapBase
MapBase	external/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, ReadOnlyAccessors>$/;"	c	namespace:Eigen
MapBase	external/Eigen/src/Core/MapBase.h	/^template<typename Derived> class MapBase<Derived, WriteAccessors>$/;"	c	namespace:Eigen
MapLU	external/Eigen/src/LU/PartialPivLU.h	/^  typedef Map<Matrix<Scalar, Dynamic, Dynamic, StorageOrder> > MapLU;$/;"	t	struct:Eigen::internal::partial_lu_impl
MapType	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef Eigen::Map<Derived, Unaligned>  MapType;$/;"	t	class:Eigen::PlainObjectBase
MappedRhs	external/Eigen/src/Core/SolveTriangular.h	/^  typedef Map<Matrix<RhsScalar,Dynamic,1>, Aligned> MappedRhs;$/;"	t	struct:Eigen::internal::triangular_solver_selector
MappedSparseMatrix	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline MappedSparseMatrix(Index rows, Index cols, Index nnz, Index* outerIndexPtr, Index* innerIndexPtr, Scalar* valuePtr)$/;"	f	class:Eigen::MappedSparseMatrix
MappedSparseMatrix	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix$/;"	c	namespace:Eigen
MaskAlignedBit	external/Eigen/src/Core/Block.h	/^    MaskAlignedBit = (InnerPanel && (OuterStrideAtCompileTime!=Dynamic) && (((OuterStrideAtCompileTime * int(sizeof(Scalar))) % 16) == 0)) ? AlignedBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon22
MaskLvalueBit	external/Eigen/src/Core/Diagonal.h	/^    MaskLvalueBit = is_lvalue<MatrixType>::value ? LvalueBit : 0,$/;"	e	enum:Eigen::internal::traits::__anon36
MaskPacketAccessBit	external/Eigen/src/Core/Block.h	/^    MaskPacketAccessBit = (InnerSize == Dynamic || (InnerSize % packet_traits<Scalar>::size) == 0)$/;"	e	enum:Eigen::internal::traits::__anon22
Matrix	external/Eigen/src/Core/Map.h	/^  ::Matrix(const Scalar *data)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Matrix& other)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const Scalar& x, const Scalar& y, const Scalar& z, const Scalar& w)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix(const T0& x, const T1& y)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE explicit Matrix() : Base()$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE explicit Matrix(Index dim)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^    Matrix(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Core/Matrix.h	/^class Matrix$/;"	c	namespace:Eigen
Matrix	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^::Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
Matrix	external/Eigen/src/Geometry/RotationBase.h	/^::Matrix(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
Matrix2	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,2> Matrix2;$/;"	t	class:Eigen::Rotation2D
Matrix2	external/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,2> Matrix2;$/;"	t	class:Eigen::Rotation2D
Matrix3	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::AngleAxis
Matrix3	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::Quaternion
Matrix3	external/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::AngleAxis
Matrix3	external/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,3> Matrix3;$/;"	t	class:Eigen::QuaternionBase
MatrixAlignment	external/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment     = bool(MatrixType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon386
MatrixAlignment	external/Eigen/src/LU/arch/Inverse_SSE.h	/^    MatrixAlignment = bool(MatrixType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon387
MatrixBase	external/Eigen/src/Core/MatrixBase.h	/^    MatrixBase() : Base() {}$/;"	f	class:Eigen::MatrixBase
MatrixBase	external/Eigen/src/Core/MatrixBase.h	/^template<typename Derived> class MatrixBase$/;"	c	namespace:Eigen
MatrixCols	external/Eigen/src/Core/Block.h	/^    MatrixCols = traits<XprType>::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon22
MatrixConjugateReturnType	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::remove_all<typename MatrixType::ConjugateReturnType>::type MatrixConjugateReturnType;$/;"	t	class:Eigen::TriangularView
MatrixExponential	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^MatrixExponential<MatrixType>::MatrixExponential(const MatrixType &M) :$/;"	f	class:Eigen::MatrixExponential
MatrixExponential	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^class MatrixExponential {$/;"	c	namespace:Eigen
MatrixExponentialReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    MatrixExponentialReturnValue(const Derived& src) : m_src(src) { }$/;"	f	struct:Eigen::MatrixExponentialReturnValue
MatrixExponentialReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^template<typename Derived> struct MatrixExponentialReturnValue$/;"	s	namespace:Eigen
MatrixFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    MatrixFunction(const MatrixType& A, AtomicType& atomic) : m_A(A), m_atomic(atomic) { }$/;"	f	class:Eigen::MatrixFunction
MatrixFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^MatrixFunction<MatrixType,AtomicType,1>::MatrixFunction(const MatrixType& A, AtomicType& atomic)$/;"	f	class:Eigen::MatrixFunction
MatrixFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^class MatrixFunction$/;"	c	namespace:Eigen
MatrixFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^class MatrixFunction<MatrixType, AtomicType, 0>$/;"	c	namespace:Eigen
MatrixFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^class MatrixFunction<MatrixType, AtomicType, 1>$/;"	c	namespace:Eigen
MatrixFunctionAtomic	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    MatrixFunctionAtomic(StemFunction f) : m_f(f) { }$/;"	f	class:Eigen::MatrixFunctionAtomic
MatrixFunctionAtomic	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^class MatrixFunctionAtomic$/;"	c	namespace:Eigen
MatrixFunctionReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    MatrixFunctionReturnValue(const Derived& A, StemFunction f) : m_A(A), m_f(f) { }$/;"	f	class:Eigen::MatrixFunctionReturnValue
MatrixFunctionReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^template<typename Derived> class MatrixFunctionReturnValue$/;"	c	namespace:Eigen
MatrixHReturnType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef internal::HessenbergDecompositionMatrixHReturnType<MatrixType> MatrixHReturnType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixL	external/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	external/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitLower> MatrixL;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixL	external/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	external/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Lower> MatrixL;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixL	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLDLT
MatrixL	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixL  MatrixL;$/;"	t	class:Eigen::SimplicialLLT
MatrixL	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<CholMatrixType, Eigen::Lower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixL	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<CholMatrixType, Eigen::UnitLower>  MatrixL;$/;"	t	struct:Eigen::internal::traits
MatrixLogarithmAtomic	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  MatrixLogarithmAtomic() { }$/;"	f	class:Eigen::MatrixLogarithmAtomic
MatrixLogarithmAtomic	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^class MatrixLogarithmAtomic$/;"	c	namespace:Eigen
MatrixLogarithmReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  MatrixLogarithmReturnValue(const Derived& A) : m_A(A) { }$/;"	f	class:Eigen::MatrixLogarithmReturnValue
MatrixLogarithmReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^template<typename Derived> class MatrixLogarithmReturnValue$/;"	c	namespace:Eigen
MatrixMarketIterator	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    MatrixMarketIterator(const std::string folder):m_sym(0),m_isvalid(false),m_matIsLoaded(false),m_hasRhs(false),m_hasrefX(false),m_folder(folder)$/;"	f	class:Eigen::MatrixMarketIterator
MatrixMarketIterator	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^class MatrixMarketIterator $/;"	c	namespace:Eigen
MatrixOptions	external/Eigen/src/SVD/JacobiSVD.h	/^      MatrixOptions = MatrixType::Options$/;"	e	enum:Eigen::JacobiSVD::__anon402
MatrixQReturnType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef internal::FullPivHouseholderQRMatrixQReturnType<MatrixType> MatrixQReturnType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixQType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, Options, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixQType	external/Eigen/src/QR/HouseholderQR.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, RowsAtCompileTime, (MatrixType::Flags&RowMajorBit) ? RowMajor : ColMajor, MaxRowsAtCompileTime, MaxRowsAtCompileTime> MatrixQType;$/;"	t	class:Eigen::HouseholderQR
MatrixRBlockType	external/Eigen/src/Eigen2Support/QR.h	/^    typedef Block<const MatrixType, MatrixType::ColsAtCompileTime, MatrixType::ColsAtCompileTime> MatrixRBlockType;$/;"	t	class:Eigen::QR
MatrixRows	external/Eigen/src/Core/Block.h	/^    MatrixRows = traits<XprType>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon22
MatrixSquareRoot	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    MatrixSquareRoot(const MatrixType& A) $/;"	f	class:Eigen::MatrixSquareRoot
MatrixSquareRoot	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^class MatrixSquareRoot$/;"	c	namespace:Eigen
MatrixSquareRoot	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^class MatrixSquareRoot<MatrixType, 0>$/;"	c	namespace:Eigen
MatrixSquareRoot	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^class MatrixSquareRoot<MatrixType, 1>$/;"	c	namespace:Eigen
MatrixSquareRootQuasiTriangular	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    MatrixSquareRootQuasiTriangular(const MatrixType& A) $/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
MatrixSquareRootQuasiTriangular	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^class MatrixSquareRootQuasiTriangular$/;"	c	namespace:Eigen
MatrixSquareRootReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    MatrixSquareRootReturnValue(const Derived& src) : m_src(src) { }$/;"	f	class:Eigen::MatrixSquareRootReturnValue
MatrixSquareRootReturnValue	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^template<typename Derived> class MatrixSquareRootReturnValue$/;"	c	namespace:Eigen
MatrixSquareRootTriangular	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    MatrixSquareRootTriangular(const MatrixType& A) $/;"	f	class:Eigen::MatrixSquareRootTriangular
MatrixSquareRootTriangular	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^class MatrixSquareRootTriangular$/;"	c	namespace:Eigen
MatrixTReturnType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef internal::TridiagonalizationMatrixTReturnType<MatrixTypeRealView> MatrixTReturnType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	external/Eigen/src/Cholesky/LDLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LDLT
MatrixType	external/Eigen/src/Cholesky/LLT.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::LLT
MatrixType	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodBase
MatrixType	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodDecomposition
MatrixType	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLDLT
MatrixType	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSimplicialLLT
MatrixType	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::CholmodSupernodalLLT
MatrixType	external/Eigen/src/Core/GeneralProduct.h	/^    typedef typename internal::conditional<int(Side)==OnTheRight,_LhsNested,_RhsNested>::type MatrixType;$/;"	t	class:Eigen::GeneralProduct
MatrixType	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::TriangularView
MatrixType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,HDim,HDim> MatrixType;$/;"	t	class:Eigen::Transform
MatrixType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::ei_transform_product_impl
MatrixType	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexEigenSolver
MatrixType	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ComplexSchur
MatrixType	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::EigenSolver
MatrixType	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GeneralizedSelfAdjointEigenSolver
MatrixType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HessenbergDecomposition
MatrixType	external/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::RealSchur
MatrixType	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
MatrixType	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
MatrixType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::Tridiagonalization
MatrixType	external/Eigen/src/Geometry/Transform.h	/^  typedef typename Transform<Scalar,Dim,AffineCompact,Options>::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	external/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
MatrixType	external/Eigen/src/Geometry/Transform.h	/^  typedef typename TransformType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::transform_take_affine_part
MatrixType	external/Eigen/src/Geometry/Transform.h	/^  typedef typename internal::make_proper_matrix_type<Scalar,Rows,HDim,Options>::type MatrixType;$/;"	t	class:Eigen::Transform
MatrixType	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::DiagonalPreconditioner
MatrixType	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::BiCGSTAB
MatrixType	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ConjugateGradient
MatrixType	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::IncompleteLUT
MatrixType	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::IterativeSolverBase
MatrixType	external/Eigen/src/LU/FullPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivLU
MatrixType	external/Eigen/src/LU/PartialPivLU.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PartialPivLU
MatrixType	external/Eigen/src/LU/PartialPivLU.h	/^  typedef Block<MapLU, Dynamic, Dynamic> MatrixType;$/;"	t	struct:Eigen::internal::partial_lu_impl
MatrixType	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixBase
MatrixType	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLDLT
MatrixType	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLLT
MatrixType	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::PastixLU
MatrixType	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pastix_traits
MatrixType	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::pardiso_traits
MatrixType	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::MatrixType MatrixType;$/;"	t	class:Eigen::PardisoImpl
MatrixType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::ColPivHouseholderQR
MatrixType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::FullPivHouseholderQR
MatrixType	external/Eigen/src/QR/HouseholderQR.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::HouseholderQR
MatrixType	external/Eigen/src/SVD/JacobiSVD.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::JacobiSVD
MatrixType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
MatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholesky
MatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLDLT
MatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialLLT
MatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename internal::traits<Derived>::MatrixType MatrixType;$/;"	t	class:Eigen::SimplicialCholeskyBase
MatrixType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/Eigen/src/SparseCore/SparseBlock.h	/^    typedef SparseMatrix<_Scalar, _Options, _Index> MatrixType;$/;"	t	class:Eigen::SparseInnerVectorSet
MatrixType	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef SparseMatrix<_Scalar, _Options, _Index> MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperILU
MatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLU
MatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::SuperLUBase
MatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Derived MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  typedef Matrix<Scalar,Rows,Cols,Options,MRows,MCols> MatrixType;$/;"	t	struct:Eigen::SluMatrixMapHelper
MatrixType	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef _MatrixType MatrixType;$/;"	t	class:Eigen::UmfPackLU
MatrixType	external/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::image_retval_base
MatrixType	external/Eigen/src/misc/Image.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/Eigen/src/misc/Kernel.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/Eigen/src/misc/Solve.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/Eigen/src/misc/SparseSolve.h	/^  typedef typename DecompositionType::MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _MatrixType MatrixType;$/;"	t	class:Eigen::GMRES
MatrixType	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _MatrixType MatrixType;$/;"	t	struct:Eigen::internal::traits
MatrixType	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef Matrix<Scalar,Dynamic,Dynamic> MatrixType;$/;"	t	class:Eigen::IncompleteLU
MatrixType	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    typedef _MatrixType MatrixType; $/;"	t	class:Scaling
MatrixType	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    typedef DynamicSparseMatrix<_Scalar, _Options, _Index> MatrixType;$/;"	t	class:Eigen::SparseInnerVectorSet
MatrixType	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    typedef SparseMatrix<Scalar,ColMajor> MatrixType; $/;"	t	class:Eigen::MatrixMarketIterator
MatrixTypeCleaned	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<MatrixType>::type MatrixTypeCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeInnerStride	external/Eigen/src/Core/CwiseUnaryView.h	/^    MatrixTypeInnerStride =  inner_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon29
MatrixTypeIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::InnerIterator MatrixTypeIterator;$/;"	t	class:Eigen::CwiseUnaryOpImpl
MatrixTypeIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::InnerIterator MatrixTypeIterator;$/;"	t	class:Eigen::CwiseUnaryViewImpl
MatrixTypeNested	external/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Core/Diagonal.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::Replicate
MatrixTypeNested	external/Eigen/src/Core/Replicate.h	/^  typedef typename nested<MatrixType,Factor>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Core/Reverse.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNested	external/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Core/Transpose.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::TriangularView
MatrixTypeNested	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::traits<PartialReduxExpr>::MatrixTypeNested MatrixTypeNested;$/;"	t	class:Eigen::PartialReduxExpr
MatrixTypeNested	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Eigen2Support/Minor.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/LU/Inverse.h	/^  typedef typename internal::eval<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::inverse_impl
MatrixTypeNested	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename nested<MatrixType>::type MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNested	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
MatrixTypeNested	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
MatrixTypeNested	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseTriangularView
MatrixTypeNested	external/Eigen/src/SparseCore/SparseView.h	/^  typedef typename MatrixType::Nested MatrixTypeNested;$/;"	t	class:Eigen::SparseView
MatrixTypeNestedCleaned	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::permut_matrix_product_retval
MatrixTypeNestedCleaned	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::MatrixTypeNestedCleaned MatrixTypeNestedCleaned;$/;"	t	class:Eigen::SelfAdjointView
MatrixTypeNestedCleaned	external/Eigen/src/Core/SelfAdjointView.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	external/Eigen/src/Core/Transpositions.h	/^    typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::transposition_matrix_product_retval
MatrixTypeNestedCleaned	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedCleaned MatrixTypeNestedCleaned;$/;"	t	class:Eigen::TriangularView
MatrixTypeNestedCleaned	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	external/Eigen/src/LU/Inverse.h	/^  typedef typename remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::inverse_impl
MatrixTypeNestedCleaned	external/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::permut_sparsematrix_product_retval
MatrixTypeNestedCleaned	external/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename remove_all<typename MatrixType::Nested>::type MatrixTypeNestedCleaned;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedCleaned	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type MatrixTypeNestedCleaned;$/;"	t	class:Eigen::SparseTriangularView
MatrixTypeNestedNonRef	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::MatrixTypeNestedNonRef MatrixTypeNestedNonRef;$/;"	t	class:Eigen::TriangularView
MatrixTypeNestedNonRef	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	struct:Eigen::internal::traits
MatrixTypeNestedNonRef	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    typedef typename internal::remove_reference<MatrixTypeNested>::type MatrixTypeNestedNonRef;$/;"	t	class:Eigen::SparseTriangularView
MatrixTypeNestedPlain	external/Eigen/src/Core/Transpose.h	/^  typedef typename remove_reference<MatrixTypeNested>::type MatrixTypeNestedPlain;$/;"	t	struct:Eigen::internal::traits
MatrixTypeOuterStride	external/Eigen/src/Core/Diagonal.h	/^    MatrixTypeOuterStride = outer_stride_at_compile_time<MatrixType>::ret,$/;"	e	enum:Eigen::internal::traits::__anon36
MatrixTypeRealView	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename internal::remove_all<typename MatrixType::RealReturnType>::type MatrixTypeRealView;$/;"	t	class:Eigen::Tridiagonalization
MatrixTypeReverseIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::ReverseInnerIterator MatrixTypeReverseIterator;$/;"	t	class:Eigen::CwiseUnaryOpImpl
MatrixTypeReverseIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename _MatrixTypeNested::ReverseInnerIterator MatrixTypeReverseIterator;$/;"	t	class:Eigen::CwiseUnaryViewImpl
MatrixU	external/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const MatrixType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	external/Eigen/src/Cholesky/LDLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::LDLT_Traits
MatrixU	external/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const MatrixType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	external/Eigen/src/Cholesky/LLT.h	/^  typedef const TriangularView<const typename MatrixType::AdjointReturnType, Upper> MatrixU;$/;"	t	struct:Eigen::internal::LLT_Traits
MatrixU	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLDLT
MatrixU	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename Traits::MatrixU  MatrixU;$/;"	t	class:Eigen::SimplicialLLT
MatrixU	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<typename CholMatrixType::AdjointReturnType, Eigen::UnitUpper> MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixU	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef SparseTriangularView<typename CholMatrixType::AdjointReturnType, Eigen::Upper>   MatrixU;$/;"	t	struct:Eigen::internal::traits
MatrixUType	external/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::RowsAtCompileTime, MinSize> MatrixUType;$/;"	t	class:Eigen::SVD
MatrixUType	external/Eigen/src/SVD/JacobiSVD.h	/^            MatrixUType;$/;"	t	class:Eigen::JacobiSVD
MatrixVType	external/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::ColsAtCompileTime, MatrixType::ColsAtCompileTime> MatrixVType;$/;"	t	class:Eigen::SVD
MatrixVType	external/Eigen/src/SVD/JacobiSVD.h	/^            MatrixVType;$/;"	t	class:Eigen::JacobiSVD
MatrixWrapper	external/Eigen/src/Core/ArrayWrapper.h	/^    inline MatrixWrapper(ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::MatrixWrapper
MatrixWrapper	external/Eigen/src/Core/ArrayWrapper.h	/^class MatrixWrapper : public MatrixBase<MatrixWrapper<ExpressionType> >$/;"	c	namespace:Eigen
MatrixXpr	external/Eigen/src/Core/util/Constants.h	/^struct MatrixXpr {};$/;"	s	namespace:Eigen
Max	external/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MaxCols	external/Eigen/src/Core/GeneralProduct.h	/^    MaxCols  = _Rhs::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon114
MaxCols	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const int MaxCols = Traits::MaxColsAtCompileTime;$/;"	m	class:Eigen::MatrixFunction
MaxColsAtCompileTime	external/Eigen/src/Cholesky/LDLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon1
MaxColsAtCompileTime	external/Eigen/src/Cholesky/LLT.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::LLT::__anon2
MaxColsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
MaxColsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon20
MaxColsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    MaxColsAtCompileTime = _Cols,$/;"	e	enum:Eigen::internal::traits::__anon21
MaxColsAtCompileTime	external/Eigen/src/Core/Block.h	/^    MaxColsAtCompileTime = BlockCols==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon22
MaxColsAtCompileTime	external/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxColsAtCompileTime = traits<Ancestor>::MaxColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon25
MaxColsAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon30
MaxColsAtCompileTime	external/Eigen/src/Core/Diagonal.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon36
MaxColsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^      MaxColsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon37
MaxColsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^    MaxColsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon39
MaxColsAtCompileTime	external/Eigen/src/Core/DiagonalProduct.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon40
MaxColsAtCompileTime	external/Eigen/src/Core/Matrix.h	/^    MaxColsAtCompileTime = _MaxCols,$/;"	e	enum:Eigen::internal::traits::__anon153
MaxColsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::PermutationBase::__anon158
MaxColsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      MaxColsAtCompileTime = Traits::MaxColsAtCompileTime$/;"	e	enum:Eigen::Transpose::__anon160
MaxColsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^    MaxColsAtCompileTime = IndicesType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon159
MaxColsAtCompileTime	external/Eigen/src/Core/Product.h	/^    MaxColsAtCompileTime = RhsCleaned::MaxColsAtCompileTime,$/;"	e	enum:internal::traits::__anon164
MaxColsAtCompileTime	external/Eigen/src/Core/ProductBase.h	/^    MaxColsAtCompileTime = traits<Rhs>::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon165
MaxColsAtCompileTime	external/Eigen/src/Core/Replicate.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon178
MaxColsAtCompileTime	external/Eigen/src/Core/Reverse.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon180
MaxColsAtCompileTime	external/Eigen/src/Core/Select.h	/^    MaxColsAtCompileTime = ConditionMatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
MaxColsAtCompileTime	external/Eigen/src/Core/Transpose.h	/^    MaxColsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon192
MaxColsAtCompileTime	external/Eigen/src/Core/TriangularMatrix.h	/^      MaxColsAtCompileTime = internal::traits<Derived>::MaxColsAtCompileTime$/;"	e	enum:Eigen::TriangularBase::__anon195
MaxColsAtCompileTime	external/Eigen/src/Core/VectorwiseOp.h	/^    MaxColsAtCompileTime = Direction==Horizontal ? 1 : MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon200
MaxColsAtCompileTime	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      MaxColsAtCompileTime = _RhsNested::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon233
MaxColsAtCompileTime	external/Eigen/src/Eigen2Support/Minor.h	/^    MaxColsAtCompileTime = (MatrixType::MaxColsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon345
MaxColsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexEigenSolver::__anon347
MaxColsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ComplexSchur::__anon348
MaxColsAtCompileTime	external/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::EigenSolver::__anon349
MaxColsAtCompileTime	external/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::RealSchur::__anon351
MaxColsAtCompileTime	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon352
MaxColsAtCompileTime	external/Eigen/src/Geometry/Homogeneous.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon356
MaxColsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^      MaxColsAtCompileTime = internal::traits<HouseholderSequence>::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderSequence::__anon380
MaxColsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^    MaxColsAtCompileTime = MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon379
MaxColsAtCompileTime	external/Eigen/src/LU/FullPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivLU::__anon382
MaxColsAtCompileTime	external/Eigen/src/LU/PartialPivLU.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::PartialPivLU::__anon385
MaxColsAtCompileTime	external/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon393
MaxColsAtCompileTime	external/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon394
MaxColsAtCompileTime	external/Eigen/src/QR/HouseholderQR.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime$/;"	e	enum:Eigen::HouseholderQR::__anon395
MaxColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^      MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon402
MaxColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon399
MaxColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon400
MaxColsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    MaxColsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon401
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseBlock.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon413
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    MaxColsAtCompileTime = Tr ? int(traits<Lhs>::MaxColsAtCompileTime)  : int(traits<Rhs>::MaxColsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon418
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    MaxColsAtCompileTime = _Rhs::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon419
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = 1,$/;"	e	enum:Eigen::internal::traits::__anon423
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon422
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseProduct.h	/^    MaxColsAtCompileTime = _RhsNested::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
MaxColsAtCompileTime	external/Eigen/src/SparseCore/SparseVector.h	/^    MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon435
MaxColsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon447
MaxColsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        MaxColsAtCompileTime = ColsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
MaxColsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        MaxColsAtCompileTime = _RhsNested::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon449
MaxColsAtCompileTime	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    MaxColsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon453
MaxDepth	external/Eigen/src/Core/GeneralProduct.h	/^    MaxDepth = EIGEN_SIZE_MIN_PREFER_FIXED(_Lhs::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon114
MaxDepthAtCompileTime	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      MaxDepthAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(Lhs::MaxColsAtCompileTime,Rhs::MaxRowsAtCompileTime)$/;"	e	enum:Eigen::GeneralProduct::__anon247
MaxDiagSizeAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^      MaxDiagSizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED(MaxRowsAtCompileTime,MaxColsAtCompileTime),$/;"	e	enum:Eigen::JacobiSVD::__anon402
MaxRows	external/Eigen/src/Core/GeneralProduct.h	/^    MaxRows  = _Lhs::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon114
MaxRows	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const int MaxRows = Traits::MaxRowsAtCompileTime;$/;"	m	class:Eigen::MatrixFunction
MaxRowsAtCompileTime	external/Eigen/src/Cholesky/LDLT.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon1
MaxRowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
MaxRowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon20
MaxRowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    MaxRowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon21
MaxRowsAtCompileTime	external/Eigen/src/Core/Block.h	/^    MaxRowsAtCompileTime = BlockRows==0 ? 0$/;"	e	enum:Eigen::internal::traits::__anon22
MaxRowsAtCompileTime	external/Eigen/src/Core/CwiseBinaryOp.h	/^    MaxRowsAtCompileTime = traits<Ancestor>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon25
MaxRowsAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon30
MaxRowsAtCompileTime	external/Eigen/src/Core/Diagonal.h	/^    MaxRowsAtCompileTime = int(MatrixType::MaxSizeAtCompileTime) == Dynamic ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon36
MaxRowsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^      MaxRowsAtCompileTime = DiagonalVectorType::MaxSizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon37
MaxRowsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^    MaxRowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon39
MaxRowsAtCompileTime	external/Eigen/src/Core/DiagonalProduct.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon40
MaxRowsAtCompileTime	external/Eigen/src/Core/Matrix.h	/^    MaxRowsAtCompileTime = _MaxRows,$/;"	e	enum:Eigen::internal::traits::__anon153
MaxRowsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon158
MaxRowsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      MaxRowsAtCompileTime = Traits::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon160
MaxRowsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^    MaxRowsAtCompileTime = IndicesType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon159
MaxRowsAtCompileTime	external/Eigen/src/Core/Product.h	/^    MaxRowsAtCompileTime = LhsCleaned::MaxRowsAtCompileTime,$/;"	e	enum:internal::traits::__anon164
MaxRowsAtCompileTime	external/Eigen/src/Core/ProductBase.h	/^    MaxRowsAtCompileTime = traits<Lhs>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon165
MaxRowsAtCompileTime	external/Eigen/src/Core/Replicate.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon178
MaxRowsAtCompileTime	external/Eigen/src/Core/Reverse.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon180
MaxRowsAtCompileTime	external/Eigen/src/Core/Select.h	/^    MaxRowsAtCompileTime = ConditionMatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
MaxRowsAtCompileTime	external/Eigen/src/Core/Transpose.h	/^    MaxRowsAtCompileTime = MatrixType::MaxColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon192
MaxRowsAtCompileTime	external/Eigen/src/Core/TriangularMatrix.h	/^      MaxRowsAtCompileTime = internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon195
MaxRowsAtCompileTime	external/Eigen/src/Core/VectorwiseOp.h	/^    MaxRowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon200
MaxRowsAtCompileTime	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      MaxRowsAtCompileTime = _LhsNested::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon233
MaxRowsAtCompileTime	external/Eigen/src/Eigen2Support/Minor.h	/^    MaxRowsAtCompileTime = (MatrixType::MaxRowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon345
MaxRowsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon347
MaxRowsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon348
MaxRowsAtCompileTime	external/Eigen/src/Eigenvalues/EigenSolver.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon349
MaxRowsAtCompileTime	external/Eigen/src/Eigenvalues/RealSchur.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon351
MaxRowsAtCompileTime	external/Eigen/src/Geometry/Homogeneous.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon356
MaxRowsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^      MaxRowsAtCompileTime = internal::traits<HouseholderSequence>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon380
MaxRowsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^    MaxRowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon379
MaxRowsAtCompileTime	external/Eigen/src/LU/FullPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon382
MaxRowsAtCompileTime	external/Eigen/src/LU/PartialPivLU.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon385
MaxRowsAtCompileTime	external/Eigen/src/QR/ColPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon393
MaxRowsAtCompileTime	external/Eigen/src/QR/FullPivHouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon394
MaxRowsAtCompileTime	external/Eigen/src/QR/HouseholderQR.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon395
MaxRowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^      MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon402
MaxRowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon398
MaxRowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon399
MaxRowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon400
MaxRowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    MaxRowsAtCompileTime = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon401
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseBlock.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon413
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    MaxRowsAtCompileTime = Tr ? int(traits<Rhs>::MaxRowsAtCompileTime)  : int(traits<Lhs>::MaxRowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon418
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    MaxRowsAtCompileTime = _Lhs::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon419
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon422
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon423
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseProduct.h	/^    MaxRowsAtCompileTime = _LhsNested::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
MaxRowsAtCompileTime	external/Eigen/src/SparseCore/SparseVector.h	/^    MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon435
MaxRowsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon447
MaxRowsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        MaxRowsAtCompileTime = RowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
MaxRowsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        MaxRowsAtCompileTime = _LhsNested::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon449
MaxRowsAtCompileTime	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    MaxRowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon453
MaxSize	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon350
MaxSize	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSize = MatrixType::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon353
MaxSizeAtCompileTime	external/Eigen/src/Core/Assign.h	/^    MaxSizeAtCompileTime = Derived::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_traits::__anon7
MaxSizeAtCompileTime	external/Eigen/src/Core/Assign_MKL.h	/^      MaxSizeAtCompileTime = Dst::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
MaxSizeAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::MaxRowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon30
MaxSizeAtCompileTime	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      MaxSizeAtCompileTime = (internal::size_at_compile_time<MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
MaxSizeAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        MaxSizeAtCompileTime = (internal::size_at_compile_time<MaxRowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
MaxSizeMinusOne	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : MaxSize - 1$/;"	e	enum:Eigen::HessenbergDecomposition::__anon350
MaxSizeMinusOne	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      MaxSizeMinusOne = MaxSize == Dynamic ? Dynamic : (MaxSize > 1 ? MaxSize - 1 : 1)$/;"	e	enum:Eigen::Tridiagonalization::__anon353
MaxSmallDimAtCompileTime	external/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::image_retval::__anon384
MaxSmallDimAtCompileTime	external/Eigen/src/LU/FullPivLU.h	/^  enum { MaxSmallDimAtCompileTime = EIGEN_SIZE_MIN_PREFER_FIXED($/;"	e	enum:Eigen::internal::kernel_retval::__anon383
MayEnableVml	external/Eigen/src/Core/Assign_MKL.h	/^      MayEnableVml = MightEnableVml && LargeEnough,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
MayInnerVectorize	external/Eigen/src/Core/Assign.h	/^    MayInnerVectorize  = MightVectorize && int(InnerSize)!=Dynamic && int(InnerSize)%int(PacketSize)==0$/;"	e	enum:Eigen::internal::assign_traits::__anon8
MayLinearVectorize	external/Eigen/src/Core/Assign.h	/^    MayLinearVectorize = MightVectorize && MayLinearize && DstHasDirectAccess$/;"	e	enum:Eigen::internal::assign_traits::__anon8
MayLinearVectorize	external/Eigen/src/Core/Redux.h	/^    MayLinearVectorize = MightVectorize && (int(Derived::Flags)&LinearAccessBit),$/;"	e	enum:Eigen::internal::redux_traits::__anon168
MayLinearize	external/Eigen/src/Core/Assign.h	/^    MayLinearize = StorageOrdersAgree && (int(Derived::Flags) & int(OtherDerived::Flags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::assign_traits::__anon8
MayLinearize	external/Eigen/src/Core/Assign_MKL.h	/^      MayLinearize = MayEnableVml && MightLinearize$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
MaySliceVectorize	external/Eigen/src/Core/Assign.h	/^    MaySliceVectorize  = MightVectorize && DstHasDirectAccess$/;"	e	enum:Eigen::internal::assign_traits::__anon8
MaySliceVectorize	external/Eigen/src/Core/Redux.h	/^    MaySliceVectorize  = MightVectorize && int(InnerMaxSize)>=3*PacketSize$/;"	e	enum:Eigen::internal::redux_traits::__anon168
MayUnrollCompletely	external/Eigen/src/Core/Assign.h	/^    MayUnrollCompletely = int(Derived::SizeAtCompileTime) != Dynamic$/;"	e	enum:Eigen::internal::assign_traits::__anon10
MayUnrollInner	external/Eigen/src/Core/Assign.h	/^    MayUnrollInner      = int(InnerSize) != Dynamic$/;"	e	enum:Eigen::internal::assign_traits::__anon10
MightEnableVml	external/Eigen/src/Core/Assign_MKL.h	/^      MightEnableVml =  vml_call<UnaryOp>::IsSupported && StorageOrdersAgree && DstHasDirectAccess && SrcHasDirectAccess$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
MightLinearize	external/Eigen/src/Core/Assign_MKL.h	/^      MightLinearize = MightEnableVml && (int(Dst::Flags) & int(Src::Flags) & LinearAccessBit),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
MightVectorize	external/Eigen/src/Core/Assign.h	/^    MightVectorize = StorageOrdersAgree$/;"	e	enum:Eigen::internal::assign_traits::__anon8
MightVectorize	external/Eigen/src/Core/Redux.h	/^    MightVectorize = (int(Derived::Flags)&ActualPacketAccessBit)$/;"	e	enum:Eigen::internal::redux_traits::__anon168
Min	external/Eigen/src/Geometry/AlignedBox.h	/^    Min=0, Max=1,$/;"	e	enum:Eigen::AlignedBox::CornerType
MinRowsAtCompileTime	external/Eigen/src/Geometry/Umeyama.h	/^    MinRowsAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(MatrixType::RowsAtCompileTime, OtherMatrixType::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::umeyama_transform_matrix_type::__anon377
MinSize	external/Eigen/src/Eigen2Support/SVD.h	/^      MinSize = EIGEN_SIZE_MIN_PREFER_DYNAMIC(MatrixType::RowsAtCompileTime, MatrixType::ColsAtCompileTime)$/;"	e	enum:Eigen::SVD::__anon346
Minor	external/Eigen/src/Eigen2Support/Minor.h	/^    inline Minor(const MatrixType& matrix,$/;"	f	class:Eigen::Minor
Minor	external/Eigen/src/Eigen2Support/Minor.h	/^template<typename MatrixType> class Minor$/;"	c	namespace:Eigen
Mode	external/Eigen/src/Core/SelfAdjointView.h	/^      Mode = internal::traits<SelfAdjointView>::Mode$/;"	e	enum:Eigen::SelfAdjointView::__anon184
Mode	external/Eigen/src/Core/SelfAdjointView.h	/^    Mode = UpLo | SelfAdjoint,$/;"	e	enum:Eigen::internal::traits::__anon183
Mode	external/Eigen/src/Core/TriangularMatrix.h	/^      Mode = _Mode,$/;"	e	enum:Eigen::TriangularView::__anon197
Mode	external/Eigen/src/Core/TriangularMatrix.h	/^      Mode = internal::traits<Derived>::Mode,$/;"	e	enum:Eigen::TriangularBase::__anon195
Mode	external/Eigen/src/Core/TriangularMatrix.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::internal::traits::__anon196
Mode	external/Eigen/src/Geometry/Transform.h	/^    Mode = Transform::Mode,$/;"	e	enum:Eigen::internal::transform_traits::__anon369
Mode	external/Eigen/src/Geometry/Transform.h	/^    Mode = _Mode,$/;"	e	enum:Eigen::Transform::__anon370
Mode	external/Eigen/src/Geometry/Transform.h	/^    Mode =$/;"	e	enum:Eigen::internal::transform_product_result::__anon372
MoveOuter	external/Eigen/src/SparseCore/SparsePermutation.h	/^      MoveOuter = SrcStorageOrder==RowMajor ? Side==OnTheLeft : Side==OnTheRight$/;"	e	enum:Eigen::internal::permut_sparsematrix_product_retval::__anon427
MoveOuter	external/Eigen/src/SparseCore/SparsePermutation.h	/^    MoveOuter = SrcStorageOrder==RowMajor ? Side==OnTheLeft : Side==OnTheRight$/;"	e	enum:Eigen::internal::traits::__anon426
MulCost	external/Eigen/src/Core/NumTraits.h	/^    MulCost = 1$/;"	e	enum:Eigen::GenericNumTraits::__anon157
NColsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	s
NDEBUG	external/SuiteSparse/Include/cholmod_internal.h	52;"	d
NEED_GLOBAL_LOCK_INIT	external/unsupported/test/mpreal/dlmalloc.c	1862;"	d	file:
NMATRIXOPS	external/SuiteSparse/Include/cholmod_config.h	77;"	d
NMODIFY	external/SuiteSparse/Include/cholmod_config.h	78;"	d
NOINLINE	external/unsupported/test/mpreal/dlmalloc.c	737;"	d	file:
NOINLINE	external/unsupported/test/mpreal/dlmalloc.c	739;"	d	file:
NOINLINE	external/unsupported/test/mpreal/dlmalloc.c	741;"	d	file:
NO_MALLINFO	external/unsupported/test/mpreal/dlmalloc.c	655;"	d	file:
NO_MALLINFO	external/unsupported/test/mpreal/dlmalloc.h	40;"	d
NO_SEGMENT_TRAVERSAL	external/unsupported/test/mpreal/dlmalloc.c	486;"	d	file:
NO_SEGMENT_TRAVERSAL	external/unsupported/test/mpreal/dlmalloc.c	661;"	d	file:
NRowsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	s
NSMALLBINS	external/unsupported/test/mpreal/dlmalloc.c	2438;"	d	file:
NSUPERNODAL	external/SuiteSparse/Include/cholmod_config.h	79;"	d
NTREEBINS	external/unsupported/test/mpreal/dlmalloc.c	2439;"	d	file:
NULL	external/SuiteSparse/Include/cholmod_internal.h	86;"	d
NUMBER_DIRECTIONS	external/unsupported/test/forward_adolc.cpp	13;"	d	file:
NUMERIC_TYPE_MUST_BE_REAL	external/Eigen/src/Core/util/StaticAssert.h	/^        NUMERIC_TYPE_MUST_BE_REAL,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
NeedToConjugate	external/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = Base::NeedToConjugate ? 0 : IsComplex$/;"	e	enum:Eigen::internal::blas_traits::__anon262
NeedToConjugate	external/Eigen/src/Core/util/BlasUtil.h	/^    NeedToConjugate = false,$/;"	e	enum:Eigen::internal::blas_traits::__anon261
NeedsToAlign	external/Eigen/src/Core/PlainObjectBase.h	/^    enum { NeedsToAlign = SizeAtCompileTime != Dynamic && (internal::traits<Derived>::Flags & AlignedBit) != 0 };$/;"	e	enum:Eigen::PlainObjectBase::__anon162
NestByRefBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int NestByRefBit = 0x100;$/;"	m	namespace:Eigen
NestByValue	external/Eigen/src/Core/NestByValue.h	/^    inline NestByValue(const ExpressionType& matrix) : m_expression(matrix) {}$/;"	f	class:Eigen::NestByValue
NestByValue	external/Eigen/src/Core/NestByValue.h	/^template<typename ExpressionType> class NestByValue$/;"	c	namespace:Eigen
Nested	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalWrapper Nested;$/;"	t	class:Eigen::DiagonalWrapper
Nested	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef const DiagonalMatrix& Nested;$/;"	t	class:Eigen::DiagonalMatrix
Nested	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef AutoDiffScalar<DerType>& Nested;$/;"	t	struct:Eigen::NumTraits
NestedExpressionType	external/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::nested<ExpressionType>::type NestedExpressionType;$/;"	t	class:Eigen::ArrayWrapper
NestedExpressionType	external/Eigen/src/Core/ArrayWrapper.h	/^    typedef typename internal::nested<ExpressionType>::type NestedExpressionType;$/;"	t	class:Eigen::MatrixWrapper
NewInf	external/Eigen/src/Core/util/Meta.h	/^      NewInf = int(TakeInf) ? InfX : int(MidX),$/;"	m	namespace:Eigen::internal
NewInf	external/Eigen/src/Eigen2Support/Meta.h	/^      NewInf = int(TakeInf) ? InfX : int(MidX),$/;"	m	namespace:Eigen
NewSup	external/Eigen/src/Core/util/Meta.h	/^      NewSup = int(TakeInf) ? int(MidX) : SupX$/;"	m	namespace:Eigen::internal
NewSup	external/Eigen/src/Eigen2Support/Meta.h	/^      NewSup = int(TakeInf) ? int(MidX) : SupX$/;"	m	namespace:Eigen
NoAlias	external/Eigen/src/Core/NoAlias.h	/^    NoAlias(ExpressionType& expression) : m_expression(expression) {}$/;"	f	class:Eigen::NoAlias
NoAlias	external/Eigen/src/Core/NoAlias.h	/^class NoAlias$/;"	c	namespace:Eigen
NoChange	external/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	e	enum:Eigen::NoChange_t
NoChange_t	external/Eigen/src/Core/util/Constants.h	/^enum NoChange_t   { NoChange };$/;"	g	namespace:Eigen
NoConvergence	external/Eigen/src/Core/util/Constants.h	/^  NoConvergence = 2,$/;"	e	enum:Eigen::ComputationInfo
NoPivoting	external/Eigen/src/Core/util/Constants.h	/^  NoPivoting          = 0x02, $/;"	e	enum:Eigen::DecompositionOptions
NoQRPreconditioner	external/Eigen/src/Core/util/Constants.h	/^  NoQRPreconditioner,$/;"	e	enum:Eigen::QRPreconditioners
NoUnrolling	external/Eigen/src/Core/util/Constants.h	/^  NoUnrolling,$/;"	e	enum:Eigen::__anon267
NonConstImagReturnType	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryView<internal::scalar_imag_ref_op<Scalar>, Derived> NonConstImagReturnType;$/;"	t
NonConstRealReturnType	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type NonConstRealReturnType;$/;"	t
NonInteger	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::NonInteger NonInteger;$/;"	t	struct:Eigen::internal::random_default_impl
NonInteger	external/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::NonInteger      NonInteger;$/;"	t	class:Eigen::AlignedBox
NonInteger	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef AutoDiffScalar<DerType> NonInteger;$/;"	t	struct:Eigen::NumTraits
NonSymmetric	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^  NonSymmetric = 0x0$/;"	e	enum:Eigen::__anon455
NormalReturnType	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef Block<Coefficients,AmbientDimAtCompileTime,1> NormalReturnType;$/;"	t	class:Eigen::Hyperplane
NormalReturnType	external/Eigen/src/Geometry/Hyperplane.h	/^  typedef Block<Coefficients,AmbientDimAtCompileTime,1> NormalReturnType;$/;"	t	class:Eigen::Hyperplane
NotMakingProgressIterations	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        NotMakingProgressIterations = 5,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
NotMakingProgressJacobian	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        NotMakingProgressJacobian = 4,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
NotStarted	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        NotStarted = -2,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
NullaryExpr	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index rows, Index cols, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(Index size, const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NullaryExpr	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::NullaryExpr(const CustomNullaryOp& func)$/;"	f	class:Eigen::DenseBase
NumOfDerivativesAtCompileTime	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { NumOfDerivativesAtCompileTime = OrderAtCompileTime \/*!< The number of derivatives defined for the current spline. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon466
NumOfDerivativesAtCompileTime	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { NumOfDerivativesAtCompileTime = _DerivativeOrder==Dynamic ? Dynamic : _DerivativeOrder+1 \/*!< The number of derivatives defined for the current spline. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon468
NumTraits	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^template<typename DerType> struct NumTraits<AutoDiffScalar<DerType> >$/;"	s	namespace:Eigen
NumberOfRegisters	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
NumberOfRegisters	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
NumberOfRegisters	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    NumberOfRegisters = EIGEN_ARCH_DEFAULT_NUMBER_OF_REGISTERS,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
NumericalDiff	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        NumericalDiff(const T0& a0) : Functor(a0), epsfcn(0) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        NumericalDiff(const T0& a0, const T1& a1) : Functor(a0, a1), epsfcn(0) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        NumericalDiff(const T0& a0, const T1& a1, const T2& a2) : Functor(a0, a1, a2), epsfcn(0) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    NumericalDiff(Scalar _epsfcn=0.) : Functor(), epsfcn(_epsfcn) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    NumericalDiff(const Functor& f, Scalar _epsfcn=0.) : Functor(f), epsfcn(_epsfcn) {}$/;"	f	class:Eigen::NumericalDiff
NumericalDiff	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^class NumericalDiff : public _Functor$/;"	c	namespace:Eigen
NumericalDiffMode	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^enum NumericalDiffMode {$/;"	g	namespace:Eigen
NumericalIssue	external/Eigen/src/Core/util/Constants.h	/^  NumericalIssue = 1, $/;"	e	enum:Eigen::ComputationInfo
ONLY_MSPACES	external/unsupported/test/mpreal/dlmalloc.c	550;"	d	file:
ONLY_MSPACES	external/unsupported/test/mpreal/dlmalloc.c	552;"	d	file:
ONLY_MSPACES	external/unsupported/test/mpreal/dlmalloc.h	37;"	d
Object	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef _Object Object;$/;"	t	class:Eigen::KdBVH
ObjectIterator	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef const Object *ObjectIterator;$/;"	t	class:Eigen::KdBVH
ObjectList	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef std::vector<Object, aligned_allocator<Object> > ObjectList;$/;"	t	class:Eigen::KdBVH
OffsetCol	external/Eigen/src/Core/Reverse.h	/^      OffsetCol  = ReverseCol && IsRowMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon181
OffsetRow	external/Eigen/src/Core/Reverse.h	/^      OffsetRow  = ReverseRow && IsColMajor ? PacketSize : 1,$/;"	e	enum:Eigen::Reverse::__anon181
OnTheLeft	external/Eigen/src/Core/util/Constants.h	/^  OnTheLeft = 1,  $/;"	e	enum:Eigen::__anon270
OnTheRight	external/Eigen/src/Core/util/Constants.h	/^  OnTheRight = 2  $/;"	e	enum:Eigen::__anon270
Ones	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones()$/;"	f	class:Eigen::DenseBase
Ones	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Ones	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Ones(Index size)$/;"	f	class:Eigen::DenseBase
OptimizeNonrigid	OptApp.cpp	/^void COptApp::OptimizeNonrigid()$/;"	f	class:COptApp
OptimizeRigid	OptApp.cpp	/^void COptApp::OptimizeRigid()$/;"	f	class:COptApp
OptimizeSLAC	OptApp.cpp	/^void COptApp::OptimizeSLAC()$/;"	f	class:COptApp
Options	external/Eigen/src/Cholesky/LDLT.h	/^      Options = MatrixType::Options & ~RowMajorBit, \/\/ these are the options for the TmpMatrixType, we need a ColMajor matrix here!$/;"	e	enum:Eigen::LDLT::__anon1
Options	external/Eigen/src/Cholesky/LLT.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::LLT::__anon2
Options	external/Eigen/src/Core/Array.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Array::__anon5
Options	external/Eigen/src/Core/BandMatrix.h	/^      Options = internal::traits<Derived>::Options$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
Options	external/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon20
Options	external/Eigen/src/Core/BandMatrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon21
Options	external/Eigen/src/Core/Map.h	/^  enum { Options }; \/\/ Expressions don't have Options$/;"	e	enum:Eigen::internal::traits::__anon146
Options	external/Eigen/src/Core/Matrix.h	/^    Options = _Options,$/;"	e	enum:Eigen::internal::traits::__anon153
Options	external/Eigen/src/Core/Matrix.h	/^    enum { Options = _Options };$/;"	e	enum:Eigen::Matrix::__anon154
Options	external/Eigen/src/Core/PlainObjectBase.h	/^    enum { Options = internal::traits<Derived>::Options };$/;"	e	enum:Eigen::PlainObjectBase::__anon161
Options	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon347
Options	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ComplexSchur::__anon348
Options	external/Eigen/src/Eigenvalues/EigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::EigenSolver::__anon349
Options	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon350
Options	external/Eigen/src/Eigenvalues/RealSchur.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::RealSchur::__anon351
Options	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon352
Options	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::Tridiagonalization::__anon353
Options	external/Eigen/src/Geometry/Hyperplane.h	/^    Options = _Options$/;"	e	enum:Eigen::Hyperplane::__anon358
Options	external/Eigen/src/Geometry/ParametrizedLine.h	/^    Options = _Options$/;"	e	enum:Eigen::ParametrizedLine::__anon359
Options	external/Eigen/src/Geometry/Transform.h	/^    Options = _Options,$/;"	e	enum:Eigen::Transform::__anon370
Options	external/Eigen/src/LU/FullPivLU.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::FullPivLU::__anon382
Options	external/Eigen/src/LU/PartialPivLU.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::PartialPivLU::__anon385
Options	external/Eigen/src/QR/ColPivHouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon393
Options	external/Eigen/src/QR/FullPivHouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon394
Options	external/Eigen/src/QR/HouseholderQR.h	/^      Options = MatrixType::Options,$/;"	e	enum:Eigen::HouseholderQR::__anon395
Options	external/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon399
Options	external/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon400
Options	external/Eigen/src/SVD/JacobiSVD.h	/^    Options = MatrixType::Options$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon401
Options	external/Eigen/src/SparseCore/SparseMatrix.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseMatrix::__anon424
Options	external/Eigen/src/SparseCore/SparseVector.h	/^      Options = _Options$/;"	e	enum:Eigen::SparseVector::__anon437
Options	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const int Options = MatrixType::Options;$/;"	m	class:Eigen::MatrixFunction
Options	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^      Options = _Options$/;"	e	enum:Eigen::DynamicSparseMatrix::__anon454
OrderAtCompileTime	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { OrderAtCompileTime = _Degree==Dynamic ? Dynamic : _Degree+1 \/*!< The spline curve's order at compile-time. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon465
OrderAtCompileTime	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      enum { OrderAtCompileTime = _Degree==Dynamic ? Dynamic : _Degree+1 \/*!< The spline curve's order at compile-time. *\/ };$/;"	e	enum:Eigen::SplineTraits::__anon467
OtherCols	external/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon373
OtherCols	external/Eigen/src/Geometry/Transform.h	/^    OtherCols = MatrixType::ColsAtCompileTime$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon374
OtherPlainObject	external/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename OtherDerived::PlainObject::DenseType OtherPlainObject;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
OtherRows	external/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon373
OtherRows	external/Eigen/src/Geometry/Transform.h	/^    OtherRows = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::transform_right_product_impl::__anon374
OuterPacketMask	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    static const int OuterPacketMask = (1 << OuterPacketBits) - 1;$/;"	m	class:Eigen::RandomSetter
OuterProduct	external/Eigen/src/Core/util/Constants.h	/^enum { CoeffBasedProductMode, LazyCoeffBasedProductMode, OuterProduct, InnerProduct, GemvProduct, GemmProduct };$/;"	e	enum:Eigen::__anon272
OuterRandomAccessPattern	external/Eigen/src/SparseCore/SparseUtil.h	/^const int OuterRandomAccessPattern  = 0x4 | CoherentAccessPattern;$/;"	m	namespace:Eigen
OuterStride	external/Eigen/src/Core/Stride.h	/^    OuterStride() : Base() {}$/;"	f	class:Eigen::OuterStride
OuterStride	external/Eigen/src/Core/Stride.h	/^    OuterStride(Index v) : Base(v,0) {}$/;"	f	class:Eigen::OuterStride
OuterStride	external/Eigen/src/Core/Stride.h	/^class OuterStride : public Stride<Value, 0>$/;"	c	namespace:Eigen
OuterStrideAtCompileTime	external/Eigen/src/Core/Block.h	/^    OuterStrideAtCompileTime = HasSameStorageOrderAsXprType$/;"	e	enum:Eigen::internal::traits::__anon22
OuterStrideAtCompileTime	external/Eigen/src/Core/CwiseUnaryView.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret$/;"	e	enum:Eigen::internal::traits::__anon29
OuterStrideAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      OuterStrideAtCompileTime = internal::outer_stride_at_compile_time<Derived>::ret$/;"	e	enum:Eigen::DenseBase::__anon30
OuterStrideAtCompileTime	external/Eigen/src/Core/Diagonal.h	/^    OuterStrideAtCompileTime = 0$/;"	e	enum:Eigen::internal::traits::__anon36
OuterStrideAtCompileTime	external/Eigen/src/Core/Map.h	/^    OuterStrideAtCompileTime = StrideType::OuterStrideAtCompileTime == 0$/;"	e	enum:Eigen::internal::traits::__anon145
OuterStrideAtCompileTime	external/Eigen/src/Core/Matrix.h	/^    OuterStrideAtCompileTime = (Options&RowMajor) ? ColsAtCompileTime : RowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon153
OuterStrideAtCompileTime	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    OuterStrideAtCompileTime = Lhs::OuterStrideAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon187
OuterStrideAtCompileTime	external/Eigen/src/Core/Stride.h	/^      OuterStrideAtCompileTime = _OuterStrideAtCompileTime$/;"	e	enum:Eigen::Stride::__anon191
OuterStrideAtCompileTime	external/Eigen/src/Core/Transpose.h	/^    OuterStrideAtCompileTime = outer_stride_at_compile_time<MatrixType>::ret$/;"	e	enum:Eigen::internal::traits::__anon192
PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1	external/Eigen/src/Core/util/StaticAssert.h	/^        PACKET_ACCESS_REQUIRES_TO_HAVE_INNER_STRIDE_FIXED_TO_1,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
PALIGN_NEON	external/Eigen/src/Core/arch/NEON/PacketMath.h	398;"	d
PALIGN_NEON	external/Eigen/src/Core/arch/NEON/PacketMath.h	418;"	d
PINUSE_BIT	external/unsupported/test/mpreal/dlmalloc.c	2120;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	307;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	310;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	367;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	370;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	373;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	376;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	379;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	383;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	386;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	389;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	392;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	395;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	399;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	292;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	295;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	298;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	301;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	304;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	307;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	310;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	313;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	316;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	319;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	322;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	325;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	328;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	331;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	334;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	337;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	340;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	343;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	346;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	349;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	352;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	355;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	358;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	361;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	364;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	368;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	371;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	374;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	377;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	380;"	d	file:
PLATFORM_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	384;"	d	file:
POSTACTION	external/unsupported/test/mpreal/dlmalloc.c	2604;"	d	file:
POSTACTION	external/unsupported/test/mpreal/dlmalloc.c	2612;"	d	file:
PREACTION	external/unsupported/test/mpreal/dlmalloc.c	2603;"	d	file:
PREACTION	external/unsupported/test/mpreal/dlmalloc.c	2608;"	d	file:
PREFIX	external/SuiteSparse/Include/cholmod_template.h	142;"	d
PREFIX	external/SuiteSparse/Include/cholmod_template.h	193;"	d
PREFIX	external/SuiteSparse/Include/cholmod_template.h	38;"	d
PREFIX	external/SuiteSparse/Include/cholmod_template.h	54;"	d
PREFIX	external/SuiteSparse/Include/cholmod_template.h	97;"	d
PRINT0	external/SuiteSparse/Include/cholmod_internal.h	375;"	d
PRINT0	external/SuiteSparse/Include/cholmod_internal.h	395;"	d
PRINT1	external/SuiteSparse/Include/cholmod_internal.h	376;"	d
PRINT1	external/SuiteSparse/Include/cholmod_internal.h	396;"	d
PRINT2	external/SuiteSparse/Include/cholmod_internal.h	377;"	d
PRINT2	external/SuiteSparse/Include/cholmod_internal.h	397;"	d
PRINT3	external/SuiteSparse/Include/cholmod_internal.h	378;"	d
PRINT3	external/SuiteSparse/Include/cholmod_internal.h	398;"	d
PRINTM	external/SuiteSparse/Include/cholmod_internal.h	380;"	d
PRINTM	external/SuiteSparse/Include/cholmod_internal.h	399;"	d
PRK	external/SuiteSparse/Include/cholmod_internal.h	367;"	d
PRK	external/SuiteSparse/Include/cholmod_internal.h	393;"	d
PROCEED_ON_ERROR	external/unsupported/test/mpreal/dlmalloc.c	574;"	d	file:
PS_Base	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef PolynomialSolverBase<_Scalar,1>    PS_Base;$/;"	t	class:Eigen::PolynomialSolver
PS_Base	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef PolynomialSolverBase<_Scalar,_Deg>    PS_Base;$/;"	t	class:Eigen::PolynomialSolver
PTHREAD_MUTEX_RECURSIVE	external/unsupported/test/mpreal/dlmalloc.c	1840;"	d	file:
P_ASSIGN2	external/SuiteSparse/Include/cholmod_complexity.h	25;"	d
P_PRINT	external/SuiteSparse/Include/cholmod_complexity.h	26;"	d
P_TEMPLATE	external/SuiteSparse/Include/cholmod_complexity.h	24;"	d
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::linspaced_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::linspaced_op_impl
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_acos_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_add_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_asin_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_constant_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_cos_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_exp_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_log_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_multiple_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_quotient1_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_sin_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_sqrt_op
Packet	external/Eigen/src/Core/Functors.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::scalar_tan_op
Packet	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::SelfCwiseBinaryOp
Packet	external/Eigen/src/Core/Swap.h	/^    typedef typename internal::packet_traits<Scalar>::type Packet;$/;"	t	class:Eigen::SwapWrapper
Packet	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename Lhs::PacketScalar Packet;$/;"	t	struct:Eigen::internal::product_coeff_impl
Packet	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type Packet;$/;"	t	struct:Eigen::internal::gemm_pack_rhs
Packet16uc	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned char  Packet16uc;$/;"	t	namespace:Eigen::internal
Packet1cd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd() {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet1cd(const __m128d& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet1cd
Packet1cd	external/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet1cd$/;"	s	namespace:Eigen::internal
Packet2cf	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	external/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	external/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const Packet4f& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	external/Eigen/src/Core/arch/NEON/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2cf	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf() {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE explicit Packet2cf(const __m128& a) : v(a) {}$/;"	f	struct:Eigen::internal::Packet2cf
Packet2cf	external/Eigen/src/Core/arch/SSE/Complex.h	/^struct Packet2cf$/;"	s	namespace:Eigen::internal
Packet2d	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef __m128d Packet2d;$/;"	t	namespace:Eigen::internal
Packet4bi	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector __bool int     Packet4bi;$/;"	t	namespace:Eigen::internal
Packet4f	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector float          Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef float32x4_t Packet4f;$/;"	t	namespace:Eigen::internal
Packet4f	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef __m128  Packet4f;$/;"	t	namespace:Eigen::internal
Packet4i	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector int            Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef int32x4_t   Packet4i;$/;"	t	namespace:Eigen::internal
Packet4i	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^typedef __m128i Packet4i;$/;"	t	namespace:Eigen::internal
Packet4ui	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector unsigned int   Packet4ui;$/;"	t	namespace:Eigen::internal
Packet4ui	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^typedef uint32x4_t  Packet4ui;$/;"	t	namespace:Eigen::internal
Packet8i	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^typedef __vector short int      Packet8i;$/;"	t	namespace:Eigen::internal
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon53
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = false$/;"	e	enum:Eigen::internal::functor_traits::__anon54
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = internal::is_same<LhsScalar, RhsScalar>::value && packet_traits<LhsScalar>::HasMul$/;"	e	enum:Eigen::internal::functor_traits::__anon46
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasACos$/;"	e	enum:Eigen::internal::functor_traits::__anon82
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasASin$/;"	e	enum:Eigen::internal::functor_traits::__anon83
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasAbs$/;"	e	enum:Eigen::internal::functor_traits::__anon56
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasAdd$/;"	e	enum:Eigen::internal::functor_traits::__anon42
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasConj$/;"	e	enum:Eigen::internal::functor_traits::__anon58
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasCos$/;"	e	enum:Eigen::internal::functor_traits::__anon79
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasDiv$/;"	e	enum:Eigen::internal::functor_traits::__anon52
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasMax$/;"	e	enum:Eigen::internal::functor_traits::__anon48
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasMin$/;"	e	enum:Eigen::internal::functor_traits::__anon47
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasNegate };$/;"	e	enum:Eigen::internal::functor_traits::__anon55
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasSin$/;"	e	enum:Eigen::internal::functor_traits::__anon80
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasSqrt$/;"	e	enum:Eigen::internal::functor_traits::__anon78
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasSub$/;"	e	enum:Eigen::internal::functor_traits::__anon51
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = packet_traits<Scalar>::HasTan$/;"	e	enum:Eigen::internal::functor_traits::__anon81
PacketAccess	external/Eigen/src/Core/Functors.h	/^    PacketAccess = scalar_product_op<LhsScalar,RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::functor_traits::__anon44
PacketAccess	external/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false };$/;"	e	enum:Eigen::internal::functor_traits::__anon50
PacketAccess	external/Eigen/src/Core/Functors.h	/^  enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess=0 };$/;"	e	enum:Eigen::internal::functor_traits::__anon49
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon106
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon107
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon108
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon109
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon60
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon61
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon62
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 0, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon63
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon104
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1 + functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon105
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon100
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon101
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon93
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon94
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon95
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon96
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon97
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon98
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon99
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::HasSetLinear, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon71
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 1, PacketAccess = packet_traits<Scalar>::Vectorizable, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon69
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon68
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 2*NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon87
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon84
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasExp }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon64
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasLog }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon65
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar1>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon67
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = false, IsRepeatable = true }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon70
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::AddCost, PacketAccess = packet_traits<Scalar>::HasAdd }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon77
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasAbs2 }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon57
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasDiv }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon85
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon66
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<Scalar>::MulCost, PacketAccess = packet_traits<Scalar>::HasMul }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon86
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon90
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon91
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon92
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon88
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = NumTraits<T>::MulCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon89
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost + functor_traits<T2>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon111
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T0>::Cost + functor_traits<T1>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon110
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon102
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = functor_traits<T>::Cost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon103
PacketAccess	external/Eigen/src/Core/Functors.h	/^{ enum { Cost = is_same<Scalar, NewType>::value ? 0 : NumTraits<NewType>::AddCost, PacketAccess = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon59
PacketAccess	external/Eigen/src/Core/Random.h	/^{ enum { Cost = 5 * NumTraits<Scalar>::MulCost, PacketAccess = false, IsRepeatable = false }; };$/;"	e	enum:Eigen::internal::functor_traits::__anon166
PacketAccessBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int PacketAccessBit = 0x8;$/;"	m	namespace:Eigen
PacketReturnType	external/Eigen/src/Core/DenseCoeffsBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::DenseCoeffsBase
PacketReturnType	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^                     >::type PacketReturnType;$/;"	t	class:Eigen::SparseMatrixBase
PacketScalar	external/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::ArrayBase
PacketScalar	external/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::DenseBase
PacketScalar	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::DenseCoeffsBase
PacketScalar	external/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PacketScalar PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	external/Eigen/src/Core/MapBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MapBase
PacketScalar	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::MatrixBase
PacketScalar	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::PlainObjectBase
PacketScalar	external/Eigen/src/Core/Redux.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::redux_impl
PacketScalar	external/Eigen/src/Core/Redux.h	/^  typedef typename packet_traits<Scalar>::type PacketScalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
PacketScalar	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::packet_traits<Scalar>::type PacketScalar;$/;"	t	class:Eigen::SparseMatrixBase
PacketSize	external/Eigen/src/Cholesky/LLT.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::LLT::__anon3
PacketSize	external/Eigen/src/Core/Assign.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size$/;"	e	enum:Eigen::internal::assign_traits::__anon7
PacketSize	external/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<Scalar>::size,$/;"	e	enum:Eigen::internal::redux_impl::__anon176
PacketSize	external/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_traits::__anon167
PacketSize	external/Eigen/src/Core/Redux.h	/^    PacketSize = packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon174
PacketSize	external/Eigen/src/Core/Reverse.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::Reverse::__anon181
PacketSize	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::CoeffBasedProduct::__anon234
PacketSize	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  enum { PacketSize = packet_traits<typename Lhs::Scalar>::size };$/;"	e	enum:Eigen::internal::product_coeff_impl::__anon236
PacketSize	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  enum { PacketSize = packet_traits<typename Lhs::Scalar>::size };$/;"	e	enum:Eigen::internal::product_coeff_vectorized_unroller::__anon235
PacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon242
PacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::gemm_pack_rhs::__anon243
PacketSize	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  enum { PacketSize = packet_traits<Scalar>::size };$/;"	e	enum:Eigen::internal::symm_pack_rhs::__anon251
PacketSize	external/Eigen/src/Eigen2Support/SVD.h	/^      PacketSize = internal::packet_traits<Scalar>::size,$/;"	e	enum:Eigen::SVD::__anon346
ParameterType	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Array<Index,64,1,DontAlign> ParameterType;$/;"	t	class:Eigen::PardisoImpl
Parameters	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Parameters()$/;"	f	struct:Eigen::HybridNonLinearSolver::Parameters
Parameters	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    struct Parameters {$/;"	s	class:Eigen::HybridNonLinearSolver
Parameters	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Parameters()$/;"	f	struct:Eigen::LevenbergMarquardt::Parameters
Parameters	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    struct Parameters {$/;"	s	class:Eigen::LevenbergMarquardt
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/All.h	113;"	d
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/All.h	58;"	d
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const VectorType& origin, const VectorType& direction)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(const ParametrizedLine<OtherScalarType,AmbientDimAtCompileTime>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(int _dim) : m_origin(_dim), m_direction(_dim) {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^class ParametrizedLine$/;"	c	namespace:Eigen
ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^inline ParametrizedLine<_Scalar, _AmbientDim>::ParametrizedLine(const Hyperplane<_Scalar, _AmbientDim>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const ParametrizedLine<Scalar,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^  ParametrizedLine(const VectorType& origin, const VectorType& direction)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(Index _dim) : m_origin(_dim), m_direction(_dim) {}$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^  inline explicit ParametrizedLine(const ParametrizedLine<OtherScalarType,AmbientDimAtCompileTime,OtherOptions>& other)$/;"	f	class:Eigen::ParametrizedLine
ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^class ParametrizedLine$/;"	c	namespace:Eigen
ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^inline ParametrizedLine<_Scalar, _AmbientDim,_Options>::ParametrizedLine(const Hyperplane<_Scalar, _AmbientDim,OtherOptions>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
PardisoImpl	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
PardisoImpl	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoImpl(PardisoImpl &) {}$/;"	f	class:Eigen::PardisoImpl
PardisoImpl	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoImpl$/;"	c	namespace:Eigen
PardisoLDLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT()$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT(PardisoLDLT& ) {}$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
PardisoLDLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLDLT : public PardisoImpl< PardisoLDLT<MatrixType,Options> >$/;"	c	namespace:Eigen
PardisoLLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT()$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT(PardisoLLT& ) {}$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLLT(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
PardisoLLT	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLLT : public PardisoImpl< PardisoLLT<MatrixType,_UpLo> >$/;"	c	namespace:Eigen
PardisoLU	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU()$/;"	f	class:Eigen::PardisoLU
PardisoLU	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU(PardisoLU& ) {}$/;"	f	class:Eigen::PardisoLU
PardisoLU	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    PardisoLU(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
PardisoLU	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^class PardisoLU : public PardisoImpl< PardisoLU<MatrixType> >$/;"	c	namespace:Eigen
PartialPivLU	external/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU()$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	external/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(Index size)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	external/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>::PartialPivLU(const MatrixType& matrix)$/;"	f	class:Eigen::PartialPivLU
PartialPivLU	external/Eigen/src/LU/PartialPivLU.h	/^template<typename _MatrixType> class PartialPivLU$/;"	c	namespace:Eigen
PartialReduxExpr	external/Eigen/src/Core/VectorwiseOp.h	/^    PartialReduxExpr(const MatrixType& mat, const MemberOp& func = MemberOp())$/;"	f	class:Eigen::PartialReduxExpr
PartialReduxExpr	external/Eigen/src/Core/VectorwiseOp.h	/^class PartialReduxExpr : internal::no_assignment_operator,$/;"	c	namespace:Eigen
PastixBase	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixBase() : m_initisOk(false), m_analysisIsOk(false), m_factorizationIsOk(false), m_isInitialized(false), m_pastixdata(0), m_size(0)$/;"	f	class:Eigen::PastixBase
PastixBase	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixBase : internal::noncopyable$/;"	c	namespace:Eigen
PastixLDLT	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLDLT():Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLDLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLDLT
PastixLDLT	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLDLT : public PastixBase< PastixLDLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLLT	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLLT() : Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLLT(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLLT
PastixLLT	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLLT : public PastixBase< PastixLLT<_MatrixType, _UpLo> >$/;"	c	namespace:Eigen
PastixLU	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLU() : Base()$/;"	f	class:Eigen::PastixLU
PastixLU	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    PastixLU(const MatrixType& matrix):Base()$/;"	f	class:Eigen::PastixLU
PastixLU	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^class PastixLU : public PastixBase< PastixLU<_MatrixType> >$/;"	c	namespace:Eigen
Perm	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef PermutationMatrix<Dynamic,Dynamic,Index> Perm;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Perm	external/SuiteSparse/Include/cholmod_core.h	/^    void *Perm ;	\/* size n, permutation used *\/$/;"	m	struct:cholmod_factor_struct
PermPermProduct	external/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	e	enum:Eigen::internal::PermPermProduct_t
PermPermProduct_t	external/Eigen/src/Core/PermutationMatrix.h	/^enum PermPermProduct_t {PermPermProduct};$/;"	g	namespace:Eigen::internal
PermutType	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef SparseMatrix<Scalar,ColMajor> PermutType;$/;"	t	class:Eigen::IncompleteLUT
PermutationBase	external/Eigen/src/Core/PermutationMatrix.h	/^class PermutationBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(const Transpose<PermutationBase<Other> >& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix(internal::PermPermProduct_t, const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    explicit PermutationMatrix(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    explicit inline PermutationMatrix(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix()$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(const PermutationMatrix& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationMatrix(int size) : m_indices(size)$/;"	f	class:Eigen::PermutationMatrix
PermutationMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^class PermutationMatrix : public PermutationBase<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType> >$/;"	c	namespace:Eigen
PermutationPType	external/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationPType;$/;"	t	class:Eigen::FullPivLU
PermutationQType	external/Eigen/src/LU/FullPivLU.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationQType;$/;"	t	class:Eigen::FullPivLU
PermutationStorage	external/Eigen/src/Core/PermutationMatrix.h	/^struct PermutationStorage {};$/;"	s	namespace:Eigen
PermutationType	external/Eigen/src/Cholesky/LDLT.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::LDLT
PermutationType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef Derived PermutationType;$/;"	t	class:Eigen::Transpose
PermutationType	external/Eigen/src/LU/PartialPivLU.h	/^    typedef PermutationMatrix<RowsAtCompileTime, MaxRowsAtCompileTime> PermutationType;$/;"	t	class:Eigen::PartialPivLU
PermutationType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::ColPivHouseholderQR
PermutationType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef PermutationMatrix<ColsAtCompileTime, MaxColsAtCompileTime> PermutationType;$/;"	t	class:Eigen::FullPivHouseholderQR
PermutationWrapper	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PermutationWrapper(const IndicesType& indices)$/;"	f	class:Eigen::PermutationWrapper
PermutationWrapper	external/Eigen/src/Core/PermutationMatrix.h	/^class PermutationWrapper : public PermutationBase<PermutationWrapper<_IndicesType> >$/;"	c	namespace:Eigen
Pivoting	external/Eigen/src/Core/util/Constants.h	/^  Pivoting            = 0x01, $/;"	e	enum:Eigen::DecompositionOptions
PlainObject	external/Eigen/src/Core/Array.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Array
PlainObject	external/Eigen/src/Core/ArrayBase.h	/^          > PlainObject;$/;"	t	class:Eigen::ArrayBase
PlainObject	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef DiagonalMatrix<Scalar,DiagonalVectorType::SizeAtCompileTime,DiagonalVectorType::MaxSizeAtCompileTime> PlainObject;$/;"	t	class:Eigen::DiagonalBase
PlainObject	external/Eigen/src/Core/Matrix.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::Matrix
PlainObject	external/Eigen/src/Core/MatrixBase.h	/^          > PlainObject;$/;"	t	class:Eigen::MatrixBase
PlainObject	external/Eigen/src/Core/ProductBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::ProductBase
PlainObject	external/Eigen/src/Core/ProductBase.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::ScaledProduct
PlainObject	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename MatrixType::PlainObject PlainObject;$/;"	t	class:Eigen::SelfAdjointView
PlainObject	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef DenseMatrixType PlainObject;$/;"	t	class:Eigen::TriangularView
PlainObject	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef typename Base::PlainObject PlainObject;$/;"	t	class:Eigen::CoeffBasedProduct
PlainObject	external/Eigen/src/Geometry/Quaternion.h	/^  typedef Quaternion<_Scalar,_Options> PlainObject;$/;"	t	struct:Eigen::internal::traits
PlainObject	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrix<Scalar, Flags&RowMajorBit ? RowMajor : ColMajor> PlainObject;$/;"	t	class:Eigen::SparseMatrixBase
PlainObjectBase	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(Index size, Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PlainObjectBase(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE explicit PlainObjectBase() : m_storage()$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	external/Eigen/src/Core/PlainObjectBase.h	/^    PlainObjectBase(internal::constructor_without_unaligned_array_assert)$/;"	f	class:Eigen::PlainObjectBase
PlainObjectBase	external/Eigen/src/Core/PlainObjectBase.h	/^class PlainObjectBase : public internal::dense_xpr_base_dispatcher_for_doxygen<Derived>$/;"	c	namespace:Eigen
PlainPermutationType	external/Eigen/src/Core/PermutationMatrix.h	/^            PlainPermutationType;$/;"	t	class:Eigen::PermutationBase
PlainPermutationType	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename PermutationType::PlainPermutationType PlainPermutationType;$/;"	t	class:Eigen::Transpose
PlanData	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftw_plan<Scalar> PlanData;$/;"	t	struct:Eigen::internal::fftw_impl
PlanData	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef kiss_cpx_fft<Scalar> PlanData;$/;"	t	struct:Eigen::internal::kissfft_impl
PlanKey	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    int PlanKey(int nfft, bool isinverse) const { return (nfft<<1) | int(isinverse); }$/;"	f	struct:Eigen::internal::kissfft_impl
PlanMap	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef std::map<int64_t,PlanData> PlanMap;$/;"	t	struct:Eigen::internal::fftw_impl
PlanMap	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef std::map<int,PlanData> PlanMap;$/;"	t	struct:Eigen::internal::kissfft_impl
Point	PointCloud.h	/^struct Point {$/;"	s
PointCloud	PointCloud.cpp	/^PointCloud::PointCloud( int index, int resolution, float length )$/;"	f	class:PointCloud
PointCloud	PointCloud.h	/^class PointCloud$/;"	c
PointPointMinimizer	external/unsupported/doc/examples/BVH_Example.cpp	/^  PointPointMinimizer() : calls(0) {}$/;"	f	struct:PointPointMinimizer
PointPointMinimizer	external/unsupported/doc/examples/BVH_Example.cpp	/^struct PointPointMinimizer \/\/how to compute squared distances between points and rectangles$/;"	s	file:
PointType	external/unsupported/Eigen/src/Splines/Spline.h	/^    typedef typename SplineTraits<Spline>::PointType PointType;$/;"	t	class:Eigen::Spline
PointType	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef Array<Scalar,Dimension,1> PointType;$/;"	t	struct:Eigen::SplineTraits
PointerArgType	external/Eigen/src/Core/Map.h	/^    typedef PointerType PointerArgType;$/;"	t	class:Eigen::Map
PointerArgType	external/Eigen/src/Core/Map.h	/^    typedef const Scalar* PointerArgType;$/;"	t	class:Eigen::Map
PointerType	external/Eigen/src/Core/Map.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::Map
PointerType	external/Eigen/src/Core/MapBase.h	/^                     PointerType;$/;"	t	class:Eigen::MapBase
PointerType	external/Eigen/src/Core/MapBase.h	/^    typedef typename Base::PointerType PointerType;$/;"	t	class:Eigen::MapBase
PolynomialSolver	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolver( const OtherPolynomial& poly ){$/;"	f	class:Eigen::PolynomialSolver
PolynomialSolver	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolver(){}$/;"	f	class:Eigen::PolynomialSolver
PolynomialSolver	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^class PolynomialSolver : public PolynomialSolverBase<_Scalar,_Deg>$/;"	c	namespace:Eigen
PolynomialSolver	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^class PolynomialSolver<_Scalar,1> : public PolynomialSolverBase<_Scalar,1>$/;"	c	namespace:Eigen
PolynomialSolverBase	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolverBase( const OtherPolynomial& poly ){$/;"	f	class:Eigen::PolynomialSolverBase
PolynomialSolverBase	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline PolynomialSolverBase(){}$/;"	f	class:Eigen::PolynomialSolverBase
PolynomialSolverBase	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^class PolynomialSolverBase$/;"	c	namespace:Eigen
Pose2Ctr	OptApp.cpp	/^void COptApp::Pose2Ctr( std::vector< Eigen::Matrix4d > & pose, Eigen::VectorXd & ctr )$/;"	f	class:COptApp
PreconditionIfMoreColsThanRows	external/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon396
PreconditionIfMoreRowsThanCols	external/Eigen/src/SVD/JacobiSVD.h	/^enum { PreconditionIfMoreColsThanRows, PreconditionIfMoreRowsThanCols };$/;"	e	enum:Eigen::internal::__anon396
Preconditioner	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::BiCGSTAB
Preconditioner	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::ConjugateGradient
Preconditioner	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
Preconditioner	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename internal::traits<Derived>::Preconditioner Preconditioner;$/;"	t	class:Eigen::IterativeSolverBase
Preconditioner	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	class:Eigen::GMRES
Preconditioner	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef _Preconditioner Preconditioner;$/;"	t	struct:Eigen::internal::traits
ProdRetType	external/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename ProductReturnType<DenseMatrixType, OtherPlainObject>::Type ProdRetType;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
Product	external/Eigen/src/Core/Product.h	/^    Product(const Lhs& lhs, const Rhs& rhs) : m_lhs(lhs), m_rhs(rhs)$/;"	f	class:Product
Product	external/Eigen/src/Core/Product.h	/^class Product : public ProductImpl<Lhs,Rhs,typename internal::promote_storage_type<typename internal::traits<Lhs>::StorageKind,$/;"	c
ProductBase	external/Eigen/src/Core/ProductBase.h	/^    ProductBase(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::ProductBase
ProductBase	external/Eigen/src/Core/ProductBase.h	/^class ProductBase : public MatrixBase<Derived>$/;"	c	namespace:Eigen
ProductImpl	external/Eigen/src/Core/Product.h	/^class ProductImpl<Lhs,Rhs,Dense> : public internal::dense_xpr_base<Product<Lhs,Rhs> >::type$/;"	c
ProductReturnType	external/Eigen/src/Core/GeneralProduct.h	/^struct ProductReturnType$/;"	s	namespace:Eigen
ProductReturnType	external/Eigen/src/Core/GeneralProduct.h	/^struct ProductReturnType<Lhs,Rhs,CoeffBasedProductMode>$/;"	s	namespace:Eigen
ProductReturnType	external/Eigen/src/Core/GeneralProduct.h	/^struct ProductReturnType<Lhs,Rhs,LazyCoeffBasedProductMode>$/;"	s	namespace:Eigen
ProductType	external/Eigen/src/Geometry/Transform.h	/^    typedef internal::transform_transform_product_impl<Transform,Transform<Scalar,Dim,OtherMode,OtherOptions> > ProductType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
Projective	external/Eigen/src/Core/util/Constants.h	/^  Projective    = 0x20$/;"	e	enum:Eigen::TransformTraits
Projective2d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,2,Projective> Projective2d;$/;"	t	namespace:Eigen
Projective2f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,2,Projective> Projective2f;$/;"	t	namespace:Eigen
Projective3d	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<double,3,Projective> Projective3d;$/;"	t	namespace:Eigen
Projective3f	external/Eigen/src/Geometry/Transform.h	/^typedef Transform<float,3,Projective> Projective3f;$/;"	t	namespace:Eigen
PutMatrixElt	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void PutMatrixElt(Scalar value, int row, int col, std::ofstream& out)$/;"	f	namespace:Eigen::internal
PutMatrixElt	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void PutMatrixElt(std::complex<Scalar> value, int row, int col, std::ofstream& out)$/;"	f	namespace:Eigen::internal
QR	external/Eigen/src/Eigen2Support/QR.h	/^    QR() : Base() {}$/;"	f	class:Eigen::QR
QR	external/Eigen/src/Eigen2Support/QR.h	/^    explicit QR(const T& t) : Base(t) {}$/;"	f	class:Eigen::QR
QR	external/Eigen/src/Eigen2Support/QR.h	/^class QR : public HouseholderQR<MatrixType>$/;"	c	namespace:Eigen
QRPreconditioners	external/Eigen/src/Core/util/Constants.h	/^enum QRPreconditioners {$/;"	g	namespace:Eigen
Quaternion	external/Eigen/src/Eigen2Support/Geometry/All.h	29;"	d
Quaternion	external/Eigen/src/Eigen2Support/Geometry/All.h	84;"	d
Quaternion	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion() {}$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion(Scalar w, Scalar x, Scalar y, Scalar z)$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion(const Quaternion& other) { m_coeffs = other.m_coeffs; }$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline explicit Quaternion(const Quaternion<OtherScalarType>& other)$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^class Quaternion : public RotationBase<Quaternion<_Scalar>,3>$/;"	c	namespace:Eigen
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const AngleAxisType& aa) { *this = aa; }$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const MatrixBase<Derived>& other) { *this = other; }$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^  explicit inline Quaternion(const Quaternion<OtherScalar, OtherOptions>& other)$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion() {}$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion(Scalar w, Scalar x, Scalar y, Scalar z) : m_coeffs(x, y, z, w){}$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion(const Scalar* data) : m_coeffs(data) {}$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> EIGEN_STRONG_INLINE Quaternion(const QuaternionBase<Derived>& other) { this->Base::operator=(other); }$/;"	f	class:Eigen::Quaternion
Quaternion	external/Eigen/src/Geometry/Quaternion.h	/^class Quaternion : public QuaternionBase<Quaternion<_Scalar,_Options> >$/;"	c	namespace:Eigen
QuaternionBase	external/Eigen/src/Geometry/Quaternion.h	/^class QuaternionBase : public RotationBase<Derived, 3>$/;"	c	namespace:Eigen
QuaternionMapAlignedd	external/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, Aligned>  QuaternionMapAlignedd;$/;"	t	namespace:Eigen
QuaternionMapAlignedf	external/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, Aligned>   QuaternionMapAlignedf;$/;"	t	namespace:Eigen
QuaternionMapd	external/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<double>, 0>        QuaternionMapd;$/;"	t	namespace:Eigen
QuaternionMapf	external/Eigen/src/Geometry/Quaternion.h	/^typedef Map<Quaternion<float>, 0>         QuaternionMapf;$/;"	t	namespace:Eigen
QuaternionType	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:Eigen::AngleAxis
QuaternionType	external/Eigen/src/Geometry/AngleAxis.h	/^  typedef Quaternion<Scalar> QuaternionType;$/;"	t	class:Eigen::AngleAxis
Quaterniond	external/Eigen/src/Eigen2Support/Geometry/All.h	31;"	d
Quaterniond	external/Eigen/src/Eigen2Support/Geometry/All.h	86;"	d
Quaterniond	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^typedef Quaternion<double> Quaterniond;$/;"	t	namespace:Eigen
Quaterniond	external/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<double> Quaterniond;$/;"	t	namespace:Eigen
Quaternionf	external/Eigen/src/Eigen2Support/Geometry/All.h	30;"	d
Quaternionf	external/Eigen/src/Eigen2Support/Geometry/All.h	85;"	d
Quaternionf	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^typedef Quaternion<float> Quaternionf;$/;"	t	namespace:Eigen
Quaternionf	external/Eigen/src/Geometry/Quaternion.h	/^typedef Quaternion<float> Quaternionf;$/;"	t	namespace:Eigen
QuickSplit	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^int IncompleteLUT<Scalar>::QuickSplit(VectorV &row, VectorI &ind, int ncut)$/;"	f	class:Eigen::IncompleteLUT
R	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    UpperTriangularType R;$/;"	m	class:Eigen::HybridNonLinearSolver
RELEASE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1664;"	d	file:
RELEASE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1764;"	d	file:
RELEASE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1829;"	d	file:
RELEASE_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1860;"	d	file:
RELEASE_MALLOC_GLOBAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1913;"	d	file:
RELEASE_MALLOC_GLOBAL_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1917;"	d	file:
RETURN_IF_NULL	external/SuiteSparse/Include/cholmod_internal.h	116;"	d
RETURN_IF_NULL_COMMON	external/SuiteSparse/Include/cholmod_internal.h	129;"	d
RETURN_IF_XTYPE_INVALID	external/SuiteSparse/Include/cholmod_complexity.h	252;"	d
RGBDTrajectory	RGBDTrajectory.h	/^struct RGBDTrajectory {$/;"	s
RM	build/Makefile	/^RM = \/usr\/bin\/cmake -E remove -f$/;"	m
ROUNDUP	external/SuiteSparse/Include/cholmod_internal.h	109;"	d
RTCHECK	external/unsupported/test/mpreal/dlmalloc.c	2895;"	d	file:
RTCHECK	external/unsupported/test/mpreal/dlmalloc.c	2897;"	d	file:
RTCHECK	external/unsupported/test/mpreal/dlmalloc.c	2900;"	d	file:
R_ADD	external/SuiteSparse/Include/cholmod_complexity.h	46;"	d
R_ADD_REAL	external/SuiteSparse/Include/cholmod_complexity.h	47;"	d
R_ASSEMBLE	external/SuiteSparse/Include/cholmod_complexity.h	33;"	d
R_ASSIGN	external/SuiteSparse/Include/cholmod_complexity.h	34;"	d
R_ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_complexity.h	35;"	d
R_ASSIGN_REAL	external/SuiteSparse/Include/cholmod_complexity.h	36;"	d
R_CLEAR	external/SuiteSparse/Include/cholmod_complexity.h	48;"	d
R_CLEAR_IMAG	external/SuiteSparse/Include/cholmod_complexity.h	49;"	d
R_DIV	external/SuiteSparse/Include/cholmod_complexity.h	50;"	d
R_DIV_REAL	external/SuiteSparse/Include/cholmod_complexity.h	54;"	d
R_IS_NONZERO	external/SuiteSparse/Include/cholmod_complexity.h	38;"	d
R_IS_ONE	external/SuiteSparse/Include/cholmod_complexity.h	40;"	d
R_IS_ZERO	external/SuiteSparse/Include/cholmod_complexity.h	39;"	d
R_LDLDOT	external/SuiteSparse/Include/cholmod_complexity.h	57;"	d
R_LLDOT	external/SuiteSparse/Include/cholmod_complexity.h	51;"	d
R_MULT	external/SuiteSparse/Include/cholmod_complexity.h	41;"	d
R_MULTADD	external/SuiteSparse/Include/cholmod_complexity.h	42;"	d
R_MULTADDCONJ	external/SuiteSparse/Include/cholmod_complexity.h	44;"	d
R_MULTSUB	external/SuiteSparse/Include/cholmod_complexity.h	43;"	d
R_MULTSUBCONJ	external/SuiteSparse/Include/cholmod_complexity.h	45;"	d
R_MULT_REAL	external/SuiteSparse/Include/cholmod_complexity.h	55;"	d
R_PRINT	external/SuiteSparse/Include/cholmod_complexity.h	52;"	d
R_TEMPLATE	external/SuiteSparse/Include/cholmod_complexity.h	32;"	d
R_XTYPE_OK	external/SuiteSparse/Include/cholmod_complexity.h	37;"	d
Random	external/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random()$/;"	f	class:Eigen::DenseBase
Random	external/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Random	external/Eigen/src/Core/Random.h	/^DenseBase<Derived>::Random(Index size)$/;"	f	class:Eigen::DenseBase
RandomAccessLinSpacedReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,true>,Derived> RandomAccessLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
RandomAccessPattern	external/Eigen/src/SparseCore/SparseUtil.h	/^const int RandomAccessPattern       = 0x8 | OuterRandomAccessPattern | InnerRandomAccessPattern;$/;"	m	namespace:Eigen
RandomCpx	external/unsupported/test/FFTW.cpp	/^std::complex<T> RandomCpx() { return std::complex<T>( (T)(rand()\/(T)RAND_MAX - .5), (T)(rand()\/(T)RAND_MAX - .5) ); }$/;"	f
RandomFill	external/unsupported/doc/examples/FFT.cpp	/^void RandomFill(std::vector<T> & vec)$/;"	f
RandomFill	external/unsupported/doc/examples/FFT.cpp	/^void RandomFill(std::vector<std::complex<T> > & vec)$/;"	f
RandomSetter	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    inline RandomSetter(SparseMatrixType& target)$/;"	f	class:Eigen::RandomSetter
RandomSetter	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^class RandomSetter$/;"	c	namespace:Eigen
ReadCost	external/Eigen/src/Core/NumTraits.h	/^    ReadCost = 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon157
ReadOnlyAccessors	external/Eigen/src/Core/util/Constants.h	/^  ReadOnlyAccessors, $/;"	e	enum:Eigen::AccessorLevels
Real	external/Eigen/src/Core/NumTraits.h	/^  typedef T Real;$/;"	t	struct:Eigen::GenericNumTraits
Real	external/SuiteSparse/Include/cholmod_internal.h	223;"	d
Real	external/SuiteSparse/Include/cholmod_internal.h	273;"	d
Real	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    typedef typename NumTraits<Scalar>::Real Real;$/;"	t	class:Eigen::AutoDiffScalar
Real	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef AutoDiffScalar<Matrix<typename NumTraits<typename DerType::Scalar>::Real,DerType::RowsAtCompileTime,DerType::ColsAtCompileTime> > Real;$/;"	t	struct:Eigen::NumTraits
Real	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef typename NumTraits<Scalar>::Real Real;$/;"	t	struct:Eigen::internal::auto_diff_special_op
RealPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RealScalar>::type RealPacket;$/;"	t	class:Eigen::internal::gebp_traits
RealPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacketSize  = Vectorizable ? packet_traits<RealScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
RealReturnType	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^                  >::type RealReturnType;$/;"	t
RealRowVectorType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType, RealScalar>::type RealRowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	external/Eigen/src/Cholesky/LDLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LDLT
RealScalar	external/Eigen/src/Cholesky/LLT.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LLT
RealScalar	external/Eigen/src/Cholesky/LLT.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::llt_inplace
RealScalar	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::CholmodBase
RealScalar	external/Eigen/src/Core/ArrayBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ArrayBase
RealScalar	external/Eigen/src/Core/DenseBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseBase
RealScalar	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::DenseCoeffsBase
RealScalar	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::RealScalar RealScalar;$/;"	t	class:Eigen::DiagonalBase
RealScalar	external/Eigen/src/Core/Dot.h	/^  typedef typename NumTraits<typename traits<Derived>::Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::lpNorm_selector
RealScalar	external/Eigen/src/Core/IO.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::significant_decimals_default_impl
RealScalar	external/Eigen/src/Core/MapBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MapBase
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef bool RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs2_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::abs_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::hypot_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::imag_ref_default_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::norm1_default_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::real_ref_impl
RealScalar	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::scalar_fuzzy_default_impl
RealScalar	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixBase
RealScalar	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::PlainObjectBase
RealScalar	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointView
RealScalar	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::RealScalar RealScalar;$/;"	t	class:Eigen::VectorwiseOp
RealScalar	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::AlignedBox
RealScalar	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Hyperplane
RealScalar	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ParametrizedLine
RealScalar	external/Eigen/src/Eigen2Support/LU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::LU
RealScalar	external/Eigen/src/Eigen2Support/SVD.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::SVD
RealScalar	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexEigenSolver
RealScalar	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ComplexSchur
RealScalar	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::EigenSolver
RealScalar	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::HessenbergDecomposition
RealScalar	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
RealScalar	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Tridiagonalization
RealScalar	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
RealScalar	external/Eigen/src/Geometry/AlignedBox.h	/^  typedef typename ScalarTraits::Real               RealScalar;$/;"	t	class:Eigen::AlignedBox
RealScalar	external/Eigen/src/Geometry/Hyperplane.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::Hyperplane
RealScalar	external/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
RealScalar	external/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::ParametrizedLine
RealScalar	external/Eigen/src/Geometry/Quaternion.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::QuaternionBase
RealScalar	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::BiCGSTAB
RealScalar	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ConjugateGradient
RealScalar	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::IncompleteLUT
RealScalar	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::IterativeSolverBase
RealScalar	external/Eigen/src/Jacobi/Jacobi.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiRotation
RealScalar	external/Eigen/src/LU/FullPivLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::FullPivLU
RealScalar	external/Eigen/src/LU/PartialPivLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::PartialPivLU
RealScalar	external/Eigen/src/LU/PartialPivLU.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::partial_lu_impl
RealScalar	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::PastixBase
RealScalar	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pastix_traits
RealScalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLDLT
RealScalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLLT
RealScalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoLU
RealScalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::RealScalar RealScalar;$/;"	t	class:Eigen::PardisoImpl
RealScalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::pardiso_traits
RealScalar	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::ColPivHouseholderQR
RealScalar	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::FullPivHouseholderQR
RealScalar	external/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::HouseholderQR
RealScalar	external/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::JacobiSVD
RealScalar	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
RealScalar	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RealScalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholesky
RealScalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
RealScalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLDLT
RealScalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SimplicialLLT
RealScalar	external/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector
RealScalar	external/Eigen/src/SparseCore/AmbiVector.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
RealScalar	external/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::internal::CompressedStorage
RealScalar	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SparseMatrixBase
RealScalar	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename ResultType::RealScalar RealScalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
RealScalar	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperILU
RealScalar	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLU
RealScalar	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::SuperLUBase
RealScalar	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::UmfPackLU
RealScalar	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef typename MatrixType::RealScalar RealScalar;$/;"	t	class:Eigen::GMRES
RealScalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixExponential
RealScalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixFunction
RealScalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixFunctionAtomic
RealScalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::MatrixLogarithmAtomic
RealScalar	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef typename NumTraits<Scalar>::Real       RealScalar;$/;"	t	class:Eigen::internal::companion
RealScalar	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef typename NumTraits<Scalar>::Real    RealScalar;$/;"	t	class:Eigen::PolynomialSolverBase
RealScalar	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    typedef typename NumTraits<typename MatrixType::Scalar>::Real RealScalar;$/;"	t	class:Eigen::SkylineInplaceLU
RealScalar	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SkylineMatrixBase
RealScalar	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    typedef typename NumTraits<Scalar>::Real RealScalar;$/;"	t	class:Eigen::SkylineStorage
RealSchur	external/Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur(Index size = RowsAtCompileTime==Dynamic ? 1 : RowsAtCompileTime)$/;"	f	class:Eigen::RealSchur
RealSchur	external/Eigen/src/Eigenvalues/RealSchur.h	/^    RealSchur(const MatrixType& matrix, bool computeU = true)$/;"	f	class:Eigen::RealSchur
RealSchur	external/Eigen/src/Eigenvalues/RealSchur.h	/^template<typename _MatrixType> class RealSchur$/;"	c	namespace:Eigen
RealVectorType	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename internal::plain_col_type<MatrixType, RealScalar>::type RealVectorType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
ReduxReturnType	external/Eigen/src/Core/VectorwiseOp.h	/^    template<typename BinaryOp> struct ReduxReturnType$/;"	s	class:Eigen::VectorwiseOp
RelativeErrorAndReductionTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        RelativeErrorAndReductionTooSmall = 3,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RelativeErrorTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        RelativeErrorTooSmall = 1,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
RelativeErrorTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        RelativeErrorTooSmall = 2,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RelativeReductionTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        RelativeReductionTooSmall = 1,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
RemovedBits	external/Eigen/src/SparseCore/SparseProduct.h	/^    RemovedBits = ~(EvalToRowMajor ? 0 : RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon429
RemovedBits	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RemovedBits = ~((EvalToRowMajor ? 0 : RowMajorBit) | (ResultIsSkyline ? 0 : SkylineBit)),$/;"	e	enum:Eigen::internal::traits::__anon449
Replicate	external/Eigen/src/Core/Replicate.h	/^    inline Replicate(const OriginalMatrixType& matrix, Index rowFactor, Index colFactor)$/;"	f	class:Eigen::Replicate
Replicate	external/Eigen/src/Core/Replicate.h	/^    inline explicit Replicate(const OriginalMatrixType& matrix)$/;"	f	class:Eigen::Replicate
Replicate	external/Eigen/src/Core/Replicate.h	/^template<typename MatrixType,int RowFactor,int ColFactor> class Replicate$/;"	c	namespace:Eigen
ReplicateReturnType	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef Replicate<ExpressionType,Direction==Vertical?Dynamic:1,Direction==Horizontal?Dynamic:1> ReplicateReturnType;$/;"	t	class:Eigen::VectorwiseOp
RequireInitialization	external/Eigen/src/Core/NumTraits.h	/^    RequireInitialization = internal::is_arithmetic<T>::value ? 0 : 1,$/;"	e	enum:Eigen::GenericNumTraits::__anon157
RequireInitialization	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    RequireInitialization = 1$/;"	e	enum:Eigen::NumTraits::__anon442
Res	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseResType>::type Res;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
ResPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResPacket ResPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
ResPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,ScalarPacket,Scalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
ResPacket	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_ResPacket,ResScalar>::type ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize   = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
ResPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Traits::ResPacketSize$/;"	e	enum:Eigen::internal::gebp_kernel::__anon241
ResPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
ResPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
ResPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
ResPacketSize	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon249
ResPacketSize	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  ResPacketSize = Vectorizable ? packet_traits<ResScalar>::size : 1$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon250
ResScalar	external/Eigen/src/Core/Dot.h	/^  typedef typename scalar_product_traits<typename traits<T>::Scalar,typename traits<U>::Scalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::dot_nocheck
ResScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::gebp_kernel
ResScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	class:Eigen::internal::gebp_traits
ResScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef           Scalar      ResScalar;$/;"	t	class:Eigen::GeneralProduct
ResScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_product
ResScalar	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename Traits::ResScalar ResScalar;$/;"	t	struct:Eigen::internal::tribb_kernel
ResScalar	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_matrix_triangular_product
ResScalar	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
ResScalar	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^  typedef typename scalar_product_traits<LhsScalar, RhsScalar>::ReturnType ResScalar;$/;"	t	struct:Eigen::internal::triangular_matrix_vector_product
ResultAlignment	external/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment     = bool(ResultType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon386
ResultAlignment	external/Eigen/src/LU/arch/Inverse_SSE.h	/^    ResultAlignment = bool(ResultType::Flags&AlignedBit),$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon387
ResultIsSkyline	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        ResultIsSkyline = ProductMode == SkylineTimeSkylineProduct,$/;"	e	enum:Eigen::internal::traits::__anon449
ResultMode	external/Eigen/src/Geometry/Transform.h	/^  enum { ResultMode = transform_product_result<LhsMode,RhsMode>::Mode };$/;"	e	enum:Eigen::internal::transform_transform_product_impl::__anon375
ResultScalar	external/Eigen/src/Householder/HouseholderSequence.h	/^    ResultScalar;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
ResultType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> ResultType;$/;"	t	struct:Eigen::ei_transform_product_impl
ResultType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef TransformType ResultType;$/;"	t	struct:Eigen::ei_transform_product_impl
ResultType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef typename ProductReturnType<MatrixType,Other>::Type ResultType;$/;"	t	struct:Eigen::ei_transform_product_impl
ResultType	external/Eigen/src/Geometry/Transform.h	/^    typedef typename ProductType::ResultType ResultType;$/;"	t	struct:Eigen::Transform::icc_11_workaround
ResultType	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,ResultMode,LhsOptions> ResultType;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
ResultType	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Projective,Options> ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	external/Eigen/src/Geometry/Transform.h	/^  typedef TransformType ResultType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
ResultType	external/Eigen/src/Geometry/Transform.h	/^  typedef typename MatrixType::PlainObject ResultType;$/;"	t	struct:Eigen::internal::transform_right_product_impl
ReturnByValue	external/Eigen/src/Core/ReturnByValue.h	/^template<typename Derived> class ReturnByValue$/;"	c	namespace:Eigen
ReturnOpposite	external/Eigen/src/Core/BandMatrix.h	/^        ReturnOpposite = (Options&SelfAdjoint) && (((Index)>0 && Supers==0) || ((Index)<0 && Subs==0)),$/;"	e	enum:Eigen::internal::BandMatrixBase::DiagonalIntReturnType::__anon19
ReturnType	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/Core/ReturnByValue.h	/^    typedef typename internal::traits<Derived>::ReturnType ReturnType;$/;"	t	class:Eigen::ReturnByValue
ReturnType	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename internal::plain_matrix_type_column_major<Rhs>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/Core/Transpositions.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/Core/VectorwiseOp.h	/^                      typename Scalar=typename internal::traits<ExpressionType>::Scalar> struct ReturnType$/;"	s	class:Eigen::VectorwiseOp
ReturnType	external/Eigen/src/Core/util/Meta.h	/^  typedef T ReturnType;$/;"	t	struct:Eigen::scalar_product_traits
ReturnType	external/Eigen/src/Core/util/Meta.h	/^  typedef std::complex<T> ReturnType;$/;"	t	struct:Eigen::scalar_product_traits
ReturnType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^  typedef MatrixType ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/Geometry/Homogeneous.h	/^                 MatrixTypeCleaned::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/Geometry/Homogeneous.h	/^                 Rhs::MaxColsAtCompileTime>::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,1> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	external/Eigen/src/Geometry/RotationBase.h	/^  typedef Matrix<typename RotationDerived::Scalar,Dim,Dim> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	external/Eigen/src/Geometry/RotationBase.h	/^  typedef Transform<Scalar,Dim,Affine> ReturnType;$/;"	t	struct:Eigen::internal::rotation_base_generic_product_selector
ReturnType	external/Eigen/src/LU/Inverse.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  typedef typename MatrixType::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/SparseCore/SparsePermutation.h	/^        SparseMatrix<Scalar,int(SrcStorageOrder)==RowMajor?ColMajor:RowMajor,Index> >::type ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/misc/Image.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/misc/Kernel.h	/^  > ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/misc/Solve.h	/^                 Rhs::MaxColsAtCompileTime> ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/misc/SparseSolve.h	/^                 Rhs::MaxColsAtCompileTime> ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/Eigen/src/misc/SparseSolve.h	/^  typedef SparseMatrix<typename Rhs::Scalar, Rhs::Options, typename Rhs::Index> ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^   typedef Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols> ReturnType;$/;"	t	struct:Eigen::internal::scalar_product_traits
ReturnType	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^ typedef AutoDiffScalar<DerType> ReturnType;$/;"	t	struct:Eigen::internal::scalar_product_traits
ReturnType	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^  typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^    typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
ReturnType	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^  typedef typename Derived::PlainObject ReturnType;$/;"	t	struct:Eigen::internal::traits
Reverse	external/Eigen/src/Core/Reverse.h	/^    inline Reverse(const MatrixType& matrix) : m_matrix(matrix) { }$/;"	f	class:Eigen::Reverse
Reverse	external/Eigen/src/Core/Reverse.h	/^template<typename MatrixType, int Direction> class Reverse$/;"	c	namespace:Eigen
ReverseCol	external/Eigen/src/Core/Reverse.h	/^      ReverseCol = (Direction == Horizontal) || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon181
ReverseInnerIterator	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    ReverseInnerIterator(const MappedSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^class MappedSparseMatrix<Scalar,_Flags,_Index>::ReverseInnerIterator$/;"	c	class:Eigen::MappedSparseMatrix
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseBlock.h	/^        inline ReverseInnerIterator(const SparseInnerVectorSet& xpr, Index outer)$/;"	f	class:Eigen::SparseInnerVectorSet::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseBlock.h	/^    class ReverseInnerIterator: public MatrixType::ReverseInnerIterator$/;"	c	class:Eigen::SparseInnerVectorSet
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const CwiseUnaryOpImpl& unaryOp, typename CwiseUnaryOpImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const CwiseUnaryViewImpl& unaryOp, typename CwiseUnaryViewImpl::Index outer)$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryOpImpl<UnaryOp,MatrixType,Sparse>::ReverseInnerIterator$/;"	c	class:Eigen::CwiseUnaryOpImpl
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^class CwiseUnaryViewImpl<ViewOp,MatrixType,Sparse>::ReverseInnerIterator$/;"	c	class:Eigen::CwiseUnaryViewImpl
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseMatrix.h	/^    ReverseInnerIterator(const SparseMatrix& mat, Index outer)$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix<Scalar,_Options,_Index>::ReverseInnerIterator$/;"	c	class:Eigen::SparseMatrix
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseTranspose.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const TransposeImpl& xpr, typename TransposeImpl<MatrixType,Sparse>::Index outer)$/;"	f	class:Eigen::TransposeImpl::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>::ReverseInnerIterator$/;"	c	class:Eigen::TransposeImpl
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator(const SparseTriangularView& view, Index outer)$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseTriangularView.h	/^class SparseTriangularView<MatrixType,Mode>::ReverseInnerIterator : public MatrixTypeNestedCleaned::ReverseInnerIterator$/;"	c	class:Eigen::SparseTriangularView
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseVector.h	/^    ReverseInnerIterator(const SparseVector& vec, Index outer=0)$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseVector.h	/^    ReverseInnerIterator(const internal::CompressedStorage<Scalar,Index>& data)$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
ReverseInnerIterator	external/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector<Scalar,_Options,_Index>::ReverseInnerIterator$/;"	c	class:Eigen::SparseVector
ReverseInnerIterator	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    ReverseInnerIterator(const DynamicSparseMatrix& mat, Index outer)$/;"	f	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
ReverseInnerIterator	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^class DynamicSparseMatrix<Scalar,_Options,_Index>::ReverseInnerIterator : public SparseVector<Scalar,_Options,_Index>::ReverseInnerIterator$/;"	c	class:Eigen::DynamicSparseMatrix
ReversePacket	external/Eigen/src/Core/Reverse.h	/^      ReversePacket = (Direction == BothDirections)$/;"	e	enum:Eigen::Reverse::__anon181
ReverseReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef Reverse<Derived, BothDirections> ReverseReturnType;$/;"	t	class:Eigen::DenseBase
ReverseRow	external/Eigen/src/Core/Reverse.h	/^      ReverseRow = (Direction == Vertical)   || (Direction == BothDirections),$/;"	e	enum:Eigen::Reverse::__anon181
Rhs	external/Eigen/src/Core/ProductBase.h	/^  typedef typename remove_all<_Rhs>::type Rhs;$/;"	t	struct:Eigen::internal::traits
Rhs	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,AffineCompact,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,Projective,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,RhsMode,RhsOptions> Rhs;$/;"	t	struct:Eigen::internal::transform_transform_product_impl
Rhs	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename internal::remove_all<DenseRhsType>::type Rhs;$/;"	t	struct:Eigen::internal::sparse_time_dense_product_impl
RhsBlasTraits	external/Eigen/src/Core/ProductBase.h	/^    typedef internal::blas_traits<_RhsNested> RhsBlasTraits;$/;"	t	class:Eigen::ProductBase
RhsCleaned	external/Eigen/src/Core/Product.h	/^  typedef typename remove_all<Rhs>::type RhsCleaned;$/;"	t	struct:internal::traits
RhsCoeffReadCost	external/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon26
RhsCoeffReadCost	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon233
RhsCoeffReadCost	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    RhsCoeffReadCost = traits<_RhsNested>::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon418
RhsCoeffReadCost	external/Eigen/src/SparseCore/SparseProduct.h	/^    RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon429
RhsCoeffReadCost	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RhsCoeffReadCost = _RhsNested::CoeffReadCost,$/;"	e	enum:Eigen::internal::traits::__anon449
RhsFlags	external/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon26
RhsFlags	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon233
RhsFlags	external/Eigen/src/SparseCore/SparseProduct.h	/^    RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon429
RhsFlags	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RhsFlags = _RhsNested::Flags,$/;"	e	enum:Eigen::internal::traits::__anon449
RhsIsSelfAdjoint	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsSelfAdjoint = (RhsMode&SelfAdjoint)==SelfAdjoint$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon252
RhsIsUpper	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^    RhsIsUpper = (RhsMode&(Upper|Lower))==Upper,$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon252
RhsIsVectorAtCompileTime	external/Eigen/src/Core/SolveTriangular.h	/^      RhsIsVectorAtCompileTime = (Side==OnTheLeft ? Rhs::ColsAtCompileTime : Rhs::RowsAtCompileTime)==1$/;"	e	enum:Eigen::internal::trsolve_traits::__anon188
RhsIterator	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename _RhsNested::InnerIterator RhsIterator;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
RhsMode	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^      RhsMode = internal::is_diagonal<_RhsNested>::ret ? internal::SDP_IsDiagonal$/;"	e	enum:Eigen::SparseDiagonalProduct::__anon421
RhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::nested<Rhs>::type RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
RhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename Rhs::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	external/Eigen/src/Core/GeneralProduct.h	/^  typedef typename internal::nested<Rhs, Lhs::RowsAtCompileTime, typename internal::plain_matrix_type<Rhs>::type >::type RhsNested;$/;"	t	struct:Eigen::ProductReturnType
RhsNested	external/Eigen/src/Core/Product.h	/^    typedef typename Rhs::Nested RhsNested;$/;"	t	class:Product
RhsNested	external/Eigen/src/Core/ProductBase.h	/^    typedef typename Rhs::Nested RhsNested;$/;"	t	class:Eigen::ProductBase
RhsNested	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNested;$/;"	t	struct:Eigen::internal::homogeneous_right_product_impl
RhsNested	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::RhsNested RhsNested;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
RhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::RhsNested RhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
RhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename Rhs::Nested RhsNested;$/;"	t	struct:Eigen::internal::traits
RhsNested	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename Rhs::Nested RhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
RhsNested	external/Eigen/src/SparseCore/SparseProduct.h	/^    typename internal::nested<Rhs,Lhs::RowsAtCompileTime>::type>::type RhsNested;$/;"	t	struct:Eigen::SparseSparseProductReturnType
RhsNested	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef const typename internal::nested<Rhs, Lhs::RowsAtCompileTime>::type RhsNested;$/;"	t	struct:Eigen::SkylineProductReturnType
RhsNestedCleaned	external/Eigen/src/Core/Product.h	/^    typedef typename internal::remove_all<RhsNested>::type RhsNestedCleaned;$/;"	t	class:Product
RhsNestedCleaned	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::triangular_solve_retval
RhsNestedCleaned	external/Eigen/src/misc/Solve.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::solve_retval_base
RhsNestedCleaned	external/Eigen/src/misc/SparseSolve.h	/^  typedef typename remove_all<typename Rhs::Nested>::type RhsNestedCleaned;$/;"	t	struct:Eigen::internal::sparse_solve_retval_base
RhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename Traits::RhsPacket RhsPacket;$/;"	t	struct:Eigen::internal::gebp_kernel
RhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,DoublePacket,Scalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
RhsPacket	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename conditional<Vectorizable,_RhsPacket,RhsScalar>::type RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
RhsPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
RhsPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
RhsPacketSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
RhsPacketSize	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon249
RhsPacketSize	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  RhsPacketSize = Vectorizable ? packet_traits<RhsScalar>::size : 1,$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon250
RhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress   = Traits::RhsProgress,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon241
RhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = ResPacketSize$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
RhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = RhsPacketSize$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
RhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = RhsPacketSize$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
RhsProgress	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RhsProgress = Vectorizable ? 2*ResPacketSize : 1$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
RhsRowMajor	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RhsRowMajor = RhsFlags & RowMajorBit,$/;"	e	enum:Eigen::internal::traits::__anon233
RhsRowMajor	external/Eigen/src/SparseCore/SparseProduct.h	/^    RhsRowMajor = internal::traits<Rhs>::Flags & RowMajorBit,$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon428
RhsScalar	external/Eigen/src/Core/GeneralProduct.h	/^    typedef typename Rhs::Scalar RhsScalar;$/;"	t	class:Eigen::GeneralProduct
RhsScalar	external/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::traits<Rhs>::Scalar RhsScalar;$/;"	t	class:Eigen::ProductBase
RhsScalar	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar RhsScalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
RhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef RealScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef Scalar      RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  RhsScalar;$/;"	t	class:Eigen::internal::gebp_traits
RhsScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef _RhsScalar RhsScalar;$/;"	t	class:Eigen::internal::level3_blocking
RhsScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename  Rhs::Scalar RhsScalar;$/;"	t	class:Eigen::GeneralProduct
RhsScalar	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef typename conditional<Transpose,_LhsScalar,_RhsScalar>::type RhsScalar;$/;"	t	class:Eigen::internal::gemm_blocking_space
RhsUpLo	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^    RhsUpLo = RhsMode&(Upper|Lower)$/;"	e	enum:Eigen::SelfadjointProductMatrix::__anon254
RhsVectors	external/Eigen/src/Core/SolveTriangular.h	/^      RhsVectors  = RhsIsVectorAtCompileTime ? 1 : Dynamic$/;"	e	enum:Eigen::internal::trsolve_traits::__anon189
RightColumn	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef Matrix<Scalar, Deg, 1>                 RightColumn;$/;"	t	class:Eigen::internal::companion
RightScaling	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd& RightScaling()$/;"	f	class:Scaling
RootType	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef std::complex<RealScalar>            RootType;$/;"	t	class:Eigen::PolynomialSolverBase
RootsType	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef Matrix<RootType,_Deg,1>             RootsType;$/;"	t	class:Eigen::PolynomialSolverBase
Rotation2D	external/Eigen/src/Eigen2Support/Geometry/All.h	25;"	d
Rotation2D	external/Eigen/src/Eigen2Support/Geometry/All.h	80;"	d
Rotation2D	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D(Scalar a) : m_angle(a) {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline explicit Rotation2D(const Rotation2D<OtherScalarType>& other)$/;"	f	class:Eigen::Rotation2D
Rotation2D	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^class Rotation2D : public RotationBase<Rotation2D<_Scalar>,2>$/;"	c	namespace:Eigen
Rotation2D	external/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D(Scalar a) : m_angle(a) {}$/;"	f	class:Eigen::Rotation2D
Rotation2D	external/Eigen/src/Geometry/Rotation2D.h	/^  inline explicit Rotation2D(const Rotation2D<OtherScalarType>& other)$/;"	f	class:Eigen::Rotation2D
Rotation2D	external/Eigen/src/Geometry/Rotation2D.h	/^class Rotation2D : public RotationBase<Rotation2D<_Scalar>,2>$/;"	c	namespace:Eigen
Rotation2Dd	external/Eigen/src/Eigen2Support/Geometry/All.h	27;"	d
Rotation2Dd	external/Eigen/src/Eigen2Support/Geometry/All.h	82;"	d
Rotation2Dd	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^typedef Rotation2D<double> Rotation2Dd;$/;"	t	namespace:Eigen
Rotation2Dd	external/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<double> Rotation2Dd;$/;"	t	namespace:Eigen
Rotation2Df	external/Eigen/src/Eigen2Support/Geometry/All.h	26;"	d
Rotation2Df	external/Eigen/src/Eigen2Support/Geometry/All.h	81;"	d
Rotation2Df	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^typedef Rotation2D<float> Rotation2Df;$/;"	t	namespace:Eigen
Rotation2Df	external/Eigen/src/Geometry/Rotation2D.h	/^typedef Rotation2D<float> Rotation2Df;$/;"	t	namespace:Eigen
RotationBase	external/Eigen/src/Eigen2Support/Geometry/All.h	24;"	d
RotationBase	external/Eigen/src/Eigen2Support/Geometry/All.h	79;"	d
RotationBase	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^class RotationBase$/;"	c	namespace:Eigen
RotationBase	external/Eigen/src/Geometry/RotationBase.h	/^class RotationBase$/;"	c	namespace:Eigen
RotationMatrixType	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,Dim> RotationMatrixType;$/;"	t	class:Eigen::RotationBase
RotationMatrixType	external/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,Dim> RotationMatrixType;$/;"	t	class:Eigen::RotationBase
RowMajor	external/Eigen/src/Core/util/Constants.h	/^  RowMajor = 0x1,  \/\/ it is only a coincidence that this is equal to RowMajorBit -- don't rely on that$/;"	e	enum:Eigen::__anon269
RowMajorBit	external/Eigen/src/Core/util/Constants.h	/^const unsigned int RowMajorBit = 0x1;$/;"	m	namespace:Eigen
RowType	external/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowType;$/;"	t	class:Eigen::JacobiSVD
RowVector	external/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MatrixType::ColsAtCompileTime, 1> RowVector;$/;"	t	class:Eigen::SVD
RowVectorType	external/Eigen/src/Eigen2Support/LU.h	/^    typedef Matrix<Scalar, 1, MatrixType::ColsAtCompileTime, MatrixType::Options, 1, MatrixType::MaxColsAtCompileTime> RowVectorType;$/;"	t	class:Eigen::LU
RowVectorType	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::ColPivHouseholderQR
RowVectorType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::FullPivHouseholderQR
RowVectorType	external/Eigen/src/QR/HouseholderQR.h	/^    typedef typename internal::plain_row_type<MatrixType>::type RowVectorType;$/;"	t	class:Eigen::HouseholderQR
RowVectorType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, 1, ColsAtCompileTime> RowVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
RowXpr	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename Base::RowXpr RowXpr;$/;"	t	class:Eigen::MatrixBase
RowXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, 1, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowXpr;$/;"	t
Rows	external/Eigen/src/Core/GeneralProduct.h	/^    Rows  = _Lhs::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::product_type::__anon114
Rows	external/Eigen/src/Geometry/Transform.h	/^    Rows = int(Mode)==(AffineCompact) ? Dim : HDim$/;"	e	enum:Eigen::Transform::__anon370
Rows	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const int Rows = Traits::RowsAtCompileTime;$/;"	m	class:Eigen::MatrixFunction
RowsAtCompileTime	external/Eigen/src/Cholesky/LDLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LDLT::__anon1
RowsAtCompileTime	external/Eigen/src/Cholesky/LLT.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::LLT::__anon2
RowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
RowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon20
RowsAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon21
RowsAtCompileTime	external/Eigen/src/Core/Block.h	/^    RowsAtCompileTime = MatrixRows == 0 ? 0 : BlockRows,$/;"	e	enum:Eigen::internal::traits::__anon22
RowsAtCompileTime	external/Eigen/src/Core/CwiseBinaryOp.h	/^    RowsAtCompileTime = traits<Ancestor>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon25
RowsAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon30
RowsAtCompileTime	external/Eigen/src/Core/Diagonal.h	/^    RowsAtCompileTime = (int(DiagIndex) == Dynamic || int(MatrixType::SizeAtCompileTime) == Dynamic) ? Dynamic$/;"	e	enum:Eigen::internal::traits::__anon36
RowsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^      RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::DiagonalBase::__anon37
RowsAtCompileTime	external/Eigen/src/Core/DiagonalMatrix.h	/^    RowsAtCompileTime = DiagonalVectorType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon39
RowsAtCompileTime	external/Eigen/src/Core/DiagonalProduct.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon40
RowsAtCompileTime	external/Eigen/src/Core/MapBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::MapBase::__anon147
RowsAtCompileTime	external/Eigen/src/Core/Matrix.h	/^    RowsAtCompileTime = _Rows,$/;"	e	enum:Eigen::internal::traits::__anon153
RowsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::PermutationBase::__anon158
RowsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^      RowsAtCompileTime = Traits::RowsAtCompileTime,$/;"	e	enum:Eigen::Transpose::__anon160
RowsAtCompileTime	external/Eigen/src/Core/PermutationMatrix.h	/^    RowsAtCompileTime = _IndicesType::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon159
RowsAtCompileTime	external/Eigen/src/Core/Product.h	/^    RowsAtCompileTime = LhsCleaned::RowsAtCompileTime,$/;"	e	enum:internal::traits::__anon164
RowsAtCompileTime	external/Eigen/src/Core/ProductBase.h	/^    RowsAtCompileTime = traits<Lhs>::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon165
RowsAtCompileTime	external/Eigen/src/Core/Replicate.h	/^    RowsAtCompileTime = RowFactor==Dynamic || int(MatrixType::RowsAtCompileTime)==Dynamic$/;"	e	enum:Eigen::internal::traits::__anon178
RowsAtCompileTime	external/Eigen/src/Core/Reverse.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon180
RowsAtCompileTime	external/Eigen/src/Core/Select.h	/^    RowsAtCompileTime = ConditionMatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon182
RowsAtCompileTime	external/Eigen/src/Core/Transpose.h	/^    RowsAtCompileTime = MatrixType::ColsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon192
RowsAtCompileTime	external/Eigen/src/Core/TriangularMatrix.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::TriangularBase::__anon195
RowsAtCompileTime	external/Eigen/src/Core/VectorwiseOp.h	/^    RowsAtCompileTime = Direction==Vertical   ? 1 : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon200
RowsAtCompileTime	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      RowsAtCompileTime = _LhsNested::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon233
RowsAtCompileTime	external/Eigen/src/Eigen2Support/Minor.h	/^    RowsAtCompileTime = (MatrixType::RowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon345
RowsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexEigenSolver::__anon347
RowsAtCompileTime	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ComplexSchur::__anon348
RowsAtCompileTime	external/Eigen/src/Eigenvalues/EigenSolver.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::EigenSolver::__anon349
RowsAtCompileTime	external/Eigen/src/Eigenvalues/RealSchur.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::RealSchur::__anon351
RowsAtCompileTime	external/Eigen/src/Geometry/Homogeneous.h	/^    RowsAtCompileTime = Direction==Vertical  ?  RowsPlusOne : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon356
RowsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^      RowsAtCompileTime = internal::traits<HouseholderSequence>::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderSequence::__anon380
RowsAtCompileTime	external/Eigen/src/Householder/HouseholderSequence.h	/^    RowsAtCompileTime = Side==OnTheLeft ? traits<VectorsType>::RowsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon379
RowsAtCompileTime	external/Eigen/src/LU/FullPivLU.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivLU::__anon382
RowsAtCompileTime	external/Eigen/src/LU/PartialPivLU.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::PartialPivLU::__anon385
RowsAtCompileTime	external/Eigen/src/QR/ColPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::ColPivHouseholderQR::__anon393
RowsAtCompileTime	external/Eigen/src/QR/FullPivHouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::FullPivHouseholderQR::__anon394
RowsAtCompileTime	external/Eigen/src/QR/HouseholderQR.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HouseholderQR::__anon395
RowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::JacobiSVD::__anon402
RowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon398
RowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon399
RowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon400
RowsAtCompileTime	external/Eigen/src/SVD/JacobiSVD.h	/^    RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::qr_preconditioner_impl::__anon401
RowsAtCompileTime	external/Eigen/src/SVD/UpperBidiagonalization.h	/^      RowsAtCompileTime = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::UpperBidiagonalization::__anon403
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseBlock.h	/^    RowsAtCompileTime = IsRowMajor ? Size : MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon413
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    RowsAtCompileTime    = Tr ? int(traits<Rhs>::RowsAtCompileTime)     : int(traits<Lhs>::RowsAtCompileTime),$/;"	e	enum:Eigen::internal::traits::__anon418
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    RowsAtCompileTime = _Lhs::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon419
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon422
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon423
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseProduct.h	/^    RowsAtCompileTime    = _LhsNested::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon429
RowsAtCompileTime	external/Eigen/src/SparseCore/SparseVector.h	/^    RowsAtCompileTime = IsColVector ? Dynamic : 1,$/;"	e	enum:Eigen::internal::traits::__anon435
RowsAtCompileTime	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const int RowsAtCompileTime = Traits::RowsAtCompileTime;$/;"	m	class:Eigen::MatrixFunction
RowsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^        RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon447
RowsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        RowsAtCompileTime = internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
RowsAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^        RowsAtCompileTime = _LhsNested::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::traits::__anon449
RowsAtCompileTime	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    RowsAtCompileTime = Dynamic,$/;"	e	enum:Eigen::internal::traits::__anon453
RowsBlockXpr	external/Eigen/src/plugins/BlockMethods.h	/^typedef Block<Derived, Dynamic, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> RowsBlockXpr;$/;"	t
RowsPlusOne	external/Eigen/src/Geometry/Homogeneous.h	/^    RowsPlusOne = (MatrixType::RowsAtCompileTime != Dynamic) ?$/;"	e	enum:Eigen::internal::traits::__anon356
RowwiseReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef VectorwiseOp<Derived, Horizontal> RowwiseReturnType;$/;"	t	class:Eigen::DenseBase
Running	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Running = -1,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
Running	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Running = -1,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
S	external/Eigen/src/Core/SolveTriangular.h	/^    S = IsLower ? 0     : I+1$/;"	e	enum:Eigen::internal::triangular_solver_unroller::__anon190
SDP_IsDiagonal	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^enum {SDP_IsDiagonal, SDP_IsSparseRowMajor, SDP_IsSparseColMajor};$/;"	e	enum:Eigen::internal::__anon420
SDP_IsSparseColMajor	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^enum {SDP_IsDiagonal, SDP_IsSparseRowMajor, SDP_IsSparseColMajor};$/;"	e	enum:Eigen::internal::__anon420
SDP_IsSparseRowMajor	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^enum {SDP_IsDiagonal, SDP_IsSparseRowMajor, SDP_IsSparseColMajor};$/;"	e	enum:Eigen::internal::__anon420
SHELL	build/Makefile	/^SHELL = \/bin\/sh$/;"	m
SIGN	external/SuiteSparse/Include/cholmod_internal.h	106;"	d
SIMULATE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	163;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	178;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	21;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	157;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	172;"	d	file:
SIMULATE_ID	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	21;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	170;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	185;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	37;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	164;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	179;"	d	file:
SIMULATE_VERSION_MAJOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	37;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	171;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	186;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	38;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	165;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	180;"	d	file:
SIMULATE_VERSION_MINOR	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	38;"	d	file:
SIX_SIZE_T_SIZES	external/unsupported/test/mpreal/dlmalloc.c	1453;"	d	file:
SIZE_T_BITSIZE	external/unsupported/test/mpreal/dlmalloc.c	1443;"	d	file:
SIZE_T_FOUR	external/unsupported/test/mpreal/dlmalloc.c	1450;"	d	file:
SIZE_T_ONE	external/unsupported/test/mpreal/dlmalloc.c	1448;"	d	file:
SIZE_T_SIZE	external/unsupported/test/mpreal/dlmalloc.c	1442;"	d	file:
SIZE_T_TWO	external/unsupported/test/mpreal/dlmalloc.c	1449;"	d	file:
SIZE_T_ZERO	external/unsupported/test/mpreal/dlmalloc.c	1447;"	d	file:
SMALLBIN_SHIFT	external/unsupported/test/mpreal/dlmalloc.c	2440;"	d	file:
SMALLBIN_WIDTH	external/unsupported/test/mpreal/dlmalloc.c	2441;"	d	file:
SPD	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^  SPD = 0x100,$/;"	e	enum:Eigen::__anon455
SPINS_PER_YIELD	external/unsupported/test/mpreal/dlmalloc.c	1666;"	d	file:
SPINS_PER_YIELD	external/unsupported/test/mpreal/dlmalloc.c	1766;"	d	file:
SPIN_LOCKS_AVAILABLE	external/unsupported/test/mpreal/dlmalloc.c	541;"	d	file:
SPIN_LOCKS_AVAILABLE	external/unsupported/test/mpreal/dlmalloc.c	543;"	d	file:
SPQR_grain	external/SuiteSparse/Include/cholmod_core.h	/^    double SPQR_grain ;         \/* task size is >= max (total flops \/ grain) *\/$/;"	m	struct:cholmod_common_struct
SPQR_istat	external/SuiteSparse/Include/cholmod_core.h	/^    SuiteSparse_long SPQR_istat [10] ;   \/* for SuiteSparseQR statistics *\/$/;"	m	struct:cholmod_common_struct
SPQR_nthreads	external/SuiteSparse/Include/cholmod_core.h	/^    int SPQR_nthreads ;      \/* number of TBB threads, 0 = auto *\/$/;"	m	struct:cholmod_common_struct
SPQR_shrink	external/SuiteSparse/Include/cholmod_core.h	/^    int SPQR_shrink ;        \/* controls stack realloc method *\/$/;"	m	struct:cholmod_common_struct
SPQR_small	external/SuiteSparse/Include/cholmod_core.h	/^    double SPQR_small ;         \/* task size is >= small *\/$/;"	m	struct:cholmod_common_struct
SPQR_xstat	external/SuiteSparse/Include/cholmod_core.h	/^    double SPQR_xstat [4] ;     \/* for SuiteSparseQR statistics *\/$/;"	m	struct:cholmod_common_struct
SQR	external/unsupported/test/BVH.cpp	/^inline double SQR(double x) { return x * x; }$/;"	f
SSE	external/Eigen/src/Core/util/Constants.h	/^    SSE = 0x1,$/;"	e	enum:Eigen::Architecture::Type
STRINGIFY	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	303;"	d	file:
STRINGIFY	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	288;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	302;"	d	file:
STRINGIFY_HELPER	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	287;"	d	file:
STRUCT_MALLINFO_DECLARED	external/unsupported/test/mpreal/dlmalloc.c	706;"	d	file:
STRUCT_MALLINFO_DECLARED	external/unsupported/test/mpreal/dlmalloc.h	70;"	d
SUFFIXES	build/Makefile	/^SUFFIXES =$/;"	m
SUITESPARSE_DATE	external/SuiteSparse/Include/SuiteSparse_config.h	168;"	d
SUITESPARSE_MAIN_VERSION	external/SuiteSparse/Include/SuiteSparse_config.h	170;"	d
SUITESPARSE_SUBSUB_VERSION	external/SuiteSparse/Include/SuiteSparse_config.h	172;"	d
SUITESPARSE_SUB_VERSION	external/SuiteSparse/Include/SuiteSparse_config.h	171;"	d
SUITESPARSE_TIMER_ENABLED	external/SuiteSparse/Include/SuiteSparse_config.h	127;"	d
SUITESPARSE_VERSION	external/SuiteSparse/Include/SuiteSparse_config.h	173;"	d
SUITESPARSE_VER_CODE	external/SuiteSparse/Include/SuiteSparse_config.h	169;"	d
SUN64	external/SuiteSparse/Include/cholmod_blas.h	87;"	d
SVD	external/Eigen/src/Eigen2Support/SVD.h	/^    SVD() {} \/\/ a user who relied on compiler-generated default compiler reported problems with MSVC in 2.0.7$/;"	f	class:Eigen::SVD
SVD	external/Eigen/src/Eigen2Support/SVD.h	/^    SVD(const MatrixType& matrix)$/;"	f	class:Eigen::SVD
SVD	external/Eigen/src/Eigen2Support/SVD.h	/^template<typename MatrixType> class SVD$/;"	c	namespace:Eigen
SVD	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef JacobiSVD<MatrixType, QRPreconditioner> SVD;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
SYS_ALLOC_PADDING	external/unsupported/test/mpreal/dlmalloc.c	2545;"	d	file:
SameType	external/Eigen/src/Core/CwiseBinaryOp.h	/^    SameType = is_same<typename _LhsNested::Scalar,typename _RhsNested::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::__anon26
SameType	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      SameType = is_same<typename _LhsNested::Scalar,typename _RhsNested::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::__anon233
SaveCtr	OptApp.cpp	/^void COptApp::SaveCtr( const Eigen::VectorXd & ctr, std::string filename )$/;"	f	class:COptApp
SavePoints	OptApp.cpp	/^void COptApp::SavePoints( const Eigen::VectorXd & ctr, std::string filename )$/;"	f	class:COptApp
SaveToFile	RGBDTrajectory.h	/^	void SaveToFile( std::string filename ) {$/;"	f	struct:RGBDTrajectory
Scalar	external/Eigen/src/Cholesky/LDLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LDLT
Scalar	external/Eigen/src/Cholesky/LLT.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LLT
Scalar	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::CholmodBase
Scalar	external/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::ArrayBase
Scalar	external/Eigen/src/Core/Assign_MKL.h	/^  typedef typename Derived1::Scalar Scalar;$/;"	t	struct:Eigen::internal::vml_assign_impl
Scalar	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrix>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrix
Scalar	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<BandMatrixWrapper>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixWrapper
Scalar	external/Eigen/src/Core/BandMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::internal::BandMatrixBase
Scalar	external/Eigen/src/Core/BandMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/CommaInitializer.h	/^  typedef typename XprType::Scalar Scalar;$/;"	t	struct:Eigen::CommaInitializer
Scalar	external/Eigen/src/Core/CwiseBinaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/CwiseUnaryOp.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/CwiseUnaryView.h	/^                   >::type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseBase
Scalar	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::DenseCoeffsBase
Scalar	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalMatrix
Scalar	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	class:Eigen::DiagonalBase
Scalar	external/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/DiagonalProduct.h	/^  typedef typename scalar_product_traits<typename MatrixType::Scalar, typename DiagonalType::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/Map.h	/^  typedef typename PlainObjectType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/MapBase.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	external/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MapBase
Scalar	external/Eigen/src/Core/Matrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/MatrixBase.h	/^      typedef typename internal::scalar_product_traits<typename internal::traits<Derived>::Scalar,typename internal::traits<OtherDerived>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
Scalar	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::MatrixBase
Scalar	external/Eigen/src/Core/NoAlias.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::NoAlias
Scalar	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::PermutationBase
Scalar	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::Transpose
Scalar	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef typename _IndicesType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::PlainObjectBase
Scalar	external/Eigen/src/Core/Product.h	/^  typedef typename scalar_product_traits<typename traits<LhsCleaned>::Scalar, typename traits<RhsCleaned>::Scalar>::ReturnType Scalar;$/;"	t	struct:internal::traits
Scalar	external/Eigen/src/Core/ProductBase.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::ScaledProduct
Scalar	external/Eigen/src/Core/ProductBase.h	/^  typedef typename scalar_product_traits<typename Lhs::Scalar, typename Rhs::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_impl
Scalar	external/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_novec_unroller
Scalar	external/Eigen/src/Core/Redux.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::redux_vec_unroller
Scalar	external/Eigen/src/Core/Replicate.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/Reverse.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/SelfAdjointView.h	/^    typedef typename internal::traits<SelfAdjointView>::Scalar Scalar; $/;"	t	class:Eigen::SelfAdjointView
Scalar	external/Eigen/src/Core/SolveTriangular.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_solver_selector
Scalar	external/Eigen/src/Core/Transpose.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::TriangularBase
Scalar	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::Scalar Scalar;$/;"	t	class:Eigen::TriangularView
Scalar	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef typename Derived1::Scalar Scalar;$/;"	t	struct:Eigen::internal::triangular_assignment_selector
Scalar	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename ExpressionType::Scalar Scalar;$/;"	t	class:Eigen::VectorwiseOp
Scalar	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename MemberOp::result_type Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::coeff_visitor
Scalar	external/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::max_coeff_visitor
Scalar	external/Eigen/src/Core/Visitor.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	struct:Eigen::internal::min_coeff_visitor
Scalar	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename scalar_product_traits<typename _LhsNested::Scalar, typename _RhsNested::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef std::complex<RealScalar>  Scalar;$/;"	t	class:Eigen::internal::gebp_traits
Scalar	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef std::complex<RealScalar> Scalar;$/;"	t	struct:Eigen::internal::conj_helper
Scalar	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename NestedXpr::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef typename traits<XprType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::blas_traits
Scalar	external/Eigen/src/Eigen2Support/Cwise.h	/^    typedef typename internal::traits<ExpressionType>::Scalar Scalar;$/;"	t	class:Eigen::Cwise
Scalar	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AlignedBox
Scalar	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AngleAxis
Scalar	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::ei_traits
Scalar	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Hyperplane
Scalar	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::ParametrizedLine
Scalar	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Quaternion
Scalar	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::ei_traits
Scalar	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::ei_quaternion_assign_impl
Scalar	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Rotation2D
Scalar	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::ei_traits
Scalar	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    typedef typename ei_traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::RotationBase
Scalar	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Scaling
Scalar	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Transform
Scalar	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::ei_transform_product_impl
Scalar	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Translation
Scalar	external/Eigen/src/Eigen2Support/LU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::LU
Scalar	external/Eigen/src/Eigen2Support/SVD.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SVD
Scalar	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexEigenSolver
Scalar	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ComplexSchur
Scalar	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::EigenSolver
Scalar	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HessenbergDecomposition
Scalar	external/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::RealSchur
Scalar	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Scalar	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::Scalar Scalar;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
Scalar	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::Tridiagonalization
Scalar	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::tridiagonalization_inplace_selector
Scalar	external/Eigen/src/Geometry/AlignedBox.h	/^  typedef _Scalar                                   Scalar;$/;"	t	class:Eigen::AlignedBox
Scalar	external/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::AngleAxis
Scalar	external/Eigen/src/Geometry/AngleAxis.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Geometry/Hyperplane.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Hyperplane
Scalar	external/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename traits<Derived>::Scalar Scalar;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Scalar	external/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::ParametrizedLine
Scalar	external/Eigen/src/Geometry/Quaternion.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::Map
Scalar	external/Eigen/src/Geometry/Quaternion.h	/^    typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Quaternion
Scalar	external/Eigen/src/Geometry/Quaternion.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Geometry/Quaternion.h	/^  typedef typename Other::Scalar Scalar;$/;"	t	struct:Eigen::internal::quaternionbase_assign_impl
Scalar	external/Eigen/src/Geometry/Quaternion.h	/^  typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::QuaternionBase
Scalar	external/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Rotation2D
Scalar	external/Eigen/src/Geometry/Rotation2D.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/Geometry/RotationBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::RotationBase
Scalar	external/Eigen/src/Geometry/Scaling.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::UniformScaling
Scalar	external/Eigen/src/Geometry/Transform.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Transform
Scalar	external/Eigen/src/Geometry/Translation.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::Translation
Scalar	external/Eigen/src/Householder/HouseholderSequence.h	/^    typedef typename internal::traits<HouseholderSequence>::Scalar Scalar;$/;"	t	class:Eigen::HouseholderSequence
Scalar	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::DiagonalPreconditioner
Scalar	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::BiCGSTAB
Scalar	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ConjugateGradient
Scalar	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::IncompleteLUT
Scalar	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::IterativeSolverBase
Scalar	external/Eigen/src/LU/FullPivLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivLU
Scalar	external/Eigen/src/LU/PartialPivLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PartialPivLU
Scalar	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::PastixBase
Scalar	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pastix_traits
Scalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLDLT
Scalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLLT
Scalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::PardisoLU
Scalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::PardisoImpl
Scalar	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef typename _MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::pardiso_traits
Scalar	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::ColPivHouseholderQR
Scalar	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::FullPivHouseholderQR
Scalar	external/Eigen/src/QR/HouseholderQR.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::HouseholderQR
Scalar	external/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::JacobiSVD
Scalar	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
Scalar	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
Scalar	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::internal::UpperBidiagonalization
Scalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholesky
Scalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialCholeskyBase
Scalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLDLT
Scalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SimplicialLLT
Scalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                             Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  typedef typename MatrixType::Scalar                         Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector
Scalar	external/Eigen/src/SparseCore/AmbiVector.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::AmbiVector::Iterator
Scalar	external/Eigen/src/SparseCore/CompressedStorage.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::internal::CompressedStorage
Scalar	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename LhsCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::conservative_sparse_sparse_product_selector
Scalar	external/Eigen/src/SparseCore/CoreIterators.h	/^    typedef typename Derived::Scalar Scalar;$/;"	t	class:Eigen::DenseBase::InnerIterator
Scalar	external/Eigen/src/SparseCore/SparseBlock.h	/^  typedef typename traits<MatrixType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename CwiseBinaryXpr::Scalar Scalar;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
Scalar	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::Scalar Scalar;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
Scalar	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryOpImpl::InnerIterator
Scalar	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryOpImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
Scalar	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryViewImpl::InnerIterator
Scalar	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename CwiseUnaryViewImpl::Scalar Scalar;$/;"	t	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
Scalar	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^                                            typename traits<Rhs>::Scalar>::ReturnType Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename _Lhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SparseMatrixBase
Scalar	external/Eigen/src/SparseCore/SparsePermutation.h	/^    typedef typename MatrixTypeNestedCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::permut_sparsematrix_product_retval
Scalar	external/Eigen/src/SparseCore/SparsePermutation.h	/^  typedef typename MatrixTypeNestedCleaned::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename _LhsNested::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename internal::traits<Lhs>::Scalar Scalar;$/;"	t	struct:Eigen::SparseSparseProductReturnType
Scalar	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSelfAdjointView
Scalar	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
Scalar	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
Scalar	external/Eigen/src/SparseCore/SparseVector.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_selector
Scalar	external/Eigen/src/SparseCore/TriangularSolver.h	/^  typedef typename Rhs::Scalar Scalar;$/;"	t	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
Scalar	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperILU
Scalar	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename Base::Scalar Scalar;$/;"	t	class:Eigen::SuperLU
Scalar	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SuperLUBase
Scalar	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::UmfPackLU
Scalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename JacobianType::Scalar Scalar;$/;"	t	class:Eigen::AutoDiffJacobian
Scalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    typedef typename internal::traits<DerType>::Scalar Scalar;$/;"	t	class:Eigen::AutoDiffScalar
Scalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  typedef typename traits<DerType>::Scalar Scalar;$/;"	t	struct:Eigen::internal::auto_diff_special_op
Scalar	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    typedef ActiveScalar Scalar;$/;"	t	class:Eigen::AutoDiffVector
Scalar	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  typedef typename Minimizer::Scalar Scalar;$/;"	t	struct:Eigen::internal::minimizer_helper1
Scalar	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  typedef typename Minimizer::Scalar Scalar;$/;"	t	struct:Eigen::internal::minimizer_helper2
Scalar	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef _Scalar Scalar;$/;"	t	class:Eigen::KdBVH
Scalar	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::fftw_impl
Scalar	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::kiss_cpx_fft
Scalar	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::kissfft_impl
Scalar	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::GMRES
Scalar	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef _Scalar Scalar;$/;"	t	class:Eigen::IncompleteLU
Scalar	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Scaling
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    typedef typename internal::traits<MatrixType>::Scalar Scalar;$/;"	t	class:Eigen::MatrixExponential
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename Derived::Scalar Scalar;$/;"	t	class:Eigen::MatrixFunctionReturnValue
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::MatrixFunction
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename Traits::Scalar Scalar;$/;"	t	class:Eigen::MatrixFunction
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::MatrixFunctionAtomic
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename Derived::Scalar Scalar;$/;"	t	class:Eigen::MatrixLogarithmReturnValue
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::MatrixLogarithmAtomic
Scalar	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::MatrixSquareRootQuasiTriangular
Scalar	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::Scalar Scalar;$/;"	t	class:Eigen::NumericalDiff
Scalar	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    typedef _Scalar                                Scalar;$/;"	t	class:Eigen::internal::companion
Scalar	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    typedef _Scalar                             Scalar;$/;"	t	class:Eigen::PolynomialSolverBase
Scalar	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    typedef typename MatrixType::Scalar Scalar;$/;"	t	class:Eigen::SkylineInplaceLU
Scalar	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename internal::traits<Derived>::Scalar Scalar;$/;"	t	class:Eigen::SkylineMatrixBase
Scalar	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename _LhsNested::Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename traits<typename remove_all<Lhs>::type>::Scalar Scalar;$/;"	t	struct:Eigen::internal::skyline_product_selector
Scalar	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef _Scalar Scalar;$/;"	t	struct:Eigen::internal::traits
Scalar	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    typedef typename SparseMatrixType::Scalar Scalar;$/;"	t	class:Eigen::RandomSetter
Scalar	external/unsupported/Eigen/src/Splines/Spline.h	/^    typedef _Scalar Scalar; \/*!< The spline curve's scalar type. *\/$/;"	t	class:Eigen::Spline
Scalar	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^      typedef _Scalar Scalar; \/*!< The spline curve's scalar type. *\/$/;"	t	struct:Eigen::SplineTraits
Scalar	external/unsupported/doc/examples/BVH_Example.cpp	/^  typedef double Scalar;$/;"	t	struct:PointPointMinimizer	file:
Scalar	external/unsupported/test/BVH.cpp	/^  typedef double Scalar;$/;"	t	struct:BallPointStuff	file:
Scalar	external/unsupported/test/NonLinearOptimization.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:Functor	file:
Scalar	external/unsupported/test/NumericalDiff.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:Functor	file:
Scalar	external/unsupported/test/autodiff.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:TestFunc1	file:
Scalar	external/unsupported/test/forward_adolc.cpp	/^  typedef _Scalar Scalar;$/;"	t	struct:TestFunc1	file:
ScalarAddReturnType	external/Eigen/src/Eigen2Support/Cwise.h	/^    typedef CwiseUnaryOp<internal::scalar_add_op<Scalar>, ExpressionType> ScalarAddReturnType;$/;"	t	class:Eigen::Cwise
ScalarCoeffImpl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^                                   _LhsNested, _RhsNested, Scalar> ScalarCoeffImpl;$/;"	t	class:Eigen::CoeffBasedProduct
ScalarIsComplex	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^      ScalarIsComplex = NumTraits<Scalar>::IsComplex$/;"	e	enum:Eigen::PardisoImpl::__anon390
ScalarMultipleReturnType	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_multiple_op<Scalar>, const Derived> ScalarMultipleReturnType;$/;"	t
ScalarPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<Scalar>::type     ScalarPacket;$/;"	t	class:Eigen::internal::gebp_traits
ScalarQuotient1ReturnType	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^typedef CwiseUnaryOp<internal::scalar_quotient1_op<Scalar>, const Derived> ScalarQuotient1ReturnType;$/;"	t
ScalarTraits	external/Eigen/src/Geometry/AlignedBox.h	/^  typedef NumTraits<Scalar>                         ScalarTraits;$/;"	t	class:Eigen::AlignedBox
ScalarWithConstIfNotLvalue	external/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::ArrayWrapper
ScalarWithConstIfNotLvalue	external/Eigen/src/Core/ArrayWrapper.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MatrixWrapper
ScalarWithConstIfNotLvalue	external/Eigen/src/Core/Diagonal.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::Diagonal
ScalarWithConstIfNotLvalue	external/Eigen/src/Core/MapBase.h	/^                  >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::MapBase
ScalarWithConstIfNotLvalue	external/Eigen/src/Core/Swap.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::SwapWrapper
ScalarWithConstIfNotLvalue	external/Eigen/src/Core/Transpose.h	/^                     >::type ScalarWithConstIfNotLvalue;$/;"	t	class:Eigen::TransposeImpl
ScalarWrapper	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      ScalarWrapper() : value(0) {}$/;"	f	struct:Eigen::RandomSetter::ScalarWrapper
ScalarWrapper	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    struct ScalarWrapper$/;"	s	class:Eigen::RandomSetter
ScaledProduct	external/Eigen/src/Core/ProductBase.h	/^    ScaledProduct(const NestedProduct& prod, Scalar x)$/;"	f	class:Eigen::ScaledProduct
ScaledProduct	external/Eigen/src/Core/ProductBase.h	/^class ScaledProduct$/;"	c	namespace:Eigen
Scaling	external/Eigen/src/Eigen2Support/Geometry/All.h	104;"	d
Scaling	external/Eigen/src/Eigen2Support/Geometry/All.h	49;"	d
Scaling	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  Scaling() {}$/;"	f	class:Eigen::Scaling
Scaling	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  explicit inline Scaling(const Scalar& s) { m_coeffs.setConstant(s); }$/;"	f	class:Eigen::Scaling
Scaling	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  explicit inline Scaling(const VectorType& coeffs) : m_coeffs(coeffs) {}$/;"	f	class:Eigen::Scaling
Scaling	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Scaling
Scaling	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Scaling
Scaling	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline explicit Scaling(const Scaling<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Scaling
Scaling	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^class Scaling$/;"	c	namespace:Eigen
Scaling	external/Eigen/src/Geometry/Scaling.h	/^static inline DiagonalMatrix<Scalar,2> Scaling(Scalar sx, Scalar sy)$/;"	f	namespace:Eigen
Scaling	external/Eigen/src/Geometry/Scaling.h	/^static inline DiagonalMatrix<Scalar,3> Scaling(Scalar sx, Scalar sy, Scalar sz)$/;"	f	namespace:Eigen
Scaling	external/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<double> Scaling(double s) { return UniformScaling<double>(s); }$/;"	f	namespace:Eigen
Scaling	external/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<float> Scaling(float s) { return UniformScaling<float>(s); }$/;"	f	namespace:Eigen
Scaling	external/Eigen/src/Geometry/Scaling.h	/^static inline UniformScaling<std::complex<RealScalar> > Scaling(const std::complex<RealScalar>& s)$/;"	f	namespace:Eigen
Scaling	external/Eigen/src/Geometry/Scaling.h	/^static inline const DiagonalWrapper<const Derived> Scaling(const MatrixBase<Derived>& coeffs)$/;"	f	namespace:Eigen
Scaling	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    Scaling() { init(); }$/;"	f	class:Scaling
Scaling	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    Scaling(const MatrixType& matrix)$/;"	f	class:Scaling
Scaling	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^class Scaling$/;"	c
Scaling2d	external/Eigen/src/Eigen2Support/Geometry/All.h	106;"	d
Scaling2d	external/Eigen/src/Eigen2Support/Geometry/All.h	51;"	d
Scaling2d	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<double,2> Scaling2d;$/;"	t	namespace:Eigen
Scaling2f	external/Eigen/src/Eigen2Support/Geometry/All.h	105;"	d
Scaling2f	external/Eigen/src/Eigen2Support/Geometry/All.h	50;"	d
Scaling2f	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<float, 2> Scaling2f;$/;"	t	namespace:Eigen
Scaling3d	external/Eigen/src/Eigen2Support/Geometry/All.h	108;"	d
Scaling3d	external/Eigen/src/Eigen2Support/Geometry/All.h	53;"	d
Scaling3d	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<double,3> Scaling3d;$/;"	t	namespace:Eigen
Scaling3f	external/Eigen/src/Eigen2Support/Geometry/All.h	107;"	d
Scaling3f	external/Eigen/src/Eigen2Support/Geometry/All.h	52;"	d
Scaling3f	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^typedef Scaling<float, 3> Scaling3f;$/;"	t	namespace:Eigen
ScalingType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Scaling<Scalar,Dim> ScalingType;$/;"	t	class:Eigen::Transform
ScalingType	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Scaling<Scalar,Dim> ScalingType;$/;"	t	class:Eigen::Translation
SegmentReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef VectorBlock<Derived> SegmentReturnType;$/;"	t	class:Eigen::DenseBase
Select	external/Eigen/src/Core/Select.h	/^    Select(const ConditionMatrixType& conditionMatrix,$/;"	f	class:Eigen::Select
Select	external/Eigen/src/Core/Select.h	/^class Select : internal::no_assignment_operator,$/;"	c	namespace:Eigen
SelfAdjoint	external/Eigen/src/Core/util/Constants.h	/^  SelfAdjoint=0x10,$/;"	e	enum:Eigen::__anon264
SelfAdjointBit	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int SelfAdjointBit = SelfAdjoint;$/;"	m	namespace:Eigen
SelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver()$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(Index size)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(const MatrixType& matA, const MatrixType& matB, bool computeEigenvectors = true)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    SelfAdjointEigenSolver(const MatrixType& matrix, int options = ComputeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
SelfAdjointEigenSolver	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename _MatrixType> class SelfAdjointEigenSolver$/;"	c	namespace:Eigen
SelfAdjointView	external/Eigen/src/Core/SelfAdjointView.h	/^    inline SelfAdjointView(MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SelfAdjointView
SelfAdjointView	external/Eigen/src/Core/SelfAdjointView.h	/^template<typename MatrixType, unsigned int UpLo> class SelfAdjointView$/;"	c	namespace:Eigen
SelfAdjointViewReturnType	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	s	class:Eigen::MatrixBase
SelfCwiseBinaryOp	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline SelfCwiseBinaryOp(Lhs& xpr, const BinaryOp& func = BinaryOp()) : m_matrix(xpr), m_functor(func) {}$/;"	f	class:Eigen::SelfCwiseBinaryOp
SelfCwiseBinaryOp	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^template<typename BinaryOp, typename Lhs, typename Rhs> class SelfCwiseBinaryOp$/;"	c	namespace:Eigen
SelfadjointProductMatrix	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  SelfadjointProductMatrix(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::SelfadjointProductMatrix
SelfadjointProductMatrix	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,RhsMode,false>$/;"	s	namespace:Eigen
SelfadjointProductMatrix	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  SelfadjointProductMatrix(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::SelfadjointProductMatrix
SelfadjointProductMatrix	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct SelfadjointProductMatrix<Lhs,0,true,Rhs,RhsMode,false>$/;"	s	namespace:Eigen
SelfadjointProductMatrix	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,0,true>$/;"	s	namespace:Eigen
Sequential	external/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	e	enum:Eigen::Sequential_t
SequentialLinSpacedReturnType	external/Eigen/src/Core/DenseBase.h	/^    typedef CwiseNullaryOp<internal::linspaced_op<Scalar,false>,Derived> SequentialLinSpacedReturnType;$/;"	t	class:Eigen::DenseBase
Sequential_t	external/Eigen/src/Core/util/Constants.h	/^enum Sequential_t { Sequential };$/;"	g	namespace:Eigen
SetAction	external/Eigen/src/Core/util/Constants.h	/^enum Action {GetAction, SetAction};$/;"	e	enum:Eigen::Action
SetDiag	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon255
SetDiag	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SetDiag = (Mode&(ZeroDiag|UnitDiag)) ? 0 : 1$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon256
SetterRowMajor	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      SetterRowMajor = SwapStorage ? 1-TargetRowMajor : TargetRowMajor$/;"	e	enum:Eigen::RandomSetter::__anon460
Side	external/Eigen/src/Core/GeneralProduct.h	/^    enum { Side = Lhs::IsVectorAtCompileTime ? OnTheLeft : OnTheRight };$/;"	e	enum:Eigen::GeneralProduct::__anon139
SimplicialCholesky	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky() : Base(), m_LDLT(true) {}$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholesky	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
SimplicialCholesky	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialCholesky : public SimplicialCholeskyBase<SimplicialCholesky<_MatrixType,_UpLo> >$/;"	c	namespace:Eigen
SimplicialCholeskyBase	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholeskyBase(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
SimplicialCholeskyBase	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^class SimplicialCholeskyBase : internal::noncopyable$/;"	c	namespace:Eigen
SimplicialCholeskyLDLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLDLT$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyLLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  SimplicialCholeskyLLT,$/;"	e	enum:Eigen::SimplicialCholeskyMode
SimplicialCholeskyMode	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^enum SimplicialCholeskyMode {$/;"	g	namespace:Eigen
SimplicialLDLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT() : Base() {}$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLDLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
SimplicialLDLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLDLT : public SimplicialCholeskyBase<SimplicialLDLT<_MatrixType,_UpLo> >$/;"	c	namespace:Eigen
SimplicialLLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT() : Base() {}$/;"	f	class:Eigen::SimplicialLLT
SimplicialLLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
SimplicialLLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    class SimplicialLLT : public SimplicialCholeskyBase<SimplicialLLT<_MatrixType,_UpLo> >$/;"	c	namespace:Eigen
SingletonVector	external/Eigen/src/SparseCore/SparseMatrix.h	/^        SingletonVector(Index i, Index v)$/;"	f	class:Eigen::SparseMatrix::SingletonVector
SingletonVector	external/Eigen/src/SparseCore/SparseMatrix.h	/^    class SingletonVector$/;"	c	class:Eigen::SparseMatrix
SingularValuesType	external/Eigen/src/Eigen2Support/SVD.h	/^    typedef Matrix<Scalar, MinSize, 1> SingularValuesType;$/;"	t	class:Eigen::SVD
SingularValuesType	external/Eigen/src/SVD/JacobiSVD.h	/^    typedef typename internal::plain_diag_type<MatrixType, RealScalar>::type SingularValuesType;$/;"	t	class:Eigen::JacobiSVD
Size	external/Eigen/src/Core/Redux.h	/^    Size = Derived::SizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_impl::__anon176
Size	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon350
Size	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::SelfAdjointEigenSolver::__anon352
Size	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      Size = MatrixType::RowsAtCompileTime,$/;"	e	enum:Eigen::Tridiagonalization::__anon353
SizeA	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeA = ActualRows * MaxDepth,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon245
SizeAtCompileTime	external/Eigen/src/Core/BandMatrix.h	/^      SizeAtCompileTime = EIGEN_SIZE_MIN_PREFER_DYNAMIC(RowsAtCompileTime,ColsAtCompileTime)$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon18
SizeAtCompileTime	external/Eigen/src/Core/DenseBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::DenseBase::__anon30
SizeAtCompileTime	external/Eigen/src/Core/MapBase.h	/^      SizeAtCompileTime = Base::SizeAtCompileTime$/;"	e	enum:Eigen::MapBase::__anon147
SizeAtCompileTime	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
SizeAtCompileTime	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^        SizeAtCompileTime = (internal::size_at_compile_time<internal::traits<Derived>::RowsAtCompileTime,$/;"	e	enum:Eigen::SkylineMatrixBase::__anon448
SizeB	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeB = ActualCols * MaxDepth,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon245
SizeMinusOne	external/Eigen/src/Core/MatrixBase.h	/^      SizeMinusOne = SizeAtCompileTime==Dynamic ? Dynamic : SizeAtCompileTime-1$/;"	e	enum:Eigen::MatrixBase::__anon156
SizeMinusOne	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : Size - 1,$/;"	e	enum:Eigen::HessenbergDecomposition::__anon350
SizeMinusOne	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^      SizeMinusOne = Size == Dynamic ? Dynamic : (Size > 1 ? Size - 1 : 1),$/;"	e	enum:Eigen::Tridiagonalization::__anon353
SizeW	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      SizeW = MaxDepth * Traits::WorkSpaceFactor$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon245
Size_max	external/SuiteSparse/Include/cholmod_internal.h	210;"	d
SkipFirst	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    enum { SkipFirst = ((Mode&Lower) && !(MatrixType::Flags&RowMajorBit))$/;"	e	enum:Eigen::SparseTriangularView::__anon430
SkipLast	external/Eigen/src/SparseCore/SparseTriangularView.h	/^           SkipLast = !SkipFirst,$/;"	e	enum:Eigen::SparseTriangularView::__anon430
SkylineBit	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^const unsigned int SkylineBit = 0x1200;$/;"	m	namespace:Eigen
SkylineInplaceLU	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    SkylineInplaceLU(MatrixType& matrix, int flags = 0)$/;"	f	class:Eigen::SkylineInplaceLU
SkylineInplaceLU	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^class SkylineInplaceLU {$/;"	c	namespace:Eigen
SkylineMatrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix()$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix(const SkylineMatrix & other)$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix(const SkylineMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix(size_t rows, size_t cols)$/;"	f	class:Eigen::SkylineMatrix
SkylineMatrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^class SkylineMatrix$/;"	c	namespace:Eigen
SkylineMatrixBase	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    SkylineMatrixBase() : m_isRValue(false) {$/;"	f	class:Eigen::SkylineMatrixBase
SkylineMatrixBase	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^template<typename Derived> class SkylineMatrixBase : public EigenBase<Derived> {$/;"	c	namespace:Eigen
SkylineProduct	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE SkylineProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::internal::SkylineProduct
SkylineProduct	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^class SkylineProduct : no_assignment_operator,$/;"	c	namespace:Eigen::internal
SkylineProductReturnType	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct SkylineProductReturnType {$/;"	s	namespace:Eigen
SkylineStorage	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    SkylineStorage()$/;"	f	class:Eigen::SkylineStorage
SkylineStorage	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    SkylineStorage(const SkylineStorage& other)$/;"	f	class:Eigen::SkylineStorage
SkylineStorage	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^class SkylineStorage {$/;"	c	namespace:Eigen
SkylineTimeDenseProduct	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	e	enum:Eigen::AdditionalProductEvaluationMode
SkylineTimeSkylineProduct	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^enum AdditionalProductEvaluationMode {SkylineTimeDenseProduct, SkylineTimeSkylineProduct, DenseTimeSkylineProduct};$/;"	e	enum:Eigen::AdditionalProductEvaluationMode
SliceVectorizedTraversal	external/Eigen/src/Core/util/Constants.h	/^  SliceVectorizedTraversal,$/;"	e	enum:Eigen::__anon266
SluMatrix	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix()$/;"	f	struct:Eigen::SluMatrix
SluMatrix	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
SluMatrix	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrix : SuperMatrix$/;"	s	namespace:Eigen
SluMatrixMapHelper	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<Matrix<Scalar,Rows,Cols,Options,MRows,MCols> >$/;"	s	namespace:Eigen
SluMatrixMapHelper	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct SluMatrixMapHelper<SparseMatrixBase<Derived> >$/;"	s	namespace:Eigen
Small	external/Eigen/src/Core/GeneralProduct.h	/^  Small = 3$/;"	e	enum:Eigen::__anon112
SmallPanelWidth	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = 2 * EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon255
SmallPanelWidth	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^    SmallPanelWidth   = EIGEN_PLAIN_ENUM_MAX(Traits::mr,Traits::nr),$/;"	e	enum:Eigen::internal::product_triangular_matrix_matrix::__anon256
Span	external/unsupported/Eigen/src/Splines/Spline.h	/^  DenseIndex Spline<_Scalar, _Dim, _Degree>::Span($/;"	f	class:Eigen::Spline
SparseBase	external/Eigen/src/SparseCore/SparseVector.h	/^    typedef SparseMatrixBase<SparseVector> SparseBase;$/;"	t	class:Eigen::SparseVector
SparseDenseOuterProduct	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE SparseDenseOuterProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::SparseDenseOuterProduct
SparseDenseOuterProduct	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE SparseDenseOuterProduct(const Rhs& rhs, const Lhs& lhs)$/;"	f	class:Eigen::SparseDenseOuterProduct
SparseDenseOuterProduct	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^class SparseDenseOuterProduct$/;"	c	namespace:Eigen
SparseDenseProductReturnType	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs, int InnerSize> struct SparseDenseProductReturnType$/;"	s	namespace:Eigen
SparseDenseProductReturnType	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^template<typename Lhs, typename Rhs> struct SparseDenseProductReturnType<Lhs,Rhs,1>$/;"	s	namespace:Eigen
SparseDiagonalProduct	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE SparseDiagonalProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::SparseDiagonalProduct
SparseDiagonalProduct	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^class SparseDiagonalProduct$/;"	c	namespace:Eigen
SparseFlags	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    SparseFlags = is_diagonal<_Lhs>::ret ? int(_Rhs::Flags) : int(_Lhs::Flags),$/;"	e	enum:Eigen::internal::traits::__anon419
SparseInnerVectorSet	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline SparseInnerVectorSet(const MatrixType& matrix, Index outer)$/;"	f	class:Eigen::SparseInnerVectorSet
SparseInnerVectorSet	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline SparseInnerVectorSet(const MatrixType& matrix, Index outerStart, Index outerSize)$/;"	f	class:Eigen::SparseInnerVectorSet
SparseInnerVectorSet	external/Eigen/src/SparseCore/SparseBlock.h	/^class SparseInnerVectorSet : internal::no_assignment_operator,$/;"	c	namespace:Eigen
SparseInnerVectorSet	external/Eigen/src/SparseCore/SparseBlock.h	/^class SparseInnerVectorSet<SparseMatrix<_Scalar, _Options, _Index>, Size>$/;"	c	namespace:Eigen
SparseInnerVectorSet	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    inline SparseInnerVectorSet(const MatrixType& matrix, Index outer)$/;"	f	class:Eigen::SparseInnerVectorSet
SparseInnerVectorSet	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    inline SparseInnerVectorSet(const MatrixType& matrix, Index outerStart, Index outerSize)$/;"	f	class:Eigen::SparseInnerVectorSet
SparseInnerVectorSet	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^class SparseInnerVectorSet<DynamicSparseMatrix<_Scalar, _Options, _Index>, Size>$/;"	c	namespace:Eigen
SparseMatrix	OptApp.h	/^typedef Eigen::SparseMatrix< double > SparseMatrix;$/;"	t
SparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^    SparseMatrix(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
SparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^class SparseMatrix$/;"	c	namespace:Eigen
SparseMatrixBase	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseMatrixBase() : m_isRValue(false) { \/* TODO check flags *\/ }$/;"	f	class:Eigen::SparseMatrixBase
SparseMatrixBase	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^template<typename Derived> class SparseMatrixBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
SparseMatrixType	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef SparseMatrix<Scalar,RowMajor,Index> SparseMatrixType;$/;"	t	class:Eigen::PardisoImpl
SparseSelfAdjointTimeDenseProduct	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointTimeDenseProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::SparseSelfAdjointTimeDenseProduct
SparseSelfAdjointTimeDenseProduct	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class SparseSelfAdjointTimeDenseProduct$/;"	c	namespace:Eigen
SparseSelfAdjointView	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline SparseSelfAdjointView(const MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::SparseSelfAdjointView
SparseSelfAdjointView	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^template<typename MatrixType, unsigned int UpLo> class SparseSelfAdjointView$/;"	c	namespace:Eigen
SparseSparseProduct	external/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE SparseSparseProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::SparseSparseProduct
SparseSparseProduct	external/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE SparseSparseProduct(const Lhs& lhs, const Rhs& rhs, RealScalar tolerance)$/;"	f	class:Eigen::SparseSparseProduct
SparseSparseProduct	external/Eigen/src/SparseCore/SparseProduct.h	/^class SparseSparseProduct : internal::no_assignment_operator,$/;"	c	namespace:Eigen
SparseSparseProductReturnType	external/Eigen/src/SparseCore/SparseProduct.h	/^struct SparseSparseProductReturnType$/;"	s	namespace:Eigen
SparseSymmetricPermutationProduct	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct(const MatrixType& mat, const Perm& perm)$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
SparseSymmetricPermutationProduct	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^class SparseSymmetricPermutationProduct$/;"	c	namespace:Eigen
SparseTimeDenseProduct	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    SparseTimeDenseProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs)$/;"	f	class:Eigen::SparseTimeDenseProduct
SparseTimeDenseProduct	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^class SparseTimeDenseProduct$/;"	c	namespace:Eigen
SparseTriangularView	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline SparseTriangularView(const MatrixType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::SparseTriangularView
SparseTriangularView	external/Eigen/src/SparseCore/SparseTriangularView.h	/^template<typename MatrixType, int Mode> class SparseTriangularView$/;"	c	namespace:Eigen
SparseVector	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector() : m_size(0) { resize(0); }$/;"	f	class:Eigen::SparseVector
SparseVector	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(Index rows, Index cols) : m_size(0) { resize(rows,cols); }$/;"	f	class:Eigen::SparseVector
SparseVector	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(Index size) : m_size(0) { resize(size); }$/;"	f	class:Eigen::SparseVector
SparseVector	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
SparseVector	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
SparseVector	external/Eigen/src/SparseCore/SparseVector.h	/^class SparseVector$/;"	c	namespace:Eigen
SparseView	external/Eigen/src/SparseCore/SparseView.h	/^  SparseView(const MatrixType& mat, const Scalar& m_reference = Scalar(0),$/;"	f	class:Eigen::SparseView
SparseView	external/Eigen/src/SparseCore/SparseView.h	/^class SparseView : public SparseMatrixBase<SparseView<MatrixType> >$/;"	c	namespace:Eigen
Specialized	external/Eigen/src/Core/util/Constants.h	/^  Specialized,$/;"	e	enum:Eigen::__anon268
Spline	external/unsupported/Eigen/src/Splines/Spline.h	/^    Spline(const OtherVectorType& knots, const OtherArrayType& ctrls) : m_knots(knots), m_ctrls(ctrls) {}$/;"	f	class:Eigen::Spline
Spline	external/unsupported/Eigen/src/Splines/Spline.h	/^    Spline(const Spline<Scalar, Dimension, OtherDegree>& spline) : $/;"	f	class:Eigen::Spline
Spline	external/unsupported/Eigen/src/Splines/Spline.h	/^  class Spline$/;"	c	namespace:Eigen
Spline2d	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<double,2> Spline2d;$/;"	t	namespace:Eigen
Spline2f	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<float,2> Spline2f;$/;"	t	namespace:Eigen
Spline3d	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<double,3> Spline3d;$/;"	t	namespace:Eigen
Spline3f	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^    typedef Spline<float,3> Spline3f;$/;"	t	namespace:Eigen
SplineFitting	external/unsupported/Eigen/src/Splines/SplineFitting.h	/^  struct SplineFitting$/;"	s	namespace:Eigen
SplineTraits	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^    struct SplineTraits< Spline<_Scalar, _Dim, _Degree>, Dynamic >$/;"	s	namespace:Eigen
SplineTraits	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^    struct SplineTraits< Spline<_Scalar, _Dim, _Degree>, _DerivativeOrder > : public SplineTraits< Spline<_Scalar, _Dim, _Degree> >$/;"	s	namespace:Eigen
SplineTraits	external/unsupported/Eigen/src/Splines/SplineFwd.h	/^    template < typename SplineType, int DerivativeOrder = Dynamic > struct SplineTraits {};$/;"	s	namespace:Eigen
SquareMatrixType	external/Eigen/src/Core/MatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::MatrixBase
SquareMatrixType	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^                          EIGEN_SIZE_MAX(RowsAtCompileTime,ColsAtCompileTime)> SquareMatrixType;$/;"	t	class:Eigen::SparseMatrixBase
SquareMatrixType	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^                           EIGEN_SIZE_MAX(RowsAtCompileTime, ColsAtCompileTime) > SquareMatrixType;$/;"	t	class:Eigen::SkylineMatrixBase
SrcHasDirectAccess	external/Eigen/src/Core/Assign_MKL.h	/^      SrcHasDirectAccess = Src::Flags & DirectAccessBit,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
SrcIsAligned	external/Eigen/src/Core/Assign.h	/^    SrcIsAligned = OtherDerived::Flags & AlignedBit,$/;"	e	enum:Eigen::internal::assign_traits::__anon6
SrcStorageOrder	external/Eigen/src/SparseCore/SparsePermutation.h	/^      SrcStorageOrder = MatrixTypeNestedCleaned::Flags&RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::permut_sparsematrix_product_retval::__anon427
SrcStorageOrder	external/Eigen/src/SparseCore/SparsePermutation.h	/^    SrcStorageOrder = MatrixTypeNestedCleaned::Flags&RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::traits::__anon426
Status	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    enum Status {$/;"	g	namespace:Eigen::HybridNonLinearSolverSpace
Status	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    enum Status {$/;"	g	namespace:Eigen::LevenbergMarquardtSpace
StdMapTraits	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct StdMapTraits$/;"	s	namespace:Eigen
StdStemFunctions	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^class StdStemFunctions$/;"	c	namespace:Eigen
StdUnorderedMapTraits	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^template<typename Scalar> struct StdUnorderedMapTraits$/;"	s	namespace:Eigen
StdVectorContainer	external/unsupported/test/FFTW.cpp	/^enum { StdVectorContainer, EigenVectorContainer };$/;"	e	enum:__anon469	file:
StemFunction	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixBase
StemFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixFunctionReturnValue
StemFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    typedef typename internal::stem_function<Scalar>::type StemFunction;$/;"	t	class:Eigen::MatrixFunctionAtomic
Storage	external/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef internal::CompressedStorage<Scalar,Index> Storage;$/;"	t	class:Eigen::SparseMatrix
StorageBaseType	external/Eigen/src/Core/ArrayBase.h	/^    typedef ArrayBase StorageBaseType;$/;"	t	class:Eigen::ArrayBase
StorageBaseType	external/Eigen/src/Core/MatrixBase.h	/^    typedef MatrixBase StorageBaseType;$/;"	t	class:Eigen::MatrixBase
StorageBaseType	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef SparseMatrixBase StorageBaseType;$/;"	t	class:Eigen::SparseMatrixBase
StorageKind	external/Eigen/src/Core/ArrayBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::ArrayBase
StorageKind	external/Eigen/src/Core/BandMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/BandMatrix.h	/^  typedef typename _CoefficientsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/CwiseBinaryOp.h	/^                                           typename traits<Rhs>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/DenseBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseBase
StorageKind	external/Eigen/src/Core/DenseCoeffsBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DenseCoeffsBase
StorageKind	external/Eigen/src/Core/Diagonal.h	/^  typedef typename MatrixType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalBase
StorageKind	external/Eigen/src/Core/DiagonalMatrix.h	/^    typedef typename internal::traits<DiagonalMatrix>::StorageKind StorageKind;$/;"	t	class:Eigen::DiagonalMatrix
StorageKind	external/Eigen/src/Core/DiagonalMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/DiagonalMatrix.h	/^  typedef typename DiagonalVectorType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/EigenBase.h	/^  typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	struct:Eigen::EigenBase
StorageKind	external/Eigen/src/Core/MapBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MapBase
StorageKind	external/Eigen/src/Core/Matrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/MatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::MatrixBase
StorageKind	external/Eigen/src/Core/PermutationMatrix.h	/^  typedef PermutationStorage StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/PlainObjectBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::PlainObjectBase
StorageKind	external/Eigen/src/Core/Product.h	/^                                        typename traits<RhsCleaned>::StorageKind>::ret StorageKind;$/;"	t	struct:internal::traits
StorageKind	external/Eigen/src/Core/ProductBase.h	/^                                           typename traits<Rhs>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/ProductBase.h	/^  typedef typename traits<NestedProduct>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/Select.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/Transpose.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularBase
StorageKind	external/Eigen/src/Core/TriangularMatrix.h	/^    typedef typename internal::traits<TriangularView>::StorageKind StorageKind;$/;"	t	class:Eigen::TriangularView
StorageKind	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^                                           typename traits<_RhsNested>::StorageKind>::ret StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Eigen2Support/Minor.h	/^  typedef typename MatrixType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/Householder/HouseholderSequence.h	/^  typedef typename VectorsType::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/LU/FullPivLU.h	/^    typedef typename internal::traits<MatrixType>::StorageKind StorageKind;$/;"	t	class:Eigen::FullPivLU
StorageKind	external/Eigen/src/LU/PartialPivLU.h	/^    typedef typename internal::traits<MatrixType>::StorageKind StorageKind;$/;"	t	class:Eigen::PartialPivLU
StorageKind	external/Eigen/src/SparseCore/SparseBlock.h	/^  typedef typename traits<MatrixType>::StorageKind StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::SparseMatrixBase
StorageKind	external/Eigen/src/SparseCore/SparseProduct.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^  typedef Dense StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseVector.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/Eigen/src/SparseCore/SparseView.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageKind	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    typedef typename internal::traits<Derived>::StorageKind StorageKind;$/;"	t	class:Eigen::SkylineMatrixBase
StorageKind	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef Sparse StorageKind;$/;"	t	struct:Eigen::internal::traits
StorageOrdersAgree	external/Eigen/src/Core/Assign.h	/^    StorageOrdersAgree = (int(Derived::IsRowMajor) == int(OtherDerived::IsRowMajor)),$/;"	e	enum:Eigen::internal::assign_traits::__anon8
StorageOrdersAgree	external/Eigen/src/Core/Assign_MKL.h	/^      StorageOrdersAgree = (int(Dst::IsRowMajor) == int(Src::IsRowMajor)),$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
StorageOrdersAgree	external/Eigen/src/Core/CwiseBinaryOp.h	/^    StorageOrdersAgree = (int(Lhs::Flags)&RowMajorBit)==(int(Rhs::Flags)&RowMajorBit),$/;"	e	enum:Eigen::internal::traits::__anon26
StorageOrdersMatch	external/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon386
StorageOrdersMatch	external/Eigen/src/LU/arch/Inverse_SSE.h	/^    StorageOrdersMatch  = (MatrixType::Flags&RowMajorBit) == (ResultType::Flags&RowMajorBit)$/;"	e	enum:Eigen::internal::compute_inverse_size4::__anon387
StreamPrecision	external/Eigen/src/Core/IO.h	/^enum { StreamPrecision = -1,$/;"	e	enum:Eigen::__anon144
StrictlyLower	external/Eigen/src/Core/util/Constants.h	/^  StrictlyLower=ZeroDiag|Lower, $/;"	e	enum:Eigen::__anon264
StrictlyUpper	external/Eigen/src/Core/util/Constants.h	/^  StrictlyUpper=ZeroDiag|Upper,$/;"	e	enum:Eigen::__anon264
Stride	external/Eigen/src/Core/Stride.h	/^    Stride()$/;"	f	class:Eigen::Stride
Stride	external/Eigen/src/Core/Stride.h	/^    Stride(Index outerStride, Index innerStride)$/;"	f	class:Eigen::Stride
Stride	external/Eigen/src/Core/Stride.h	/^    Stride(const Stride& other)$/;"	f	class:Eigen::Stride
Stride	external/Eigen/src/Core/Stride.h	/^class Stride$/;"	c	namespace:Eigen
StridedAlignedMapType	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, Aligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstAlignedMapType	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, Aligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedConstMapType	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
StridedMapType	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	s	class:Eigen::PlainObjectBase
SubDiagonalReturnType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^            >::type SubDiagonalReturnType;$/;"	t	class:Eigen::Tridiagonalization
SubDiagonalType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typedef Matrix<RealScalar, SizeMinusOne, 1, Options & ~RowMajor, MaxSizeMinusOne, 1> SubDiagonalType;$/;"	t	class:Eigen::Tridiagonalization
SubVector	external/Eigen/src/Core/VectorwiseOp.h	/^                               typename ExpressionType::RowXpr>::type SubVector;$/;"	t	class:Eigen::VectorwiseOp
Subs	external/Eigen/src/Core/BandMatrix.h	/^      Subs   = internal::traits<Derived>::Subs,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
Subs	external/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon20
Subs	external/Eigen/src/Core/BandMatrix.h	/^    Subs = _Subs,$/;"	e	enum:Eigen::internal::traits::__anon21
Success	external/Eigen/src/Core/util/Constants.h	/^  Success = 0,        $/;"	e	enum:Eigen::ComputationInfo
SuiteSparse_config	external/SuiteSparse/Include/SuiteSparse_config.h	/^} SuiteSparse_config ;$/;"	t	typeref:struct:SuiteSparse_config_struct
SuiteSparse_config_struct	external/SuiteSparse/Include/SuiteSparse_config.h	/^typedef struct SuiteSparse_config_struct$/;"	s
SuiteSparse_long	external/SuiteSparse/Include/SuiteSparse_config.h	56;"	d
SuiteSparse_long	external/SuiteSparse/Include/SuiteSparse_config.h	62;"	d
SuiteSparse_long_id	external/SuiteSparse/Include/SuiteSparse_config.h	67;"	d
SuiteSparse_long_idd	external/SuiteSparse/Include/SuiteSparse_config.h	58;"	d
SuiteSparse_long_idd	external/SuiteSparse/Include/SuiteSparse_config.h	64;"	d
SuiteSparse_long_max	external/SuiteSparse/Include/SuiteSparse_config.h	57;"	d
SuiteSparse_long_max	external/SuiteSparse/Include/SuiteSparse_config.h	63;"	d
SuperDiagVectorType	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    typedef Matrix<Scalar, ColsAtCompileTimeMinusOne, 1> SuperDiagVectorType;$/;"	t	class:Eigen::internal::UpperBidiagonalization
SuperILU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU() : Base() { init(); }$/;"	f	class:Eigen::SuperILU
SuperILU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(SuperILU& ) { }$/;"	f	class:Eigen::SuperILU
SuperILU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperILU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperILU
SuperILU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperILU : public SuperLUBase<_MatrixType,SuperILU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU() : Base() { init(); }$/;"	f	class:Eigen::SuperLU
SuperLU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU(SuperLU& ) { }$/;"	f	class:Eigen::SuperLU
SuperLU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLU(const MatrixType& matrix) : Base()$/;"	f	class:Eigen::SuperLU
SuperLU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLU : public SuperLUBase<_MatrixType,SuperLU<_MatrixType> >$/;"	c	namespace:Eigen
SuperLUBase	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase() {}$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    SuperLUBase(SuperLUBase& ) { }$/;"	f	class:Eigen::SuperLUBase
SuperLUBase	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^class SuperLUBase : internal::noncopyable$/;"	c	namespace:Eigen
Supers	external/Eigen/src/Core/BandMatrix.h	/^      Supers = internal::traits<Derived>::Supers,$/;"	e	enum:Eigen::internal::BandMatrixBase::__anon17
Supers	external/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon20
Supers	external/Eigen/src/Core/BandMatrix.h	/^    Supers = _Supers,$/;"	e	enum:Eigen::internal::traits::__anon21
SupportedAccessPatterns	external/Eigen/src/SparseCore/SparseMatrix.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon422
SupportedAccessPatterns	external/Eigen/src/SparseCore/SparseVector.h	/^    SupportedAccessPatterns = InnerRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon435
SupportedAccessPatterns	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    SupportedAccessPatterns = OuterRandomAccessPattern$/;"	e	enum:Eigen::internal::traits::__anon453
SwapStorage	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      SwapStorage = 1 - MapTraits<ScalarWrapper>::IsSorted,$/;"	e	enum:Eigen::RandomSetter::__anon460
SwapWrapper	external/Eigen/src/Core/Swap.h	/^    inline SwapWrapper(ExpressionType& xpr) : m_expression(xpr) {}$/;"	f	class:Eigen::SwapWrapper
SwapWrapper	external/Eigen/src/Core/Swap.h	/^template<typename ExpressionType> class SwapWrapper$/;"	c	namespace:Eigen
Symmetric	external/Eigen/src/Core/util/Constants.h	/^  Symmetric=0x20$/;"	e	enum:Eigen::__anon264
SyrkUsed	external/SuiteSparse/Include/cholmod_core.h	/^    int SyrkUsed ;              \/* TRUE if cuda dsyrk used, false otherwise *\/$/;"	m	struct:cholmod_common_struct
TEMPLATE	external/SuiteSparse/Include/cholmod_template.h	145;"	d
TEMPLATE	external/SuiteSparse/Include/cholmod_template.h	147;"	d
TEMPLATE	external/SuiteSparse/Include/cholmod_template.h	196;"	d
TEMPLATE	external/SuiteSparse/Include/cholmod_template.h	198;"	d
TEMPLATE	external/SuiteSparse/Include/cholmod_template.h	55;"	d
TEMPLATE	external/SuiteSparse/Include/cholmod_template.h	98;"	d
TEMPLATE	external/SuiteSparse/Include/cholmod_template.h	9;"	d
THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD	external/Eigen/src/Core/util/StaticAssert.h	/^        THE_BRACKET_OPERATOR_IS_ONLY_FOR_VECTORS__USE_THE_PARENTHESIS_OPERATOR_INSTEAD,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE	external/Eigen/src/Core/util/StaticAssert.h	/^        THE_INDEX_TYPE_MUST_BE_A_SIGNED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE	external/Eigen/src/Core/util/StaticAssert.h	/^        THE_MATRIX_OR_EXPRESSION_THAT_YOU_PASSED_DOES_NOT_HAVE_THE_EXPECTED_TYPE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH	external/Eigen/src/Core/util/StaticAssert.h	/^        THE_STORAGE_ORDER_OF_BOTH_SIDES_MUST_MATCH$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_EXPRESSION_IS_NOT_A_LVALUE__IT_IS_READ_ONLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_FUNCTION_IS_NOT_FOR_INTEGER_NUMERIC_TYPES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_1x1_EXPRESSIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ARRAYS_NOT_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_COLUMN_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_DIAGONAL_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_OF_BOOL,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_EXPRESSIONS_WITH_DIRECT_MEMORY_ACCESS_SUCH_AS_MAP_OR_PLAIN_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_FIXED_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_MATRICES_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_OBJECTS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_ROW_MAJOR_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_SPECIFIC_TRANSFORMATIONS,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE	external/Eigen/src/Core/util/StaticAssert.h	/^        THIS_METHOD_IS_ONLY_FOR_VECTORS_OF_A_SPECIFIC_SIZE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
TOP_FOOT_SIZE	external/unsupported/test/mpreal/dlmalloc.c	2589;"	d	file:
TREEBIN_SHIFT	external/unsupported/test/mpreal/dlmalloc.c	2442;"	d	file:
TRUE	external/SuiteSparse/Include/cholmod_internal.h	78;"	d
TRUE	external/SuiteSparse/Include/cholmod_internal.h	80;"	d
TRY_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1665;"	d	file:
TRY_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1765;"	d	file:
TRY_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1830;"	d	file:
TRY_LOCK	external/unsupported/test/mpreal/dlmalloc.c	1861;"	d	file:
TWO_SIZE_T_SIZES	external/unsupported/test/mpreal/dlmalloc.c	1451;"	d	file:
Target	external/Eigen/src/Core/util/Constants.h	/^    Target = SSE$/;"	e	enum:Eigen::Architecture::Type
TargetRowMajor	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      TargetRowMajor = (SparseMatrixType::Flags & RowMajorBit) ? 1 : 0,$/;"	e	enum:Eigen::RandomSetter::__anon460
TestFunc1	external/unsupported/test/autodiff.cpp	/^  TestFunc1() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:TestFunc1
TestFunc1	external/unsupported/test/autodiff.cpp	/^  TestFunc1(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:TestFunc1
TestFunc1	external/unsupported/test/autodiff.cpp	/^struct TestFunc1$/;"	s	file:
TestFunc1	external/unsupported/test/forward_adolc.cpp	/^  TestFunc1() : m_inputs(InputsAtCompileTime), m_values(ValuesAtCompileTime) {}$/;"	f	struct:TestFunc1
TestFunc1	external/unsupported/test/forward_adolc.cpp	/^  TestFunc1(int inputs, int values) : m_inputs(inputs), m_values(values) {}$/;"	f	struct:TestFunc1
TestFunc1	external/unsupported/test/forward_adolc.cpp	/^struct TestFunc1$/;"	s	file:
ThenMatrixNested	external/Eigen/src/Core/Select.h	/^  typedef typename ThenMatrixType::Nested ThenMatrixNested;$/;"	t	struct:Eigen::internal::traits
ThisConstantIsPrivateInPlainObjectBase	external/Eigen/src/Core/DenseBase.h	/^    enum { ThisConstantIsPrivateInPlainObjectBase };$/;"	e	enum:Eigen::DenseBase::__anon31
ThisConstantIsPrivateInPlainObjectBase	external/Eigen/src/Core/PlainObjectBase.h	/^    enum { ThisConstantIsPrivateInPlainObjectBase };$/;"	e	enum:Eigen::PlainObjectBase::__anon163
Through	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::Hyperplane
Through	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1, const VectorType& p2)$/;"	f	class:Eigen::Hyperplane
Through	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  static inline ParametrizedLine Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::ParametrizedLine
Through	external/Eigen/src/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::Hyperplane
Through	external/Eigen/src/Geometry/Hyperplane.h	/^  static inline Hyperplane Through(const VectorType& p0, const VectorType& p1, const VectorType& p2)$/;"	f	class:Eigen::Hyperplane
Through	external/Eigen/src/Geometry/ParametrizedLine.h	/^  static inline ParametrizedLine Through(const VectorType& p0, const VectorType& p1)$/;"	f	class:Eigen::ParametrizedLine
TmpFlags	external/Eigen/src/Geometry/Homogeneous.h	/^    TmpFlags = _MatrixTypeNested::Flags & HereditaryBits,$/;"	e	enum:Eigen::internal::traits::__anon356
TmpMatrixType	external/Eigen/src/Cholesky/LDLT.h	/^    typedef Matrix<Scalar, RowsAtCompileTime, 1, Options, MaxRowsAtCompileTime, 1> TmpMatrixType;$/;"	t	class:Eigen::LDLT
TolTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        TolTooSmall = 3,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
TooManyFunctionEvaluation	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        TooManyFunctionEvaluation = 2,$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
TooManyFunctionEvaluation	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        TooManyFunctionEvaluation = 5,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
TopLeft	external/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopLeft	external/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftCeil	external/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopLeftFloor	external/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRight	external/Eigen/src/Core/util/Constants.h	/^enum CornerType { TopLeft, TopRight, BottomLeft, BottomRight };$/;"	e	enum:Eigen::CornerType
TopRight	external/Eigen/src/Geometry/AlignedBox.h	/^    TopLeft=2, TopRight=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightCeil	external/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftCeil=6, TopRightCeil=7$/;"	e	enum:Eigen::AlignedBox::CornerType
TopRightFloor	external/Eigen/src/Geometry/AlignedBox.h	/^    TopLeftFloor=2, TopRightFloor=3,$/;"	e	enum:Eigen::AlignedBox::CornerType
Traits	external/Eigen/src/Cholesky/LDLT.h	/^    typedef internal::LDLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LDLT
Traits	external/Eigen/src/Cholesky/LLT.h	/^    typedef internal::LLT_Traits<MatrixType,UpLo> Traits;$/;"	t	class:Eigen::LLT
Traits	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::PermutationBase
Traits	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationMatrix> Traits;$/;"	t	class:Eigen::PermutationMatrix
Traits	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationType> Traits;$/;"	t	class:Eigen::Transpose
Traits	external/Eigen/src/Core/PermutationMatrix.h	/^    typedef internal::traits<PermutationWrapper> Traits;$/;"	t	class:Eigen::PermutationWrapper
Traits	external/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Derived> Traits;$/;"	t	class:Eigen::TranspositionsBase
Traits	external/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Map> Traits;$/;"	t	class:Eigen::Map
Traits	external/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<Transpositions> Traits;$/;"	t	class:Eigen::Transpositions
Traits	external/Eigen/src/Core/Transpositions.h	/^    typedef internal::traits<TranspositionsWrapper> Traits;$/;"	t	class:Eigen::TranspositionsWrapper
Traits	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjugateLhs,ConjugateRhs> Traits;$/;"	t	struct:Eigen::internal::gebp_kernel
Traits	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    typedef gebp_traits<LhsScalar,RhsScalar> Traits;$/;"	t	class:Eigen::internal::gemm_blocking_space
Traits	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  typedef gebp_traits<LhsScalar,RhsScalar,ConjLhs,ConjRhs> Traits;$/;"	t	struct:Eigen::internal::tribb_kernel
Traits	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  typedef gebp_traits<Scalar,Scalar> Traits;$/;"	t	struct:Eigen::internal::product_triangular_matrix_matrix
Traits	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef internal::pardiso_traits<Derived> Traits;$/;"	t	class:Eigen::PardisoImpl
Traits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialCholesky> Traits;$/;"	t	class:Eigen::SimplicialCholesky
Traits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLDLT> Traits;$/;"	t	class:Eigen::SimplicialLDLT
Traits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef internal::traits<SimplicialLLT> Traits;$/;"	t	class:Eigen::SimplicialLLT
Traits	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef internal::traits<SparseDenseOuterProduct> Traits;$/;"	t	class:Eigen::SparseDenseOuterProduct
Traits	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef internal::traits<MatrixType> Traits;$/;"	t	class:Eigen::MatrixFunction
TraitsBase	external/Eigen/src/Core/Map.h	/^  typedef traits<PlainObjectType> TraitsBase;$/;"	t	struct:Eigen::internal::traits
TraitsBase	external/Eigen/src/Geometry/Quaternion.h	/^    typedef traits<Quaternion<_Scalar, _Options> > TraitsBase;$/;"	t	struct:Eigen::internal::traits
Transform	external/Eigen/src/Eigen2Support/Geometry/All.h	37;"	d
Transform	external/Eigen/src/Eigen2Support/Geometry/All.h	92;"	d
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform() { }$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform(const Transform& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const RotationBase<Derived, Dim>& r) { *this = r; }$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const ScalingType& s) { *this = s; }$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const Transform<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline explicit Transform(const TranslationType& t) { *this = t; }$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::Transform(const QMatrix& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::Transform(const QTransform& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^class Transform$/;"	c	namespace:Eigen
Transform	external/Eigen/src/Geometry/Transform.h	/^  Transform(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline Transform()$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform<Scalar,Dim,Mode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline Transform(const Transform<Scalar,Dim,OtherMode,OtherOptions>& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const RotationBase<Derived, Dim>& r)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const Transform<OtherScalarType,Dim,Mode,Options>& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const TranslationType& t)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^  inline explicit Transform(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QMatrix& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::Transform(const QTransform& other)$/;"	f	class:Eigen::Transform
Transform	external/Eigen/src/Geometry/Transform.h	/^class Transform$/;"	c	namespace:Eigen
Transform2d	external/Eigen/src/Eigen2Support/Geometry/All.h	39;"	d
Transform2d	external/Eigen/src/Eigen2Support/Geometry/All.h	94;"	d
Transform2d	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<double,2> Transform2d;$/;"	t	namespace:Eigen
Transform2f	external/Eigen/src/Eigen2Support/Geometry/All.h	38;"	d
Transform2f	external/Eigen/src/Eigen2Support/Geometry/All.h	93;"	d
Transform2f	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<float,2> Transform2f;$/;"	t	namespace:Eigen
Transform3d	external/Eigen/src/Eigen2Support/Geometry/All.h	41;"	d
Transform3d	external/Eigen/src/Eigen2Support/Geometry/All.h	96;"	d
Transform3d	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<double,3> Transform3d;$/;"	t	namespace:Eigen
Transform3f	external/Eigen/src/Eigen2Support/Geometry/All.h	40;"	d
Transform3f	external/Eigen/src/Eigen2Support/Geometry/All.h	95;"	d
Transform3f	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^typedef Transform<float,3> Transform3f;$/;"	t	namespace:Eigen
TransformTimeDiagonalMode	external/Eigen/src/Geometry/Transform.h	/^  enum { TransformTimeDiagonalMode = ((Mode==int(Isometry))?Affine:int(Mode)) };$/;"	e	enum:Eigen::Transform::__anon371
TransformTimeDiagonalReturnType	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim,TransformTimeDiagonalMode> TransformTimeDiagonalReturnType;$/;"	t	class:Eigen::Transform
TransformTraits	external/Eigen/src/Core/util/Constants.h	/^enum TransformTraits {$/;"	g	namespace:Eigen
TransformType	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Transform<Scalar,Dim> TransformType;$/;"	t	class:Eigen::Scaling
TransformType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Transform<Scalar,Dim> TransformType;$/;"	t	struct:Eigen::ei_transform_product_impl
TransformType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim> TransformType;$/;"	t	struct:Eigen::ei_transform_product_impl
TransformType	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Transform<Scalar,Dim> TransformType;$/;"	t	class:Eigen::Translation
TransformType	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Mode, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef Transform<Scalar, Dim, Projective, Options> TransformType;$/;"	t	struct:Eigen::internal::take_matrix_for_product
TransformType	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,AffineCompact,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
TransformType	external/Eigen/src/Geometry/Transform.h	/^  typedef Transform<typename Other::Scalar,Dim,Mode,Options> TransformType;$/;"	t	struct:Eigen::internal::transform_left_product_impl
Translation	external/Eigen/src/Eigen2Support/Geometry/All.h	43;"	d
Translation	external/Eigen/src/Eigen2Support/Geometry/All.h	98;"	d
Translation	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  Translation() {}$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  explicit inline Translation(const VectorType& vector) : m_coeffs(vector) {}$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline explicit Translation(const Translation<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^class Translation$/;"	c	namespace:Eigen
Translation	external/Eigen/src/Geometry/Translation.h	/^  Translation() {}$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Geometry/Translation.h	/^  explicit inline Translation(const VectorType& vector) : m_coeffs(vector) {}$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy)$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Geometry/Translation.h	/^  inline Translation(const Scalar& sx, const Scalar& sy, const Scalar& sz)$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Geometry/Translation.h	/^  inline explicit Translation(const Translation<OtherScalarType,Dim>& other)$/;"	f	class:Eigen::Translation
Translation	external/Eigen/src/Geometry/Translation.h	/^class Translation$/;"	c	namespace:Eigen
Translation2d	external/Eigen/src/Eigen2Support/Geometry/All.h	100;"	d
Translation2d	external/Eigen/src/Eigen2Support/Geometry/All.h	45;"	d
Translation2d	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<double,2> Translation2d;$/;"	t	namespace:Eigen
Translation2d	external/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,2> Translation2d;$/;"	t	namespace:Eigen
Translation2f	external/Eigen/src/Eigen2Support/Geometry/All.h	44;"	d
Translation2f	external/Eigen/src/Eigen2Support/Geometry/All.h	99;"	d
Translation2f	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<float, 2> Translation2f;$/;"	t	namespace:Eigen
Translation2f	external/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 2> Translation2f;$/;"	t	namespace:Eigen
Translation3d	external/Eigen/src/Eigen2Support/Geometry/All.h	102;"	d
Translation3d	external/Eigen/src/Eigen2Support/Geometry/All.h	47;"	d
Translation3d	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<double,3> Translation3d;$/;"	t	namespace:Eigen
Translation3d	external/Eigen/src/Geometry/Translation.h	/^typedef Translation<double,3> Translation3d;$/;"	t	namespace:Eigen
Translation3f	external/Eigen/src/Eigen2Support/Geometry/All.h	101;"	d
Translation3f	external/Eigen/src/Eigen2Support/Geometry/All.h	46;"	d
Translation3f	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^typedef Translation<float, 3> Translation3f;$/;"	t	namespace:Eigen
Translation3f	external/Eigen/src/Geometry/Translation.h	/^typedef Translation<float, 3> Translation3f;$/;"	t	namespace:Eigen
TranslationPart	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,1> TranslationPart;$/;"	t	class:Eigen::Transform
TranslationPart	external/Eigen/src/Geometry/Transform.h	/^  typedef Block<MatrixType,Dim,1,int(Mode)==(AffineCompact)> TranslationPart;$/;"	t	class:Eigen::Transform
TranslationType	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Scaling
TranslationType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Transform
TranslationType	external/Eigen/src/Geometry/Transform.h	/^  typedef Translation<Scalar,Dim> TranslationType;$/;"	t	class:Eigen::Transform
Transpose	external/Eigen/src/Core/PermutationMatrix.h	/^    Transpose(const PermutationType& p) : m_permutation(p) {}$/;"	f	class:Eigen::Transpose
Transpose	external/Eigen/src/Core/PermutationMatrix.h	/^class Transpose<PermutationBase<Derived> >$/;"	c	namespace:Eigen
Transpose	external/Eigen/src/Core/Transpose.h	/^    inline Transpose(MatrixType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::Transpose
Transpose	external/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class Transpose$/;"	c	namespace:Eigen
Transpose	external/Eigen/src/Core/Transpositions.h	/^    Transpose(const TranspositionType& t) : m_transpositions(t) {}$/;"	f	class:Eigen::Transpose
Transpose	external/Eigen/src/Core/Transpositions.h	/^class Transpose<TranspositionsBase<TranspositionsDerived> >$/;"	c	namespace:Eigen
Transpose	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon246
Transpose	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^      Transpose = StorageOrder==RowMajor,$/;"	e	enum:Eigen::internal::gemm_blocking_space::__anon244
TransposeImpl	external/Eigen/src/Core/Transpose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Dense>$/;"	c	namespace:Eigen
TransposeImpl	external/Eigen/src/SparseCore/SparseTranspose.h	/^template<typename MatrixType> class TransposeImpl<MatrixType,Sparse>$/;"	c	namespace:Eigen
TransposeImpl_base	external/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base$/;"	s	namespace:Eigen::internal
TransposeImpl_base	external/Eigen/src/Core/Transpose.h	/^struct TransposeImpl_base<MatrixType, false>$/;"	s	namespace:Eigen::internal
TransposeLhs	external/Eigen/src/SparseCore/SparseProduct.h	/^    TransposeLhs = LhsRowMajor && (!RhsRowMajor)$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon428
TransposeMode	external/Eigen/src/Core/TriangularMatrix.h	/^      TransposeMode = (Mode & Upper ? Lower : 0)$/;"	e	enum:Eigen::TriangularView::__anon197
TransposeRhs	external/Eigen/src/SparseCore/SparseProduct.h	/^    TransposeRhs = (!LhsRowMajor) && RhsRowMajor,$/;"	e	enum:Eigen::SparseSparseProductReturnType::__anon428
TransposeTypeWithSameStorageOrder	external/Eigen/src/SVD/JacobiSVD.h	/^          TransposeTypeWithSameStorageOrder;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
TransposedSkylineMatrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    typedef SkylineMatrix<Scalar, (Flags&~RowMajorBit) | (IsRowMajor ? RowMajorBit : 0) > TransposedSkylineMatrix;$/;"	t	class:Eigen::SkylineMatrix
TransposedSparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^    typedef SparseMatrix<Scalar,(Flags&~RowMajorBit)|(IsRowMajor?RowMajorBit:0)> TransposedSparseMatrix;$/;"	t	class:Eigen::SparseMatrix
TransposedSparseMatrix	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    typedef DynamicSparseMatrix<Scalar,(Flags&~RowMajorBit)|(IsRowMajor?RowMajorBit:0)> TransposedSparseMatrix;$/;"	t	class:Eigen::DynamicSparseMatrix
TranspositionType	external/Eigen/src/Cholesky/LDLT.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::LDLT
TranspositionType	external/Eigen/src/Core/Transpositions.h	/^    typedef TranspositionsDerived TranspositionType;$/;"	t	class:Eigen::Transpose
TranspositionType	external/Eigen/src/LU/PartialPivLU.h	/^    typedef Transpositions<RowsAtCompileTime, MaxRowsAtCompileTime> TranspositionType;$/;"	t	class:Eigen::PartialPivLU
Transpositions	external/Eigen/src/Core/Transpositions.h	/^    explicit inline Transpositions(const MatrixBase<Other>& indices) : m_indices(indices)$/;"	f	class:Eigen::Transpositions
Transpositions	external/Eigen/src/Core/Transpositions.h	/^    inline Transpositions() {}$/;"	f	class:Eigen::Transpositions
Transpositions	external/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(Index size) : m_indices(size)$/;"	f	class:Eigen::Transpositions
Transpositions	external/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const Transpositions& other) : m_indices(other.indices()) {}$/;"	f	class:Eigen::Transpositions
Transpositions	external/Eigen/src/Core/Transpositions.h	/^    inline Transpositions(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
Transpositions	external/Eigen/src/Core/Transpositions.h	/^class Transpositions : public TranspositionsBase<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType> >$/;"	c	namespace:Eigen
TranspositionsBase	external/Eigen/src/Core/Transpositions.h	/^class TranspositionsBase$/;"	c	namespace:Eigen
TranspositionsWrapper	external/Eigen/src/Core/Transpositions.h	/^    inline TranspositionsWrapper(IndicesType& indices)$/;"	f	class:Eigen::TranspositionsWrapper
TranspositionsWrapper	external/Eigen/src/Core/Transpositions.h	/^class TranspositionsWrapper$/;"	c	namespace:Eigen
Traversal	external/Eigen/src/Core/Assign.h	/^    Traversal = int(MayInnerVectorize)  ? int(InnerVectorizedTraversal)$/;"	e	enum:Eigen::internal::assign_traits::__anon9
Traversal	external/Eigen/src/Core/Assign_MKL.h	/^      Traversal = MayLinearize ? LinearVectorizedTraversal$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon16
Traversal	external/Eigen/src/Core/Redux.h	/^    Traversal = int(MayLinearVectorize) ? int(LinearVectorizedTraversal)$/;"	e	enum:Eigen::internal::redux_traits::__anon169
TraversalSize	external/Eigen/src/Core/VectorwiseOp.h	/^    TraversalSize = Direction==Vertical ? RowsAtCompileTime : ColsAtCompileTime$/;"	e	enum:Eigen::internal::traits::__anon200
TreeTest	external/unsupported/test/BVH.cpp	/^struct TreeTest$/;"	s	file:
TriangularBase	external/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularBase() { eigen_assert(!((Mode&UnitDiag) && (Mode&ZeroDiag))); }$/;"	f	class:Eigen::TriangularBase
TriangularBase	external/Eigen/src/Core/TriangularMatrix.h	/^template<typename Derived> class TriangularBase : public EigenBase<Derived>$/;"	c	namespace:Eigen
TriangularProduct	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  TriangularProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::TriangularProduct
TriangularProduct	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct TriangularProduct<Mode,LhsIsTriangular,Lhs,false,Rhs,false>$/;"	s	namespace:Eigen
TriangularProduct	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^  TriangularProduct(const Lhs& lhs, const Rhs& rhs) : Base(lhs,rhs) {}$/;"	f	struct:Eigen::TriangularProduct
TriangularProduct	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct TriangularProduct<Mode,false,Lhs,true,Rhs,false>$/;"	s	namespace:Eigen
TriangularProduct	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct TriangularProduct<Mode,true,Lhs,false,Rhs,true>$/;"	s	namespace:Eigen
TriangularView	external/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularView(const MatrixType& matrix) : m_matrix(matrix)$/;"	f	class:Eigen::TriangularView
TriangularView	external/Eigen/src/Core/TriangularMatrix.h	/^template<typename _MatrixType, unsigned int _Mode> class TriangularView$/;"	c	namespace:Eigen
TriangularViewReturnType	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	s	class:Eigen::MatrixBase
TridiagonalMatrix	external/Eigen/src/Core/BandMatrix.h	/^    TridiagonalMatrix(Index size = Size) : Base(size,size,Options&SelfAdjoint?0:1,1) {}$/;"	f	class:Eigen::internal::TridiagonalMatrix
TridiagonalMatrix	external/Eigen/src/Core/BandMatrix.h	/^class TridiagonalMatrix : public BandMatrix<Scalar,Size,Size,Options&SelfAdjoint?0:1,1,Options|RowMajor>$/;"	c	namespace:Eigen::internal
Tridiagonalization	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization(Index size = Size==Dynamic ? 2 : Size)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::Tridiagonalization
Tridiagonalization	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename _MatrixType> class Tridiagonalization$/;"	c	namespace:Eigen
TridiagonalizationMatrixTReturnType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    TridiagonalizationMatrixTReturnType(const MatrixType& mat) : m_matrix(mat) { }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
TridiagonalizationMatrixTReturnType	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^template<typename MatrixType> struct TridiagonalizationMatrixTReturnType$/;"	s	namespace:Eigen::internal
TridiagonalizationType	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typedef Tridiagonalization<MatrixType> TridiagonalizationType;$/;"	t	class:Eigen::SelfAdjointEigenSolver
Triplet	HashSparseMatrix.h	/^typedef Eigen::Triplet< double > Triplet;$/;"	t
Triplet	external/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet() : m_row(0), m_col(0), m_value(0) {}$/;"	f	class:Eigen::Triplet
Triplet	external/Eigen/src/SparseCore/SparseUtil.h	/^  Triplet(const Index& i, const Index& j, const Scalar& v = Scalar(0))$/;"	f	class:Eigen::Triplet
Triplet	external/Eigen/src/SparseCore/SparseUtil.h	/^class Triplet$/;"	c	namespace:Eigen
TripletVector	HashSparseMatrix.h	/^typedef std::vector< Triplet > TripletVector;$/;"	t
Type	external/Eigen/src/Core/BandMatrix.h	/^                 BuildType>::type Type;$/;"	t	struct:Eigen::internal::BandMatrixBase::DiagonalIntReturnType
Type	external/Eigen/src/Core/DenseBase.h	/^    template<int Size> struct ConstFixedSegmentReturnType { typedef const VectorBlock<const Derived, Size> Type; };$/;"	t	struct:Eigen::DenseBase::ConstFixedSegmentReturnType
Type	external/Eigen/src/Core/DenseBase.h	/^    template<int Size> struct FixedSegmentReturnType { typedef VectorBlock<Derived, Size> Type; };$/;"	t	struct:Eigen::DenseBase::FixedSegmentReturnType
Type	external/Eigen/src/Core/GeneralProduct.h	/^  typedef CoeffBasedProduct<LhsNested, RhsNested, EvalBeforeAssigningBit | EvalBeforeNestingBit> Type;$/;"	t	struct:Eigen::ProductReturnType
Type	external/Eigen/src/Core/GeneralProduct.h	/^  typedef CoeffBasedProduct<LhsNested, RhsNested, NestByRefBit> Type;$/;"	t	struct:Eigen::ProductReturnType
Type	external/Eigen/src/Core/GeneralProduct.h	/^  typedef GeneralProduct<Lhs\/*Nested*\/, Rhs\/*Nested*\/, ProductType> Type;$/;"	t	struct:Eigen::ProductReturnType
Type	external/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct ConstDiagonalIndexReturnType { typedef const Diagonal<const Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstDiagonalIndexReturnType
Type	external/Eigen/src/Core/MatrixBase.h	/^    template<int Index> struct DiagonalIndexReturnType { typedef Diagonal<Derived,Index> Type; };$/;"	t	struct:Eigen::MatrixBase::DiagonalIndexReturnType
Type	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct ConstTriangularViewReturnType { typedef const TriangularView<const Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstTriangularViewReturnType
Type	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int Mode> struct TriangularViewReturnType { typedef TriangularView<Derived, Mode> Type; };$/;"	t	struct:Eigen::MatrixBase::TriangularViewReturnType
Type	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct ConstSelfAdjointViewReturnType { typedef const SelfAdjointView<const Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::ConstSelfAdjointViewReturnType
Type	external/Eigen/src/Core/MatrixBase.h	/^    template<unsigned int UpLo> struct SelfAdjointViewReturnType { typedef SelfAdjointView<Derived, UpLo> Type; };$/;"	t	struct:Eigen::MatrixBase::SelfAdjointViewReturnType
Type	external/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReduxReturnType
Type	external/Eigen/src/Core/VectorwiseOp.h	/^                              > Type;$/;"	t	struct:Eigen::VectorwiseOp::ReturnType
Type	external/Eigen/src/Core/VectorwiseOp.h	/^                        Direction==Horizontal ? 1 : ExpressionType::ColsAtCompileTime> Type;$/;"	t	struct:Eigen::VectorwiseOp::ExtendedType
Type	external/Eigen/src/Core/util/Constants.h	/^  enum Type {$/;"	g	namespace:Eigen::Architecture
Type	external/Eigen/src/Householder/HouseholderSequence.h	/^                 0, MatrixType::MaxRowsAtCompileTime, MatrixType::MaxColsAtCompileTime> Type;$/;"	t	struct:Eigen::internal::matrix_type_times_scalar_type
Type	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef DenseTimeSparseProduct<Lhs,Rhs> Type;$/;"	t	struct:Eigen::DenseSparseProductReturnType
Type	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef SparseDenseOuterProduct<Lhs,Rhs,false> Type;$/;"	t	struct:Eigen::SparseDenseProductReturnType
Type	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef SparseDenseOuterProduct<Rhs,Lhs,true> Type;$/;"	t	struct:Eigen::DenseSparseProductReturnType
Type	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef SparseTimeDenseProduct<Lhs,Rhs> Type;$/;"	t	struct:Eigen::SparseDenseProductReturnType
Type	external/Eigen/src/SparseCore/SparseProduct.h	/^  typedef SparseSparseProduct<LhsNested, RhsNested> Type;$/;"	t	struct:Eigen::SparseSparseProductReturnType
Type	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNColsBlockXpr { typedef const Block<const Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:ConstNColsBlockXpr
Type	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct ConstNRowsBlockXpr { typedef const Block<const Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:ConstNRowsBlockXpr
Type	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NColsBlockXpr { typedef Block<Derived, internal::traits<Derived>::RowsAtCompileTime, N, !IsRowMajor> Type; };$/;"	t	struct:NColsBlockXpr
Type	external/Eigen/src/plugins/BlockMethods.h	/^template<int N> struct NRowsBlockXpr { typedef Block<Derived, N, internal::traits<Derived>::ColsAtCompileTime, IsRowMajor> Type; };$/;"	t	struct:NRowsBlockXpr
Type	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef SkylineProduct<LhsNested, RhsNested, ProductMode> Type;$/;"	t	struct:Eigen::SkylineProductReturnType
Type	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef google::dense_hash_map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::GoogleDenseHashMapTraits
Type	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef google::sparse_hash_map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::GoogleSparseHashMapTraits
Type	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef std::map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::StdMapTraits
Type	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  typedef std::unordered_map<KeyType,Scalar> Type;$/;"	t	struct:Eigen::StdUnorderedMapTraits
UF_long	external/SuiteSparse/Include/SuiteSparse_config.h	73;"	d
UF_long_id	external/SuiteSparse/Include/SuiteSparse_config.h	76;"	d
UF_long_idd	external/SuiteSparse/Include/SuiteSparse_config.h	75;"	d
UF_long_max	external/SuiteSparse/Include/SuiteSparse_config.h	74;"	d
UMatrixType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef TriangularView<LUMatrixType,  Upper>           UMatrixType;$/;"	t	class:Eigen::SuperLU
UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC	external/Eigen/src/Core/util/StaticAssert.h	/^        UNALIGNED_LOAD_AND_STORE_OPERATIONS_UNIMPLEMENTED_ON_ALTIVEC,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
UNFLIP	external/SuiteSparse/Include/cholmod_internal.h	95;"	d
USAGE_ERROR_ACTION	external/unsupported/test/mpreal/dlmalloc.c	2634;"	d	file:
USAGE_ERROR_ACTION	external/unsupported/test/mpreal/dlmalloc.c	2643;"	d	file:
USE_BUILTIN_FFS	external/unsupported/test/mpreal/dlmalloc.c	649;"	d	file:
USE_DEV_RANDOM	external/unsupported/test/mpreal/dlmalloc.c	652;"	d	file:
USE_DL_PREFIX	external/unsupported/test/mpreal/dlmalloc.c	483;"	d	file:
USE_DL_PREFIX	external/unsupported/test/mpreal/dlmalloc.h	28;"	d
USE_LOCKS	external/unsupported/test/mpreal/dlmalloc.c	577;"	d	file:
USE_LOCK_BIT	external/unsupported/test/mpreal/dlmalloc.c	1902;"	d	file:
USE_LOCK_BIT	external/unsupported/test/mpreal/dlmalloc.c	1904;"	d	file:
USE_MMAP_BIT	external/unsupported/test/mpreal/dlmalloc.c	1569;"	d	file:
USE_MMAP_BIT	external/unsupported/test/mpreal/dlmalloc.c	1587;"	d	file:
USE_NONCONTIGUOUS_BIT	external/unsupported/test/mpreal/dlmalloc.c	1611;"	d	file:
USE_SPIN_LOCKS	external/unsupported/test/mpreal/dlmalloc.c	581;"	d	file:
USE_SPIN_LOCKS	external/unsupported/test/mpreal/dlmalloc.c	583;"	d	file:
UmfPackLU	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU() { init(); }$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU(UmfPackLU& ) { }$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfPackLU(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
UmfPackLU	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^class UmfPackLU : internal::noncopyable$/;"	c	namespace:Eigen
UmfpackMatrixType	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef SparseMatrix<Scalar,ColMajor,int> UmfpackMatrixType;$/;"	t	class:Eigen::UmfPackLU
Unaligned	external/Eigen/src/Core/util/Constants.h	/^  Unaligned=0, $/;"	e	enum:Eigen::__anon265
UniformScaling	external/Eigen/src/Geometry/Scaling.h	/^  UniformScaling() {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	external/Eigen/src/Geometry/Scaling.h	/^  explicit inline UniformScaling(const Scalar& s) : m_factor(s) {}$/;"	f	class:Eigen::UniformScaling
UniformScaling	external/Eigen/src/Geometry/Scaling.h	/^  inline explicit UniformScaling(const UniformScaling<OtherScalarType>& other)$/;"	f	class:Eigen::UniformScaling
UniformScaling	external/Eigen/src/Geometry/Scaling.h	/^class UniformScaling$/;"	c	namespace:Eigen
Unit	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index i)$/;"	f	class:Eigen::MatrixBase
Unit	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::Unit(Index size, Index i)$/;"	f	class:Eigen::MatrixBase
UnitDiag	external/Eigen/src/Core/util/Constants.h	/^  UnitDiag=0x4, $/;"	e	enum:Eigen::__anon264
UnitDiagBit	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UnitDiagBit = UnitDiag;$/;"	m	namespace:Eigen
UnitLower	external/Eigen/src/Core/util/Constants.h	/^  UnitLower=UnitDiag|Lower, $/;"	e	enum:Eigen::__anon264
UnitLowerTriangular	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UnitLowerTriangular = UnitLower;$/;"	m	namespace:Eigen
UnitUpper	external/Eigen/src/Core/util/Constants.h	/^  UnitUpper=UnitDiag|Upper,$/;"	e	enum:Eigen::__anon264
UnitUpperTriangular	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UnitUpperTriangular = UnitUpper;$/;"	m	namespace:Eigen
UnitW	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitW()$/;"	f	class:Eigen::MatrixBase
UnitX	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitX()$/;"	f	class:Eigen::MatrixBase
UnitY	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitY()$/;"	f	class:Eigen::MatrixBase
UnitZ	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE const typename MatrixBase<Derived>::BasisReturnType MatrixBase<Derived>::UnitZ()$/;"	f	class:Eigen::MatrixBase
Unroll	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^      Unroll = CoeffReadCost != Dynamic && CoeffReadCost <= EIGEN_UNROLLING_LIMIT,$/;"	e	enum:Eigen::CoeffBasedProduct::__anon234
Unrolling	external/Eigen/src/Core/Assign.h	/^    Unrolling = (int(Traversal) == int(InnerVectorizedTraversal) || int(Traversal) == int(DefaultTraversal))$/;"	e	enum:Eigen::internal::assign_traits::__anon11
Unrolling	external/Eigen/src/Core/Redux.h	/^    Unrolling = Cost != Dynamic && Cost <= UnrollingLimit$/;"	e	enum:Eigen::internal::redux_traits::__anon171
Unrolling	external/Eigen/src/Core/SolveTriangular.h	/^      Unrolling   = (RhsIsVectorAtCompileTime && Rhs::SizeAtCompileTime != Dynamic && Rhs::SizeAtCompileTime <= 8)$/;"	e	enum:Eigen::internal::trsolve_traits::__anon189
UnrollingLimit	external/Eigen/src/Core/Assign.h	/^    UnrollingLimit      = EIGEN_UNROLLING_LIMIT * (Vectorized ? int(PacketSize) : 1),$/;"	e	enum:Eigen::internal::assign_traits::__anon10
UnrollingLimit	external/Eigen/src/Core/Redux.h	/^    UnrollingLimit = EIGEN_UNROLLING_LIMIT * (int(Traversal) == int(DefaultTraversal) ? 1 : int(PacketSize))$/;"	e	enum:Eigen::internal::redux_traits::__anon170
Unusable	external/Eigen/src/Core/ReturnByValue.h	/^      Unusable(const Unusable&) {}$/;"	f	class:Eigen::ReturnByValue::Unusable
Unusable	external/Eigen/src/Core/ReturnByValue.h	/^    class Unusable{$/;"	c	class:Eigen::ReturnByValue
Unusable	external/Eigen/src/Core/ReturnByValue.h	66;"	d
UpLo	external/Eigen/src/Cholesky/LDLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LDLT::__anon1
UpLo	external/Eigen/src/Cholesky/LLT.h	/^      UpLo = _UpLo$/;"	e	enum:Eigen::LLT::__anon3
UpLo	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::CholmodBase::__anon4
UpLo	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^    UpLo = _UpLo$/;"	e	enum:Eigen::ConjugateGradient::__anon381
UpLo	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLDLT::__anon389
UpLo	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PastixLLT::__anon388
UpLo	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = Options&(Upper|Lower) };$/;"	e	enum:Eigen::PardisoLDLT::__anon392
UpLo	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::PardisoLLT::__anon391
UpLo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialCholesky::__anon410
UpLo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLDLT::__anon409
UpLo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = _UpLo };$/;"	e	enum:Eigen::SimplicialLLT::__anon408
UpLo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    enum { UpLo = internal::traits<Derived>::UpLo };$/;"	e	enum:Eigen::SimplicialCholeskyBase::__anon404
UpLo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon405
UpLo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon406
UpLo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  enum { UpLo = _UpLo };$/;"	e	enum:Eigen::internal::traits::__anon407
UpdateAllNormal	PointCloud.h	/^	void UpdateAllNormal( const Eigen::VectorXd & ctr ) {$/;"	f	class:PointCloud
UpdateAllPointPN	PointCloud.h	/^	void UpdateAllPointPN( const Eigen::VectorXd & ctr ) {$/;"	f	class:PointCloud
UpdateNormal	PointCloud.h	/^	inline void UpdateNormal( const Eigen::VectorXd & ctr, Point & point ) {$/;"	f	class:PointCloud
UpdatePoint	PointCloud.h	/^	inline Eigen::Vector3d UpdatePoint( const Eigen::VectorXd & ctr, Point & point ) {$/;"	f	class:PointCloud
UpdatePose	PointCloud.h	/^	inline void UpdatePose( const Eigen::Matrix4f & inc_pose ) {$/;"	f	class:PointCloud
Upper	external/Eigen/src/Core/util/Constants.h	/^  Upper=0x2,                      $/;"	e	enum:Eigen::__anon264
UpperBidiagonalization	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    UpperBidiagonalization() : m_householder(), m_bidiagonal(), m_isInitialized(false) {}$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    UpperBidiagonalization(const MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
UpperBidiagonalization	external/Eigen/src/SVD/UpperBidiagonalization.h	/^template<typename _MatrixType> class UpperBidiagonalization$/;"	c	namespace:Eigen::internal
UpperTriangular	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UpperTriangular = Upper;$/;"	m	namespace:Eigen
UpperTriangularBit	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^const unsigned int UpperTriangularBit = Upper;$/;"	m	namespace:Eigen
UpperTriangularType	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    typedef Matrix< Scalar, Dynamic, Dynamic > UpperTriangularType;$/;"	t	class:Eigen::HybridNonLinearSolver
UserAsked	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        UserAsked = 6$/;"	e	enum:Eigen::HybridNonLinearSolverSpace::Status
UserAsked	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        UserAsked = 9$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
VERIFY_IS_APPROX_ABS	external/unsupported/test/matrix_function.cpp	15;"	d	file:
VERIFY_MATRIX	external/unsupported/test/openglsupport.cpp	20;"	d	file:
VERIFY_UNIFORM	external/unsupported/test/openglsupport.cpp	31;"	d	file:
VERIFY_UNIFORMi	external/unsupported/test/openglsupport.cpp	44;"	d	file:
VIPair	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef internal::vector_int_pair<Scalar, Dim> VIPair;$/;"	t	class:Eigen::KdBVH
VIPairList	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef std::vector<VIPair, aligned_allocator<VIPair> > VIPairList;$/;"	t	class:Eigen::KdBVH
ValueType	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  typedef typename Functor::ValueType ValueType;$/;"	t	class:Eigen::AutoDiffJacobian
ValueType	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    typedef typename Functor::ValueType ValueType;$/;"	t	class:Eigen::NumericalDiff
ValueType	external/unsupported/test/NonLinearOptimization.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:Functor	file:
ValueType	external/unsupported/test/NumericalDiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:Functor	file:
ValueType	external/unsupported/test/autodiff.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:TestFunc1	file:
ValueType	external/unsupported/test/forward_adolc.cpp	/^  typedef Matrix<Scalar,ValuesAtCompileTime,1> ValueType;$/;"	t	struct:TestFunc1	file:
ValuesAtCompileTime	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^    ValuesAtCompileTime = Functor::ValuesAtCompileTime$/;"	e	enum:Eigen::AutoDiffJacobian::__anon441
ValuesAtCompileTime	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^        ValuesAtCompileTime = Functor::ValuesAtCompileTime$/;"	e	enum:Eigen::NumericalDiff::__anon444
ValuesAtCompileTime	external/unsupported/test/NonLinearOptimization.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:Functor::__anon470	file:
ValuesAtCompileTime	external/unsupported/test/NumericalDiff.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:Functor::__anon471	file:
ValuesAtCompileTime	external/unsupported/test/autodiff.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:TestFunc1::__anon472	file:
ValuesAtCompileTime	external/unsupported/test/forward_adolc.cpp	/^    ValuesAtCompileTime = NY$/;"	e	enum:TestFunc1::__anon473	file:
Vector	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::DiagonalPreconditioner
Vector	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::IncompleteLUT
Vector	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::PastixBase
Vector	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::SuperLUBase
Vector	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::UmfPackLU
Vector	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    typedef Matrix<Scalar,Dynamic,1> Vector;$/;"	t	class:Eigen::IncompleteLU
Vector2	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	class:Eigen::Rotation2D
Vector2	external/Eigen/src/Geometry/OrthoMethods.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
Vector2	external/Eigen/src/Geometry/Rotation2D.h	/^  typedef Matrix<Scalar,2,1> Vector2;$/;"	t	class:Eigen::Rotation2D
Vector3	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::AngleAxis
Vector3	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::Quaternion
Vector3	external/Eigen/src/Geometry/AngleAxis.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::AngleAxis
Vector3	external/Eigen/src/Geometry/Quaternion.h	/^  typedef Matrix<Scalar,3,1> Vector3;$/;"	t	class:Eigen::QuaternionBase
Vector3s	external/Eigen/src/Eigenvalues/RealSchur.h	/^    typedef Matrix<Scalar,3,1> Vector3s;$/;"	t	class:Eigen::RealSchur
VectorBlock	external/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start)$/;"	f	class:Eigen::VectorBlock
VectorBlock	external/Eigen/src/Core/VectorBlock.h	/^    inline VectorBlock(VectorType& vector, Index start, Index size)$/;"	f	class:Eigen::VectorBlock
VectorBlock	external/Eigen/src/Core/VectorBlock.h	/^template<typename VectorType, int Size> class VectorBlock$/;"	c	namespace:Eigen
VectorComparator	external/unsupported/Eigen/src/BVH/KdBVH.h	/^    VectorComparator(int inDim) : dim(inDim) {}$/;"	f	struct:Eigen::KdBVH::VectorComparator
VectorComparator	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  struct VectorComparator \/\/compares vectors, or, more specificall, VIPairs along a particular dimension$/;"	s	class:Eigen::KdBVH
VectorI	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<Index,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSelfAdjointView
VectorI	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef Matrix<Index,Dynamic,1> VectorI;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
VectorType	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::AlignedBox
VectorType	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::Hyperplane
VectorType	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::ParametrizedLine
VectorType	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Scaling
VectorType	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Transform
VectorType	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Translation
VectorType	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    typedef Matrix<Scalar, 1, Size, Options | RowMajor, 1, MaxSize> VectorType;$/;"	t	class:Eigen::HessenbergDecomposition
VectorType	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  typedef typename SolverType::RealVectorType VectorType;$/;"	t	struct:Eigen::internal::direct_selfadjoint_eigenvalues
VectorType	external/Eigen/src/Geometry/AlignedBox.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1>  VectorType;$/;"	t	class:Eigen::AlignedBox
VectorType	external/Eigen/src/Geometry/Hyperplane.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1> VectorType;$/;"	t	class:Eigen::Hyperplane
VectorType	external/Eigen/src/Geometry/OrthoMethods.h	/^  typedef typename plain_matrix_type<Derived>::type VectorType;$/;"	t	struct:Eigen::internal::unitOrthogonal_selector
VectorType	external/Eigen/src/Geometry/ParametrizedLine.h	/^  typedef Matrix<Scalar,AmbientDimAtCompileTime,1,Options> VectorType;$/;"	t	class:Eigen::ParametrizedLine
VectorType	external/Eigen/src/Geometry/RotationBase.h	/^    typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::RotationBase
VectorType	external/Eigen/src/Geometry/Transform.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Transform
VectorType	external/Eigen/src/Geometry/Translation.h	/^  typedef Matrix<Scalar,Dim,1> VectorType;$/;"	t	class:Eigen::Translation
VectorType	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::PardisoImpl
VectorType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholesky
VectorType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialCholeskyBase
VectorType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLDLT
VectorType	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType;$/;"	t	class:Eigen::SimplicialLLT
VectorType	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef Matrix<Scalar, Dim, 1> VectorType;$/;"	t	class:Eigen::KdBVH
VectorType	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef Matrix<Scalar, Dim, 1> VectorType;$/;"	t	struct:Eigen::internal::vector_int_pair
VectorType	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typedef Matrix<Scalar, Traits::RowsAtCompileTime, 1> VectorType;$/;"	t	class:Eigen::MatrixFunction
VectorType	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    typedef Matrix<Scalar, MatrixType::RowsAtCompileTime, 1> VectorType;$/;"	t	class:Eigen::MatrixFunctionAtomic
VectorType	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    typedef Matrix<Scalar,Dynamic,1> VectorType; $/;"	t	class:Eigen::MatrixMarketIterator
VectorType	external/unsupported/test/BVH.cpp	/^  typedef Matrix<double, Dim, 1> VectorType;$/;"	t	struct:Ball	file:
VectorType	external/unsupported/test/BVH.cpp	/^  typedef Matrix<double, Dim, 1> VectorType;$/;"	t	struct:BallPointStuff	file:
VectorType	external/unsupported/test/BVH.cpp	/^  typedef Matrix<double, Dim, 1> VectorType;$/;"	t	struct:TreeTest	file:
VectorType	external/unsupported/test/FFTW.cpp	/^template<typename Scalar> struct VectorType<EigenVectorContainer,Scalar>$/;"	s	file:
VectorType	external/unsupported/test/FFTW.cpp	/^template<typename Scalar> struct VectorType<StdVectorContainer,Scalar>$/;"	s	file:
VectorTypeList	external/unsupported/test/BVH.cpp	/^  typedef std::vector<VectorType, aligned_allocator<VectorType> > VectorTypeList;$/;"	t	struct:TreeTest	file:
Vectorizable	external/Eigen/src/Core/Functors.h	/^    Vectorizable = is_same<LhsScalar,RhsScalar>::value && packet_traits<LhsScalar>::HasMul && packet_traits<RhsScalar>::HasMul$/;"	e	enum:Eigen::internal::scalar_product_op::__anon43
Vectorizable	external/Eigen/src/Core/GenericPacketMath.h	/^    Vectorizable = 0,$/;"	e	enum:Eigen::internal::packet_traits::__anon141
Vectorizable	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
Vectorizable	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
Vectorizable	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon211
Vectorizable	external/Eigen/src/Core/arch/NEON/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
Vectorizable	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
Vectorizable	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon217
Vectorizable	external/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
Vectorizable	external/Eigen/src/Core/arch/SSE/Complex.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
Vectorizable	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
Vectorizable	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon228
Vectorizable	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    Vectorizable = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon229
Vectorizable	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable  = Traits::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_kernel::__anon241
Vectorizable	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
Vectorizable	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
Vectorizable	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
Vectorizable	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    Vectorizable = packet_traits<RealScalar>::Vectorizable$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
Vectorizable	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon249
Vectorizable	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^  Vectorizable = packet_traits<LhsScalar>::Vectorizable && packet_traits<RhsScalar>::Vectorizable$/;"	e	enum:Eigen::internal::general_matrix_vector_product::__anon250
Vectorized	external/Eigen/src/Core/Assign.h	/^    Vectorized = int(Traversal) == InnerVectorizedTraversal$/;"	e	enum:Eigen::internal::assign_traits::__anon9
VectorizedSize	external/Eigen/src/Core/Redux.h	/^    VectorizedSize = (Size \/ PacketSize) * PacketSize$/;"	e	enum:Eigen::internal::redux_impl::__anon176
VectorwiseOp	external/Eigen/src/Core/VectorwiseOp.h	/^    inline VectorwiseOp(ExpressionType& matrix) : m_matrix(matrix) {}$/;"	f	class:Eigen::VectorwiseOp
VectorwiseOp	external/Eigen/src/Core/VectorwiseOp.h	/^template<typename ExpressionType, int Direction> class VectorwiseOp$/;"	c	namespace:Eigen
Vertical	external/Eigen/src/Core/util/Constants.h	/^  Vertical, $/;"	e	enum:Eigen::DirectionType
VmlSize	external/Eigen/src/Core/Assign_MKL.h	/^      VmlSize = MightLinearize ? MaxSizeAtCompileTime : InnerMaxSize,$/;"	e	enum:Eigen::internal::vml_assign_traits::__anon15
Volume	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef AlignedBox<Scalar, Dim> Volume;$/;"	t	class:Eigen::KdBVH
VolumeIterator	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef const int *VolumeIterator; \/\/the iterators are just pointers into the tree's vectors$/;"	t	class:Eigen::KdBVH
VolumeList	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  typedef std::vector<Volume, aligned_allocator<Volume> > VolumeList;$/;"	t	class:Eigen::KdBVH
WIN32	external/unsupported/test/mpreal/dlmalloc.c	495;"	d	file:
WIN32	external/unsupported/test/mpreal/dlmalloc.c	499;"	d	file:
WIN32_LEAN_AND_MEAN	external/unsupported/test/mpreal/dlmalloc.c	503;"	d	file:
WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED	external/Eigen/src/Core/util/StaticAssert.h	/^        WRITING_TO_TRIANGULAR_PART_WITH_UNIT_DIAGONAL_IS_NOT_SUPPORTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
WithFormat	external/Eigen/src/Core/IO.h	/^    WithFormat(const ExpressionType& matrix, const IOFormat& format)$/;"	f	class:Eigen::WithFormat
WithFormat	external/Eigen/src/Core/IO.h	/^class WithFormat$/;"	c	namespace:Eigen
WorkMatrixType	external/Eigen/src/SVD/JacobiSVD.h	/^            WorkMatrixType;$/;"	t	class:Eigen::JacobiSVD
WorkSpaceFactor	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = Vectorizable ? 2*nr*RealPacketSize : nr,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
WorkSpaceFactor	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = nr * RhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
WorkSpaceFactor	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = nr*RhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
WorkSpaceFactor	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    WorkSpaceFactor = nr*RhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
WorkVectorType	external/Eigen/src/QR/FullPivHouseholderQR.h	/^                 MatrixType::MaxRowsAtCompileTime> WorkVectorType;$/;"	t	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
WorkspaceType	external/Eigen/src/SVD/JacobiSVD.h	/^  typedef Matrix<Scalar, 1, RowsAtCompileTime, RowMajor, 1, MaxRowsAtCompileTime> WorkspaceType;$/;"	t	class:Eigen::internal::qr_preconditioner_impl
WriteAccessors	external/Eigen/src/Core/util/Constants.h	/^  WriteAccessors, $/;"	e	enum:Eigen::AccessorLevels
XPRINT0	external/SuiteSparse/Include/cholmod_template.h	131;"	d
XPRINT0	external/SuiteSparse/Include/cholmod_template.h	182;"	d
XPRINT0	external/SuiteSparse/Include/cholmod_template.h	233;"	d
XPRINT0	external/SuiteSparse/Include/cholmod_template.h	42;"	d
XPRINT0	external/SuiteSparse/Include/cholmod_template.h	86;"	d
XPRINT1	external/SuiteSparse/Include/cholmod_template.h	132;"	d
XPRINT1	external/SuiteSparse/Include/cholmod_template.h	183;"	d
XPRINT1	external/SuiteSparse/Include/cholmod_template.h	234;"	d
XPRINT1	external/SuiteSparse/Include/cholmod_template.h	43;"	d
XPRINT1	external/SuiteSparse/Include/cholmod_template.h	87;"	d
XPRINT2	external/SuiteSparse/Include/cholmod_template.h	133;"	d
XPRINT2	external/SuiteSparse/Include/cholmod_template.h	184;"	d
XPRINT2	external/SuiteSparse/Include/cholmod_template.h	235;"	d
XPRINT2	external/SuiteSparse/Include/cholmod_template.h	44;"	d
XPRINT2	external/SuiteSparse/Include/cholmod_template.h	88;"	d
XPRINT3	external/SuiteSparse/Include/cholmod_template.h	134;"	d
XPRINT3	external/SuiteSparse/Include/cholmod_template.h	185;"	d
XPRINT3	external/SuiteSparse/Include/cholmod_template.h	236;"	d
XPRINT3	external/SuiteSparse/Include/cholmod_template.h	45;"	d
XPRINT3	external/SuiteSparse/Include/cholmod_template.h	89;"	d
XTYPE	external/SuiteSparse/Include/cholmod_template.h	10;"	d
XTYPE	external/SuiteSparse/Include/cholmod_template.h	156;"	d
XTYPE	external/SuiteSparse/Include/cholmod_template.h	207;"	d
XTYPE	external/SuiteSparse/Include/cholmod_template.h	56;"	d
XTYPE	external/SuiteSparse/Include/cholmod_template.h	99;"	d
XTYPE2	external/SuiteSparse/Include/cholmod_template.h	100;"	d
XTYPE2	external/SuiteSparse/Include/cholmod_template.h	11;"	d
XTYPE2	external/SuiteSparse/Include/cholmod_template.h	157;"	d
XTYPE2	external/SuiteSparse/Include/cholmod_template.h	208;"	d
XTYPE2	external/SuiteSparse/Include/cholmod_template.h	57;"	d
XTYPE_OK	external/SuiteSparse/Include/cholmod_template.h	101;"	d
XTYPE_OK	external/SuiteSparse/Include/cholmod_template.h	12;"	d
XTYPE_OK	external/SuiteSparse/Include/cholmod_template.h	158;"	d
XTYPE_OK	external/SuiteSparse/Include/cholmod_template.h	209;"	d
XTYPE_OK	external/SuiteSparse/Include/cholmod_template.h	58;"	d
XprBase	external/Eigen/src/Core/Array.h	/^  typedef ArrayBase<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > XprBase;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Array.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/ArrayWrapper.h	/^  typedef ArrayXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/ArrayWrapper.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Block.h	/^  typedef typename traits<XprType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename traits<Ancestor>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Matrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Product.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:internal::traits
XprKind	external/Eigen/src/Core/ProductBase.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Replicate.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Reverse.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Select.h	/^  typedef typename traits<ThenMatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/Transpose.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename traits<MatrixType>::XprKind XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/SparseCore/SparseBlock.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/SparseCore/SparseProduct.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/Eigen/src/SparseCore/SparseVector.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprKind	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^  typedef MatrixXpr XprKind;$/;"	t	struct:Eigen::internal::traits
XprType	external/Eigen/src/Core/Transpose.h	/^  typedef SelfCwiseBinaryOp<BinOp,NestedXpr,Rhs> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_multiple_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<NestedXpr> XprType;$/;"	t	struct:Eigen::internal::blas_traits
XprTypeIsRowMajor	external/Eigen/src/Core/Block.h	/^    XprTypeIsRowMajor = (int(traits<XprType>::Flags)&RowMajorBit) != 0,$/;"	e	enum:Eigen::internal::traits::__anon22
XprTypeNested	external/Eigen/src/Core/Block.h	/^  typedef typename nested<XprType>::type XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XprTypeNested	external/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename XprType::Nested XprTypeNested;$/;"	t	struct:Eigen::internal::traits
XtolTooSmall	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        XtolTooSmall = 7,$/;"	e	enum:Eigen::LevenbergMarquardtSpace::Status
Xwork	external/SuiteSparse/Include/cholmod_core.h	/^    void *Xwork ; 	\/* a double array.  Its size varies.  It is nrow for$/;"	m	struct:cholmod_common_struct
YOU_ALREADY_SPECIFIED_THIS_STRIDE	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ALREADY_SPECIFIED_THIS_STRIDE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_ARE_TRYING_TO_USE_AN_INDEX_BASED_ACCESSOR_ON_AN_EXPRESSION_THAT_DOES_NOT_SUPPORT_THAT,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_DYNAMIC_SIZE_METHOD_ON_A_FIXED_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CALLED_A_FIXED_SIZE_METHOD_ON_A_DYNAMIC_SIZE_MATRIX_OR_VECTOR,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_CANNOT_MIX_ARRAYS_AND_MATRICES	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_CANNOT_MIX_ARRAYS_AND_MATRICES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_MADE_A_PROGRAMMING_MISTAKE	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MADE_A_PROGRAMMING_MISTAKE,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_DIFFERENT_NUMERIC_TYPES__YOU_NEED_TO_USE_THE_CAST_METHOD_OF_MATRIXBASE_TO_CAST_NUMERIC_TYPES_EXPLICITLY,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_MIXED_VECTORS_OF_DIFFERENT_SIZES,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_COLUMN_VECTOR_BUT_A_ROW_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PASSED_A_ROW_VECTOR_BUT_A_COLUMN_VECTOR_WAS_EXPECTED,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_PERFORMED_AN_INVALID_TRANSFORMATION_CONVERSION,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX	external/Eigen/src/Core/util/StaticAssert.h	/^        YOU_TRIED_CALLING_A_VECTOR_METHOD_ON_A_MATRIX,$/;"	e	enum:Eigen::internal::static_assertion::__anon325
ZT_TEMPLATE	external/SuiteSparse/Include/cholmod_complexity.h	159;"	d
Z_ADD	external/SuiteSparse/Include/cholmod_complexity.h	208;"	d
Z_ADD_REAL	external/SuiteSparse/Include/cholmod_complexity.h	212;"	d
Z_ASSEMBLE	external/SuiteSparse/Include/cholmod_complexity.h	161;"	d
Z_ASSIGN	external/SuiteSparse/Include/cholmod_complexity.h	165;"	d
Z_ASSIGN_CONJ	external/SuiteSparse/Include/cholmod_complexity.h	171;"	d
Z_ASSIGN_REAL	external/SuiteSparse/Include/cholmod_complexity.h	169;"	d
Z_CLEAR	external/SuiteSparse/Include/cholmod_complexity.h	215;"	d
Z_CLEAR_IMAG	external/SuiteSparse/Include/cholmod_complexity.h	219;"	d
Z_DIV	external/SuiteSparse/Include/cholmod_complexity.h	223;"	d
Z_DIV_REAL	external/SuiteSparse/Include/cholmod_complexity.h	232;"	d
Z_IMAG_IS_NONZERO	external/SuiteSparse/Include/cholmod_complexity.h	186;"	d
Z_IS_NONZERO	external/SuiteSparse/Include/cholmod_complexity.h	177;"	d
Z_IS_ONE	external/SuiteSparse/Include/cholmod_complexity.h	183;"	d
Z_IS_ZERO	external/SuiteSparse/Include/cholmod_complexity.h	180;"	d
Z_LDLDOT	external/SuiteSparse/Include/cholmod_complexity.h	241;"	d
Z_LLDOT	external/SuiteSparse/Include/cholmod_complexity.h	227;"	d
Z_MULT	external/SuiteSparse/Include/cholmod_complexity.h	188;"	d
Z_MULTADD	external/SuiteSparse/Include/cholmod_complexity.h	192;"	d
Z_MULTADDCONJ	external/SuiteSparse/Include/cholmod_complexity.h	200;"	d
Z_MULTSUB	external/SuiteSparse/Include/cholmod_complexity.h	196;"	d
Z_MULTSUBCONJ	external/SuiteSparse/Include/cholmod_complexity.h	204;"	d
Z_MULT_REAL	external/SuiteSparse/Include/cholmod_complexity.h	236;"	d
Z_PRINT	external/SuiteSparse/Include/cholmod_complexity.h	230;"	d
Z_TEMPLATE	external/SuiteSparse/Include/cholmod_complexity.h	158;"	d
Z_XTYPE_OK	external/SuiteSparse/Include/cholmod_complexity.h	175;"	d
Zero	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero()$/;"	f	class:Eigen::DenseBase
Zero	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
Zero	external/Eigen/src/Core/CwiseNullaryOp.h	/^DenseBase<Derived>::Zero(Index size)$/;"	f	class:Eigen::DenseBase
ZeroDiag	external/Eigen/src/Core/util/Constants.h	/^  ZeroDiag=0x8,$/;"	e	enum:Eigen::__anon264
_ActualLhsType	external/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<ActualLhsType>::type _ActualLhsType;$/;"	t	class:Eigen::ProductBase
_ActualRhsType	external/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<ActualRhsType>::type _ActualRhsType;$/;"	t	class:Eigen::ProductBase
_EIGEN_ACCUMULATE_PACKETS	external/Eigen/src/Core/products/GeneralMatrixVector.h	274;"	d
_EIGEN_ACCUMULATE_PACKETS	external/Eigen/src/Core/products/GeneralMatrixVector.h	322;"	d
_EIGEN_ACCUMULATE_PACKETS	external/Eigen/src/Core/products/GeneralMatrixVector.h	544;"	d
_EIGEN_ACCUMULATE_PACKETS	external/Eigen/src/Core/products/GeneralMatrixVector.h	65;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4f	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	40;"	d
_EIGEN_DECLARE_CONST_FAST_Packet4i	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	43;"	d
_EIGEN_DECLARE_CONST_Packet4f	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	46;"	d
_EIGEN_DECLARE_CONST_Packet4f	external/Eigen/src/Core/arch/NEON/PacketMath.h	33;"	d
_EIGEN_DECLARE_CONST_Packet4f	external/Eigen/src/Core/arch/SSE/PacketMath.h	48;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	49;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	external/Eigen/src/Core/arch/NEON/PacketMath.h	36;"	d
_EIGEN_DECLARE_CONST_Packet4f_FROM_INT	external/Eigen/src/Core/arch/SSE/PacketMath.h	51;"	d
_EIGEN_DECLARE_CONST_Packet4i	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	52;"	d
_EIGEN_DECLARE_CONST_Packet4i	external/Eigen/src/Core/arch/NEON/PacketMath.h	39;"	d
_EIGEN_DECLARE_CONST_Packet4i	external/Eigen/src/Core/arch/SSE/PacketMath.h	54;"	d
_EIGEN_SKYLINE_GENERIC_PUBLIC_INTERFACE	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	52;"	d
_EIGEN_SPARSE_PUBLIC_INTERFACE	external/Eigen/src/SparseCore/SparseUtil.h	46;"	d
_ExtractType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef Transpose<const typename Base::_ExtractType> _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_ExtractType	external/Eigen/src/Core/util/BlasUtil.h	/^  typedef XprType _ExtractType;$/;"	t	struct:Eigen::internal::blas_traits
_FILE_OFFSET_BITS	external/SuiteSparse/Include/cholmod_io64.h	37;"	d
_FILE_OFFSET_BITS	external/SuiteSparse/Include/cholmod_io64.h	38;"	d
_Flags	external/Eigen/src/SparseCore/SparseUtil.h	/^          _Flags = traits<T>::Flags$/;"	e	enum:Eigen::internal::plain_matrix_type::__anon434
_Flags	external/Eigen/src/SparseCore/SparseUtil.h	/^    enum { _Flags = traits<T>::Flags & (~RowMajorBit) };$/;"	e	enum:Eigen::internal::sparse_eval::__anon432
_Flags	external/Eigen/src/SparseCore/SparseUtil.h	/^    enum { _Flags = traits<T>::Flags| RowMajorBit };$/;"	e	enum:Eigen::internal::sparse_eval::__anon431
_Flags	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^          _Flags = traits<T>::Flags$/;"	e	enum:Eigen::internal::eval::__anon451
_HasDirectAccess	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      _HasDirectAccess = (int(Flags)&DirectAccessBit) ? 1 : 0 \/\/ workaround sunCC$/;"	e	enum:Eigen::SparseMatrixBase::__anon425
_Index	external/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::Index _Index;$/;"	t	struct:Eigen::internal::sparse_eval
_LARGEFILE64_SOURCE	external/SuiteSparse/Include/cholmod_io64.h	35;"	d
_LARGEFILE64_SOURCE	external/SuiteSparse/Include/cholmod_io64.h	36;"	d
_Lhs	external/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Lhs>::type _Lhs;$/;"	t	struct:Eigen::internal::product_type
_Lhs	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename remove_all<Lhs>::type _Lhs;$/;"	t	struct:Eigen::internal::traits
_LhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_LhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	external/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::ProductBase
_LhsNested	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef typename internal::traits<CoeffBasedProduct>::_LhsNested _LhsNested;$/;"	t	class:Eigen::CoeffBasedProduct
_LhsNested	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::_LhsNested _LhsNested;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
_LhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::_LhsNested _LhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
_LhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename internal::remove_all<LhsNested>::type _LhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
_LhsNested	external/Eigen/src/SparseCore/SparseProduct.h	/^    typedef typename internal::traits<SparseSparseProduct>::_LhsNested _LhsNested;$/;"	t	class:Eigen::SparseSparseProduct
_LhsNested	external/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename internal::remove_all<LhsNested>::type _LhsNested;$/;"	t	struct:Eigen::internal::traits
_LhsNested	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename traits<SkylineProduct>::_LhsNested _LhsNested;$/;"	t	class:Eigen::internal::SkylineProduct
_LhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_LhsPacket	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<LhsScalar>::type  _LhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_MatrixType	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    typedef typename internal::pastix_traits<Derived>::MatrixType _MatrixType;$/;"	t	class:Eigen::PastixBase
_MatrixTypeNested	external/Eigen/src/Core/CwiseUnaryView.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/Core/Diagonal.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/Core/Replicate.h	/^    typedef typename internal::traits<Replicate>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::Replicate
_MatrixTypeNested	external/Eigen/src/Core/Replicate.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/Core/Reverse.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/Core/VectorwiseOp.h	/^    typedef typename internal::traits<PartialReduxExpr>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::PartialReduxExpr
_MatrixTypeNested	external/Eigen/src/Core/VectorwiseOp.h	/^  typedef typename remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/Eigen2Support/Minor.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename internal::traits<Derived>::_MatrixTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::CwiseUnaryViewImpl
_MatrixTypeNested	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    typedef typename internal::traits<Derived>::_XprTypeNested _MatrixTypeNested;$/;"	t	class:Eigen::CwiseUnaryOpImpl
_MatrixTypeNested	external/Eigen/src/SparseCore/SparseMatrix.h	/^  typedef typename remove_reference<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	struct:Eigen::internal::traits
_MatrixTypeNested	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseSelfAdjointView
_MatrixTypeNested	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseSymmetricPermutationProduct
_MatrixTypeNested	external/Eigen/src/SparseCore/SparseTranspose.h	/^    typedef typename internal::remove_all<typename MatrixType::Nested>::type _MatrixTypeNested;$/;"	t	class:Eigen::TransposeImpl
_MatrixTypeNested	external/Eigen/src/SparseCore/SparseView.h	/^  typedef typename internal::remove_all<MatrixTypeNested>::type _MatrixTypeNested;$/;"	t	class:Eigen::SparseView
_Options	external/Eigen/src/SparseCore/SparseUtil.h	/^    enum { _Options = ((traits<T>::Flags&RowMajorBit)==RowMajorBit) ? RowMajor : ColMajor };$/;"	e	enum:Eigen::internal::sparse_eval::__anon433
_PacketOnDiag	external/Eigen/src/Core/DiagonalProduct.h	/^    _PacketOnDiag = !((int(_StorageOrder) == RowMajor && int(ProductOrder) == OnTheLeft)$/;"	e	enum:Eigen::internal::traits::__anon40
_ResPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	class:Eigen::internal::gebp_traits
_ResPacket	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<ResScalar>::type  _ResPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_Rhs	external/Eigen/src/Core/GeneralProduct.h	/^  typedef typename remove_all<Rhs>::type _Rhs;$/;"	t	struct:Eigen::internal::product_type
_Rhs	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^  typedef typename remove_all<Rhs>::type _Rhs;$/;"	t	struct:Eigen::internal::traits
_RhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^    typedef typename internal::remove_reference<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::CwiseBinaryOp
_RhsNested	external/Eigen/src/Core/CwiseBinaryOp.h	/^  typedef typename remove_reference<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	external/Eigen/src/Core/ProductBase.h	/^    typedef typename internal::remove_all<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::ProductBase
_RhsNested	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typedef typename internal::traits<CoeffBasedProduct>::_RhsNested _RhsNested;$/;"	t	class:Eigen::CoeffBasedProduct
_RhsNested	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef typename remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    typedef typename traits<CwiseBinaryXpr>::_RhsNested _RhsNested;$/;"	t	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
_RhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    typedef typename Traits::_RhsNested _RhsNested;$/;"	t	class:Eigen::SparseDenseOuterProduct
_RhsNested	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  typedef typename remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    typedef typename internal::remove_all<RhsNested>::type _RhsNested;$/;"	t	class:Eigen::SparseDiagonalProduct
_RhsNested	external/Eigen/src/SparseCore/SparseProduct.h	/^    typedef typename internal::traits<SparseSparseProduct>::_RhsNested _RhsNested;$/;"	t	class:Eigen::SparseSparseProduct
_RhsNested	external/Eigen/src/SparseCore/SparseProduct.h	/^  typedef typename remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename internal::remove_all<RhsNested>::type _RhsNested;$/;"	t	struct:Eigen::internal::traits
_RhsNested	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    typedef typename traits<SkylineProduct>::_RhsNested _RhsNested;$/;"	t	class:Eigen::internal::SkylineProduct
_RhsPacket	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	class:Eigen::internal::gebp_traits
_RhsPacket	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^typedef typename packet_traits<RhsScalar>::type  _RhsPacket;$/;"	t	struct:Eigen::internal::general_matrix_vector_product
_SC_PAGE_SIZE	external/unsupported/test/mpreal/dlmalloc.c	1394;"	d	file:
_SUITESPARSECONFIG_H	external/SuiteSparse/Include/SuiteSparse_config.h	39;"	d
_SameTypes	external/Eigen/src/Core/DiagonalProduct.h	/^    _SameTypes = is_same<typename MatrixType::Scalar, typename DiagonalType::Scalar>::value,$/;"	e	enum:Eigen::internal::traits::__anon40
_Scalar	external/Eigen/src/SparseCore/SparseUtil.h	/^    typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::sparse_eval
_Scalar	external/Eigen/src/SparseCore/SparseUtil.h	/^  typedef typename traits<T>::Scalar _Scalar;$/;"	t	struct:Eigen::internal::plain_matrix_type
_Scalar	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^    typedef typename traits<T>::Scalar _Scalar;$/;"	t	class:Eigen::internal::eval
_StorageOrder	external/Eigen/src/Core/DiagonalProduct.h	/^    _StorageOrder = MatrixType::Flags & RowMajorBit ? RowMajor : ColMajor,$/;"	e	enum:Eigen::internal::traits::__anon40
_Vectorizable	external/Eigen/src/Core/DiagonalProduct.h	/^    _Vectorizable = bool(int(MatrixType::Flags)&PacketAccessBit) && _SameTypes && ((!_PacketOnDiag) || (bool(int(DiagonalType::Flags)&PacketAccessBit))),$/;"	e	enum:Eigen::internal::traits::__anon40
_XprTypeNested	external/Eigen/src/Core/Block.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
_XprTypeNested	external/Eigen/src/Core/CwiseUnaryOp.h	/^  typedef typename remove_reference<XprTypeNested>::type _XprTypeNested;$/;"	t	struct:Eigen::internal::traits
__MPREAL_H__	external/unsupported/test/mpreal/mpreal.h	60;"	d
__USE_GNU	external/unsupported/test/mpreal/dlmalloc.c	1326;"	d	file:
__USE_GNU	external/unsupported/test/mpreal/dlmalloc.c	1328;"	d	file:
__pld	external/Eigen/src/Core/arch/NEON/PacketMath.h	53;"	d
_check_template_params	external/Eigen/src/Core/PlainObjectBase.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::PlainObjectBase
_check_template_params	external/Eigen/src/Geometry/Quaternion.h	/^    static EIGEN_STRONG_INLINE void _check_template_params()$/;"	f	class:Eigen::Quaternion
_compute	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^void HessenbergDecomposition<MatrixType>::_compute(MatrixType& matA, CoeffVectorType& hCoeffs, VectorType& temp)$/;"	f	class:Eigen::HessenbergDecomposition
_data	external/Eigen/src/SparseCore/SparseVector.h	/^    internal::CompressedStorage<Scalar,Index>& _data() const { return m_data; }$/;"	f	class:Eigen::SparseVector
_data	external/Eigen/src/SparseCore/SparseVector.h	/^    internal::CompressedStorage<Scalar,Index>& _data() { return m_data; }$/;"	f	class:Eigen::SparseVector
_data	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    const std::vector<internal::CompressedStorage<Scalar,Index> >& _data() const { return m_data; }$/;"	f	class:Eigen::DynamicSparseMatrix
_data	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    std::vector<internal::CompressedStorage<Scalar,Index> >& _data() { return m_data; }$/;"	f	class:Eigen::DynamicSparseMatrix
_diagPtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* _diagPtr() {$/;"	f	class:Eigen::SkylineMatrix
_diagPtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Scalar* _diagPtr() const {$/;"	f	class:Eigen::SkylineMatrix
_expression	external/Eigen/src/Core/Flagged.h	/^    const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::Flagged
_expression	external/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& _expression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
_expression	external/Eigen/src/Core/VectorwiseOp.h	/^    inline const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::VectorwiseOp
_expression	external/Eigen/src/Eigen2Support/Cwise.h	/^    inline const ExpressionType& _expression() const { return m_matrix; }$/;"	f	class:Eigen::Cwise
_gm_	external/unsupported/test/mpreal/dlmalloc.c	/^static struct malloc_state _gm_;$/;"	v	typeref:struct:malloc_state	file:
_init2	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(Index rows, Index cols, typename internal::enable_if<Base::SizeAtCompileTime!=2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_init2	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _init2(const Scalar& x, const Scalar& y, typename internal::enable_if<Base::SizeAtCompileTime==2,T0>::type* = 0)$/;"	f	class:Eigen::PlainObjectBase
_lowerProfilePtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index* _lowerProfilePtr() {$/;"	f	class:Eigen::SkylineMatrix
_lowerProfilePtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Index* _lowerProfilePtr() const {$/;"	f	class:Eigen::SkylineMatrix
_lowerPtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* _lowerPtr() {$/;"	f	class:Eigen::SkylineMatrix
_lowerPtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Scalar* _lowerPtr() const {$/;"	f	class:Eigen::SkylineMatrix
_resize_to_match	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _resize_to_match(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set_noalias	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& _set_noalias(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
_set_selector	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::false_type&) { _set_noalias(other); }$/;"	f	class:Eigen::PlainObjectBase
_set_selector	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void _set_selector(const OtherDerived& other, const internal::true_type&) { _set_noalias(other.eval()); }$/;"	f	class:Eigen::PlainObjectBase
_solve	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void _solve(const SparseMatrix<RhsScalar,RhsOptions,RhsIndex> &b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::CholmodBase
_solve	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::DiagonalPreconditioner
_solve	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solve	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solve	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteLUT
_solve	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^bool PastixBase<Base>::_solve (const MatrixBase<Rhs> &b, MatrixBase<Dest> &x) const$/;"	f	class:Eigen::PastixBase
_solve	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^bool PardisoImpl<Base>::_solve(const MatrixBase<BDerived> &b, MatrixBase<XDerived>& x) const$/;"	f	class:Eigen::PardisoImpl
_solve	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholesky
_solve	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve(const MatrixBase<Rhs> &b, MatrixBase<Dest> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_solve	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::_solve(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperILU
_solve	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::_solve(const MatrixBase<Rhs> &b, MatrixBase<Dest>& x) const$/;"	f	class:Eigen::SuperLU
_solve	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^bool UmfPackLU<MatrixType>::_solve(const MatrixBase<BDerived> &b, MatrixBase<XDerived> &x) const$/;"	f	class:Eigen::UmfPackLU
_solve	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::GMRES
_solve	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    void _solve(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::IncompleteLU
_solveWithGuess	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  void _solveWithGuess(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::BiCGSTAB
_solveWithGuess	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  void _solveWithGuess(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::ConjugateGradient
_solveWithGuess	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  void _solveWithGuess(const Rhs& b, Dest& x) const$/;"	f	class:Eigen::GMRES
_solve_sparse	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void _solve_sparse(const Rhs& b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::IterativeSolverBase
_solve_sparse	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void _solve_sparse(const Rhs& b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::PastixBase
_solve_sparse	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void _solve_sparse(const Rhs& b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::PardisoImpl
_solve_sparse	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void _solve_sparse(const Rhs& b, SparseMatrix<DestScalar,DestOptions,DestIndex> &dest) const$/;"	f	class:Eigen::SimplicialCholeskyBase
_swap	external/Eigen/src/Core/PlainObjectBase.h	/^    void _swap(DenseBase<OtherDerived> const & other)$/;"	f	class:Eigen::PlainObjectBase
_transformVector	external/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::_transformVector(Vector3 v) const$/;"	f	class:Eigen::QuaternionBase
_transformVector	external/Eigen/src/Geometry/RotationBase.h	/^    inline VectorType _transformVector(const OtherVectorType& v) const$/;"	f	class:Eigen::RotationBase
_upperProfilePtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index* _upperProfilePtr() {$/;"	f	class:Eigen::SkylineMatrix
_upperProfilePtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Index* _upperProfilePtr() const {$/;"	f	class:Eigen::SkylineMatrix
_upperPtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* _upperPtr() {$/;"	f	class:Eigen::SkylineMatrix
_upperPtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline const Scalar* _upperPtr() const {$/;"	f	class:Eigen::SkylineMatrix
_x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double _x[11];$/;"	m	struct:MGH09_functor	file:
_x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double _x[37];$/;"	m	struct:thurber_functor	file:
_x	external/unsupported/test/NonLinearOptimization.cpp	/^const double MGH09_functor::_x[11] = { 4., 2., 1., 5.E-1 , 2.5E-01, 1.670000E-01, 1.250000E-01,  1.E-01, 8.330000E-02, 7.140000E-02, 6.250000E-02 };$/;"	m	class:MGH09_functor	file:
_x	external/unsupported/test/NonLinearOptimization.cpp	/^const double thurber_functor::_x[37] = { -3.067E0, -2.981E0, -2.921E0, -2.912E0, -2.840E0, -2.797E0, -2.702E0, -2.699E0, -2.633E0, -2.481E0, -2.363E0, -2.322E0, -1.501E0, -1.460E0, -1.274E0, -1.212E0, -1.100E0, -1.046E0, -0.915E0, -0.714E0, -0.566E0, -0.545E0, -0.400E0, -0.309E0, -0.109E0, -0.103E0, 0.010E0, 0.119E0, 0.377E0, 0.790E0, 0.963E0, 1.006E0, 1.115E0, 1.572E0, 1.841E0, 2.047E0, 2.200E0 };$/;"	m	class:thurber_functor	file:
_y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double _y[37];$/;"	m	struct:thurber_functor	file:
_y	external/unsupported/test/NonLinearOptimization.cpp	/^const double thurber_functor::_y[37] = { 80.574E0, 84.248E0, 87.264E0, 87.195E0, 89.076E0, 89.608E0, 89.868E0, 90.101E0, 92.405E0, 95.854E0, 100.696E0, 101.060E0, 401.672E0, 390.724E0, 567.534E0, 635.316E0, 733.054E0, 759.087E0, 894.206E0, 990.785E0, 1090.109E0, 1080.914E0, 1122.643E0, 1178.351E0, 1260.531E0, 1273.514E0, 1288.339E0, 1327.543E0, 1353.863E0, 1414.509E0, 1425.208E0, 1421.384E0, 1442.962E0, 1464.350E0, 1468.705E0, 1447.894E0, 1457.628E0};$/;"	m	class:thurber_functor	file:
a	external/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	m	struct:Eigen::internal::has_none
a	external/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	m	struct:Eigen::internal::has_std_result_type
a	external/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	m	struct:Eigen::internal::has_tr1_result
a	external/Eigen/src/SVD/JacobiSVD.h	/^  enum { a = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon397
aatfl	external/SuiteSparse/Include/cholmod_core.h	/^    double aatfl ;	    \/* # of flops to compute A(:,f)*A(:,f)' *\/$/;"	m	struct:cholmod_common_struct
abs	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(abs, Scalar) abs(const Scalar& x)$/;"	f	namespace:Eigen::internal
abs	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::abs() const$/;"	f	class:Eigen::Cwise
abs	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs() const$/;"	f
abs	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal abs(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
abs2	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(abs2, Scalar) abs2(const Scalar& x)$/;"	f	namespace:Eigen::internal
abs2	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::abs2() const$/;"	f	class:Eigen::Cwise
abs2	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^abs2() const$/;"	f
abs2_impl	external/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl$/;"	s	namespace:Eigen::internal
abs2_impl	external/Eigen/src/Core/MathFunctions.h	/^struct abs2_impl<std::complex<RealScalar> >$/;"	s	namespace:Eigen::internal
abs2_retval	external/Eigen/src/Core/MathFunctions.h	/^struct abs2_retval$/;"	s	namespace:Eigen::internal
absDeterminant	external/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
absDeterminant	external/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
absDeterminant	external/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::absDeterminant() const$/;"	f	class:Eigen::HouseholderQR
absDiagIndex	external/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index absDiagIndex() const { return m_index.value()>0 ? m_index.value() : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
absDistance	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Scalar absDistance(const VectorType& p) const { return ei_abs(signedDistance(p)); }$/;"	f	class:Eigen::Hyperplane
absDistance	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar absDistance(const VectorType& p) const { return internal::abs(signedDistance(p)); }$/;"	f	class:Eigen::Hyperplane
absGreatestRealRoot	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& absGreatestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
absSmallestRealRoot	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& absSmallestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
abs_impl	external/Eigen/src/Core/MathFunctions.h	/^struct abs_impl$/;"	s	namespace:Eigen::internal
abs_retval	external/Eigen/src/Core/MathFunctions.h	/^struct abs_retval$/;"	s	namespace:Eigen::internal
absolute2relative_map_	OptApp.h	/^	std::vector< int > absolute2relative_map_;$/;"	m	class:COptApp
acc	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const AccPacket& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const DoublePacket& c, const ResPacket& alpha, ResPacket& r) const$/;"	f	class:Eigen::internal::gebp_traits
acc	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void acc(const Scalar& c, const Scalar& alpha, Scalar& r) const { r += alpha * c; }$/;"	f	class:Eigen::internal::gebp_traits
accessors_level	external/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct accessors_level$/;"	s	namespace:Eigen::internal
acos	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^acos() const$/;"	f
acos	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acos (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
acosh	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acosh  (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
acot	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acot (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
acoth	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acoth (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
acsc	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acsc (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
acsch	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal acsch (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
actred	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar actred, prered;$/;"	m	class:Eigen::HybridNonLinearSolver
actred	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
actual_df	external/unsupported/test/NumericalDiff.cpp	/^    int actual_df(const VectorXd &x, MatrixXd &fjac) const$/;"	f	struct:my_functor
addTo	external/Eigen/src/Core/DiagonalMatrix.h	/^    void addTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::DiagonalBase
addTo	external/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void addTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
addTo	external/Eigen/src/Core/ProductBase.h	/^    inline void addTo(Dest& dst) const { scaleAndAddTo(dst, Scalar(1)); }$/;"	f	class:Eigen::ScaledProduct
addTo	external/Eigen/src/Core/ProductBase.h	/^    inline void addTo(Dest& dst) const { scaleAndAddTo(dst,Scalar(1)); }$/;"	f	class:Eigen::ProductBase
add_const	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	s	namespace:Eigen::internal
add_const	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	s	namespace:Eigen::internal
add_const_on_value_type_if_arithmetic	external/Eigen/src/Core/DenseCoeffsBase.h	/^template<typename T> struct add_const_on_value_type_if_arithmetic$/;"	s	namespace:Eigen::internal
add_segment	external/unsupported/test/mpreal/dlmalloc.c	/^static void add_segment(mstate m, char* tbase, size_t tsize, flag_t mmapped) {$/;"	f	file:
address	external/Eigen/src/Core/util/Memory.h	/^    const_pointer address( const_reference value ) const$/;"	f	class:Eigen::aligned_allocator
address	external/Eigen/src/Core/util/Memory.h	/^    pointer address( reference value ) const$/;"	f	class:Eigen::aligned_allocator
adjoint	external/Eigen/src/Core/Transpose.h	/^MatrixBase<Derived>::adjoint() const$/;"	f	class:Eigen::MatrixBase
adjoint	external/Eigen/src/Core/TriangularMatrix.h	/^    inline const TriangularView<const typename MatrixType::AdjointReturnType,TransposeMode> adjoint() const$/;"	f	class:Eigen::TriangularView
adjoint	external/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType adjoint() const$/;"	f	class:Eigen::HouseholderSequence
adjoint	external/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation adjoint() const { return JacobiRotation(internal::conj(m_c), -m_s); }$/;"	f	class:Eigen::JacobiRotation
adjoint	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const AdjointReturnType adjoint() const { return transpose(); }$/;"	f	class:Eigen::SparseMatrixBase
adjointInPlace	external/Eigen/src/Core/Transpose.h	/^inline void MatrixBase<Derived>::adjointInPlace()$/;"	f	class:Eigen::MatrixBase
adolc_forward_jacobian	external/unsupported/test/forward_adolc.cpp	/^template<typename Func> void adolc_forward_jacobian(const Func& f)$/;"	f
affine	external/Eigen/src/Geometry/Transform.h	/^  inline AffinePart affine() { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
affine	external/Eigen/src/Geometry/Transform.h	/^  inline ConstAffinePart affine() const { return take_affine_part::run(m_matrix); }$/;"	f	class:Eigen::Transform
aggressive	external/SuiteSparse/Include/cholmod_core.h	/^	int aggressive ;    \/* Aggresive absorption in AMD, COLAMD, SYMAMD,$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
agm	external/unsupported/test/mpreal/mpreal.cpp	/^const mpreal agm (const mpreal& v1, const mpreal& v2, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
ai	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal ai(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
align_as_chunk	external/unsupported/test/mpreal/dlmalloc.c	2095;"	d	file:
align_offset	external/unsupported/test/mpreal/dlmalloc.c	1463;"	d	file:
aligned_allocator	external/Eigen/src/Core/util/Memory.h	/^    aligned_allocator( const aligned_allocator& )$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	external/Eigen/src/Core/util/Memory.h	/^    aligned_allocator( const aligned_allocator<U>& )$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	external/Eigen/src/Core/util/Memory.h	/^    aligned_allocator()$/;"	f	class:Eigen::aligned_allocator
aligned_allocator	external/Eigen/src/Core/util/Memory.h	/^class aligned_allocator$/;"	c	namespace:Eigen
aligned_allocator_indirection	external/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	external/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<T>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	external/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const EIGEN_ALIGNED_ALLOCATOR<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	external/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection& ) : EIGEN_ALIGNED_ALLOCATOR<T>() {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	external/Eigen/src/StlSupport/details.h	/^    aligned_allocator_indirection(const aligned_allocator_indirection<U>& ) {}$/;"	f	class:Eigen::aligned_allocator_indirection
aligned_allocator_indirection	external/Eigen/src/StlSupport/details.h	/^  class aligned_allocator_indirection : public EIGEN_ALIGNED_ALLOCATOR<T>$/;"	c	namespace:Eigen
aligned_delete	external/Eigen/src/Core/util/Memory.h	/^template<typename T> inline void aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
aligned_free	external/Eigen/src/Core/util/Memory.h	/^inline void aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
aligned_malloc	external/Eigen/src/Core/util/Memory.h	/^inline void* aligned_malloc(size_t size)$/;"	f	namespace:Eigen::internal
aligned_new	external/Eigen/src/Core/util/Memory.h	/^template<typename T> inline T* aligned_new(size_t size)$/;"	f	namespace:Eigen::internal
aligned_realloc	external/Eigen/src/Core/util/Memory.h	/^inline void* aligned_realloc(void *ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
aligned_stack_memory_handler	external/Eigen/src/Core/util/Memory.h	/^    aligned_stack_memory_handler(T* ptr, size_t size, bool dealloc)$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
aligned_stack_memory_handler	external/Eigen/src/Core/util/Memory.h	/^template<typename T> class aligned_stack_memory_handler$/;"	c	namespace:Eigen::internal
alignedvector3	external/unsupported/test/alignedvector3.cpp	/^void alignedvector3()$/;"	f
alignment	external/Eigen/src/Core/Redux.h	/^    alignment = (Derived::Flags & AlignedBit) ? Aligned : Unaligned$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon175
all	external/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::all() const$/;"	f	class:Eigen::DenseBase
all	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_all>::Type all() const$/;"	f	class:Eigen::VectorwiseOp
all_unroller	external/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller$/;"	s	namespace:Eigen::internal
all_unroller	external/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, 1>$/;"	s	namespace:Eigen::internal
all_unroller	external/Eigen/src/Core/BooleanRedux.h	/^struct all_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
allocate	external/Eigen/src/Core/util/Memory.h	/^    pointer allocate( size_type num, const void* hint = 0 )$/;"	f	class:Eigen::aligned_allocator
allocate	external/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	external/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	external/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	external/Eigen/src/SVD/JacobiSVD.h	/^  void allocate(const JacobiSVD<MatrixType, QRPreconditioner>&) {}$/;"	f	class:Eigen::internal::qr_preconditioner_impl
allocate	external/Eigen/src/SVD/JacobiSVD.h	/^void JacobiSVD<MatrixType, QRPreconditioner>::allocate(Index rows, Index cols, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
allocateA	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateA() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateA	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateA()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateAll() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateAll	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateAll()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateB() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateB	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateB()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateW	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline void allocateW() {}$/;"	f	class:Eigen::internal::gemm_blocking_space
allocateW	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    void allocateW()$/;"	f	class:Eigen::internal::gemm_blocking_space
allocatedSize	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline size_t allocatedSize() const { return m_allocatedSize; }$/;"	f	class:Eigen::internal::CompressedStorage
allocatedSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index allocatedSize() const {$/;"	f	class:Eigen::SkylineStorage
alpha	external/Eigen/src/Core/ProductBase.h	/^    const Scalar& alpha() const { return m_alpha; }$/;"	f	class:Eigen::ScaledProduct
always_void	external/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	s	namespace:Eigen::internal
amd_flip	external/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_flip(const T& i) { return -i-2; }$/;"	f	namespace:Eigen::internal
amd_mark	external/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline void amd_mark(const T0* w, const T1& j) { return w[j] = amd_flip(w[j]); }$/;"	f	namespace:Eigen::internal
amd_marked	external/Eigen/src/OrderingMethods/Amd.h	/^template<typename T0, typename T1> inline bool amd_marked(const T0* w, const T1& j) { return w[j]<0; }$/;"	f	namespace:Eigen::internal
amd_unflip	external/Eigen/src/OrderingMethods/Amd.h	/^template<typename T> inline T amd_unflip(const T& i) { return i<0 ? amd_flip(i) : i; }$/;"	f	namespace:Eigen::internal
analyzePattern	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
analyzePattern	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& analyzePattern(const MatType& )$/;"	f	class:Eigen::DiagonalPreconditioner
analyzePattern	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& analyzePattern(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
analyzePattern	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::analyzePattern(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
analyzePattern	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& analyzePattern(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
analyzePattern	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
analyzePattern	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
analyzePattern	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
analyzePattern	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::analyzePattern(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
analyzePattern	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
analyzePattern	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
analyzePattern	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
analyzePattern	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
analyzePattern	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void analyzePattern(const MatrixType& a, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
analyzePattern	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& \/*matrix*\/)$/;"	f	class:Eigen::SuperLUBase
analyzePattern	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperILU
analyzePattern	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLU
analyzePattern	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void analyzePattern(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
analyzePattern_preordered	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^void SimplicialCholeskyBase<Derived>::analyzePattern_preordered(const CholMatrixType& ap, bool doLDLT)$/;"	f	class:Eigen::SimplicialCholeskyBase
angle	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	external/Eigen/src/Geometry/AngleAxis.h	/^  Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	external/Eigen/src/Geometry/AngleAxis.h	/^  Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::AngleAxis
angle	external/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar angle() const { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angle	external/Eigen/src/Geometry/Rotation2D.h	/^  inline Scalar& angle() { return m_angle; }$/;"	f	class:Eigen::Rotation2D
angularDistance	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Scalar Quaternion<Scalar>::angularDistance(const Quaternion& other) const$/;"	f	class:Eigen::Quaternion
angularDistance	external/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::angularDistance(const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
any	external/Eigen/src/Core/BooleanRedux.h	/^inline bool DenseBase<Derived>::any() const$/;"	f	class:Eigen::DenseBase
any	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_any>::Type any() const$/;"	f	class:Eigen::VectorwiseOp
any_unroller	external/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller$/;"	s	namespace:Eigen::internal
any_unroller	external/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, 1>$/;"	s	namespace:Eigen::internal
any_unroller	external/Eigen/src/Core/BooleanRedux.h	/^struct any_unroller<Derived, Dynamic>$/;"	s	namespace:Eigen::internal
anz	external/SuiteSparse/Include/cholmod_core.h	/^    double anz ;	    \/* nonzeros in tril(A) if A is symmetric\/lower,$/;"	m	struct:cholmod_common_struct
append	external/Eigen/src/SparseCore/CompressedStorage.h	/^    void append(const Scalar& v, Index i)$/;"	f	class:Eigen::internal::CompressedStorage
applyHouseholderOnTheLeft	external/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheLeft($/;"	f	class:Eigen::MatrixBase
applyHouseholderOnTheRight	external/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::applyHouseholderOnTheRight($/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	external/Eigen/src/Core/EigenBase.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheLeft	external/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheLeft(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	external/Eigen/src/Core/EigenBase.h	/^inline void MatrixBase<Derived>::applyOnTheRight(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
applyOnTheRight	external/Eigen/src/Jacobi/Jacobi.h	/^inline void MatrixBase<Derived>::applyOnTheRight(Index p, Index q, const JacobiRotation<OtherScalar>& j)$/;"	f	class:Eigen::MatrixBase
applyThisOnTheLeft	external/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheLeft	external/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheLeft(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheLeft	external/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheLeft(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	external/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void applyThisOnTheRight(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
applyThisOnTheRight	external/Eigen/src/Householder/HouseholderSequence.h	/^    inline void applyThisOnTheRight(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
applyThisOnTheRight	external/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename Dest> inline void applyThisOnTheRight(Dest& dst) const$/;"	f	class:Eigen::HouseholderSequence
applyTranspositionOnTheLeft	external/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheLeft(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
applyTranspositionOnTheRight	external/Eigen/src/Core/PermutationMatrix.h	/^    Derived& applyTranspositionOnTheRight(Index i, Index j)$/;"	f	class:Eigen::PermutationBase
apply_block_householder_on_the_left	external/Eigen/src/Householder/BlockHouseholder.h	/^void apply_block_householder_on_the_left(MatrixType& mat, const VectorsType& vectors, const CoeffsType& hCoeffs)$/;"	f	namespace:Eigen::internal
apply_rotation_in_the_plane	external/Eigen/src/Jacobi/Jacobi.h	/^void \/*EIGEN_DONT_INLINE*\/ apply_rotation_in_the_plane(VectorX& _x, VectorY& _y, const JacobiRotation<OtherScalar>& j)$/;"	f	namespace:Eigen::internal
arena	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE arena;    \/* non-mmapped space allocated from system *\/$/;"	m	struct:mallinfo	file:
arena	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE arena;    \/* non-mmapped space allocated from system *\/$/;"	m	struct:mallinfo
array	external/Eigen/src/Core/ArrayBase.h	/^    ArrayBase<Derived>& array() { return *this; }$/;"	f	class:Eigen::ArrayBase
array	external/Eigen/src/Core/ArrayBase.h	/^    const ArrayBase<Derived>& array() const { return *this; }$/;"	f	class:Eigen::ArrayBase
array	external/Eigen/src/Core/DenseStorage.h	/^  EIGEN_USER_ALIGN16 T array[1];$/;"	m	struct:Eigen::internal::plain_array
array	external/Eigen/src/Core/DenseStorage.h	/^  EIGEN_USER_ALIGN16 T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	external/Eigen/src/Core/DenseStorage.h	/^  T array[Size];$/;"	m	struct:Eigen::internal::plain_array
array	external/Eigen/src/Core/MatrixBase.h	/^    ArrayWrapper<Derived> array() { return derived(); }$/;"	f	class:Eigen::MatrixBase
array	external/Eigen/src/Core/MatrixBase.h	/^    const ArrayWrapper<const Derived> array() const { return derived(); }$/;"	f	class:Eigen::MatrixBase
asDiagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^MatrixBase<Derived>::asDiagonal() const$/;"	f	class:Eigen::MatrixBase
asPermutation	external/Eigen/src/Core/PermutationMatrix.h	/^const PermutationWrapper<const Derived> MatrixBase<Derived>::asPermutation() const$/;"	f	class:Eigen::MatrixBase
asSluMatrix	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^SluMatrix asSluMatrix(MatrixType& mat)$/;"	f	namespace:Eigen::internal
asec	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asec (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
asech	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asech (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
asin	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^asin() const$/;"	f
asin	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asin (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
asinh	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal asinh  (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
assert	external/unsupported/test/mpreal/dlmalloc.c	1303;"	d	file:
assert	external/unsupported/test/mpreal/dlmalloc.c	1304;"	d	file:
assert	external/unsupported/test/mpreal/dlmalloc.c	1310;"	d	file:
assign	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& assign(const OtherDerived& other)$/;"	f	class:Eigen::SparseMatrixBase
assign	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DONT_INLINE SparseVector& assign(const SparseMatrixBase<OtherDerived>& _other)$/;"	f	class:Eigen::SparseVector
assignGeneric	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline void assignGeneric(const OtherDerived& other)$/;"	f	class:Eigen::SparseMatrixBase
assignGeneric	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline void assignGeneric(const OtherDerived& other) {$/;"	f	class:Eigen::SkylineMatrixBase
assignProduct	external/Eigen/src/Core/PermutationMatrix.h	/^    void assignProduct(const Lhs& lhs, const Rhs& rhs)$/;"	f	class:Eigen::PermutationBase
assignProduct	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^TriangularView<MatrixType,UpLo>& TriangularView<MatrixType,UpLo>::assignProduct(const ProductBase<ProductDerived, _Lhs,_Rhs>& prod, const Scalar& alpha)$/;"	f	class:Eigen::TriangularView
assignTranspose	external/Eigen/src/Core/PermutationMatrix.h	/^    void assignTranspose(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
assign_DefaultTraversal_CompleteUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
assign_DefaultTraversal_CompleteUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_CompleteUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_DefaultTraversal_InnerUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_InnerUnrolling$/;"	s	namespace:Eigen::internal
assign_DefaultTraversal_InnerUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_DefaultTraversal_InnerUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_LinearTraversal_CompleteUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_LinearTraversal_CompleteUnrolling$/;"	s	namespace:Eigen::internal
assign_LinearTraversal_CompleteUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_LinearTraversal_CompleteUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	external/Eigen/src/Core/util/MKL_support.h	/^inline void assign_conj_scalar_eig2mkl<MKL_Complex16,dcomplex>(MKL_Complex16& mklScalar, const dcomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	external/Eigen/src/Core/util/MKL_support.h	/^inline void assign_conj_scalar_eig2mkl<MKL_Complex8,scomplex>(MKL_Complex8& mklScalar, const scomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_conj_scalar_eig2mkl	external/Eigen/src/Core/util/MKL_support.h	/^static inline void assign_conj_scalar_eig2mkl(MKLType& mklScalar, const EigenType& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, DefaultTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, DefaultTraversal, InnerUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, DefaultTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, InnerUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InnerVectorizedTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, InvalidTraversal, Unrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, CompleteUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, LinearVectorizedTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_impl	external/Eigen/src/Core/Assign.h	/^struct assign_impl<Derived1, Derived2, SliceVectorizedTraversal, NoUnrolling, Version>$/;"	s	namespace:Eigen::internal
assign_innervec_CompleteUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_innervec_CompleteUnrolling$/;"	s	namespace:Eigen::internal
assign_innervec_CompleteUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_innervec_CompleteUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_innervec_InnerUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_innervec_InnerUnrolling$/;"	s	namespace:Eigen::internal
assign_innervec_InnerUnrolling	external/Eigen/src/Core/Assign.h	/^struct assign_innervec_InnerUnrolling<Derived1, Derived2, Stop, Stop>$/;"	s	namespace:Eigen::internal
assign_scalar_eig2mkl	external/Eigen/src/Core/util/MKL_support.h	/^inline void assign_scalar_eig2mkl<MKL_Complex16,dcomplex>(MKL_Complex16& mklScalar, const dcomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_scalar_eig2mkl	external/Eigen/src/Core/util/MKL_support.h	/^inline void assign_scalar_eig2mkl<MKL_Complex8,scomplex>(MKL_Complex8& mklScalar, const scomplex& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_scalar_eig2mkl	external/Eigen/src/Core/util/MKL_support.h	/^static inline void assign_scalar_eig2mkl(MKLType& mklScalar, const EigenType& eigenScalar) {$/;"	f	namespace:Eigen::internal
assign_selector	external/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,false,false> {$/;"	s	namespace:Eigen::internal
assign_selector	external/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,false,true> {$/;"	s	namespace:Eigen::internal
assign_selector	external/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,true,false> {$/;"	s	namespace:Eigen::internal
assign_selector	external/Eigen/src/Core/Assign.h	/^struct assign_selector<Derived,OtherDerived,true,true> {$/;"	s	namespace:Eigen::internal
assign_traits	external/Eigen/src/Core/Assign.h	/^struct assign_traits$/;"	s	namespace:Eigen::internal
at	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar at(Index key, Scalar defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atInRange	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar atInRange(size_t start, size_t end, Index key, Scalar defaultValue = Scalar(0)) const$/;"	f	class:Eigen::internal::CompressedStorage
atWithInsertion	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& atWithInsertion(Index key, Scalar defaultValue = Scalar(0))$/;"	f	class:Eigen::internal::CompressedStorage
atan	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal atan (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
atan2	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(atan2, Scalar) atan2(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
atan2	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^atan2(const AutoDiffScalar<DerTypeA>& a, const AutoDiffScalar<DerTypeB>& b)$/;"	f	namespace:Eigen
atan2	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal atan2 (const mpreal& y, const mpreal& x, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
atan2_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct atan2_default_impl$/;"	s	namespace:Eigen::internal
atan2_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct atan2_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
atan2_impl	external/Eigen/src/Core/MathFunctions.h	/^struct atan2_impl : atan2_default_impl<Scalar, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
atan2_retval	external/Eigen/src/Core/MathFunctions.h	/^struct atan2_retval$/;"	s	namespace:Eigen::internal
atanh	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^typename MatrixType::Scalar MatrixLogarithmAtomic<MatrixType>::atanh(typename MatrixType::Scalar x)$/;"	f	class:Eigen::MatrixLogarithmAtomic
atanh	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal atanh  (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
auto_diff_special_op	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct auto_diff_special_op<_DerType, false>$/;"	s	namespace:Eigen::internal
auto_diff_special_op	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct auto_diff_special_op<_DerType, true>$/;"	s	namespace:Eigen::internal
aux_evalSolver	external/unsupported/test/polynomialsolver.cpp	/^bool aux_evalSolver( const POLYNOMIAL& pols, SOLVER& psolve )$/;"	f
axis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Vector3& axis() { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  const Vector3& axis() const { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	external/Eigen/src/Geometry/AngleAxis.h	/^  Vector3& axis() { return m_axis; }$/;"	f	class:Eigen::AngleAxis
axis	external/Eigen/src/Geometry/AngleAxis.h	/^  const Vector3& axis() const { return m_axis; }$/;"	f	class:Eigen::AngleAxis
b	external/Eigen/src/SVD/JacobiSVD.h	/^         b = MatrixType::RowsAtCompileTime != Dynamic &&$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon397
balance	external/unsupported/Eigen/src/Polynomials/Companion.h	/^void companion<_Scalar,_Deg>::balance()$/;"	f	class:Eigen::internal::companion
balanced	external/unsupported/Eigen/src/Polynomials/Companion.h	/^bool companion<_Scalar,_Deg>::balanced( Scalar colNorm, Scalar rowNorm,$/;"	f	class:Eigen::internal::companion
balancedR	external/unsupported/Eigen/src/Polynomials/Companion.h	/^bool companion<_Scalar,_Deg>::balancedR( Scalar colNorm, Scalar rowNorm,$/;"	f	class:Eigen::internal::companion
base	external/Eigen/src/Core/PlainObjectBase.h	/^    Base& base() { return *static_cast<Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	external/Eigen/src/Core/PlainObjectBase.h	/^    const Base& base() const { return *static_cast<const Base*>(this); }$/;"	f	class:Eigen::PlainObjectBase
base	external/unsupported/test/mpreal/dlmalloc.c	/^  char*        base;             \/* base address *\/$/;"	m	struct:malloc_segment	file:
basisFunctionDerivatives	external/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::basisFunctionDerivatives(Scalar u, DenseIndex order) const$/;"	f	class:Eigen::Spline
basisFunctionDerivativesImpl	external/unsupported/Eigen/src/Splines/Spline.h	/^  void basisFunctionDerivativesImpl(const SplineType& spline, typename SplineType::Scalar u, DenseIndex order, DerivativeType& N_)$/;"	f	namespace:Eigen
basisFunctions	external/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::basisFunctions(Scalar u) const$/;"	f	class:Eigen::Spline
besselj0	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besselj0 (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
besselj1	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besselj1 (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
besseljn	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besseljn (long n, const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
bessely0	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal bessely0 (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
bessely1	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal bessely1 (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
besselyn	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal besselyn (long n, const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
bfly2	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly2( Complex * Fout, const size_t fstride, int m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly3	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly3( Complex * Fout, const size_t fstride, const size_t m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly4	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly4( Complex * Fout, const size_t fstride, const size_t m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly5	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly5( Complex * Fout, const size_t fstride, const size_t m)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
bfly_generic	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void bfly_generic($/;"	f	struct:Eigen::internal::kiss_cpx_fft
bicgstab	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^bool bicgstab(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
bidiagonal	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    const BidiagonalType& bidiagonal() const { return m_bidiagonal; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
bin_find	external/unsupported/test/mpreal/dlmalloc.c	/^static int bin_find(mstate m, mchunkptr x) {$/;"	f	file:
binaryExpr	external/Eigen/src/plugins/CommonCwiseBinaryOps.h	/^binaryExpr(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other, const CustomBinaryOp& func = CustomBinaryOp()) const$/;"	f
binary_result_of_select	external/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef ArgType0 type;};$/;"	s	namespace:Eigen::internal
binary_result_of_select	external/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_std_result_type)>$/;"	s	namespace:Eigen::internal
binary_result_of_select	external/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select<Func, ArgType0, ArgType1, sizeof(has_tr1_result)>$/;"	s	namespace:Eigen::internal
bindex_t	external/unsupported/test/mpreal/dlmalloc.c	/^typedef unsigned int bindex_t;         \/* Described below *\/$/;"	t	file:
binmap_t	external/unsupported/test/mpreal/dlmalloc.c	/^typedef unsigned int binmap_t;         \/* Described below *\/$/;"	t	file:
binom	external/unsupported/test/matrix_exponential.cpp	/^double binom(int n, int k)$/;"	f
bit_for_tree_index	external/unsupported/test/mpreal/dlmalloc.c	2758;"	d	file:
bits2digits	external/unsupported/test/mpreal/mpreal.h	/^inline int bits2digits(mp_prec_t b)$/;"	f	namespace:mpfr
bk	external/unsupported/test/mpreal/dlmalloc.c	/^  struct malloc_chunk* bk;$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
bk	external/unsupported/test/mpreal/dlmalloc.c	/^  struct malloc_tree_chunk* bk;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
blacklist_	OptApp.h	/^	std::unordered_set< int > blacklist_;$/;"	m	class:COptApp
blacklist_pair_num_	OptApp.h	/^	int blacklist_pair_num_;$/;"	m	class:COptApp
blas_data_mapper	external/Eigen/src/Core/util/BlasUtil.h	/^    blas_data_mapper(Scalar* data, Index stride) : m_data(data), m_stride(stride) {}$/;"	f	class:Eigen::internal::blas_data_mapper
blas_data_mapper	external/Eigen/src/Core/util/BlasUtil.h	/^class blas_data_mapper$/;"	c	namespace:Eigen::internal
blas_ok	external/SuiteSparse/Include/cholmod_core.h	/^    int blas_ok ;           \/* FALSE if BLAS int overflow; TRUE otherwise *\/$/;"	m	struct:cholmod_common_struct
blas_traits	external/Eigen/src/Core/Transpose.h	/^struct blas_traits<SelfCwiseBinaryOp<BinOp,NestedXpr,Rhs> >$/;"	s	namespace:Eigen::internal
blas_traits	external/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_conjugate_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	external/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_multiple_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	external/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<CwiseUnaryOp<scalar_opposite_op<Scalar>, NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	external/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<Transpose<NestedXpr> >$/;"	s	namespace:Eigen::internal
blas_traits	external/Eigen/src/Core/util/BlasUtil.h	/^struct blas_traits<const T>$/;"	s	namespace:Eigen::internal
blas_traits	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename XprType> struct blas_traits$/;"	s	namespace:Eigen::internal
block	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, BlockRows, BlockCols> block(Index startRow, Index startCol)$/;"	f
block	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols)$/;"	f
block	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, BlockRows, BlockCols> block(Index startRow, Index startCol) const$/;"	f
block	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> block(Index startRow, Index startCol, Index blockRows, Index blockCols) const$/;"	f
block	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^Block<MatrixType> MatrixFunction<MatrixType,AtomicType,1>::block(MatrixType& A, Index i, Index j)$/;"	f	class:Eigen::MatrixFunction
blockA	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline LhsScalar* blockA() { return m_blockA; }$/;"	f	class:Eigen::internal::level3_blocking
blockB	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline RhsScalar* blockB() { return m_blockB; }$/;"	f	class:Eigen::internal::level3_blocking
blockW	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline RhsScalar* blockW() { return m_blockW; }$/;"	f	class:Eigen::internal::level3_blocking
blocked	external/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE typename MatrixType::Index blocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
blocked	external/Eigen/src/Cholesky/LLT.h	/^  static typename MatrixType::Index blocked(MatrixType& m)$/;"	f	struct:Eigen::internal::llt_inplace
blocked_lu	external/Eigen/src/LU/PartialPivLU.h	/^  static Index blocked_lu(Index rows, Index cols, Scalar* lu_data, Index luStride, PivIndex* row_transpositions, PivIndex& nb_transpositions, Index maxBlockSize=256)$/;"	f	struct:Eigen::internal::partial_lu_impl
blueNorm	external/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::blueNorm() const$/;"	f	class:Eigen::MatrixBase
blueNorm	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_blueNorm,RealScalar>::Type blueNorm() const$/;"	f	class:Eigen::VectorwiseOp
bottomLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomLeftCorner()$/;"	f
bottomLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> bottomLeftCorner(Index cRows, Index cCols)$/;"	f
bottomLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomLeftCorner() const$/;"	f
bottomLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> bottomLeftCorner(Index cRows, Index cCols) const$/;"	f
bottomRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> bottomRightCorner()$/;"	f
bottomRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> bottomRightCorner(Index cRows, Index cCols)$/;"	f
bottomRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> bottomRightCorner() const$/;"	f
bottomRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> bottomRightCorner(Index cRows, Index cCols) const$/;"	f
bottomRows	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr bottomRows(Index n) const$/;"	f
bottomRows	external/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr bottomRows(Index n)$/;"	f
bottomRows	external/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type bottomRows() const$/;"	f
bottomRows	external/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type bottomRows()$/;"	f
bounding_box	external/unsupported/doc/examples/BVH_Example.cpp	/^        Box2d bounding_box(const Vector2d &v) { return Box2d(v, v); } \/\/compute the bounding box of a single point$/;"	f	namespace:Eigen::internal
bounding_box	external/unsupported/test/BVH.cpp	/^template<int Dim> AlignedBox<double, Dim> bounding_box(const Ball<Dim> &b)$/;"	f
bounding_box	external/unsupported/test/BVH.cpp	/^template<typename Scalar, int Dim> AlignedBox<Scalar, Dim> bounding_box(const Matrix<Scalar, Dim, 1> &v) { return AlignedBox<Scalar, Dim>(v); }$/;"	f	namespace:Eigen
boxes	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  VolumeList boxes;$/;"	m	class:Eigen::KdBVH
bruteforce_det3_helper	external/Eigen/src/LU/Determinant.h	/^inline const typename Derived::Scalar bruteforce_det3_helper$/;"	f	namespace:Eigen::internal
bruteforce_det4_helper	external/Eigen/src/LU/Determinant.h	/^const typename Derived::Scalar bruteforce_det4_helper$/;"	f	namespace:Eigen::internal
build	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  void build(VIPairList &objCenters, int from, int to, const VolumeList &objBoxes, int dim)$/;"	f	class:Eigen::KdBVH
c	external/Eigen/src/Jacobi/Jacobi.h	/^    Scalar c() const { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	external/Eigen/src/Jacobi/Jacobi.h	/^    Scalar& c() { return m_c; }$/;"	f	class:Eigen::JacobiRotation
c	external/unsupported/test/mpreal/dlmalloc.c	/^  unsigned int c;$/;"	m	struct:pthread_mlock_t	file:
c	external/unsupported/test/mpreal/dlmalloc.c	/^  unsigned int c;$/;"	m	struct:win32_mlock_t	file:
c_to_fortran_numbering	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void c_to_fortran_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
called_nd	external/SuiteSparse/Include/cholmod_core.h	/^    int called_nd ;	    \/* TRUE if the last call to$/;"	m	struct:cholmod_common_struct
calloc_memory	external/SuiteSparse/Include/SuiteSparse_config.h	/^    void *(*calloc_memory) (size_t, size_t) ;   \/* pointer to calloc *\/$/;"	m	struct:SuiteSparse_config_struct
calloc_memory	external/SuiteSparse/Include/cholmod_core.h	/^    void *(*calloc_memory) (size_t, size_t) ;	\/* pointer to calloc *\/$/;"	m	struct:cholmod_common_struct
calloc_must_clear	external/unsupported/test/mpreal/dlmalloc.c	2168;"	d	file:
calloc_must_clear	external/unsupported/test/mpreal/dlmalloc.c	2170;"	d	file:
calls	external/unsupported/doc/examples/BVH_Example.cpp	/^  int calls;$/;"	m	struct:PointPointMinimizer	file:
calls	external/unsupported/test/BVH.cpp	/^  int calls;$/;"	m	struct:BallPointStuff	file:
cast	external/Eigen/src/Core/MathFunctions.h	/^inline NewType cast(const OldType& x)$/;"	f	namespace:Eigen::internal
cast	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^           AlignedBox<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::AlignedBox
cast	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline typename internal::cast_return_type<AngleAxis,AngleAxis<NewScalarType> >::type cast() const$/;"	f	class:Eigen::AngleAxis
cast	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^           Hyperplane<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::Hyperplane
cast	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^           ParametrizedLine<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::ParametrizedLine
cast	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline typename internal::cast_return_type<Quaternion,Quaternion<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Quaternion
cast	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline typename internal::cast_return_type<Rotation2D,Rotation2D<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Rotation2D
cast	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline typename internal::cast_return_type<Scaling,Scaling<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Scaling
cast	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline typename internal::cast_return_type<Transform,Transform<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Transform
cast	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline typename internal::cast_return_type<Translation,Translation<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Translation
cast	external/Eigen/src/Geometry/AlignedBox.h	/^           AlignedBox<NewScalarType,AmbientDimAtCompileTime> >::type cast() const$/;"	f	class:Eigen::AlignedBox
cast	external/Eigen/src/Geometry/AngleAxis.h	/^  inline typename internal::cast_return_type<AngleAxis,AngleAxis<NewScalarType> >::type cast() const$/;"	f	class:Eigen::AngleAxis
cast	external/Eigen/src/Geometry/Hyperplane.h	/^           Hyperplane<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::Hyperplane
cast	external/Eigen/src/Geometry/ParametrizedLine.h	/^           ParametrizedLine<NewScalarType,AmbientDimAtCompileTime,Options> >::type cast() const$/;"	f	class:Eigen::ParametrizedLine
cast	external/Eigen/src/Geometry/Quaternion.h	/^  inline typename internal::cast_return_type<Derived,Quaternion<NewScalarType> >::type cast() const$/;"	f	class:Eigen::QuaternionBase
cast	external/Eigen/src/Geometry/Rotation2D.h	/^  inline typename internal::cast_return_type<Rotation2D,Rotation2D<NewScalarType> >::type cast() const$/;"	f	class:Eigen::Rotation2D
cast	external/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling<NewScalarType> cast() const$/;"	f	class:Eigen::UniformScaling
cast	external/Eigen/src/Geometry/Transform.h	/^  inline typename internal::cast_return_type<Transform,Transform<NewScalarType,Dim,Mode,Options> >::type cast() const$/;"	f	class:Eigen::Transform
cast	external/Eigen/src/Geometry/Translation.h	/^  inline typename internal::cast_return_type<Translation,Translation<NewScalarType,Dim> >::type cast() const$/;"	f	class:Eigen::Translation
cast	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^cast() const$/;"	f
cast_impl	external/Eigen/src/Core/MathFunctions.h	/^struct cast_impl$/;"	s	namespace:Eigen::internal
cast_to_pointer_type	external/Eigen/src/Core/Map.h	/^    inline PointerType cast_to_pointer_type(PointerArgType ptr) { return const_cast<PointerType>(ptr); }$/;"	f	class:Eigen::Map
cast_to_pointer_type	external/Eigen/src/Core/Map.h	/^    inline PointerType cast_to_pointer_type(PointerArgType ptr) { return ptr; }$/;"	f	class:Eigen::Map
cauchy_max_bound	external/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^typename NumTraits<typename Polynomial::Scalar>::Real cauchy_max_bound( const Polynomial& poly )$/;"	f	namespace:Eigen
cauchy_min_bound	external/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^typename NumTraits<typename Polynomial::Scalar>::Real cauchy_min_bound( const Polynomial& poly )$/;"	f	namespace:Eigen
cbrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cbrt(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
cdiv	external/Eigen/src/Eigenvalues/EigenSolver.h	/^std::complex<Scalar> cdiv(Scalar xr, Scalar xi, Scalar yr, Scalar yi)$/;"	f	namespace:Eigen
ceil	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal ceil(const mpreal& v)$/;"	f	namespace:mpfr
center	external/Eigen/src/Geometry/AlignedBox.h	/^  center() const$/;"	f	class:Eigen::AlignedBox
center	external/unsupported/test/BVH.cpp	/^  VectorType center;$/;"	m	struct:Ball	file:
change_mparam	external/unsupported/test/mpreal/dlmalloc.c	/^static int change_mparam(int param_number, int value) {$/;"	f	file:
checkSanity	external/Eigen/src/Core/MapBase.h	/^    void checkSanity() const$/;"	f	class:Eigen::MapBase
checkTransposeAliasing	external/Eigen/src/Core/Transpose.h	/^void DenseBase<Derived>::checkTransposeAliasing(const OtherDerived& other) const$/;"	f	class:Eigen::DenseBase
checkTransposeAliasing_impl	external/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl$/;"	s	namespace:Eigen::internal
checkTransposeAliasing_impl	external/Eigen/src/Core/Transpose.h	/^struct checkTransposeAliasing_impl<Derived, OtherDerived, false>$/;"	s	namespace:Eigen::internal
check_coordinates	external/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	external/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index , Index ) const {}$/;"	f	class:Eigen::TriangularBase
check_coordinates_internal	external/Eigen/src/Core/TriangularMatrix.h	/^    void check_coordinates_internal(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
check_dimension	external/unsupported/test/kronecker_product.cpp	/^void check_dimension(const MatrixType& ab, const unsigned int rows,  const unsigned int cols)$/;"	f
check_free_chunk	external/unsupported/test/mpreal/dlmalloc.c	2652;"	d	file:
check_free_chunk	external/unsupported/test/mpreal/dlmalloc.c	2660;"	d	file:
check_global_interpolation2d	external/unsupported/test/splines.cpp	/^void check_global_interpolation2d()$/;"	f
check_inuse_chunk	external/unsupported/test/mpreal/dlmalloc.c	2653;"	d	file:
check_inuse_chunk	external/unsupported/test/mpreal/dlmalloc.c	2661;"	d	file:
check_kronecker_product	external/unsupported/test/kronecker_product.cpp	/^void check_kronecker_product(const MatrixType& ab)$/;"	f
check_malloc_state	external/unsupported/test/mpreal/dlmalloc.c	2656;"	d	file:
check_malloc_state	external/unsupported/test/mpreal/dlmalloc.c	2665;"	d	file:
check_malloced_chunk	external/unsupported/test/mpreal/dlmalloc.c	2654;"	d	file:
check_malloced_chunk	external/unsupported/test/mpreal/dlmalloc.c	2663;"	d	file:
check_mmapped_chunk	external/unsupported/test/mpreal/dlmalloc.c	2655;"	d	file:
check_mmapped_chunk	external/unsupported/test/mpreal/dlmalloc.c	2664;"	d	file:
check_range	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::check_range (int t, mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
check_rows_cols_for_overflow	external/Eigen/src/Core/PlainObjectBase.h	/^EIGEN_ALWAYS_INLINE void check_rows_cols_for_overflow(Index rows, Index cols)$/;"	f	namespace:Eigen::internal
check_size_for_overflow	external/Eigen/src/Core/util/Memory.h	/^EIGEN_ALWAYS_INLINE void check_size_for_overflow(size_t size)$/;"	f	namespace:Eigen::internal
check_sparse_kronecker_product	external/unsupported/test/kronecker_product.cpp	/^void check_sparse_kronecker_product(const MatrixType& ab)$/;"	f
check_template_parameters	external/Eigen/src/SparseCore/SparseMatrix.h	/^  static void check_template_parameters()$/;"	f	class:Eigen::SparseMatrix
check_template_params	external/Eigen/src/Geometry/Transform.h	/^    static EIGEN_STRONG_INLINE void check_template_params()$/;"	f	class:Eigen::Transform
check_that_malloc_is_allowed	external/Eigen/src/Core/util/Memory.h	/^inline void check_that_malloc_is_allowed()$/;"	f	namespace:Eigen::internal
check_top_chunk	external/unsupported/test/mpreal/dlmalloc.c	2657;"	d	file:
check_top_chunk	external/unsupported/test/mpreal/dlmalloc.c	2662;"	d	file:
check_transpose_aliasing_compile_time_selector	external/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_compile_time_selector	external/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_compile_time_selector<DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	external/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector$/;"	s	namespace:Eigen::internal
check_transpose_aliasing_run_time_selector	external/Eigen/src/Core/Transpose.h	/^struct check_transpose_aliasing_run_time_selector<Scalar,DestIsTransposed,CwiseBinaryOp<BinOp,DerivedA,DerivedB> >$/;"	s	namespace:Eigen::internal
child	external/unsupported/test/mpreal/dlmalloc.c	/^  struct malloc_tree_chunk* child[2];$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
children	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  std::vector<int> children; \/\/children of x are children[2x] and children[2x+1], indices bigger than boxes.size() index into objects.$/;"	m	class:Eigen::KdBVH
chkder	external/unsupported/Eigen/src/NonLinearOptimization/chkder.h	/^void chkder($/;"	f	namespace:Eigen::internal
chkder_factor	external/unsupported/Eigen/src/NonLinearOptimization/chkder.h	2;"	d
chkder_log10e	external/unsupported/Eigen/src/NonLinearOptimization/chkder.h	1;"	d
cholmod	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_common& cholmod() { return m_cholmod; }$/;"	f	class:Eigen::CholmodBase
cholmod_common	external/SuiteSparse/Include/cholmod_core.h	/^} cholmod_common ;$/;"	t	typeref:struct:cholmod_common_struct
cholmod_common_struct	external/SuiteSparse/Include/cholmod_core.h	/^typedef struct cholmod_common_struct$/;"	s
cholmod_configure_matrix	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^void cholmod_configure_matrix(CholmodType& mat)$/;"	f	namespace:Eigen::internal
cholmod_dense	external/SuiteSparse/Include/cholmod_core.h	/^} cholmod_dense ;$/;"	t	typeref:struct:cholmod_dense_struct
cholmod_dense_struct	external/SuiteSparse/Include/cholmod_core.h	/^typedef struct cholmod_dense_struct$/;"	s
cholmod_dump	external/SuiteSparse/Include/cholmod_internal.h	/^EXTERN int cholmod_dump ;$/;"	v
cholmod_dump_malloc	external/SuiteSparse/Include/cholmod_internal.h	/^EXTERN int cholmod_dump_malloc ;$/;"	v
cholmod_factor	external/SuiteSparse/Include/cholmod_core.h	/^} cholmod_factor ;$/;"	t	typeref:struct:cholmod_factor_struct
cholmod_factor_struct	external/SuiteSparse/Include/cholmod_core.h	/^typedef struct cholmod_factor_struct$/;"	s
cholmod_l_dump	external/SuiteSparse/Include/cholmod_internal.h	/^EXTERN int cholmod_l_dump ;$/;"	v
cholmod_l_dump_malloc	external/SuiteSparse/Include/cholmod_internal.h	/^EXTERN int cholmod_l_dump_malloc ;$/;"	v
cholmod_method_struct	external/SuiteSparse/Include/cholmod_core.h	/^    struct cholmod_method_struct$/;"	s	struct:cholmod_common_struct
cholmod_sparse	external/SuiteSparse/Include/cholmod_core.h	/^} cholmod_sparse ;$/;"	t	typeref:struct:cholmod_sparse_struct
cholmod_sparse_struct	external/SuiteSparse/Include/cholmod_core.h	/^typedef struct cholmod_sparse_struct$/;"	s
cholmod_triplet	external/SuiteSparse/Include/cholmod_core.h	/^} cholmod_triplet ;$/;"	t	typeref:struct:cholmod_triplet_struct
cholmod_triplet_struct	external/SuiteSparse/Include/cholmod_core.h	/^typedef struct cholmod_triplet_struct$/;"	s
chunk2mem	external/unsupported/test/mpreal/dlmalloc.c	2092;"	d	file:
chunk_minus_offset	external/unsupported/test/mpreal/dlmalloc.c	2141;"	d	file:
chunk_plus_offset	external/unsupported/test/mpreal/dlmalloc.c	2140;"	d	file:
chunksize	external/unsupported/test/mpreal/dlmalloc.c	2135;"	d	file:
chwirut2_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    chwirut2_functor(void) : Functor<double>(3,54) {}$/;"	f	struct:chwirut2_functor
chwirut2_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct chwirut2_functor : Functor<double>$/;"	s	file:
cinuse	external/unsupported/test/mpreal/dlmalloc.c	2130;"	d	file:
cj	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<LhsScalar,RhsScalar,ConjLhs,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,ConjLhs,false> cj;$/;"	m	class:Eigen::internal::gebp_traits
cj	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  conj_helper<ResPacket,ResPacket,false,ConjRhs> cj;$/;"	m	class:Eigen::internal::gebp_traits
clamp	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& clamp(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
clamp	external/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& clamp(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
clean	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void clean()$/;"	f	class:Eigen::PastixBase
clear	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void clear() { m_size = 0; }$/;"	f	class:Eigen::internal::CompressedStorage
clear	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void clear() $/;"	f	struct:Eigen::internal::fftw_impl
clear	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  void clear() $/;"	f	struct:Eigen::internal::kissfft_impl
clear	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline void clear() {$/;"	f	class:Eigen::SkylineStorage
clearFactors	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void clearFactors()$/;"	f	class:Eigen::SuperLUBase
clear_pinuse	external/unsupported/test/mpreal/dlmalloc.c	2137;"	d	file:
clear_smallmap	external/unsupported/test/mpreal/dlmalloc.c	2779;"	d	file:
clear_treemap	external/unsupported/test/mpreal/dlmalloc.c	2783;"	d	file:
closed_spline2d	external/unsupported/test/splines.cpp	/^Spline<double, 2, Dynamic> closed_spline2d()$/;"	f
cmpabs	external/unsupported/test/mpreal/mpreal.h	/^inline int cmpabs(const mpreal& a,const mpreal& b)$/;"	f	namespace:mpfr
coeff	external/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeff	external/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeff	external/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ArrayWrapper
coeff	external/Eigen/src/Core/ArrayWrapper.h	/^    inline CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::MatrixWrapper
coeff	external/Eigen/src/Core/Block.h	/^    EIGEN_STRONG_INLINE const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::Block
coeff	external/Eigen/src/Core/Block.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::Block
coeff	external/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
coeff	external/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
coeff	external/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CwiseNullaryOp
coeff	external/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index rows, Index cols) const$/;"	f	class:Eigen::CwiseNullaryOp
coeff	external/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
coeff	external/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
coeff	external/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeff	external/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeff	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	external/Eigen/src/Core/DenseCoeffsBase.h	/^    coeff(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
coeff	external/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::Diagonal
coeff	external/Eigen/src/Core/Diagonal.h	/^    inline CoeffReturnType coeff(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeff	external/Eigen/src/Core/DiagonalProduct.h	/^    const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::DiagonalProduct
coeff	external/Eigen/src/Core/Flagged.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::Flagged
coeff	external/Eigen/src/Core/Flagged.h	/^    inline CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::Flagged
coeff	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
coeff	external/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index index) const$/;"	f	class:Eigen::MapBase
coeff	external/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeff(Index row, Index col) const$/;"	f	class:Eigen::MapBase
coeff	external/Eigen/src/Core/NestByValue.h	/^    inline const CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::NestByValue
coeff	external/Eigen/src/Core/NestByValue.h	/^    inline const CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
coeff	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeff	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeff(Index row, Index col) const$/;"	f	class:Eigen::PlainObjectBase
coeff	external/Eigen/src/Core/ProductBase.h	/^    typename Base::CoeffReturnType coeff(Index i) const$/;"	f	class:Eigen::ProductBase
coeff	external/Eigen/src/Core/ProductBase.h	/^    typename Base::CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::ProductBase
coeff	external/Eigen/src/Core/Replicate.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::Replicate
coeff	external/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	external/Eigen/src/Core/ReturnByValue.h	/^    const Unusable& coeff(Index,Index) const { return *reinterpret_cast<const Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeff	external/Eigen/src/Core/Reverse.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::Reverse
coeff	external/Eigen/src/Core/Reverse.h	/^    inline CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::Reverse
coeff	external/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i) const$/;"	f	class:Eigen::Select
coeff	external/Eigen/src/Core/Select.h	/^    const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::Select
coeff	external/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SelfAdjointView
coeff	external/Eigen/src/Core/Transpose.h	/^    inline CoeffReturnType coeff(Index index) const$/;"	f	class:Eigen::TransposeImpl
coeff	external/Eigen/src/Core/Transpose.h	/^    inline CoeffReturnType coeff(Index row, Index col) const$/;"	f	class:Eigen::TransposeImpl
coeff	external/Eigen/src/Core/Transpositions.h	/^    inline const Index& coeff(Index i) const { return indices().coeff(i); }$/;"	f	class:Eigen::TranspositionsBase
coeff	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const  { return derived().coeff(row,col); }$/;"	f	class:Eigen::TriangularBase
coeff	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::TriangularView
coeff	external/Eigen/src/Core/VectorwiseOp.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index i, Index j) const$/;"	f	class:Eigen::PartialReduxExpr
coeff	external/Eigen/src/Core/VectorwiseOp.h	/^    const Scalar coeff(Index index) const$/;"	f	class:Eigen::PartialReduxExpr
coeff	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index index) const$/;"	f	class:Eigen::CoeffBasedProduct
coeff	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::CoeffBasedProduct
coeff	external/Eigen/src/Eigen2Support/Minor.h	/^    inline const Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::Minor
coeff	external/Eigen/src/Geometry/Homogeneous.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::Homogeneous
coeff	external/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_Index>::coeff(_Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeff	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::MappedSparseMatrix
coeff	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseMatrix
coeff	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index i) const { return m_data.at(i); }$/;"	f	class:Eigen::SparseVector
coeff	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::SparseVector
coeff	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeff(Index row, Index col) const {$/;"	f	class:Eigen::SkylineMatrix
coeff	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar coeff(Index row, Index col) const$/;"	f	class:Eigen::DynamicSparseMatrix
coeffByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType coeffByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
coeffDiag	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeffDiag(Index idx) const {$/;"	f	class:Eigen::SkylineMatrix
coeffExistLower	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline bool coeffExistLower(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffExistUpper	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline bool coeffExistUpper(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffLower	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeffLower(Index row, Index col) const {$/;"	f	class:Eigen::SkylineMatrix
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ArrayWrapper
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::MatrixWrapper
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::ArrayWrapper
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MatrixWrapper
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::ArrayWrapper
coeffRef	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::MatrixWrapper
coeffRef	external/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::Block
coeffRef	external/Eigen/src/Core/Block.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::Block
coeffRef	external/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::Block
coeffRef	external/Eigen/src/Core/Block.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::Block
coeffRef	external/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeffRef	external/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::CwiseUnaryViewImpl
coeffRef	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	external/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRef(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRef	external/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::Diagonal
coeffRef	external/Eigen/src/Core/Diagonal.h	/^    inline Scalar& coeffRef(Index row, Index)$/;"	f	class:Eigen::Diagonal
coeffRef	external/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::Diagonal
coeffRef	external/Eigen/src/Core/Diagonal.h	/^    inline const Scalar& coeffRef(Index row, Index) const$/;"	f	class:Eigen::Diagonal
coeffRef	external/Eigen/src/Core/Flagged.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::Flagged
coeffRef	external/Eigen/src/Core/Flagged.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::Flagged
coeffRef	external/Eigen/src/Core/Flagged.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::Flagged
coeffRef	external/Eigen/src/Core/Flagged.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::Flagged
coeffRef	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::ForceAlignedAccess
coeffRef	external/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index index)$/;"	f	class:Eigen::MapBase
coeffRef	external/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MapBase
coeffRef	external/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::MapBase
coeffRef	external/Eigen/src/Core/MapBase.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::MapBase
coeffRef	external/Eigen/src/Core/NestByValue.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::NestByValue
coeffRef	external/Eigen/src/Core/NestByValue.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::NestByValue
coeffRef	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index index)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::PlainObjectBase
coeffRef	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::PlainObjectBase
coeffRef	external/Eigen/src/Core/ProductBase.h	/^    const Scalar& coeffRef(Index i) const$/;"	f	class:Eigen::ProductBase
coeffRef	external/Eigen/src/Core/ProductBase.h	/^    const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::ProductBase
coeffRef	external/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	external/Eigen/src/Core/ReturnByValue.h	/^    Unusable& coeffRef(Index,Index) { return *reinterpret_cast<Unusable*>(this); }$/;"	f	class:Eigen::ReturnByValue
coeffRef	external/Eigen/src/Core/Reverse.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::Reverse
coeffRef	external/Eigen/src/Core/Reverse.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::Reverse
coeffRef	external/Eigen/src/Core/SelfAdjointView.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SelfAdjointView
coeffRef	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::SelfCwiseBinaryOp
coeffRef	external/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::SwapWrapper
coeffRef	external/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index index)$/;"	f	class:Eigen::SwapWrapper
coeffRef	external/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::SwapWrapper
coeffRef	external/Eigen/src/Core/Swap.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SwapWrapper
coeffRef	external/Eigen/src/Core/Transpose.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index index)$/;"	f	class:Eigen::TransposeImpl
coeffRef	external/Eigen/src/Core/Transpose.h	/^    inline ScalarWithConstIfNotLvalue& coeffRef(Index row, Index col)$/;"	f	class:Eigen::TransposeImpl
coeffRef	external/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index index) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	external/Eigen/src/Core/Transpose.h	/^    inline const Scalar& coeffRef(Index row, Index col) const$/;"	f	class:Eigen::TransposeImpl
coeffRef	external/Eigen/src/Core/Transpositions.h	/^    inline Index& coeffRef(Index i) { return indices().coeffRef(i); }$/;"	f	class:Eigen::TranspositionsBase
coeffRef	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col) { return derived().coeffRef(row,col); }$/;"	f	class:Eigen::TriangularBase
coeffRef	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::TriangularView
coeffRef	external/Eigen/src/Eigen2Support/Minor.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::Minor
coeffRef	external/Eigen/src/SparseCore/AmbiVector.h	/^_Scalar& AmbiVector<_Scalar,_Index>::coeffRef(_Index i)$/;"	f	class:Eigen::internal::AmbiVector
coeffRef	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::MappedSparseMatrix
coeffRef	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
coeffRef	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index i)$/;"	f	class:Eigen::SparseVector
coeffRef	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::SparseVector
coeffRef	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    CoeffType coeffRef(Index i) { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
coeffRef	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    const CoeffType coeffRef(Index i) const { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
coeffRef	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffRef	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& coeffRef(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
coeffRefByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    coeffRefByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::DenseCoeffsBase
coeffRefDiag	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRefDiag(Index idx) {$/;"	f	class:Eigen::SkylineMatrix
coeffRefLower	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRefLower(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffRefUpper	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& coeffRefUpper(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
coeffSeparator	external/Eigen/src/Core/IO.h	/^  std::string coeffSeparator;$/;"	m	struct:Eigen::IOFormat
coeffUpper	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar coeffUpper(Index row, Index col) const {$/;"	f	class:Eigen::SkylineMatrix
coeff_visitor	external/Eigen/src/Core/Visitor.h	/^struct coeff_visitor$/;"	s	namespace:Eigen::internal
coeffs	external/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	external/Eigen/src/Core/BandMatrix.h	/^    inline CoefficientsType& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	external/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
coeffs	external/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrix
coeffs	external/Eigen/src/Core/BandMatrix.h	/^    inline const CoefficientsType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::internal::BandMatrixWrapper
coeffs	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Quaternion
coeffs	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Quaternion
coeffs	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  VectorType& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Scaling
coeffs	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  const VectorType& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Scaling
coeffs	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	external/Eigen/src/Geometry/Hyperplane.h	/^  inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Hyperplane
coeffs	external/Eigen/src/Geometry/Quaternion.h	/^    inline Coefficients& coeffs() { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	external/Eigen/src/Geometry/Quaternion.h	/^    inline const Coefficients& coeffs() const { return m_coeffs; }$/;"	f	class:Eigen::Map
coeffs	external/Eigen/src/Geometry/Quaternion.h	/^    inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Map
coeffs	external/Eigen/src/Geometry/Quaternion.h	/^  inline Coefficients& coeffs() { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	external/Eigen/src/Geometry/Quaternion.h	/^  inline const Coefficients& coeffs() const { return m_coeffs;}$/;"	f	class:Eigen::Quaternion
coeffs	external/Eigen/src/Geometry/Quaternion.h	/^  inline const typename internal::traits<Derived>::Coefficients& coeffs() const { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
coeffs	external/Eigen/src/Geometry/Quaternion.h	/^  inline typename internal::traits<Derived>::Coefficients& coeffs() { return derived().coeffs(); }$/;"	f	class:Eigen::QuaternionBase
cofactor_3x3	external/Eigen/src/LU/Inverse.h	/^inline typename MatrixType::Scalar cofactor_3x3(const MatrixType& m)$/;"	f	namespace:Eigen::internal
cofactor_4x4	external/Eigen/src/LU/Inverse.h	/^inline typename MatrixType::Scalar cofactor_4x4(const MatrixType& matrix)$/;"	f	namespace:Eigen::internal
col	external/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,Dynamic,1> col(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
col	external/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::all_unroller::__anon23
col	external/Eigen/src/Core/BooleanRedux.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::any_unroller::__anon24
col	external/Eigen/src/Core/SelfAdjointView.h	/^    col = (UnrollCount-1) \/ Derived1::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon185
col	external/Eigen/src/Core/SelfAdjointView.h	/^    col = (UnrollCount-1) \/ Derived1::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon186
col	external/Eigen/src/Core/TriangularMatrix.h	/^    col = (UnrollCount-1) \/ Derived1::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon198
col	external/Eigen/src/Core/Visitor.h	/^    col = (UnrollCount-1) \/ Derived::RowsAtCompileTime,$/;"	e	enum:Eigen::internal::visitor_impl::__anon205
col	external/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
col	external/Eigen/src/SparseCore/CoreIterators.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::DenseBase::InnerIterator
col	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
col	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
col	external/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index col() const { return IsRowMajor ? this->index() : m_outer; }$/;"	f	class:Eigen::SparseInnerVectorSet::InnerIterator
col	external/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index col() const { return IsRowMajor ? this->index() : m_outer; }$/;"	f	class:Eigen::SparseInnerVectorSet::ReverseInnerIterator
col	external/Eigen/src/SparseCore/SparseBlock.h	/^SparseInnerVectorSet<Derived,1> SparseMatrixBase<Derived>::col(Index i)$/;"	f	class:Eigen::SparseMatrixBase
col	external/Eigen/src/SparseCore/SparseBlock.h	/^const SparseInnerVectorSet<Derived,1> SparseMatrixBase<Derived>::col(Index i) const$/;"	f	class:Eigen::SparseMatrixBase
col	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return Lhs::IsRowMajor ? index() : m_lhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
col	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_lhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
col	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index col() const { return m_rhsIter.col(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
col	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Index col() const { return Transpose ? m_outer : Base::row(); }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
col	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index col() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
col	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
col	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? index() : m_outer; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
col	external/Eigen/src/SparseCore/SparseTranspose.h	/^    inline typename TransposeImpl<MatrixType,Sparse>::Index col() const { return Base::row(); }$/;"	f	class:Eigen::TransposeImpl::InnerIterator
col	external/Eigen/src/SparseCore/SparseTranspose.h	/^    inline typename TransposeImpl<MatrixType,Sparse>::Index col() const { return Base::row(); }$/;"	f	class:Eigen::TransposeImpl::ReverseInnerIterator
col	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index col() const { return Base::col(); }$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
col	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index col() const { return Base::col(); }$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
col	external/Eigen/src/SparseCore/SparseUtil.h	/^  const Index& col() const { return m_col; }$/;"	f	class:Eigen::Triplet
col	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Index col() const { return IsColVector ? 0 : index(); }$/;"	f	class:Eigen::SparseVector::InnerIterator
col	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Index col() const { return IsColVector ? 0 : index(); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
col	external/Eigen/src/plugins/BlockMethods.h	/^inline ColXpr col(Index i)$/;"	f
col	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstColXpr col(Index i) const$/;"	f
col	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index col() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
col	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index col() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
col	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^        inline Index col() const { return IsRowMajor ? this->index() : m_outer; }$/;"	f	class:Eigen::SparseInnerVectorSet::InnerIterator
col	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? Base::index() : m_outer; }$/;"	f	class:Eigen::DynamicSparseMatrix::InnerIterator
col	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index col() const { return IsRowMajor ? Base::index() : m_outer; }$/;"	f	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
colIndexByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index colIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
colOffset	external/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index colOffset() const { return m_index.value()>0 ? m_index.value() : 0; }$/;"	f	class:Eigen::Diagonal
colPivHouseholderQr	external/Eigen/src/QR/ColPivHouseholderQR.h	/^MatrixBase<Derived>::colPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
colStride	external/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index colStride() const$/;"	f	class:Eigen::DenseCoeffsBase
cols	external/Eigen/src/Cholesky/LDLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LDLT
cols	external/Eigen/src/Cholesky/LLT.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::LLT
cols	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline Index cols() const { return m_cholmodFactor->n; }$/;"	f	class:Eigen::CholmodBase
cols	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ArrayWrapper
cols	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::MatrixWrapper
cols	external/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrix
cols	external/Eigen/src/Core/BandMatrix.h	/^    inline Index cols() const { return m_coeffs.cols(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
cols	external/Eigen/src/Core/Block.h	/^    inline Index cols() const { return m_blockCols.value(); }$/;"	f	class:Eigen::Block
cols	external/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::CwiseBinaryOp
cols	external/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
cols	external/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_xpr.cols(); }$/;"	f	class:Eigen::CwiseUnaryOp
cols	external/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::CwiseUnaryView
cols	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex cols(void) const {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex cols(void) const {return m_cols;}$/;"	f	class:Eigen::DenseStorage
cols	external/Eigen/src/Core/DenseStorage.h	/^    static inline DenseIndex cols(void) {return _Cols;}$/;"	f	class:Eigen::DenseStorage
cols	external/Eigen/src/Core/Diagonal.h	/^    inline Index cols() const { return 1; }$/;"	f	class:Eigen::Diagonal
cols	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index cols() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
cols	external/Eigen/src/Core/DiagonalProduct.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::DiagonalProduct
cols	external/Eigen/src/Core/EigenBase.h	/^  inline Index cols() const { return derived().cols(); }$/;"	f	struct:Eigen::EigenBase
cols	external/Eigen/src/Core/Flagged.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Flagged
cols	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::ForceAlignedAccess
cols	external/Eigen/src/Core/MapBase.h	/^    inline Index cols() const { return m_cols.value(); }$/;"	f	class:Eigen::MapBase
cols	external/Eigen/src/Core/NestByValue.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::NestByValue
cols	external/Eigen/src/Core/PermutationMatrix.h	/^    inline Index cols() const { return indices().size(); }$/;"	f	class:Eigen::PermutationBase
cols	external/Eigen/src/Core/PermutationMatrix.h	/^    inline int cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
cols	external/Eigen/src/Core/PermutationMatrix.h	/^    inline int cols() const { return m_permutation.cols(); }$/;"	f	class:Eigen::Transpose
cols	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_storage.cols(); }$/;"	f	class:Eigen::PlainObjectBase
cols	external/Eigen/src/Core/Product.h	/^    inline Index cols() const { return m_rhs.cols(); }$/;"	f	class:Product
cols	external/Eigen/src/Core/ProductBase.h	/^    inline Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::ProductBase
cols	external/Eigen/src/Core/Replicate.h	/^    inline Index cols() const { return m_matrix.cols() * m_colFactor.value(); }$/;"	f	class:Eigen::Replicate
cols	external/Eigen/src/Core/ReturnByValue.h	/^    inline Index cols() const { return static_cast<const Derived*>(this)->cols(); }$/;"	f	class:Eigen::ReturnByValue
cols	external/Eigen/src/Core/Reverse.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Reverse
cols	external/Eigen/src/Core/Select.h	/^    Index cols() const { return m_condition.cols(); }$/;"	f	class:Eigen::Select
cols	external/Eigen/src/Core/SelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SelfAdjointView
cols	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
cols	external/Eigen/src/Core/SolveTriangular.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
cols	external/Eigen/src/Core/Swap.h	/^    inline Index cols() const { return m_expression.cols(); }$/;"	f	class:Eigen::SwapWrapper
cols	external/Eigen/src/Core/Transpose.h	/^    inline Index cols() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Transpose
cols	external/Eigen/src/Core/Transpositions.h	/^    inline int cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
cols	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::TriangularBase
cols	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::TriangularView
cols	external/Eigen/src/Core/VectorwiseOp.h	/^    Index cols() const { return (Direction==Horizontal ? 1 : m_matrix.cols()); }$/;"	f	class:Eigen::PartialReduxExpr
cols	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::CoeffBasedProduct
cols	external/Eigen/src/Eigen2Support/Minor.h	/^    inline Index cols() const { return m_matrix.cols() - 1; }$/;"	f	class:Eigen::Minor
cols	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index cols() const { return m_hess.packedMatrix().cols(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
cols	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
cols	external/Eigen/src/Geometry/Homogeneous.h	/^    inline Index cols() const { return m_matrix.cols() + (int(Direction)==Horizontal ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
cols	external/Eigen/src/Geometry/Homogeneous.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
cols	external/Eigen/src/Geometry/Homogeneous.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
cols	external/Eigen/src/Householder/HouseholderSequence.h	/^    Index cols() const { return rows(); }$/;"	f	class:Eigen::HouseholderSequence
cols	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index cols() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
cols	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::IncompleteLUT
cols	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index cols() const { return mp_matrix ? mp_matrix->cols() : 0; }$/;"	f	class:Eigen::IterativeSolverBase
cols	external/Eigen/src/LU/FullPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::FullPivLU
cols	external/Eigen/src/LU/Inverse.h	/^  inline Index cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::inverse_impl
cols	external/Eigen/src/LU/PartialPivLU.h	/^    inline Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::PartialPivLU
cols	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PastixBase
cols	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index cols() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
cols	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::ColPivHouseholderQR
cols	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index cols() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
cols	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::FullPivHouseholderQR
cols	external/Eigen/src/QR/HouseholderQR.h	/^    inline Index cols() const { return m_qr.cols(); }$/;"	f	class:Eigen::HouseholderQR
cols	external/Eigen/src/SVD/JacobiSVD.h	/^    inline Index cols() const { return m_cols; }$/;"	f	class:Eigen::JacobiSVD
cols	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
cols	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
cols	external/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::SparseInnerVectorSet
cols	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return Tr ? m_lhs.cols() : m_rhs.cols(); }$/;"	f	class:Eigen::SparseDenseOuterProduct
cols	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::SparseDiagonalProduct
cols	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
cols	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index cols() const { return derived().cols(); }$/;"	f	class:Eigen::SparseMatrixBase
cols	external/Eigen/src/SparseCore/SparsePermutation.h	/^    inline int cols() const { return m_matrix.cols(); }$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
cols	external/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const { return m_rhs.cols(); }$/;"	f	class:Eigen::SparseSparseProduct
cols	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSelfAdjointView
cols	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
cols	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseTriangularView
cols	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsColVector ? 1 : m_size; }$/;"	f	class:Eigen::SparseVector
cols	external/Eigen/src/SparseCore/SparseView.h	/^  inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SparseView
cols	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index cols() const { return m_matrix.cols(); }$/;"	f	class:Eigen::SuperLUBase
cols	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index cols() const { return m_copyMatrix.cols(); }$/;"	f	class:Eigen::UmfPackLU
cols	external/Eigen/src/misc/Image.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::image_retval_base
cols	external/Eigen/src/misc/Kernel.h	/^  inline Index cols() const { return m_cols; }$/;"	f	struct:Eigen::internal::kernel_retval_base
cols	external/Eigen/src/misc/Solve.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_base
cols	external/Eigen/src/misc/SparseSolve.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_with_guess
cols	external/Eigen/src/misc/SparseSolve.h	/^  inline Index cols() const { return m_rhs.cols(); }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
cols	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    Index cols() const { return m_lu.cols(); }$/;"	f	class:Eigen::IncompleteLU
cols	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    Index cols() const { return m_src.cols(); }$/;"	f	struct:Eigen::MatrixExponentialReturnValue
cols	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    Index cols() const { return m_A.cols(); }$/;"	f	class:Eigen::MatrixFunctionReturnValue
cols	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  Index cols() const { return m_A.cols(); }$/;"	f	class:Eigen::MatrixLogarithmReturnValue
cols	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    Index cols() const { return m_src.cols(); }$/;"	f	class:Eigen::MatrixSquareRootReturnValue
cols	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index cols() const {$/;"	f	class:Eigen::SkylineMatrix
cols	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index cols() const {$/;"	f	class:Eigen::SkylineMatrixBase
cols	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE Index cols() const {$/;"	f	class:Eigen::internal::SkylineProduct
cols	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    EIGEN_STRONG_INLINE Index cols() const { return IsRowMajor ? m_matrix.cols() : m_outerSize.value(); }$/;"	f	class:Eigen::SparseInnerVectorSet
cols	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index cols() const { return IsRowMajor ? m_innerSize : outerSize(); }$/;"	f	class:Eigen::DynamicSparseMatrix
colsPermutation	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::ColPivHouseholderQR
colsPermutation	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    const PermutationType& colsPermutation() const$/;"	f	class:Eigen::FullPivHouseholderQR
cols_select	external/Eigen/src/Core/GeneralProduct.h	/^    cols_select = product_size_category<Cols,MaxCols>::value,$/;"	e	enum:Eigen::internal::product_type::__anon115
colwise	external/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::colwise() const$/;"	f	class:Eigen::DenseBase
colwise	external/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::colwise()$/;"	f	class:Eigen::DenseBase
companion	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    companion( const VectorType& poly ){$/;"	f	class:Eigen::internal::companion
companion	external/unsupported/Eigen/src/Polynomials/Companion.h	/^class companion$/;"	c	namespace:Eigen::internal
complex_divide	external/SuiteSparse/Include/cholmod_core.h	/^    int (*complex_divide) (double ax, double az, double bx, double bz,$/;"	m	struct:cholmod_common_struct
complex_schur_reduce_to_hessenberg	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg$/;"	s	namespace:Eigen::internal
complex_schur_reduce_to_hessenberg	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^struct complex_schur_reduce_to_hessenberg<MatrixType, false>$/;"	s	namespace:Eigen::internal
complex_type	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftw_complex complex_type;$/;"	t	struct:Eigen::internal::fftw_plan
complex_type	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftwf_complex complex_type;$/;"	t	struct:Eigen::internal::fftw_plan
complex_type	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef fftwl_complex complex_type;$/;"	t	struct:Eigen::internal::fftw_plan
compute	external/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::compute(const MatrixType& a)$/;"	f	class:Eigen::LDLT
compute	external/Eigen/src/Cholesky/LLT.h	/^LLT<MatrixType,_UpLo>& LLT<MatrixType,_UpLo>::compute(const MatrixType& a)$/;"	f	class:Eigen::LLT
compute	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& compute(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
compute	external/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::SVD
compute	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^ComplexEigenSolver<MatrixType>& ComplexEigenSolver<MatrixType>::compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
compute	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^ComplexSchur<MatrixType>& ComplexSchur<MatrixType>::compute(const MatrixType& matrix, bool computeU)$/;"	f	class:Eigen::ComplexSchur
compute	external/Eigen/src/Eigenvalues/EigenSolver.h	/^EigenSolver<MatrixType>& EigenSolver<MatrixType>::compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::EigenSolver
compute	external/Eigen/src/Eigenvalues/GeneralizedSelfAdjointEigenSolver.h	/^compute(const MatrixType& matA, const MatrixType& matB, int options)$/;"	f	class:Eigen::GeneralizedSelfAdjointEigenSolver
compute	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HessenbergDecomposition& compute(const MatrixType& matrix)$/;"	f	class:Eigen::HessenbergDecomposition
compute	external/Eigen/src/Eigenvalues/RealSchur.h	/^RealSchur<MatrixType>& RealSchur<MatrixType>::compute(const MatrixType& matrix, bool computeU)$/;"	f	class:Eigen::RealSchur
compute	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    void compute(const MatrixType& matA, const MatrixType& matB, bool computeEigenvectors = true)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    void compute(const MatrixType& matrix, bool computeEigenvectors)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::compute(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
compute	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Tridiagonalization& compute(const MatrixType& matrix)$/;"	f	class:Eigen::Tridiagonalization
compute	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& compute(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
compute	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& compute(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
compute	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    IncompleteLUT<Scalar>& compute(const MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
compute	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& compute(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
compute	external/Eigen/src/LU/FullPivLU.h	/^FullPivLU<MatrixType>& FullPivLU<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivLU
compute	external/Eigen/src/LU/PartialPivLU.h	/^PartialPivLU<MatrixType>& PartialPivLU<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::PartialPivLU
compute	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
compute	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
compute	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void compute (const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
compute	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::compute(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
compute	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::compute(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
compute	external/Eigen/src/QR/ColPivHouseholderQR.h	/^ColPivHouseholderQR<MatrixType>& ColPivHouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::ColPivHouseholderQR
compute	external/Eigen/src/QR/FullPivHouseholderQR.h	/^FullPivHouseholderQR<MatrixType>& FullPivHouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::FullPivHouseholderQR
compute	external/Eigen/src/QR/HouseholderQR.h	/^HouseholderQR<MatrixType>& HouseholderQR<MatrixType>::compute(const MatrixType& matrix)$/;"	f	class:Eigen::HouseholderQR
compute	external/Eigen/src/SVD/JacobiSVD.h	/^    JacobiSVD& compute(const MatrixType& matrix)$/;"	f	class:Eigen::JacobiSVD
compute	external/Eigen/src/SVD/JacobiSVD.h	/^JacobiSVD<MatrixType, QRPreconditioner>::compute(const MatrixType& matrix, unsigned int computationOptions)$/;"	f	class:Eigen::JacobiSVD
compute	external/Eigen/src/SVD/UpperBidiagonalization.h	/^UpperBidiagonalization<_MatrixType>& UpperBidiagonalization<_MatrixType>::compute(const _MatrixType& matrix)$/;"	f	class:Eigen::internal::UpperBidiagonalization
compute	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholesky
compute	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLDLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLDLT
compute	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialLLT& compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialLLT
compute	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SimplicialCholeskyBase
compute	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::SuperLUBase
compute	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void compute(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
compute	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    IncompleteLU& compute(const MatrixType& mat)$/;"	f	class:Eigen::IncompleteLU
compute	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void compute (const MatrixType& mat)$/;"	f	class:Scaling
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void MatrixExponential<MatrixType>::compute(ResultType &result)$/;"	f	class:Eigen::MatrixExponential
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    void compute(ResultType& result) $/;"	f	class:Eigen::MatrixFunction
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::compute(ResultType& result) $/;"	f	class:Eigen::MatrixFunction
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^MatrixType MatrixFunctionAtomic<MatrixType>::compute(const MatrixType& A)$/;"	f	class:Eigen::MatrixFunctionAtomic
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^MatrixType MatrixLogarithmAtomic<MatrixType>::compute(const MatrixType& A)$/;"	f	class:Eigen::MatrixLogarithmAtomic
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    template <typename ResultType> void compute(ResultType &result)$/;"	f	class:Eigen::MatrixSquareRoot
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void MatrixSquareRootQuasiTriangular<MatrixType>::compute(ResultType &result)$/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
compute	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void MatrixSquareRootTriangular<MatrixType>::compute(ResultType &result)$/;"	f	class:Eigen::MatrixSquareRootTriangular
compute	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    void compute( const OtherPolynomial& poly )$/;"	f	class:Eigen::PolynomialSolver
compute	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^void SkylineInplaceLU<MatrixType>::compute() {$/;"	f	class:Eigen::SkylineInplaceLU
compute1x1offDiagonalBlock	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^     ::compute1x1offDiagonalBlock(MatrixType& sqrtT, const MatrixType& T, $/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
compute1x2offDiagonalBlock	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^     ::compute1x2offDiagonalBlock(MatrixType& sqrtT, const MatrixType& T, $/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
compute2x1offDiagonalBlock	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^     ::compute2x1offDiagonalBlock(MatrixType& sqrtT, const MatrixType& T, $/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
compute2x2	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::compute2x2(const MatrixType& A, MatrixType& result)$/;"	f	class:Eigen::MatrixLogarithmAtomic
compute2x2diagonalBlock	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^     ::compute2x2diagonalBlock(MatrixType& sqrtT, const MatrixType& T, typename MatrixType::Index i)$/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
compute2x2offDiagonalBlock	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^     ::compute2x2offDiagonalBlock(MatrixType& sqrtT, const MatrixType& T, $/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
computeBig	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computeBig(const MatrixType& A, MatrixType& result)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computeBlockAtomic	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::computeBlockAtomic()$/;"	f	class:Eigen::MatrixFunction
computeBlockStart	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::computeBlockStart()$/;"	f	class:Eigen::MatrixFunction
computeClusterSize	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::computeClusterSize()$/;"	f	class:Eigen::MatrixFunction
computeDiagonalPartOfSqrt	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void MatrixSquareRootQuasiTriangular<MatrixType>::computeDiagonalPartOfSqrt(MatrixType& sqrtT, $/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
computeDirect	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^::computeDirect(const MatrixType& matrix, int options)$/;"	f	class:Eigen::SelfAdjointEigenSolver
computeImage	external/Eigen/src/Eigen2Support/LU.h	/^    void computeImage(ImageMatrixType *result) const$/;"	f	class:Eigen::LU
computeInverse	external/Eigen/src/Core/MatrixBase.h	/^    void computeInverse(MatrixBase<ResultType> *result) const {$/;"	f	class:Eigen::MatrixBase
computeInverse	external/Eigen/src/Eigen2Support/LU.h	/^    inline void computeInverse(ResultType *result) const$/;"	f	class:Eigen::LU
computeInverseAndDetWithCheck	external/Eigen/src/LU/Inverse.h	/^inline void MatrixBase<Derived>::computeInverseAndDetWithCheck($/;"	f	class:Eigen::MatrixBase
computeInverseWithCheck	external/Eigen/src/LU/Inverse.h	/^inline void MatrixBase<Derived>::computeInverseWithCheck($/;"	f	class:Eigen::MatrixBase
computeKernel	external/Eigen/src/Eigen2Support/LU.h	/^    void computeKernel(KernelMatrixType *result) const$/;"	f	class:Eigen::LU
computeMu	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^void MatrixFunctionAtomic<MatrixType>::computeMu()$/;"	f	class:Eigen::MatrixFunctionAtomic
computeNormOfT	external/Eigen/src/Eigenvalues/RealSchur.h	/^inline typename MatrixType::Scalar RealSchur<MatrixType>::computeNormOfT()$/;"	f	class:Eigen::RealSchur
computeOffDiagonal	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::computeOffDiagonal()$/;"	f	class:Eigen::MatrixFunction
computeOffDiagonalPartOfSqrt	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^void MatrixSquareRootQuasiTriangular<MatrixType>::computeOffDiagonalPartOfSqrt(MatrixType& sqrtT, $/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
computePade	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade(MatrixType& result, const MatrixType& T, int degree)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade10	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade10(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade11	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade11(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade3	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade3(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade4	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade4(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade5	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade5(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade6	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade6(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade7	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade7(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade8	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade8(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePade9	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^void MatrixLogarithmAtomic<MatrixType>::computePade9(MatrixType& result, const MatrixType& T)$/;"	f	class:Eigen::MatrixLogarithmAtomic
computePositiveUnitary	external/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computePositiveUnitary(UnitaryType *positive,$/;"	f	class:Eigen::SVD
computeProductBlockingSizes	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void computeProductBlockingSizes(std::ptrdiff_t& k, std::ptrdiff_t& m, std::ptrdiff_t& n)$/;"	f	namespace:Eigen::internal
computeProductBlockingSizes	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^void computeProductBlockingSizes(std::ptrdiff_t& k, std::ptrdiff_t& m, std::ptrdiff_t& n)$/;"	f	namespace:Eigen::internal
computeRef	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void computeRef (MatrixType& mat)$/;"	f	class:Scaling
computeRoots	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void computeRoots(const MatrixType& m, VectorType& roots)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
computeRotationScaling	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^void Transform<Scalar,Dim>::computeRotationScaling(RotationMatrixType *rotation, ScalingMatrixType *scaling) const$/;"	f	class:Eigen::Transform
computeRotationScaling	external/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computeRotationScaling(RotationType *rotation, ScalingType *scaling) const$/;"	f	class:Eigen::SVD
computeRotationScaling	external/Eigen/src/Geometry/Transform.h	/^void Transform<Scalar,Dim,Mode,Options>::computeRotationScaling(RotationMatrixType *rotation, ScalingMatrixType *scaling) const$/;"	f	class:Eigen::Transform
computeRowMajor	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^void SkylineInplaceLU<MatrixType>::computeRowMajor() {$/;"	f	class:Eigen::SkylineInplaceLU
computeScalingRotation	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^void Transform<Scalar,Dim>::computeScalingRotation(ScalingMatrixType *scaling, RotationMatrixType *rotation) const$/;"	f	class:Eigen::Transform
computeScalingRotation	external/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computeScalingRotation(ScalingType *scaling, RotationType *rotation) const$/;"	f	class:Eigen::SVD
computeScalingRotation	external/Eigen/src/Geometry/Transform.h	/^void Transform<Scalar,Dim,Mode,Options>::computeScalingRotation(ScalingMatrixType *scaling, RotationMatrixType *rotation) const$/;"	f	class:Eigen::Transform
computeSchurDecomposition	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::computeSchurDecomposition()$/;"	f	class:Eigen::MatrixFunction
computeShift	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^typename ComplexSchur<MatrixType>::ComplexScalar ComplexSchur<MatrixType>::computeShift(Index iu, Index iter)$/;"	f	class:Eigen::ComplexSchur
computeShift	external/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::computeShift(Index iu, Index iter, Scalar& exshift, Vector3s& shiftInfo)$/;"	f	class:Eigen::RealSchur
computeU	external/Eigen/src/SVD/JacobiSVD.h	/^    inline bool computeU() const { return m_computeFullU || m_computeThinU; }$/;"	f	class:Eigen::JacobiSVD
computeUV	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void MatrixExponential<MatrixType>::computeUV(double)$/;"	f	class:Eigen::MatrixExponential
computeUV	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void MatrixExponential<MatrixType>::computeUV(float)$/;"	f	class:Eigen::MatrixExponential
computeUV	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^void MatrixExponential<MatrixType>::computeUV(long double)$/;"	f	class:Eigen::MatrixExponential
computeUnitaryPositive	external/Eigen/src/Eigen2Support/SVD.h	/^void SVD<MatrixType>::computeUnitaryPositive(UnitaryType *unitary,$/;"	f	class:Eigen::SVD
computeV	external/Eigen/src/SVD/JacobiSVD.h	/^    inline bool computeV() const { return m_computeFullV || m_computeThinV; }$/;"	f	class:Eigen::JacobiSVD
compute_bit2idx	external/unsupported/test/mpreal/dlmalloc.c	2798;"	d	file:
compute_bit2idx	external/unsupported/test/mpreal/dlmalloc.c	2806;"	d	file:
compute_bit2idx	external/unsupported/test/mpreal/dlmalloc.c	2814;"	d	file:
compute_bit2idx	external/unsupported/test/mpreal/dlmalloc.c	2822;"	d	file:
compute_bit2idx	external/unsupported/test/mpreal/dlmalloc.c	2825;"	d	file:
compute_inverse	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse$/;"	s	namespace:Eigen::internal
compute_inverse	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check { \/* nothing! general case not supported. *\/ };$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 1>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 2>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 3>$/;"	s	namespace:Eigen::internal
compute_inverse_and_det_with_check	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse_and_det_with_check<MatrixType, ResultType, 4>$/;"	s	namespace:Eigen::internal
compute_inverse_size2_helper	external/Eigen/src/LU/Inverse.h	/^inline void compute_inverse_size2_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size3_helper	external/Eigen/src/LU/Inverse.h	/^inline void compute_inverse_size3_helper($/;"	f	namespace:Eigen::internal
compute_inverse_size4	external/Eigen/src/LU/Inverse.h	/^struct compute_inverse_size4$/;"	s	namespace:Eigen::internal
compute_inverse_size4	external/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, double, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_inverse_size4	external/Eigen/src/LU/arch/Inverse_SSE.h	/^struct compute_inverse_size4<Architecture::SSE, float, MatrixType, ResultType>$/;"	s	namespace:Eigen::internal
compute_tree_index	external/unsupported/test/mpreal/dlmalloc.c	2694;"	d	file:
compute_tree_index	external/unsupported/test/mpreal/dlmalloc.c	2709;"	d	file:
compute_tree_index	external/unsupported/test/mpreal/dlmalloc.c	2723;"	d	file:
compute_tree_index	external/unsupported/test/mpreal/dlmalloc.c	2738;"	d	file:
conditionMatrix	external/Eigen/src/Core/Select.h	/^    const ConditionMatrixType& conditionMatrix() const$/;"	f	class:Eigen::Select
conditional	external/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	s	namespace:Eigen::internal
conditional	external/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	s	namespace:Eigen::internal
conditional_aligned_delete	external/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline void conditional_aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_delete_auto	external/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline void conditional_aligned_delete_auto(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	external/Eigen/src/Core/util/Memory.h	/^template<> inline void conditional_aligned_free<false>(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_free	external/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void conditional_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	external/Eigen/src/Core/util/Memory.h	/^template<> inline void* conditional_aligned_malloc<false>(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_malloc	external/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void* conditional_aligned_malloc(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new	external/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_new(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_new_auto	external/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_new_auto(size_t size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	external/Eigen/src/Core/util/Memory.h	/^template<> inline void* conditional_aligned_realloc<false>(void* ptr, size_t new_size, size_t)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc	external/Eigen/src/Core/util/Memory.h	/^template<bool Align> inline void* conditional_aligned_realloc(void* ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new	external/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_realloc_new(T* pts, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conditional_aligned_realloc_new_auto	external/Eigen/src/Core/util/Memory.h	/^template<typename T, bool Align> inline T* conditional_aligned_realloc_new_auto(T* pts, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen::internal
conj	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(conj, Scalar) conj(const Scalar& x)$/;"	f	namespace:Eigen::internal
conj	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline const AutoDiffScalar<DerType>& conj(const AutoDiffScalar<DerType>& x)  { return x; }$/;"	f	namespace:Eigen
conj_expr_if	external/Eigen/src/Core/products/SelfadjointRank2Update.h	/^template<bool Cond, typename T> struct conj_expr_if$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet1cd, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet1cd, Packet2d, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet2cf, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2cf, Packet4f, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet2d, Packet1cd, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct conj_helper<Packet4f, Packet2cf, false,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<RealScalar, std::complex<RealScalar>, false,Conj>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar,bool Conj> struct conj_helper<std::complex<RealScalar>, RealScalar, Conj,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, false,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,false>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename RealScalar> struct conj_helper<std::complex<RealScalar>, std::complex<RealScalar>, true,true>$/;"	s	namespace:Eigen::internal
conj_helper	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct conj_helper<Scalar,Scalar,false,false>$/;"	s	namespace:Eigen::internal
conj_if	external/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<false> {$/;"	s	namespace:Eigen::internal
conj_if	external/Eigen/src/Core/util/BlasUtil.h	/^template<> struct conj_if<true> {$/;"	s	namespace:Eigen::internal
conj_impl	external/Eigen/src/Core/MathFunctions.h	/^struct conj_impl$/;"	s	namespace:Eigen::internal
conj_impl	external/Eigen/src/Core/MathFunctions.h	/^struct conj_impl<std::complex<RealScalar> >$/;"	s	namespace:Eigen::internal
conj_retval	external/Eigen/src/Core/MathFunctions.h	/^struct conj_retval$/;"	s	namespace:Eigen::internal
conjugate	external/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularView<MatrixConjugateReturnType,Mode> conjugate()$/;"	f	class:Eigen::TriangularView
conjugate	external/Eigen/src/Core/TriangularMatrix.h	/^    inline const TriangularView<MatrixConjugateReturnType,Mode> conjugate() const$/;"	f	class:Eigen::TriangularView
conjugate	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar> Quaternion<Scalar>::conjugate() const$/;"	f	class:Eigen::Quaternion
conjugate	external/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::conjugate() const$/;"	f	class:Eigen::QuaternionBase
conjugate	external/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType conjugate() const$/;"	f	class:Eigen::HouseholderSequence
conjugate	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^conjugate() const$/;"	f
conjugate_gradient	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^void conjugate_gradient(const MatrixType& mat, const Rhs& rhs, Dest& x,$/;"	f	namespace:Eigen::internal
conservativeResize	external/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex size, DenseIndex rows, DenseIndex cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	external/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex size, DenseIndex rows, DenseIndex)$/;"	f	class:Eigen::DenseStorage
conservativeResize	external/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex size, DenseIndex, DenseIndex cols)$/;"	f	class:Eigen::DenseStorage
conservativeResize	external/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex, DenseIndex rows, DenseIndex cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	external/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex, DenseIndex rows, DenseIndex) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	external/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex, DenseIndex, DenseIndex cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
conservativeResize	external/Eigen/src/Core/DenseStorage.h	/^    inline void conservativeResize(DenseIndex,DenseIndex,DenseIndex) {}$/;"	f	class:Eigen::DenseStorage
conservativeResize	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(Index size)$/;"	f	class:Eigen::PlainObjectBase
conservativeResize	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
conservativeResizeLike	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void conservativeResizeLike(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
conservative_resize_like_impl	external/Eigen/src/Core/PlainObjectBase.h	/^struct conservative_resize_like_impl<Derived,OtherDerived,true>$/;"	s	namespace:Eigen::internal
conservative_resize_like_impl	external/Eigen/src/Core/PlainObjectBase.h	/^struct internal::conservative_resize_like_impl$/;"	s	class:Eigen::internal
conservative_sparse_sparse_product_impl	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^static void conservative_sparse_sparse_product_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,ColMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
conservative_sparse_sparse_product_selector	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^struct conservative_sparse_sparse_product_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
const	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	10;"	d	file:
const_blas_data_mapper	external/Eigen/src/Core/util/BlasUtil.h	/^    const_blas_data_mapper(const Scalar* data, Index stride) : m_data(data), m_stride(stride) {}$/;"	f	class:Eigen::internal::const_blas_data_mapper
const_blas_data_mapper	external/Eigen/src/Core/util/BlasUtil.h	/^class const_blas_data_mapper$/;"	c	namespace:Eigen::internal
const_cast_derived	external/Eigen/src/Core/EigenBase.h	/^  inline Derived& const_cast_derived() const$/;"	f	struct:Eigen::EigenBase
const_cast_derived	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& const_cast_derived() const$/;"	f	class:Eigen::SparseMatrixBase
const_cast_derived	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Derived& const_cast_derived() const {$/;"	f	class:Eigen::SkylineMatrixBase
const_catalan	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_catalan (mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
const_derived	external/Eigen/src/Core/EigenBase.h	/^  inline const Derived& const_derived() const$/;"	f	struct:Eigen::EigenBase
const_euler	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_euler (mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
const_infinity	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_infinity (int sign, mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
const_log2	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_log2 (mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
const_pi	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal const_pi (mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
const_pointer	external/Eigen/src/Core/util/Memory.h	/^    typedef const T*  const_pointer;$/;"	t	class:Eigen::aligned_allocator
const_pointer	external/Eigen/src/StlSupport/details.h	/^    typedef const T*  const_pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
const_reference	external/Eigen/src/Core/util/Memory.h	/^    typedef const T&  const_reference;$/;"	t	class:Eigen::aligned_allocator
const_reference	external/Eigen/src/StlSupport/details.h	/^    typedef const T&  const_reference;$/;"	t	class:Eigen::aligned_allocator_indirection
constrained_cg	external/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^void constrained_cg(const TMatrix& A, const CMatrix& C, VectorX& x,$/;"	f	namespace:Eigen::internal
construct	external/Eigen/src/Core/util/Memory.h	/^    void  construct(pointer p, Args&&... args)$/;"	f	class:Eigen::aligned_allocator
construct	external/Eigen/src/Core/util/Memory.h	/^    void construct( pointer p, const T& value )$/;"	f	class:Eigen::aligned_allocator
constructPermutation	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::constructPermutation()$/;"	f	class:Eigen::MatrixFunction
construct_elements_of_array	external/Eigen/src/Core/util/Memory.h	/^template<typename T> inline T* construct_elements_of_array(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
construct_from_matrix	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  struct construct_from_matrix$/;"	s	class:Eigen::Transform
construct_from_matrix	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  template<typename OtherDerived> struct construct_from_matrix<OtherDerived, true>$/;"	s	class:Eigen::Transform
constructor_without_unaligned_array_assert	external/Eigen/src/Core/DenseStorage.h	/^struct constructor_without_unaligned_array_assert {};$/;"	s	namespace:Eigen::internal
contains	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline bool contains(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
contains	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline bool contains(const VectorType& p) const$/;"	f	class:Eigen::AlignedBox
contains	external/Eigen/src/Geometry/AlignedBox.h	/^  inline bool contains(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
contains	external/Eigen/src/Geometry/AlignedBox.h	/^  inline bool contains(const MatrixBase<Derived>& a_p) const$/;"	f	class:Eigen::AlignedBox
converged	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool converged() const { return m_res <= m_rhsn * m_resmax; }$/;"	f	class:Eigen::IterationController
converged	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool converged(double nr)$/;"	f	class:Eigen::IterationController
converged	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    template<typename VectorType> bool converged(const VectorType &v)$/;"	f	class:Eigen::IterationController
conversion_overflow	external/unsupported/test/mpreal/mpreal.h	/^class conversion_overflow : public std::exception {$/;"	c	namespace:mpfr
copyCoeff	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyCoeff	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyCoeff	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyCoeff(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyCoeff	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyCoeff	external/Eigen/src/Core/Swap.h	/^    void copyCoeff(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyCoeff	external/Eigen/src/Core/Swap.h	/^    void copyCoeff(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyCoeff	external/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE void copyCoeff(Index row, Index col, Other& other)$/;"	f	class:Eigen::TriangularBase
copyCoeffByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyCoeffByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyPacket	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyPacket(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyPacket	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copyPacket	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyPacket(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyPacket	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfCwiseBinaryOp
copyPacket	external/Eigen/src/Core/Swap.h	/^    void copyPacket(Index index, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyPacket	external/Eigen/src/Core/Swap.h	/^    void copyPacket(Index row, Index col, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::SwapWrapper
copyPacketByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void copyPacketByOuterInner(Index outer, Index inner, const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseCoeffsBase
copy_bool	external/Eigen/src/Core/util/Macros.h	/^    inline bool copy_bool(bool b) { return b; }$/;"	f	namespace:Eigen::internal
corner	external/Eigen/src/Eigen2Support/Block.h	/^  ::corner(CornerType type, Index cRows, Index cCols)$/;"	f	class:Eigen::DenseBase
corner	external/Eigen/src/Eigen2Support/Block.h	/^DenseBase<Derived>::corner(CornerType type) const$/;"	f	class:Eigen::DenseBase
corner	external/Eigen/src/Eigen2Support/Block.h	/^DenseBase<Derived>::corner(CornerType type)$/;"	f	class:Eigen::DenseBase
corner	external/Eigen/src/Eigen2Support/Block.h	/^DenseBase<Derived>::corner(CornerType type, Index cRows, Index cCols) const$/;"	f	class:Eigen::DenseBase
corner	external/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType corner(CornerType corner) const$/;"	f	class:Eigen::AlignedBox
corres_	OptApp.h	/^	std::vector< Correspondence > corres_;$/;"	m	class:COptApp
corres_	OptApp.h	/^	std::vector< CorrespondencePair > corres_;$/;"	m	struct:Correspondence
cos	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::cos() const$/;"	f	class:Eigen::Cwise
cos	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cos() const$/;"	f
cos	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::cos() const$/;"	f	class:Eigen::MatrixBase
cos	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^    static Scalar cos(Scalar x, int n)$/;"	f	class:Eigen::StdStemFunctions
cos	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cos(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
cosh	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::cosh() const$/;"	f	class:Eigen::MatrixBase
cosh	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^    static Scalar cosh(Scalar x, int n)$/;"	f	class:Eigen::StdStemFunctions
cosh	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cosh (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
cot	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal cot(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
coth	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal coth (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
count	external/Eigen/src/Core/BooleanRedux.h	/^inline typename DenseBase<Derived>::Index DenseBase<Derived>::count() const$/;"	f	class:Eigen::DenseBase
count	external/Eigen/src/Core/VectorwiseOp.h	/^    const PartialReduxExpr<ExpressionType, internal::member_count<Index>, Direction> count() const$/;"	f	class:Eigen::VectorwiseOp
count	external/unsupported/test/BVH.cpp	/^  int count;$/;"	m	struct:BallPointStuff	file:
covar	external/unsupported/Eigen/src/NonLinearOptimization/covar.h	/^void covar($/;"	f	namespace:Eigen::internal
cpuid_is_vendor	external/Eigen/src/Core/util/Memory.h	/^inline bool cpuid_is_vendor(int abcd[4], const char* vendor)$/;"	f	namespace:Eigen::internal
createShader	external/unsupported/test/openglsupport.cpp	/^GLint createShader(const char* vtx, const char* frg)$/;"	f
create_mspace	external/unsupported/test/mpreal/dlmalloc.c	/^mspace create_mspace(size_t capacity, int locked) {$/;"	f
create_mspace_with_base	external/unsupported/test/mpreal/dlmalloc.c	/^mspace create_mspace_with_base(void* base, size_t capacity, int locked) {$/;"	f
cross	external/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross	external/Eigen/src/Geometry/OrthoMethods.h	/^VectorwiseOp<ExpressionType,Direction>::cross(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
cross3	external/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::cross3(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
cross3_impl	external/Eigen/src/Geometry/OrthoMethods.h	/^struct cross3_impl {$/;"	s	namespace:Eigen::internal
cross3_impl	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct cross3_impl<Architecture::SSE,VectorLhs,VectorRhs,float,true>$/;"	s	namespace:Eigen::internal
cross_product_return_type	external/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> struct cross_product_return_type {$/;"	s	class:Eigen::MatrixBase
cs_tdfs	external/Eigen/src/OrderingMethods/Amd.h	/^Index cs_tdfs(Index j, Index k, Index *head, const Index *next, Index *post, Index *stack)$/;"	f	namespace:Eigen::internal
cs_wclear	external/Eigen/src/OrderingMethods/Amd.h	/^static int cs_wclear (Index mark, Index lemax, Index *w, Index n)$/;"	f	namespace:Eigen::internal
csc	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal csc(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
csch	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal csch (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
ctr_filename_	OptApp.h	/^	std::string ctr_filename_;$/;"	m	class:COptApp
ctrls	external/unsupported/Eigen/src/Splines/Spline.h	/^    const ControlPointVectorType& ctrls() const { return m_ctrls; }$/;"	f	class:Eigen::Spline
cube	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::cube() const$/;"	f	class:Eigen::Cwise
cube	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^cube() const$/;"	f
cublasEventPotrf	external/SuiteSparse/Include/cholmod_core.h	/^    cudaEvent_t    cublasEventPotrf [2] ;$/;"	m	struct:cholmod_common_struct
cublasHandle	external/SuiteSparse/Include/cholmod_core.h	/^    cublasHandle_t cublasHandle ;$/;"	m	struct:cholmod_common_struct
cudaStreamGemm	external/SuiteSparse/Include/cholmod_core.h	/^    cudaStream_t   cudaStreamGemm ;$/;"	m	struct:cholmod_common_struct
cudaStreamPotrf	external/SuiteSparse/Include/cholmod_core.h	/^    cudaStream_t   cudaStreamPotrf [3] ;$/;"	m	struct:cholmod_common_struct
cudaStreamSyrk	external/SuiteSparse/Include/cholmod_core.h	/^    cudaStream_t   cudaStreamSyrk ;$/;"	m	struct:cholmod_common_struct
cudaStreamTrsm	external/SuiteSparse/Include/cholmod_core.h	/^    cudaStream_t   cudaStreamTrsm ;$/;"	m	struct:cholmod_common_struct
current	external/SuiteSparse/Include/cholmod_core.h	/^    int current ;	\/* The current method being tried.  Default: 0.  Valid$/;"	m	struct:cholmod_common_struct
cwise	external/Eigen/src/Eigen2Support/Cwise.h	/^inline Cwise<Derived> MatrixBase<Derived>::cwise()$/;"	f	class:Eigen::MatrixBase
cwise	external/Eigen/src/Eigen2Support/Cwise.h	/^inline const Cwise<Derived> MatrixBase<Derived>::cwise() const$/;"	f	class:Eigen::MatrixBase
cwiseAbs	external/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs() const { return derived(); }$/;"	f
cwiseAbs2	external/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseAbs2() const { return derived(); }$/;"	f
cwiseEqual	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseEqual	external/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseEqual(const Scalar& s) const$/;"	f
cwiseInverse	external/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseInverse() const { return derived(); }$/;"	f
cwiseMax	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMax	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMax(const Scalar &other) const$/;"	f
cwiseMin	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseMin	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseMin(const Scalar &other) const$/;"	f
cwiseNotEqual	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseNotEqual(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseProduct	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::cwiseProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
cwiseProduct	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseProduct(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseQuotient	external/Eigen/src/plugins/MatrixCwiseBinaryOps.h	/^cwiseQuotient(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
cwiseSqrt	external/Eigen/src/plugins/MatrixCwiseUnaryOps.h	/^cwiseSqrt() const { return derived(); }$/;"	f
d	external/SuiteSparse/Include/cholmod_core.h	/^    size_t d ;		\/* leading dimension (d >= nrow must hold) *\/$/;"	m	struct:cholmod_dense_struct
data	external/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	external/Eigen/src/Core/ArrayWrapper.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::ArrayWrapper
data	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::MatrixWrapper
data	external/Eigen/src/Core/DenseStorage.h	/^    inline T *data() { return 0; }$/;"	f	class:Eigen::DenseStorage
data	external/Eigen/src/Core/DenseStorage.h	/^    inline T *data() { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	external/Eigen/src/Core/DenseStorage.h	/^    inline T *data() { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	external/Eigen/src/Core/DenseStorage.h	/^    inline const T *data() const { return 0; }$/;"	f	class:Eigen::DenseStorage
data	external/Eigen/src/Core/DenseStorage.h	/^    inline const T *data() const { return m_data.array; }$/;"	f	class:Eigen::DenseStorage
data	external/Eigen/src/Core/DenseStorage.h	/^    inline const T *data() const { return m_data; }$/;"	f	class:Eigen::DenseStorage
data	external/Eigen/src/Core/Diagonal.h	/^    inline ScalarWithConstIfNotLvalue* data() { return &(m_matrix.const_cast_derived().coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	external/Eigen/src/Core/Diagonal.h	/^    inline const Scalar* data() const { return &(m_matrix.const_cast_derived().coeffRef(rowOffset(), colOffset())); }$/;"	f	class:Eigen::Diagonal
data	external/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE  Scalar* data() { eigen_internal_assert(false && "should never be called"); return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	external/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return 0; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	external/Eigen/src/Core/GeneralProduct.h	/^  EIGEN_STRONG_INLINE Scalar* data() { return m_data.array; }$/;"	f	struct:Eigen::internal::gemv_static_vector_if
data	external/Eigen/src/Core/MapBase.h	/^    inline ScalarWithConstIfNotLvalue* data() { return this->m_data; } \/\/ no const-cast here so non-const-correct code will give a compile error$/;"	f	class:Eigen::MapBase
data	external/Eigen/src/Core/MapBase.h	/^    inline const Scalar* data() const { return m_data; }$/;"	f	class:Eigen::MapBase
data	external/Eigen/src/Core/MapBase.h	/^    inline const Scalar* data() const { return this->m_data; }$/;"	f	class:Eigen::MapBase
data	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Scalar *data()$/;"	f	class:Eigen::PlainObjectBase
data	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE const Scalar *data() const$/;"	f	class:Eigen::PlainObjectBase
data	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
data	external/Eigen/src/Core/Swap.h	/^    inline ScalarWithConstIfNotLvalue* data() { return m_expression.data(); }$/;"	f	class:Eigen::SwapWrapper
data	external/Eigen/src/Core/Swap.h	/^    inline const Scalar* data() const { return m_expression.data(); }$/;"	f	class:Eigen::SwapWrapper
data	external/Eigen/src/Core/Transpose.h	/^    inline ScalarWithConstIfNotLvalue* data() { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	external/Eigen/src/Core/Transpose.h	/^    inline const Scalar* data() const { return derived().nestedExpression().data(); }$/;"	f	class:Eigen::TransposeImpl
data	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  Scalar* data() { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	external/Eigen/src/Geometry/Transform.h	/^  Scalar* data() { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	external/Eigen/src/Geometry/Transform.h	/^  const Scalar* data() const { return m_matrix.data(); }$/;"	f	class:Eigen::Transform
data	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Storage& data() { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Storage& data() const { return m_data; }$/;"	f	class:Eigen::SparseMatrix
data_	RGBDTrajectory.h	/^	std::vector< FramedTransformation > data_;$/;"	m	struct:RGBDTrajectory
dbound	external/SuiteSparse/Include/cholmod_core.h	/^    double dbound ;	\/* Smallest absolute value of diagonal entries of D$/;"	m	struct:cholmod_common_struct
dcomplex	external/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<double> dcomplex;$/;"	t	namespace:Eigen
deallocate	external/Eigen/src/Core/util/Memory.h	/^    void deallocate( pointer p, size_type \/*num*\/ )$/;"	f	class:Eigen::aligned_allocator
debug	external/Eigen/src/Core/Assign.h	/^  static void debug()$/;"	f	struct:Eigen::internal::assign_traits
debug	external/Eigen/src/Core/GeneralProduct.h	/^  static void debug()$/;"	f	struct:Eigen::internal::product_type
dec	external/Eigen/src/misc/Image.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::image_retval_base
dec	external/Eigen/src/misc/Kernel.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::kernel_retval_base
dec	external/Eigen/src/misc/Solve.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::solve_retval_base
dec	external/Eigen/src/misc/SparseSolve.h	/^  inline const DecompositionType& dec() const { return m_dec; }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
decrement_if_fixed_size	external/unsupported/Eigen/src/Polynomials/Companion.h	/^struct decrement_if_fixed_size$/;"	s	namespace:Eigen::internal
decrement_size	external/Eigen/src/Householder/Householder.h	/^template<int n> struct decrement_size$/;"	s	namespace:Eigen::internal
default_base	external/unsupported/test/mpreal/mpreal.cpp	/^int		   mpreal::default_base = 10;$/;"	m	class:mpfr::mpreal	file:
default_base	external/unsupported/test/mpreal/mpreal.h	/^	static int				default_base;$/;"	m	class:mpfr::mpreal
default_mflags	external/unsupported/test/mpreal/dlmalloc.c	/^  flag_t default_mflags;$/;"	m	struct:malloc_params	file:
default_nesdis	external/SuiteSparse/Include/cholmod_core.h	/^    int default_nesdis ;    \/* Default: FALSE.  If FALSE, then the default$/;"	m	struct:cholmod_common_struct
default_packet_traits	external/Eigen/src/Core/GenericPacketMath.h	/^struct default_packet_traits$/;"	s	namespace:Eigen::internal
default_prec	external/unsupported/test/mpreal/mpreal.cpp	/^mp_prec_t  mpreal::default_prec = 64;			\/\/(mpfr_get_default_prec)();	$/;"	m	class:mpfr::mpreal	file:
default_prec	external/unsupported/test/mpreal/mpreal.h	/^	static mp_prec_t		default_prec;	$/;"	m	class:mpfr::mpreal
default_prunning_func	external/Eigen/src/SparseCore/SparseMatrix.h	/^    default_prunning_func(Scalar ref, RealScalar eps) : reference(ref), epsilon(eps) {}$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
default_prunning_func	external/Eigen/src/SparseCore/SparseMatrix.h	/^  struct default_prunning_func {$/;"	s	class:Eigen::SparseMatrix
default_rnd	external/unsupported/test/mpreal/mpreal.cpp	/^mp_rnd_t   mpreal::default_rnd  = MPFR_RNDN;	\/\/(mpfr_get_default_rounding_mode)();	$/;"	m	class:mpfr::mpreal	file:
default_rnd	external/unsupported/test/mpreal/mpreal.h	/^	static mp_rnd_t			default_rnd;	$/;"	m	class:mpfr::mpreal
degree	external/unsupported/Eigen/src/Splines/Spline.h	/^  DenseIndex Spline<_Scalar, _Dim, _Degree>::degree() const$/;"	f	class:Eigen::Spline
delta	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar delta;$/;"	m	class:Eigen::HybridNonLinearSolver
delta	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar delta;$/;"	m	class:Eigen::LevenbergMarquardt
demo_all_types	external/unsupported/doc/examples/FFT.cpp	/^void demo_all_types(int nfft)$/;"	f
denseMatrix	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    DenseCompanionMatrixType denseMatrix() const$/;"	f	class:Eigen::internal::companion
dense_xpr_base_dispatcher_for_doxygen	external/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher_for_doxygen<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
dense_xpr_base_dispatcher_for_doxygen	external/Eigen/src/Core/PlainObjectBase.h	/^struct dense_xpr_base_dispatcher_for_doxygen<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
depth_select	external/Eigen/src/Core/GeneralProduct.h	/^    depth_select = product_size_category<Depth,MaxDepth>::value$/;"	e	enum:Eigen::internal::product_type::__anon115
deque	external/Eigen/src/StlSupport/StdDeque.h	/^  class deque<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
deque_base	external/Eigen/src/StlSupport/StdDeque.h	/^                Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > deque_base;$/;"	t	class:std::deque
derivatives	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline DerType& derivatives() { return m_derivatives; }$/;"	f	class:Eigen::AutoDiffScalar
derivatives	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const DerType& derivatives() const { return m_derivatives; }$/;"	f	class:Eigen::AutoDiffScalar
derivatives	external/unsupported/Eigen/src/Splines/Spline.h	/^    Spline<_Scalar, _Dim, _Degree>::derivatives(Scalar u, DenseIndex order) const$/;"	f	class:Eigen::Spline
derivativesImpl	external/unsupported/Eigen/src/Splines/Spline.h	/^  void derivativesImpl(const SplineType& spline, typename SplineType::Scalar u, DenseIndex order, DerivativeType& der)$/;"	f	namespace:Eigen
derived	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::CholmodBase
derived	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::CholmodBase
derived	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::DiagonalBase
derived	external/Eigen/src/Core/EigenBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	external/Eigen/src/Core/EigenBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	struct:Eigen::EigenBase
derived	external/Eigen/src/Core/Transpositions.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	external/Eigen/src/Core/Transpositions.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TranspositionsBase
derived	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	external/Eigen/src/Core/TriangularMatrix.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::TriangularBase
derived	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	external/Eigen/src/Geometry/RotationBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	external/Eigen/src/Geometry/RotationBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::RotationBase
derived	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::IterativeSolverBase
derived	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::IterativeSolverBase
derived	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Derived& derived()$/;"	f	class:Eigen::PastixBase
derived	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    const Derived& derived() const$/;"	f	class:Eigen::PastixBase
derived	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Derived& derived()$/;"	f	class:Eigen::PardisoImpl
derived	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    const Derived& derived() const$/;"	f	class:Eigen::PardisoImpl
derived	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SimplicialCholeskyBase
derived	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SparseMatrixBase
derived	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    Derived& derived() { return *static_cast<Derived*>(this); }$/;"	f	class:Eigen::SuperLUBase
derived	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    const Derived& derived() const { return *static_cast<const Derived*>(this); }$/;"	f	class:Eigen::SuperLUBase
derived	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  AutoDiffScalar<_DerType>& derived() { return *static_cast<AutoDiffScalar<_DerType>*>(this); }$/;"	f	struct:Eigen::internal::auto_diff_special_op
derived	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  const AutoDiffScalar<_DerType>& derived() const { return *static_cast<const AutoDiffScalar<_DerType>*>(this); }$/;"	f	struct:Eigen::internal::auto_diff_special_op
derived	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Derived& derived() {$/;"	f	class:Eigen::SkylineMatrixBase
derived	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline const Derived& derived() const {$/;"	f	class:Eigen::SkylineMatrixBase
destroy	external/Eigen/src/Core/util/Memory.h	/^    void destroy( pointer p )$/;"	f	class:Eigen::aligned_allocator
destroy_mspace	external/unsupported/test/mpreal/dlmalloc.c	/^size_t destroy_mspace(mspace msp) {$/;"	f
destruct_elements_of_array	external/Eigen/src/Core/util/Memory.h	/^template<typename T> inline void destruct_elements_of_array(T *ptr, size_t size)$/;"	f	namespace:Eigen::internal
determinant	external/Eigen/src/Core/TriangularMatrix.h	/^    Scalar determinant() const$/;"	f	class:Eigen::TriangularView
determinant	external/Eigen/src/LU/Determinant.h	/^inline typename internal::traits<Derived>::Scalar MatrixBase<Derived>::determinant() const$/;"	f	class:Eigen::MatrixBase
determinant	external/Eigen/src/LU/FullPivLU.h	/^typename internal::traits<MatrixType>::Scalar FullPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::FullPivLU
determinant	external/Eigen/src/LU/PartialPivLU.h	/^typename internal::traits<MatrixType>::Scalar PartialPivLU<MatrixType>::determinant() const$/;"	f	class:Eigen::PartialPivLU
determinant	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialCholesky
determinant	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLDLT
determinant	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Scalar determinant() const$/;"	f	class:Eigen::SimplicialLLT
determinant	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^typename SuperLU<MatrixType>::Scalar SuperLU<MatrixType>::determinant() const$/;"	f	class:Eigen::SuperLU
determinant	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^typename UmfPackLU<MatrixType>::Scalar UmfPackLU<MatrixType>::determinant() const$/;"	f	class:Eigen::UmfPackLU
determinant_impl	external/Eigen/src/LU/Determinant.h	/^> struct determinant_impl$/;"	s	namespace:Eigen::internal
determinant_impl	external/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 1>$/;"	s	namespace:Eigen::internal
determinant_impl	external/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 2>$/;"	s	namespace:Eigen::internal
determinant_impl	external/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 3>$/;"	s	namespace:Eigen::internal
determinant_impl	external/Eigen/src/LU/Determinant.h	/^template<typename Derived> struct determinant_impl<Derived, 4>$/;"	s	namespace:Eigen::internal
devPotrfWork	external/SuiteSparse/Include/cholmod_core.h	/^    void *devPotrfWork ;$/;"	m	struct:cholmod_common_struct
devSyrkGemmPtrC	external/SuiteSparse/Include/cholmod_core.h	/^    void *devSyrkGemmPtrC ;$/;"	m	struct:cholmod_common_struct
devSyrkGemmPtrLx	external/SuiteSparse/Include/cholmod_core.h	/^    void *devSyrkGemmPtrLx ;$/;"	m	struct:cholmod_common_struct
dev_zero_fd	external/unsupported/test/mpreal/dlmalloc.c	/^static int dev_zero_fd = -1; \/* Cached file descriptor for \/dev\/zero. *\/$/;"	v	file:
df	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    int df(const InputType& _x, JacobianType &jac) const$/;"	f	class:Eigen::NumericalDiff
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:Bennett5_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:BoxBOD_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH09_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH10_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:MGH17_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:chwirut2_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:eckerle4_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:hahn1_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:lanczos1_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:misra1a_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:misra1d_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:rat42_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:rat43_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &b, MatrixXd &fjac)$/;"	f	struct:thurber_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &x, MatrixXd &fjac) const$/;"	f	struct:lmder_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &x, MatrixXd &fjac)$/;"	f	struct:hybrj_functor
df	external/unsupported/test/NonLinearOptimization.cpp	/^    int df(const VectorXd &x, VectorXd &jac_row, VectorXd::Index rownb)$/;"	f	struct:lmstr_functor
diag	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::HybridNonLinearSolver
diag	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::LevenbergMarquardt
diag	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Scalar& diag(Index i) {$/;"	f	class:Eigen::SkylineStorage
diag	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Scalar& diag(Index i) const {$/;"	f	class:Eigen::SkylineStorage
diagSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index diagSize() const {$/;"	f	class:Eigen::SkylineStorage
diagonal	external/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,Dynamic> diagonal(Index i)$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	external/Eigen/src/Core/BandMatrix.h	/^    inline Block<CoefficientsType,1,SizeAtCompileTime> diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	external/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,Dynamic> diagonal(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	external/Eigen/src/Core/BandMatrix.h	/^    inline const Block<const CoefficientsType,1,SizeAtCompileTime> diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	external/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline const typename DiagonalIntReturnType<N>::Type diagonal() const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	external/Eigen/src/Core/BandMatrix.h	/^    template<int N> inline typename DiagonalIntReturnType<N>::Type diagonal()$/;"	f	class:Eigen::internal::BandMatrixBase
diagonal	external/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal() const$/;"	f	class:Eigen::MatrixBase
diagonal	external/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal()$/;"	f	class:Eigen::MatrixBase
diagonal	external/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index) const$/;"	f	class:Eigen::MatrixBase
diagonal	external/Eigen/src/Core/Diagonal.h	/^MatrixBase<Derived>::diagonal(Index index)$/;"	f	class:Eigen::MatrixBase
diagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^    const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalWrapper
diagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline DiagonalVectorType& diagonal() { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return derived().diagonal(); }$/;"	f	class:Eigen::DiagonalBase
diagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline const DiagonalVectorType& diagonal() const { return m_diagonal; }$/;"	f	class:Eigen::DiagonalMatrix
diagonal	external/Eigen/src/Core/ProductBase.h	/^    const Diagonal<FullyLazyCoeffBaseProductType,Dynamic> diagonal(Index index) const$/;"	f	class:Eigen::ProductBase
diagonal	external/Eigen/src/Core/ProductBase.h	/^    const Diagonal<FullyLazyCoeffBaseProductType,Index> diagonal() const$/;"	f	class:Eigen::ProductBase
diagonal	external/Eigen/src/Core/ProductBase.h	/^    const Diagonal<const FullyLazyCoeffBaseProductType,0> diagonal() const$/;"	f	class:Eigen::ProductBase
diagonal	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const Diagonal<const LazyCoeffBasedProductType,0> diagonal() const$/;"	f	class:Eigen::CoeffBasedProduct
diagonal	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const Diagonal<const LazyCoeffBasedProductType,DiagonalIndex> diagonal() const$/;"	f	class:Eigen::CoeffBasedProduct
diagonal	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const Diagonal<const LazyCoeffBasedProductType,Dynamic> diagonal(Index index) const$/;"	f	class:Eigen::CoeffBasedProduct
diagonal	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::diagonal() const$/;"	f	class:Eigen::Tridiagonalization
diagonal	external/Eigen/src/Geometry/AlignedBox.h	/^  inline CwiseBinaryOp< internal::scalar_difference_op<Scalar>, const VectorType, const VectorType> diagonal() const$/;"	f	class:Eigen::AlignedBox
diagonal	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Diagonal<const SparseMatrix> diagonal() const { return *this; }$/;"	f	class:Eigen::SparseMatrix
diagonalLength	external/Eigen/src/Core/BandMatrix.h	/^    inline Index diagonalLength(Index i) const$/;"	f	class:Eigen::internal::BandMatrixBase
diagonalSize	external/Eigen/src/Core/MatrixBase.h	/^    inline Index diagonalSize() const { return (std::min)(rows(),cols()); }$/;"	f	class:Eigen::MatrixBase
dif_rmse	external/unsupported/test/FFTW.cpp	/^    long double dif_rmse( const VT1 buf1,const VT2 buf2)$/;"	f
difference_type	external/Eigen/src/Core/util/Memory.h	/^    typedef std::ptrdiff_t difference_type;$/;"	t	class:Eigen::aligned_allocator
difference_type	external/Eigen/src/StlSupport/details.h	/^    typedef ptrdiff_t difference_type;$/;"	t	class:Eigen::aligned_allocator_indirection
digamma	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal digamma(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
digits2bits	external/unsupported/test/mpreal/mpreal.h	/^inline mp_prec_t digits2bits(int d)$/;"	f	namespace:mpfr
dim	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline int dim() const { return AmbientDimAtCompileTime==Dynamic ? m_min.size()-1 : AmbientDimAtCompileTime; }$/;"	f	class:Eigen::AlignedBox
dim	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline int dim() const { return int(AmbientDimAtCompileTime)==Dynamic ? m_coeffs.size()-1 : int(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::Hyperplane
dim	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  inline int dim() const { return m_direction.size(); }$/;"	f	class:Eigen::ParametrizedLine
dim	external/Eigen/src/Geometry/AlignedBox.h	/^  inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_min.size() : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::AlignedBox
dim	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Index dim() const { return AmbientDimAtCompileTime==Dynamic ? m_coeffs.size()-1 : Index(AmbientDimAtCompileTime); }$/;"	f	class:Eigen::Hyperplane
dim	external/Eigen/src/Geometry/ParametrizedLine.h	/^  inline Index dim() const { return m_direction.size(); }$/;"	f	class:Eigen::ParametrizedLine
dim	external/unsupported/Eigen/src/BVH/KdBVH.h	/^    int dim;$/;"	m	struct:Eigen::KdBVH::VectorComparator
dim	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal dim(const mpreal& a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
dimensionOfKernel	external/Eigen/src/LU/FullPivLU.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivLU
dimensionOfKernel	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::ColPivHouseholderQR
dimensionOfKernel	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index dimensionOfKernel() const$/;"	f	class:Eigen::FullPivHouseholderQR
dir_prefix_	OptApp.h	/^	std::string dir_prefix_;$/;"	m	class:COptApp
dirder	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
direct_selfadjoint_eigenvalues	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType,int Size,bool IsComplex> struct direct_selfadjoint_eigenvalues$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType> struct direct_selfadjoint_eigenvalues<SolverType,2,false>$/;"	s	namespace:Eigen::internal
direct_selfadjoint_eigenvalues	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^template<typename SolverType> struct direct_selfadjoint_eigenvalues<SolverType,3,false>$/;"	s	namespace:Eigen::internal
direction	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType& direction() { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  const VectorType& direction() const { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	external/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType& direction() { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
direction	external/Eigen/src/Geometry/ParametrizedLine.h	/^  const VectorType& direction() const { return m_direction; }$/;"	f	class:Eigen::ParametrizedLine
disable_contiguous	external/unsupported/test/mpreal/dlmalloc.c	2520;"	d	file:
disable_lock	external/unsupported/test/mpreal/dlmalloc.c	2513;"	d	file:
disable_mmap	external/unsupported/test/mpreal/dlmalloc.c	2517;"	d	file:
distance	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  RealScalar distance(const VectorType& p) const { return ei_sqrt(squaredDistance(p)); }$/;"	f	class:Eigen::ParametrizedLine
distance	external/Eigen/src/Geometry/ParametrizedLine.h	/^  RealScalar distance(const VectorType& p) const { return internal::sqrt(squaredDistance(p)); }$/;"	f	class:Eigen::ParametrizedLine
div_2si	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal div_2si(const mpreal& v, long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
div_2ui	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal div_2ui(const mpreal& v, unsigned long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
dlcalloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* dlcalloc(size_t n_elements, size_t elem_size) {$/;"	f
dlcalloc	external/unsupported/test/mpreal/dlmalloc.c	760;"	d	file:
dlcalloc	external/unsupported/test/mpreal/dlmalloc.h	47;"	d
dlfree	external/unsupported/test/mpreal/dlmalloc.c	/^void dlfree(void* mem) {$/;"	f
dlfree	external/unsupported/test/mpreal/dlmalloc.c	761;"	d	file:
dlfree	external/unsupported/test/mpreal/dlmalloc.h	48;"	d
dlindependent_calloc	external/unsupported/test/mpreal/dlmalloc.c	/^void** dlindependent_calloc(size_t n_elements, size_t elem_size,$/;"	f
dlindependent_calloc	external/unsupported/test/mpreal/dlmalloc.c	774;"	d	file:
dlindependent_calloc	external/unsupported/test/mpreal/dlmalloc.h	60;"	d
dlindependent_comalloc	external/unsupported/test/mpreal/dlmalloc.c	/^void** dlindependent_comalloc(size_t n_elements, size_t sizes[],$/;"	f
dlindependent_comalloc	external/unsupported/test/mpreal/dlmalloc.c	775;"	d	file:
dlindependent_comalloc	external/unsupported/test/mpreal/dlmalloc.h	61;"	d
dlmallinfo	external/unsupported/test/mpreal/dlmalloc.c	/^struct mallinfo dlmallinfo(void) {$/;"	f
dlmallinfo	external/unsupported/test/mpreal/dlmalloc.c	767;"	d	file:
dlmallinfo	external/unsupported/test/mpreal/dlmalloc.h	54;"	d
dlmalloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* dlmalloc(size_t bytes) {$/;"	f
dlmalloc	external/unsupported/test/mpreal/dlmalloc.c	762;"	d	file:
dlmalloc	external/unsupported/test/mpreal/dlmalloc.h	49;"	d
dlmalloc_footprint	external/unsupported/test/mpreal/dlmalloc.c	/^size_t dlmalloc_footprint(void) {$/;"	f
dlmalloc_footprint	external/unsupported/test/mpreal/dlmalloc.c	772;"	d	file:
dlmalloc_footprint	external/unsupported/test/mpreal/dlmalloc.h	59;"	d
dlmalloc_max_footprint	external/unsupported/test/mpreal/dlmalloc.c	/^size_t dlmalloc_max_footprint(void) {$/;"	f
dlmalloc_max_footprint	external/unsupported/test/mpreal/dlmalloc.c	773;"	d	file:
dlmalloc_stats	external/unsupported/test/mpreal/dlmalloc.c	/^void dlmalloc_stats() {$/;"	f
dlmalloc_stats	external/unsupported/test/mpreal/dlmalloc.c	770;"	d	file:
dlmalloc_stats	external/unsupported/test/mpreal/dlmalloc.h	57;"	d
dlmalloc_trim	external/unsupported/test/mpreal/dlmalloc.c	/^int dlmalloc_trim(size_t pad) {$/;"	f
dlmalloc_trim	external/unsupported/test/mpreal/dlmalloc.c	769;"	d	file:
dlmalloc_trim	external/unsupported/test/mpreal/dlmalloc.h	56;"	d
dlmalloc_usable_size	external/unsupported/test/mpreal/dlmalloc.c	/^size_t dlmalloc_usable_size(void* mem) {$/;"	f
dlmalloc_usable_size	external/unsupported/test/mpreal/dlmalloc.c	771;"	d	file:
dlmalloc_usable_size	external/unsupported/test/mpreal/dlmalloc.h	58;"	d
dlmallopt	external/unsupported/test/mpreal/dlmalloc.c	/^int dlmallopt(int param_number, int value) {$/;"	f
dlmallopt	external/unsupported/test/mpreal/dlmalloc.c	768;"	d	file:
dlmallopt	external/unsupported/test/mpreal/dlmalloc.h	55;"	d
dlmemalign	external/unsupported/test/mpreal/dlmalloc.c	/^void* dlmemalign(size_t alignment, size_t bytes) {$/;"	f
dlmemalign	external/unsupported/test/mpreal/dlmalloc.c	763;"	d	file:
dlmemalign	external/unsupported/test/mpreal/dlmalloc.h	50;"	d
dlpvalloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* dlpvalloc(size_t bytes) {$/;"	f
dlpvalloc	external/unsupported/test/mpreal/dlmalloc.c	766;"	d	file:
dlpvalloc	external/unsupported/test/mpreal/dlmalloc.h	53;"	d
dlrealloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* dlrealloc(void* oldmem, size_t bytes) {$/;"	f
dlrealloc	external/unsupported/test/mpreal/dlmalloc.c	764;"	d	file:
dlrealloc	external/unsupported/test/mpreal/dlmalloc.h	51;"	d
dlvalloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* dlvalloc(size_t bytes) {$/;"	f
dlvalloc	external/unsupported/test/mpreal/dlmalloc.c	765;"	d	file:
dlvalloc	external/unsupported/test/mpreal/dlmalloc.h	52;"	d
doComputeEigenvectors	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::doComputeEigenvectors(RealScalar matrixnorm)$/;"	f	class:Eigen::ComplexEigenSolver
doComputeEigenvectors	external/Eigen/src/Eigenvalues/EigenSolver.h	/^void EigenSolver<MatrixType>::doComputeEigenvectors()$/;"	f	class:Eigen::EigenSolver
do_check_any_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_any_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_free_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_free_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_inuse_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_inuse_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_malloc_state	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_malloc_state(mstate m) {$/;"	f	file:
do_check_malloced_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_malloced_chunk(mstate m, void* mem, size_t s) {$/;"	f	file:
do_check_mmapped_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_mmapped_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_smallbin	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_smallbin(mstate m, bindex_t i) {$/;"	f	file:
do_check_top_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_top_chunk(mstate m, mchunkptr p) {$/;"	f	file:
do_check_tree	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_tree(mstate m, tchunkptr t) {$/;"	f	file:
do_check_treebin	external/unsupported/test/mpreal/dlmalloc.c	/^static void do_check_treebin(mstate m, bindex_t i) {$/;"	f	file:
dogleg	external/unsupported/Eigen/src/NonLinearOptimization/dogleg.h	/^void dogleg($/;"	f	namespace:Eigen::internal
dot	external/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
dot	external/Eigen/src/Geometry/Quaternion.h	/^  template<class OtherDerived> inline Scalar dot(const QuaternionBase<OtherDerived>& other) const { return coeffs().dot(other.coeffs()); }$/;"	f	class:Eigen::QuaternionBase
dot	external/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot	external/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::dot(const SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
dot_nocheck	external/Eigen/src/Core/Dot.h	/^struct dot_nocheck$/;"	s	namespace:Eigen::internal
dot_nocheck	external/Eigen/src/Core/Dot.h	/^struct dot_nocheck<T, U, true>$/;"	s	namespace:Eigen::internal
double_bits	external/unsupported/test/mpreal/mpreal.cpp	/^int        mpreal::double_bits = -1;$/;"	m	class:mpfr::mpreal	file:
double_bits	external/unsupported/test/mpreal/mpreal.h	/^	static int				double_bits;		$/;"	m	class:mpfr::mpreal
dparm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<RealScalar,IPARM_SIZE,1>& dparm()$/;"	f	class:Eigen::PastixBase
dparm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    double& dparm(int idxparam)$/;"	f	class:Eigen::PastixBase
dtype	external/SuiteSparse/Include/cholmod_core.h	/^    int dtype ;		\/* double or float *\/$/;"	m	struct:cholmod_common_struct
dtype	external/SuiteSparse/Include/cholmod_core.h	/^    int dtype ;		\/* x and z are double or float *\/$/;"	m	struct:cholmod_sparse_struct
dtype	external/SuiteSparse/Include/cholmod_core.h	/^    int dtype ;		\/* x and z double or float *\/$/;"	m	struct:cholmod_dense_struct
dtype	external/SuiteSparse/Include/cholmod_core.h	/^    int dtype ; \/* x and z are double or float *\/$/;"	m	struct:cholmod_triplet_struct
dtype	external/SuiteSparse/Include/cholmod_core.h	/^    int dtype ; \/* x and z double or float *\/$/;"	m	struct:cholmod_factor_struct
dumpMemory	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void dumpMemory(Stream& s)$/;"	f	class:Eigen::CholmodBase
dumpMemory	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void dumpMemory(Stream& s)$/;"	f	class:Eigen::SimplicialCholeskyBase
dumpMemory	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void dumpMemory(Stream& s)$/;"	f	class:Eigen::SuperLUBase
dv	external/unsupported/test/mpreal/dlmalloc.c	/^  mchunkptr  dv;$/;"	m	struct:malloc_state	file:
dvsize	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     dvsize;$/;"	m	struct:malloc_state	file:
eckerle4_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    eckerle4_functor(void) : Functor<double>(3,35) {}$/;"	f	struct:eckerle4_functor
eckerle4_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct eckerle4_functor : Functor<double>$/;"	s	file:
ei_abs	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_abs (const T& x) { return internal::abs(x); }$/;"	f	namespace:Eigen
ei_abs2	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_abs2(const T& x) { return internal::abs2(x); }$/;"	f	namespace:Eigen
ei_aligned_delete	external/Eigen/src/Eigen2Support/Memory.h	/^template<typename T> inline void ei_aligned_delete(T *ptr, size_t size)$/;"	f	namespace:Eigen
ei_aligned_free	external/Eigen/src/Eigen2Support/Memory.h	/^inline void  ei_aligned_free(void *ptr) { internal::aligned_free(ptr); }$/;"	f	namespace:Eigen
ei_aligned_malloc	external/Eigen/src/Eigen2Support/Memory.h	/^inline void* ei_aligned_malloc(size_t size) { return internal::aligned_malloc(size); }$/;"	f	namespace:Eigen
ei_aligned_new	external/Eigen/src/Eigen2Support/Memory.h	/^template<typename T> inline T* ei_aligned_new(size_t size)$/;"	f	namespace:Eigen
ei_aligned_realloc	external/Eigen/src/Eigen2Support/Memory.h	/^inline void* ei_aligned_realloc(void *ptr, size_t new_size, size_t old_size) { return internal::aligned_realloc(ptr, new_size, old_size); }$/;"	f	namespace:Eigen
ei_assert	external/Eigen/src/Eigen2Support/Macros.h	13;"	d
ei_atan2	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_atan2(const T& x,const T& y) { return internal::atan2(x,y); }$/;"	f	namespace:Eigen
ei_cleantype	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype { typedef T type; };$/;"	s	namespace:Eigen
ei_cleantype	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T&>        { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T*>        { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T&>  { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T*>  { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_cleantype	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T>   { typedef typename ei_cleantype<T>::type type; };$/;"	s	namespace:Eigen
ei_conditional_aligned_free	external/Eigen/src/Eigen2Support/Memory.h	/^template<bool Align> inline void ei_conditional_aligned_free(void *ptr)$/;"	f	namespace:Eigen
ei_conditional_aligned_malloc	external/Eigen/src/Eigen2Support/Memory.h	/^template<bool Align> inline void* ei_conditional_aligned_malloc(size_t size)$/;"	f	namespace:Eigen
ei_conditional_aligned_realloc	external/Eigen/src/Eigen2Support/Memory.h	/^template<bool Align> inline void* ei_conditional_aligned_realloc(void* ptr, size_t new_size, size_t old_size)$/;"	f	namespace:Eigen
ei_conj	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_conj(const T& x) { return internal::conj(x); }$/;"	f	namespace:Eigen
ei_cos	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_cos (const T& x) { return internal::cos(x); }$/;"	f	namespace:Eigen
ei_declare_aligned_stack_constructed_variable	external/Eigen/src/Core/util/Memory.h	563;"	d
ei_exp	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_exp (const T& x) { return internal::exp(x); }$/;"	f	namespace:Eigen
ei_handmade_aligned_free	external/Eigen/src/Eigen2Support/Memory.h	/^inline void  ei_handmade_aligned_free(void *ptr) { internal::handmade_aligned_free(ptr); }$/;"	f	namespace:Eigen
ei_handmade_aligned_malloc	external/Eigen/src/Eigen2Support/Memory.h	/^inline void* ei_handmade_aligned_malloc(size_t size) { return internal::handmade_aligned_malloc(size); }$/;"	f	namespace:Eigen
ei_imag	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_imag(const T& x) { return internal::imag(x); }$/;"	f	namespace:Eigen
ei_internal_assert	external/Eigen/src/Eigen2Support/Macros.h	14;"	d
ei_isApprox	external/Eigen/src/Eigen2Support/MathFunctions.h	/^inline bool ei_isApprox(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen
ei_isApproxOrLessThan	external/Eigen/src/Eigen2Support/MathFunctions.h	/^inline bool ei_isApproxOrLessThan(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen
ei_isMuchSmallerThan	external/Eigen/src/Eigen2Support/MathFunctions.h	/^inline bool ei_isMuchSmallerThan(const Scalar& x, const OtherScalar& y,$/;"	f	namespace:Eigen
ei_is_same_type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T, typename U> struct ei_is_same_type { enum { ret = 0 }; };$/;"	s	namespace:Eigen
ei_is_same_type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_is_same_type<T,T> { enum { ret = 1 }; };$/;"	s	namespace:Eigen
ei_log	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_log (const T& x) { return internal::log(x); }$/;"	f	namespace:Eigen
ei_meta_false	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_false { enum { ret = 0 }; };$/;"	s	namespace:Eigen
ei_meta_if	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if <false, Then, Else> { typedef Else ret; };$/;"	s	namespace:Eigen
ei_meta_if	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if { typedef Then ret; };$/;"	s	namespace:Eigen
ei_meta_sqrt	external/Eigen/src/Eigen2Support/Meta.h	/^class ei_meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	c
ei_meta_true	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_true {  enum { ret = 1 }; };$/;"	s	namespace:Eigen
ei_pow	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_pow (const T& x,const T& y) { return internal::pow(x,y); }$/;"	f	namespace:Eigen
ei_quaternion_assign_impl	external/Eigen/src/Eigen2Support/Geometry/All.h	61;"	d
ei_quaternion_assign_impl	external/Eigen/src/Eigen2Support/Geometry/All.h	76;"	d
ei_quaternion_assign_impl	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^struct ei_quaternion_assign_impl<Other,3,3>$/;"	s	namespace:Eigen
ei_quaternion_assign_impl	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^struct ei_quaternion_assign_impl<Other,4,1>$/;"	s	namespace:Eigen
ei_quaternion_product	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^ei_quaternion_product(const Quaternion<Scalar>& a, const Quaternion<Scalar>& b)$/;"	f	namespace:Eigen
ei_random	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_random () { return internal::random<T>(); }$/;"	f	namespace:Eigen
ei_random	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_random (const T& x, const T& y) { return internal::random(x, y); }$/;"	f	namespace:Eigen
ei_real	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline typename NumTraits<T>::Real ei_real(const T& x) { return internal::real(x); }$/;"	f	namespace:Eigen
ei_sin	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_sin (const T& x) { return internal::sin(x); }$/;"	f	namespace:Eigen
ei_sqrt	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T ei_sqrt(const T& x) { return internal::sqrt(x); }$/;"	f	namespace:Eigen
ei_toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/All.h	60;"	d
ei_toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/All.h	75;"	d
ei_toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^static inline Matrix<Scalar,2,2> ei_toRotationMatrix(const Scalar& s)$/;"	f	namespace:Eigen
ei_toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^static inline Matrix<Scalar,Dim,Dim> ei_toRotationMatrix(const RotationBase<OtherDerived,Dim>& r)$/;"	f	namespace:Eigen
ei_toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^static inline const MatrixBase<OtherDerived>& ei_toRotationMatrix(const MatrixBase<OtherDerived>& mat)$/;"	f	namespace:Eigen
ei_traits	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^template<typename _Scalar> struct ei_traits<AngleAxis<_Scalar> >$/;"	s	namespace:Eigen
ei_traits	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^template<typename _Scalar> struct ei_traits<Quaternion<_Scalar> >$/;"	s	namespace:Eigen
ei_traits	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^template<typename _Scalar> struct ei_traits<Rotation2D<_Scalar> >$/;"	s	namespace:Eigen
ei_traits	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_traits : internal::traits<T>$/;"	s	namespace:Eigen
ei_transform_product_impl	external/Eigen/src/Eigen2Support/Geometry/All.h	62;"	d
ei_transform_product_impl	external/Eigen/src/Eigen2Support/Geometry/All.h	77;"	d
ei_transform_product_impl	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, Dim,1>$/;"	s	namespace:Eigen
ei_transform_product_impl	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen
ei_transform_product_impl	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, HDim,1>$/;"	s	namespace:Eigen
ei_transform_product_impl	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^struct ei_transform_product_impl<Other,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen
ei_unconst	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst { typedef T type; };$/;"	s	namespace:Eigen
ei_unconst	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const &> { typedef T & type; };$/;"	s	namespace:Eigen
ei_unconst	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const *> { typedef T * type; };$/;"	s	namespace:Eigen
ei_unconst	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<const T> { typedef T type; };$/;"	s	namespace:Eigen
ei_unpointer	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer { typedef T type; };$/;"	s	namespace:Eigen
ei_unpointer	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*> { typedef T type; };$/;"	s	namespace:Eigen
ei_unpointer	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*const> { typedef T type; };$/;"	s	namespace:Eigen
ei_unref	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref { typedef T type; };$/;"	s	namespace:Eigen
ei_unref	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref<T&> { typedef T type; };$/;"	s	namespace:Eigen
eigen2_dot	external/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::eigen2_dot(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
eigen2_dot	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar eigen2_dot(const Quaternion& other) const { return m_coeffs.eigen2_dot(other.m_coeffs); }$/;"	f	class:Eigen::Quaternion
eigen2_lu	external/Eigen/src/Eigen2Support/LU.h	/^MatrixBase<Derived>::eigen2_lu() const$/;"	f	class:Eigen::MatrixBase
eigen2_part_return_type	external/Eigen/src/Core/TriangularMatrix.h	/^struct eigen2_part_return_type$/;"	s	namespace:Eigen::internal
eigen2_part_return_type	external/Eigen/src/Core/TriangularMatrix.h	/^struct eigen2_part_return_type<MatrixType, SelfAdjoint>$/;"	s	namespace:Eigen::internal
eigen2_product_return_type	external/Eigen/src/Core/TriangularMatrix.h	/^    struct eigen2_product_return_type$/;"	s	class:Eigen::TriangularView
eigen_assert	external/Eigen/src/Core/util/Macros.h	207;"	d
eigen_internal_assert	external/Eigen/src/Core/util/Macros.h	211;"	d
eigen_pastix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, double *vals, int *perm, int * invp, double *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, float *vals, int *perm, int * invp, float *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<double> *vals, int *perm, int * invp, std::complex<double> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_pastix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void eigen_pastix(pastix_data_t **pastix_data, int pastix_comm, int n, int *ptr, int *idx, std::complex<float> *vals, int *perm, int * invp, std::complex<float> *x, int nbrhs, int *iparm, double *dparm)$/;"	f	namespace:Eigen::internal
eigen_plain_assert	external/Eigen/src/Core/util/Macros.h	169;"	d
eigen_plain_assert	external/Eigen/src/Core/util/Macros.h	177;"	d
eigenvalues	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvalues	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    const EigenvalueType& eigenvalues() const$/;"	f	class:Eigen::EigenSolver
eigenvalues	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::eigenvalues() const$/;"	f	class:Eigen::MatrixBase
eigenvalues	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::eigenvalues() const$/;"	f	class:Eigen::SelfAdjointView
eigenvalues	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const RealVectorType& eigenvalues() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eigenvalues_selector	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector$/;"	s	namespace:Eigen::internal
eigenvalues_selector	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^struct eigenvalues_selector<Derived, false>$/;"	s	namespace:Eigen::internal
eigenvectors	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    const EigenvectorType& eigenvectors() const$/;"	f	class:Eigen::ComplexEigenSolver
eigenvectors	external/Eigen/src/Eigenvalues/EigenSolver.h	/^typename EigenSolver<MatrixType>::EigenvectorsType EigenSolver<MatrixType>::eigenvectors() const$/;"	f	class:Eigen::EigenSolver
eigenvectors	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    const MatrixType& eigenvectors() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
eint	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal eint   (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
elseMatrix	external/Eigen/src/Core/Select.h	/^    const ElseMatrixType& elseMatrix() const$/;"	f	class:Eigen::Select
enable_if	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct enable_if<true,T>$/;"	s	namespace:Eigen::internal
enable_lock	external/unsupported/test/mpreal/dlmalloc.c	2512;"	d	file:
enable_mmap	external/unsupported/test/mpreal/dlmalloc.c	2516;"	d	file:
end	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end() const$/;"	f	class:Eigen::MatrixBase
end	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end()$/;"	f	class:Eigen::MatrixBase
end	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end(Index size) const$/;"	f	class:Eigen::MatrixBase
end	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::end(Index size)$/;"	f	class:Eigen::MatrixBase
endFill	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void endFill() {}$/;"	f	class:Eigen::SparseVector
endFill	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED void endFill() {}$/;"	f	class:Eigen::DynamicSparseMatrix
ensure_initialization	external/unsupported/test/mpreal/dlmalloc.c	2494;"	d	file:
epsfcn	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Scalar epsfcn;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
epsfcn	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar epsfcn;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
epsfcn	external/unsupported/Eigen/src/NumericalDiff/NumericalDiff.h	/^    Scalar epsfcn;$/;"	m	class:Eigen::NumericalDiff
epsilon	external/Eigen/src/SparseCore/SparseMatrix.h	/^    RealScalar epsilon;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
erf	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal erf (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
erfc	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal erfc (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
error	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar error() const$/;"	f	class:Eigen::IterativeSolverBase
error_handler	external/SuiteSparse/Include/cholmod_core.h	/^    void (*error_handler) (int status, const char *file,$/;"	m	struct:cholmod_common_struct
essentialVector	external/Eigen/src/Householder/HouseholderSequence.h	/^    const EssentialVectorType essentialVector(Index k) const$/;"	f	class:Eigen::HouseholderSequence
essentialVector	external/Eigen/src/Householder/HouseholderSequence.h	/^  static inline const EssentialVectorType essentialVector(const HouseholderSequenceType& h, Index k)$/;"	f	struct:Eigen::internal::hseq_side_dependent_impl
eulerAngles	external/Eigen/src/Geometry/EulerAngles.h	/^MatrixBase<Derived>::eulerAngles(Index a0, Index a1, Index a2) const$/;"	f	class:Eigen::MatrixBase
eval	external/Eigen/src/Core/DenseBase.h	/^    EIGEN_STRONG_INLINE EvalReturnType eval() const$/;"	f	class:Eigen::DenseBase
eval	external/Eigen/src/Core/PermutationMatrix.h	/^    PlainPermutationType eval() const { return *this; }$/;"	f	class:Eigen::Transpose
eval	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline const typename internal::eval<Derived>::type eval() const$/;"	f	class:Eigen::SparseMatrixBase
eval	external/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct eval<T,Sparse>$/;"	s	namespace:Eigen::internal
eval	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    EIGEN_STRONG_INLINE const typename internal::eval<Derived, IsSkyline>::type eval() const {$/;"	f	class:Eigen::SkylineMatrixBase
eval	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^template<typename T> class eval<T,IsSkyline>$/;"	c	namespace:Eigen::internal
evalSolver	external/unsupported/test/polynomialsolver.cpp	/^void evalSolver( const POLYNOMIAL& pols )$/;"	f
evalSolverSugarFunction	external/unsupported/test/polynomialsolver.cpp	/^void evalSolverSugarFunction( const POLYNOMIAL& pols, const ROOTS& roots, const REAL_ROOTS& real_roots )$/;"	f
evalTo	external/Eigen/src/Cholesky/LDLT.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/Cholesky/LLT.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	external/Eigen/src/Core/ArrayWrapper.h	/^    inline void evalTo(Dest& dst) const { dst = m_expression; }$/;"	f	class:Eigen::ArrayWrapper
evalTo	external/Eigen/src/Core/BandMatrix.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::internal::BandMatrixBase
evalTo	external/Eigen/src/Core/DenseBase.h	/^    template<typename Dest> inline void evalTo(Dest& ) const$/;"	f	class:Eigen::DenseBase
evalTo	external/Eigen/src/Core/DiagonalMatrix.h	/^void DiagonalBase<Derived>::evalTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::DiagonalBase
evalTo	external/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
evalTo	external/Eigen/src/Core/PermutationMatrix.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
evalTo	external/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::PermutationBase
evalTo	external/Eigen/src/Core/PermutationMatrix.h	/^    void evalTo(MatrixBase<DenseDerived>& other) const$/;"	f	class:Eigen::Transpose
evalTo	external/Eigen/src/Core/ProductBase.h	/^    inline void evalTo(Dest& dst) const { dst.setZero(); scaleAndAddTo(dst, Scalar(1)); }$/;"	f	class:Eigen::ScaledProduct
evalTo	external/Eigen/src/Core/ProductBase.h	/^    inline void evalTo(Dest& dst) const { dst.setZero(); scaleAndAddTo(dst,Scalar(1)); }$/;"	f	class:Eigen::ProductBase
evalTo	external/Eigen/src/Core/ReturnByValue.h	/^    inline void evalTo(Dest& dst) const$/;"	f	class:Eigen::ReturnByValue
evalTo	external/Eigen/src/Core/SolveTriangular.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::triangular_solve_retval
evalTo	external/Eigen/src/Core/Transpositions.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
evalTo	external/Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
evalTo	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
evalTo	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
evalTo	external/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
evalTo	external/Eigen/src/Geometry/Homogeneous.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
evalTo	external/Eigen/src/Householder/HouseholderSequence.h	/^    template<typename DestType> inline void evalTo(DestType& dst) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	external/Eigen/src/Householder/HouseholderSequence.h	/^    void evalTo(Dest& dst, Workspace& workspace) const$/;"	f	class:Eigen::HouseholderSequence
evalTo	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	external/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval
evalTo	external/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval
evalTo	external/Eigen/src/LU/FullPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/LU/Inverse.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::inverse_impl
evalTo	external/Eigen/src/LU/PartialPivLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	external/Eigen/src/QR/ColPivHouseholderQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  void evalTo(ResultType& result, WorkVectorType& workspace) const$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
evalTo	external/Eigen/src/QR/HouseholderQR.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/SVD/JacobiSVD.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      void evalTo(MatrixBase<DenseDerived>& dst) const$/;"	f	class:Eigen::SparseMatrixBase
evalTo	external/Eigen/src/SparseCore/SparsePermutation.h	/^    template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
evalTo	external/Eigen/src/SparseCore/SparseProduct.h	/^    void evalTo(Dest& result) const$/;"	f	class:Eigen::SparseSparseProduct
evalTo	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename DestScalar,int StorageOrder> void evalTo(SparseMatrix<DestScalar,StorageOrder,Index>& _dest) const$/;"	f	class:Eigen::SparseSelfAdjointView
evalTo	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename DestScalar> void evalTo(DynamicSparseMatrix<DestScalar,ColMajor,Index>& _dest) const$/;"	f	class:Eigen::SparseSelfAdjointView
evalTo	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename DestType,unsigned int DestUpLo> void evalTo(SparseSelfAdjointView<DestType,DestUpLo>& dest) const$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
evalTo	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    void evalTo(SparseMatrix<DestScalar,Options,DstIndex>& _dest) const$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
evalTo	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval
evalTo	external/Eigen/src/misc/Image.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::image_retval_base
evalTo	external/Eigen/src/misc/Kernel.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::kernel_retval_base
evalTo	external/Eigen/src/misc/Solve.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval_base
evalTo	external/Eigen/src/misc/SparseSolve.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval_with_guess
evalTo	external/Eigen/src/misc/SparseSolve.h	/^  template<typename Dest> inline void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
evalTo	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^  template<typename Dest> void evalTo(Dest& dst) const$/;"	f	struct:Eigen::internal::solve_retval
evalTo	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    inline void evalTo(ResultType& result) const$/;"	f	struct:Eigen::MatrixExponentialReturnValue
evalTo	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    inline void evalTo(ResultType& result) const$/;"	f	class:Eigen::MatrixFunctionReturnValue
evalTo	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  inline void evalTo(ResultType& result) const$/;"	f	class:Eigen::MatrixLogarithmReturnValue
evalTo	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    inline void evalTo(ResultType& result) const$/;"	f	class:Eigen::MatrixSquareRootReturnValue
evalTo	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    void evalTo(MatrixBase<DenseDerived>& dst) const {$/;"	f	class:Eigen::SkylineMatrixBase
evalToLazy	external/Eigen/src/Core/TriangularMatrix.h	/^void TriangularBase<Derived>::evalToLazy(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::TriangularBase
eval_closed_spline2d	external/unsupported/test/splines.cpp	/^void eval_closed_spline2d()$/;"	f
eval_spline3d	external/unsupported/test/splines.cpp	/^void eval_spline3d()$/;"	f
eval_spline3d_onbrks	external/unsupported/test/splines.cpp	/^void eval_spline3d_onbrks()$/;"	f
exp	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::exp() const$/;"	f	class:Eigen::Cwise
exp	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^exp() const$/;"	f
exp	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^const MatrixExponentialReturnValue<Derived> MatrixBase<Derived>::exp() const$/;"	f	class:Eigen::MatrixBase
exp	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^    static Scalar exp(Scalar x, int)$/;"	f	class:Eigen::StdStemFunctions
exp	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal exp(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
exp10	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal exp10(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
exp2	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal exp2(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
expfn	external/unsupported/doc/examples/MatrixFunction.cpp	/^std::complex<double> expfn(std::complex<double> x, int)$/;"	f
expfn	external/unsupported/test/matrix_exponential.cpp	/^T expfn(T x, int)$/;"	f
expm1	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal expm1  (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
expression	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    Lhs& expression() const $/;"	f	class:Eigen::SelfCwiseBinaryOp
expression	external/Eigen/src/Core/Swap.h	/^    ExpressionType& expression() const { return m_expression; }$/;"	f	class:Eigen::SwapWrapper
extend	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
extend	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const VectorType& p)$/;"	f	class:Eigen::AlignedBox
extend	external/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const AlignedBox& b)$/;"	f	class:Eigen::AlignedBox
extend	external/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& extend(const MatrixBase<Derived>& a_p)$/;"	f	class:Eigen::AlignedBox
extendedTo	external/Eigen/src/Core/VectorwiseOp.h	/^    extendedTo(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
exteriorDistance	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline Scalar exteriorDistance(const VectorType& p) const$/;"	f	class:Eigen::AlignedBox
exteriorDistance	external/Eigen/src/Geometry/AlignedBox.h	/^  inline NonInteger exteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
exteriorDistance	external/Eigen/src/Geometry/AlignedBox.h	/^  inline NonInteger exteriorDistance(const MatrixBase<Derived>& p) const$/;"	f	class:Eigen::AlignedBox
extp	external/unsupported/test/mpreal/dlmalloc.c	/^  void*      extp;      \/* Unused but available for extensions *\/$/;"	m	struct:malloc_state	file:
extract	external/Eigen/src/Core/Transpose.h	/^  static inline const XprType extract(const XprType& x) { return x; }$/;"	f	struct:Eigen::internal::blas_traits
extract	external/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return Base::extract(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extract	external/Eigen/src/Core/util/BlasUtil.h	/^  static inline ExtractType extract(const XprType& x) { return x; }$/;"	f	struct:Eigen::internal::blas_traits
extractData	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLUBase<MatrixType,Derived>::extractData() const$/;"	f	class:Eigen::SuperLUBase
extractData	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^void UmfPackLU<MatrixType>::extractData() const$/;"	f	class:Eigen::UmfPackLU
extractScalarFactor	external/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return Base::extractScalarFactor(x.nestedExpression()); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	external/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x) { return conj(Base::extractScalarFactor(x.nestedExpression())); }$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	external/Eigen/src/Core/util/BlasUtil.h	/^  static inline Scalar extractScalarFactor(const XprType& x)$/;"	f	struct:Eigen::internal::blas_traits
extractScalarFactor	external/Eigen/src/Core/util/BlasUtil.h	/^  static inline const Scalar extractScalarFactor(const XprType&) { return Scalar(1); }$/;"	f	struct:Eigen::internal::blas_traits
extract_data	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename T> const typename T::Scalar* extract_data(const T& m)$/;"	f	namespace:Eigen::internal
extract_data_selector	external/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector {$/;"	s	namespace:Eigen::internal
extract_data_selector	external/Eigen/src/Core/util/BlasUtil.h	/^struct extract_data_selector<T,false> {$/;"	s	namespace:Eigen::internal
exts	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     exts;$/;"	m	struct:malloc_state	file:
fabs	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fabs(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
fac_ui	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fac_ui (unsigned long int v, mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
factor	external/Eigen/src/Geometry/Scaling.h	/^  inline Scalar& factor() { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factor	external/Eigen/src/Geometry/Scaling.h	/^  inline const Scalar& factor() const { return m_factor; }$/;"	f	class:Eigen::UniformScaling
factor	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Scalar factor;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
factor	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar factor;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
factorize	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::CholmodBase
factorize	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    DiagonalPreconditioner& factorize(const MatType& mat)$/;"	f	class:Eigen::DiagonalPreconditioner
factorize	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    IdentityPreconditioner& factorize(const MatrixType& ) { return *this; }$/;"	f	class:Eigen::IdentityPreconditioner
factorize	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::factorize(const _MatrixType& amat)$/;"	f	class:Eigen::IncompleteLUT
factorize	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& factorize(const MatrixType& A)$/;"	f	class:Eigen::IterativeSolverBase
factorize	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLDLT
factorize	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLLT
factorize	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::PastixLU
factorize	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::factorize(ColSpMatrix& mat)$/;"	f	class:Eigen::PastixBase
factorize	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^Derived& PardisoImpl<Derived>::factorize(const MatrixType& a)$/;"	f	class:Eigen::PardisoImpl
factorize	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholesky
factorize	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialCholeskyBase
factorize	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLDLT
factorize	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    void factorize(const MatrixType& a)$/;"	f	class:Eigen::SimplicialLLT
factorize	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperILU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperILU
factorize	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^void SuperLU<MatrixType>::factorize(const MatrixType& a)$/;"	f	class:Eigen::SuperLU
factorize	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void factorize(const MatrixType& matrix)$/;"	f	class:Eigen::UmfPackLU
factorize	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  void factorize(int nfft)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
factorize_preordered	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^void SimplicialCholeskyBase<Derived>::factorize_preordered(const CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
false_type	external/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
fcn_chkder	external/unsupported/test/NonLinearOptimization.cpp	/^int fcn_chkder(const VectorXd &x, VectorXd &fvec, MatrixXd &fjac, int iflag)$/;"	f
fd	external/unsupported/test/mpreal/dlmalloc.c	/^  struct malloc_chunk* fd;         \/* double links -- used only if free. *\/$/;"	m	struct:malloc_chunk	typeref:struct:malloc_chunk::malloc_chunk	file:
fd	external/unsupported/test/mpreal/dlmalloc.c	/^  struct malloc_tree_chunk* fd;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
fdjac1	external/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h	/^DenseIndex fdjac1($/;"	f	namespace:Eigen::internal
features	build/CMakeFiles/feature_tests.c	/^  const char features[] = {"\\n"$/;"	v
features	build/CMakeFiles/feature_tests.cxx	/^  const char features[] = {"\\n"$/;"	v
fft_rmse	external/unsupported/test/FFTW.cpp	/^    long double fft_rmse( const VT1 & fftbuf,const VT2 & timebuf)$/;"	f
fftw_cast	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  T * fftw_cast(const T* p)$/;"	f	namespace:Eigen::internal
fftw_cast	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  fftw_complex * fftw_cast( const std::complex<double> * p)$/;"	f	namespace:Eigen::internal
fftw_cast	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  fftwf_complex * fftw_cast( const std::complex<float> * p)$/;"	f	namespace:Eigen::internal
fftw_cast	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  fftwl_complex * fftw_cast( const std::complex<long double> * p)$/;"	f	namespace:Eigen::internal
fftw_impl	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_impl$/;"	s	namespace:Eigen::internal
fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      fftw_plan() :m_plan(NULL) {}$/;"	f	struct:Eigen::internal::fftw_plan
fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan {};$/;"	s	namespace:Eigen::internal
fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan<double>$/;"	s	namespace:Eigen::internal
fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan<float>$/;"	s	namespace:Eigen::internal
fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^  struct fftw_plan<long double>$/;"	s	namespace:Eigen::internal
fill	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE void DenseBase<Derived>::fill(const Scalar& value)$/;"	f	class:Eigen::DenseBase
fill	external/Eigen/src/Core/TriangularMatrix.h	/^    void fill(const Scalar& value) { setConstant(value); }$/;"	f	class:Eigen::TriangularView
fill	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index i)$/;"	f	class:Eigen::SparseVector
fill	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fill(Index r, Index c)$/;"	f	class:Eigen::SparseVector
fill	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED Scalar& fill(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
fillrand	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index i)$/;"	f	class:Eigen::SparseVector
fillrand	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index r, Index c)$/;"	f	class:Eigen::SparseVector
fillrand	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED Scalar& fillrand(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
final_asis	external/SuiteSparse/Include/cholmod_core.h	/^    int final_asis ;	\/* If TRUE, then ignore the other final_* parameters$/;"	m	struct:cholmod_common_struct
final_ll	external/SuiteSparse/Include/cholmod_core.h	/^    int final_ll ;	\/* If TRUE, leave factor in LL' form when done.$/;"	m	struct:cholmod_common_struct
final_monotonic	external/SuiteSparse/Include/cholmod_core.h	/^    int final_monotonic ;   \/* If TRUE, ensure columns are monotonic when done.$/;"	m	struct:cholmod_common_struct
final_pack	external/SuiteSparse/Include/cholmod_core.h	/^    int final_pack ;	\/* If TRUE, pack the columns when done.  If TRUE, and$/;"	m	struct:cholmod_common_struct
final_resymbol	external/SuiteSparse/Include/cholmod_core.h	/^    int final_resymbol ;\/* if cholmod_factorize performed a supernodal$/;"	m	struct:cholmod_common_struct
final_super	external/SuiteSparse/Include/cholmod_core.h	/^    int final_super ;	\/* If TRUE, leave a factor in supernodal form when$/;"	m	struct:cholmod_common_struct
finalize	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void finalize()$/;"	f	class:Eigen::SparseMatrix
finalize	external/Eigen/src/SparseCore/SparseVector.h	/^    inline void finalize() {}$/;"	f	class:Eigen::SparseVector
finalize	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void finalize() {$/;"	f	class:Eigen::SkylineMatrix
finalize	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline void finalize() {}$/;"	f	class:Eigen::DynamicSparseMatrix
findCluster	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^typename MatrixFunction<MatrixType,AtomicType,1>::ListOfClusters::iterator MatrixFunction<MatrixType,AtomicType,1>::findCluster(Scalar key)$/;"	f	class:Eigen::MatrixFunction
findSmallSubdiagEntry	external/Eigen/src/Eigenvalues/RealSchur.h	/^inline typename MatrixType::Index RealSchur<MatrixType>::findSmallSubdiagEntry(Index iu, Scalar norm)$/;"	f	class:Eigen::RealSchur
finished	external/Eigen/src/Core/CommaInitializer.h	/^  inline XprType& finished() { return m_xpr; }$/;"	f	struct:Eigen::CommaInitializer
finished	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool finished(const MatrixBase<VectorType> &v)$/;"	f	class:Eigen::IterationController
finished	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool finished(double nr)$/;"	f	class:Eigen::IterationController
first	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacket first;$/;"	m	struct:Eigen::internal::gebp_traits::DoublePacket
first	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  VectorType first;$/;"	m	struct:Eigen::internal::vector_int_pair
first	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool first() { return m_nit == 0; }$/;"	f	class:Eigen::IterationController
first_aligned	external/Eigen/src/Core/DenseCoeffsBase.h	/^static inline typename Derived::Index first_aligned(const Derived& m)$/;"	f	namespace:Eigen::internal
first_aligned	external/Eigen/src/Core/util/Memory.h	/^static inline Index first_aligned(const Scalar* array, Index size)$/;"	f	namespace:Eigen::internal
first_aligned_impl	external/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl$/;"	s	namespace:Eigen::internal
first_aligned_impl	external/Eigen/src/Core/DenseCoeffsBase.h	/^struct first_aligned_impl<Derived, false>$/;"	s	namespace:Eigen::internal
fitHyperplane	external/Eigen/src/Eigen2Support/LeastSquares.h	/^void fitHyperplane(int numPoints,$/;"	f	namespace:Eigen
fits_in_bits	external/unsupported/test/mpreal/mpreal.h	/^inline bool mpreal::fits_in_bits(double x, int n)$/;"	f	class:mpfr::mpreal
fjac	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    JacobianType fjac;$/;"	m	class:Eigen::HybridNonLinearSolver
fjac	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    JacobianType fjac;$/;"	m	class:Eigen::LevenbergMarquardt
fl	external/SuiteSparse/Include/cholmod_core.h	/^	double fl ;	    \/* flop count for a "pure", real simplicial LL'$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
fl	external/SuiteSparse/Include/cholmod_core.h	/^    double fl ;		    \/* LL' flop count from most recent analysis *\/$/;"	m	struct:cholmod_common_struct
flag_t	external/unsupported/test/mpreal/dlmalloc.c	/^typedef unsigned int flag_t;           \/* The type of various bit flag sets *\/$/;"	t	file:
flagged	external/Eigen/src/Core/Flagged.h	/^DenseBase<Derived>::flagged() const$/;"	f	class:Eigen::DenseBase
flags	external/Eigen/src/Core/IO.h	/^  int flags;$/;"	m	struct:Eigen::IOFormat
flags	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    int flags() const {$/;"	f	class:Eigen::SkylineInplaceLU
floor	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal floor(const mpreal& v)$/;"	f	namespace:mpfr
floor_log2	external/Eigen/src/Core/MathFunctions.h	/^struct floor_log2 {};$/;"	s	namespace:Eigen::internal
floor_log2	external/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_bogus>$/;"	s	namespace:Eigen::internal
floor_log2	external/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_move_down>$/;"	s	namespace:Eigen::internal
floor_log2	external/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_move_up>$/;"	s	namespace:Eigen::internal
floor_log2	external/Eigen/src/Core/MathFunctions.h	/^struct floor_log2<n, lower, upper, floor_log2_terminate>$/;"	s	namespace:Eigen::internal
floor_log2_bogus	external/Eigen/src/Core/MathFunctions.h	/^  floor_log2_bogus$/;"	e	enum:Eigen::internal::__anon148
floor_log2_move_down	external/Eigen/src/Core/MathFunctions.h	/^  floor_log2_move_down,$/;"	e	enum:Eigen::internal::__anon148
floor_log2_move_up	external/Eigen/src/Core/MathFunctions.h	/^  floor_log2_move_up,$/;"	e	enum:Eigen::internal::__anon148
floor_log2_selector	external/Eigen/src/Core/MathFunctions.h	/^template<unsigned int n, int lower, int upper> struct floor_log2_selector$/;"	s	namespace:Eigen::internal
floor_log2_terminate	external/Eigen/src/Core/MathFunctions.h	/^  floor_log2_terminate,$/;"	e	enum:Eigen::internal::__anon148
fm	external/unsupported/test/mpreal/dlmalloc.c	4834;"	d	file:
fma	external/unsupported/test/mpreal/mpreal.cpp	/^const mpreal fma (const mpreal& v1, const mpreal& v2, const mpreal& v3, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
fmax	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fmax(const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
fmin	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fmin(const mpreal& x, const mpreal& y,  mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
fmod	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal fmod (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
fms	external/unsupported/test/mpreal/mpreal.cpp	/^const mpreal fms (const mpreal& v1, const mpreal& v2, const mpreal& v3, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
fnorm	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar fnorm;$/;"	m	class:Eigen::HybridNonLinearSolver
fnorm	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar fnorm, gnorm;$/;"	m	class:Eigen::LevenbergMarquardt
fnorm1	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar pnorm, xnorm, fnorm1;$/;"	m	class:Eigen::HybridNonLinearSolver
fnorm1	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
foo	external/unsupported/test/autodiff.cpp	/^EIGEN_DONT_INLINE Scalar foo(const Scalar& x, const Scalar& y)$/;"	f
foo	external/unsupported/test/autodiff.cpp	/^EIGEN_DONT_INLINE typename Vector::Scalar foo(const Vector& p)$/;"	f
foo	external/unsupported/test/forward_adolc.cpp	/^EIGEN_DONT_INLINE typename Vector::Scalar foo(const Vector& p)$/;"	f
footprint	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     footprint;$/;"	m	struct:malloc_state	file:
forceAlignedAccess	external/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccess	external/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccess()$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	external/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf() const$/;"	f	class:Eigen::MatrixBase
forceAlignedAccessIf	external/Eigen/src/Core/ForceAlignedAccess.h	/^MatrixBase<Derived>::forceAlignedAccessIf()$/;"	f	class:Eigen::MatrixBase
fordblks	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE fordblks; \/* total free space *\/$/;"	m	struct:mallinfo	file:
fordblks	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE fordblks; \/* total free space *\/$/;"	m	struct:mallinfo
format	external/Eigen/src/Core/IO.h	/^DenseBase<Derived>::format(const IOFormat& fmt) const$/;"	f	class:Eigen::DenseBase
fortran_to_c_numbering	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  void fortran_to_c_numbering (MatrixType& mat)$/;"	f	namespace:Eigen::internal
forward_jacobian	external/unsupported/test/autodiff.cpp	/^template<typename Func> void forward_jacobian(const Func& f)$/;"	f
frac	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal frac (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
frame_	RGBDTrajectory.h	/^	int frame_;$/;"	m	struct:FramedTransformation
free_memory	external/SuiteSparse/Include/SuiteSparse_config.h	/^    void (*free_memory) (void *) ;              \/* pointer to free *\/$/;"	m	struct:SuiteSparse_config_struct
free_memory	external/SuiteSparse/Include/cholmod_core.h	/^    void (*free_memory) (void *) ;		\/* pointer to free *\/$/;"	m	struct:cholmod_common_struct
frexp	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal frexp(const mpreal& v, mp_exp_t* exp)$/;"	f	namespace:mpfr
fromPositionOrientationScale	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::fromPositionOrientationScale(const MatrixBase<PositionDerived> &position,$/;"	f	class:Eigen::Transform
fromPositionOrientationScale	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::fromPositionOrientationScale(const MatrixBase<PositionDerived> &position,$/;"	f	class:Eigen::Transform
fromRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^Rotation2D<Scalar>& Rotation2D<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::Rotation2D
fromRotationMatrix	external/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
fromRotationMatrix	external/Eigen/src/Geometry/Rotation2D.h	/^Rotation2D<Scalar>& Rotation2D<Scalar>::fromRotationMatrix(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::Rotation2D
fsmblks	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE fsmblks;  \/* always 0 *\/$/;"	m	struct:mallinfo	file:
fsmblks	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE fsmblks;  \/* always 0 *\/$/;"	m	struct:mallinfo
ftol	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar ftol;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
fullPivHouseholderQr	external/Eigen/src/QR/FullPivHouseholderQR.h	/^MatrixBase<Derived>::fullPivHouseholderQr() const$/;"	f	class:Eigen::MatrixBase
fullPivLu	external/Eigen/src/LU/FullPivLU.h	/^MatrixBase<Derived>::fullPivLu() const$/;"	f	class:Eigen::MatrixBase
functor	external/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseBinaryOp
functor	external/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseNullaryOp
functor	external/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryOp
functor	external/Eigen/src/Core/CwiseUnaryView.h	/^    const ViewOp& functor() const { return m_functor; }$/;"	f	class:Eigen::CwiseUnaryView
functor	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    const BinaryOp& functor() const $/;"	f	class:Eigen::SelfCwiseBinaryOp
functor	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FunctorType &functor;$/;"	m	class:Eigen::HybridNonLinearSolver
functor	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FunctorType &functor;$/;"	m	class:Eigen::LevenbergMarquardt
functor_allows_mixing_real_and_complex	external/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_allows_mixing_real_and_complex { enum { ret = 0 }; };$/;"	s	namespace:Eigen::internal
functor_allows_mixing_real_and_complex	external/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_allows_mixing_real_and_complex<scalar_conj_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_allows_mixing_real_and_complex	external/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_allows_mixing_real_and_complex<scalar_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_has_linear_access	external/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = 1 }; };$/;"	s	namespace:Eigen::internal
functor_has_linear_access	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct functor_has_linear_access<scalar_identity_op<Scalar> > { enum { ret = 0 }; };$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_abs2_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_abs_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_acos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_add_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_asin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_binary_pow_op<Scalar,OtherScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_cast_op<Scalar,NewType> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_conj_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_conjugate_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_constant_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_cos_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_cube_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_difference_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_exp_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_hypot_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_identity_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_imag_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_imag_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_inverse_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_log_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_max_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_min_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_multiple2_op<Scalar1,Scalar2> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_multiple_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_opposite_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_pow_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_product_op<LhsScalar,RhsScalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_quotient1_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_quotient_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_real_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_real_ref_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_sin_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_sqrt_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_square_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_sum_op<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<scalar_tan_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binary_compose<T0,T1,T2> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binder1st<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::binder2nd<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::divides<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::greater<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::greater_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::less<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::less_equal<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::logical_and<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::logical_not<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::logical_or<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::minus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::multiplies<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::not_equal_to<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::plus<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::project1st<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::project2nd<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::select1st<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::select2nd<std::pair<T0,T1> > >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::unary_compose<T0,T1> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^struct functor_traits<std::unary_negate<T> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^template <typename Scalar, bool RandomAccess> struct functor_traits< linspaced_op<Scalar,RandomAccess> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^template<> struct functor_traits<scalar_boolean_and_op> {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Functors.h	/^template<> struct functor_traits<scalar_boolean_or_op> {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Random.h	/^struct functor_traits<scalar_random_op<Scalar> >$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Visitor.h	/^struct functor_traits<max_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
functor_traits	external/Eigen/src/Core/Visitor.h	/^struct functor_traits<min_coeff_visitor<Scalar> > {$/;"	s	namespace:Eigen::internal
fvec	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::HybridNonLinearSolver
fvec	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::LevenbergMarquardt
fwd	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd( Complex * dst,const Complex *src,int nfft)$/;"	f	struct:Eigen::internal::fftw_impl
fwd	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd( Complex * dst,const Scalar * src,int nfft) $/;"	f	struct:Eigen::internal::fftw_impl
fwd	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd(complex_type * dst,complex_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
fwd	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd(complex_type * dst,scalar_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
fwd	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void fwd( Complex * dst,const Complex *src,int nfft)$/;"	f	struct:Eigen::internal::kissfft_impl
fwd	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void fwd( Complex * dst,const Scalar * src,int nfft) $/;"	f	struct:Eigen::internal::kissfft_impl
fwd2	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd2( complex_type * dst,complex_type * src,int n0,int n1) {$/;"	f	struct:Eigen::internal::fftw_plan
fwd2	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void fwd2(Complex * dst, const Complex * src, int n0,int n1)$/;"	f	struct:Eigen::internal::fftw_impl
fwd2	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void fwd2( Complex * dst,const Complex *src,int n0,int n1)$/;"	f	struct:Eigen::internal::kissfft_impl
fwd_inv	external/unsupported/doc/examples/FFT.cpp	/^void fwd_inv(size_t nfft)$/;"	f
gamma	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal gamma (const mpreal& x, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
gebp_kernel	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gebp_kernel$/;"	s	namespace:Eigen::internal
gebp_madd	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void gebp_madd(const CJ& cj, A& a, B& b, C& c, T& t)$/;"	f	namespace:Eigen::internal
gebp_madd_selector	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename A, typename B, typename C, typename T> struct gebp_madd_selector {$/;"	s	namespace:Eigen::internal
gebp_madd_selector	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  template<typename CJ, typename T> struct gebp_madd_selector<CJ,T,T,T,T> {$/;"	s	namespace:Eigen::internal
gebp_traits	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits$/;"	c	namespace:Eigen::internal
gebp_traits	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<RealScalar, std::complex<RealScalar>, false, _ConjRhs >$/;"	c	namespace:Eigen::internal
gebp_traits	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, RealScalar, _ConjLhs, false>$/;"	c	namespace:Eigen::internal
gebp_traits	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^class gebp_traits<std::complex<RealScalar>, std::complex<RealScalar>, _ConjLhs, _ConjRhs >$/;"	c	namespace:Eigen::internal
gemm_blocking_space	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(DenseIndex \/*rows*\/, DenseIndex \/*cols*\/, DenseIndex \/*depth*\/)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    gemm_blocking_space(DenseIndex rows, DenseIndex cols, DenseIndex depth)$/;"	f	class:Eigen::internal::gemm_blocking_space
gemm_blocking_space	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, false>$/;"	c	namespace:Eigen::internal
gemm_blocking_space	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class gemm_blocking_space<StorageOrder,_LhsScalar,_RhsScalar,MaxRows, MaxCols, MaxDepth, KcFactor, true>$/;"	c	namespace:Eigen::internal
gemm_functor	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  gemm_functor(const Lhs& lhs, const Rhs& rhs, Dest& dest, Scalar actualAlpha,$/;"	f	struct:Eigen::internal::gemm_functor
gemm_functor	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct gemm_functor$/;"	s	namespace:Eigen::internal
gemm_pack_lhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_lhs$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, nr, ColMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemm_pack_rhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^struct gemm_pack_rhs<Scalar, Index, nr, RowMajor, Conjugate, PanelMode>$/;"	s	namespace:Eigen::internal
gemv_selector	external/Eigen/src/Core/GeneralProduct.h	/^struct gemv_selector<OnTheLeft,StorageOrder,BlasCompatible>$/;"	s	namespace:Eigen::internal
gemv_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,ColMajor,false>$/;"	s	namespace:Eigen::internal
gemv_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,ColMajor,true>$/;"	s	namespace:Eigen::internal
gemv_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,RowMajor,false>$/;"	s	namespace:Eigen::internal
gemv_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<> struct gemv_selector<OnTheRight,RowMajor,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	external/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,Dynamic,true>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	external/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,false>$/;"	s	namespace:Eigen::internal
gemv_static_vector_if	external/Eigen/src/Core/GeneralProduct.h	/^struct gemv_static_vector_if<Scalar,Size,MaxSize,true>$/;"	s	namespace:Eigen::internal
general_det3_helper	external/Eigen/src/LU/Inverse.h	/^inline const typename Derived::Scalar general_det3_helper$/;"	f	namespace:Eigen::internal
general_matrix_matrix_product	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_product	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct general_matrix_matrix_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_rankupdate	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^struct general_matrix_matrix_rankupdate :$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,ColMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_matrix_triangular_product	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct general_matrix_matrix_triangular_product<Index,LhsScalar,LhsStorageOrder,ConjugateLhs,RhsScalar,RhsStorageOrder,ConjugateRhs,RowMajor,UpLo,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,ColMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^struct general_matrix_vector_product<Index,LhsScalar,RowMajor,ConjugateLhs,RhsScalar,ConjugateRhs,Version>$/;"	s	namespace:Eigen::internal
general_matrix_vector_product_gemv	external/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^struct general_matrix_vector_product_gemv :$/;"	s	namespace:Eigen::internal
generateTestMatrix	external/unsupported/test/matrix_square_root.cpp	/^struct generateTestMatrix<MatrixType,0>$/;"	s	file:
generateTestMatrix	external/unsupported/test/matrix_square_root.cpp	/^struct generateTestMatrix<MatrixType,1>$/;"	s	file:
generic_aligned_realloc	external/Eigen/src/Core/util/Memory.h	/^inline void* generic_aligned_realloc(void* ptr, size_t size, size_t old_size)$/;"	f	namespace:Eigen::internal
getChildren	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  EIGEN_STRONG_INLINE void getChildren(Index index, VolumeIterator &outVBegin, VolumeIterator &outVEnd,$/;"	f	class:Eigen::KdBVH
getL	external/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	external/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LDLT_Traits
getL	external/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	external/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixL getL(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LLT_Traits
getL	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixL getL(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::traits
getMarketHeader	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^inline bool getMarketHeader(const std::string& filename, int& sym, bool& iscomplex, bool& isvector)$/;"	f	namespace:Eigen
getMatrix	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLDLT
getMatrix	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLLT
getMatrix	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void getMatrix(const MatrixType& matrix)$/;"	f	class:Eigen::PardisoLU
getPadeDegree	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^int MatrixLogarithmAtomic<MatrixType>::getPadeDegree(double normTminusI)$/;"	f	class:Eigen::MatrixLogarithmAtomic
getPadeDegree	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^int MatrixLogarithmAtomic<MatrixType>::getPadeDegree(float normTminusI)$/;"	f	class:Eigen::MatrixLogarithmAtomic
getPadeDegree	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^int MatrixLogarithmAtomic<MatrixType>::getPadeDegree(long double normTminusI)$/;"	f	class:Eigen::MatrixLogarithmAtomic
getPrecision	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::getPrecision() const$/;"	f	class:mpfr::mpreal
getRootIndex	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  inline Index getRootIndex() const { return (int)boxes.size() - 1; }$/;"	f	class:Eigen::KdBVH
getU	external/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	external/Eigen/src/Cholesky/LDLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LDLT_Traits
getU	external/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	external/Eigen/src/Cholesky/LLT.h	/^  static inline MatrixU getU(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::LLT_Traits
getU	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^  static inline MatrixU getU(const MatrixType& m) { return m.adjoint(); }$/;"	f	struct:Eigen::internal::traits
getVolume	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  inline const Volume &getVolume(Index index) const$/;"	f	class:Eigen::KdBVH
get_boxes_helper	external/unsupported/Eigen/src/BVH/KdBVH.h	/^struct get_boxes_helper {$/;"	s	namespace:Eigen::internal
get_boxes_helper	external/unsupported/Eigen/src/BVH/KdBVH.h	/^struct get_boxes_helper<ObjectList, VolumeList, int> {$/;"	s	namespace:Eigen::internal
get_default_base	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::get_default_base()$/;"	f	class:mpfr::mpreal
get_default_prec	external/unsupported/test/mpreal/mpreal.h	/^inline mp_prec_t mpreal::get_default_prec()$/;"	f	class:mpfr::mpreal
get_default_rnd	external/unsupported/test/mpreal/mpreal.h	/^inline mp_rnd_t mpreal::get_default_rnd()$/;"	f	class:mpfr::mpreal
get_double_bits	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::get_double_bits()$/;"	f	class:mpfr::mpreal
get_emax	external/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emax (void)$/;"	f	class:mpfr::mpreal
get_emax_max	external/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emax_max (void)$/;"	f	class:mpfr::mpreal
get_emax_min	external/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emax_min (void)$/;"	f	class:mpfr::mpreal
get_emin	external/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emin (void)$/;"	f	class:mpfr::mpreal
get_emin_max	external/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emin_max (void)$/;"	f	class:mpfr::mpreal
get_emin_min	external/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_emin_min (void)$/;"	f	class:mpfr::mpreal
get_exp	external/unsupported/test/mpreal/mpreal.h	/^inline mp_exp_t mpreal::get_exp ()$/;"	f	class:mpfr::mpreal
get_factor	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename From,typename To> struct get_factor {$/;"	s	namespace:Eigen::internal
get_factor	external/Eigen/src/Core/util/BlasUtil.h	/^template<typename Scalar> struct get_factor<Scalar,typename NumTraits<Scalar>::Real> {$/;"	s	namespace:Eigen::internal
get_foot	external/unsupported/test/mpreal/dlmalloc.c	2151;"	d	file:
get_mstate_for	external/unsupported/test/mpreal/dlmalloc.c	2931;"	d	file:
get_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      PlanData & get_plan(int n0,int n1,bool inverse,void * dst,const void * src)$/;"	f	struct:Eigen::internal::fftw_impl
get_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      PlanData & get_plan(int nfft,bool inverse,void * dst,const void * src)$/;"	f	struct:Eigen::internal::fftw_impl
get_plan	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    PlanData & get_plan(int nfft, bool inverse)$/;"	f	struct:Eigen::internal::kissfft_impl
get_prec	external/unsupported/test/mpreal/mpreal.h	/^inline mp_prec_t mpreal::get_prec() const$/;"	f	class:mpfr::mpreal
get_restart	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  int get_restart() { return m_restart; }$/;"	f	class:Eigen::GMRES
global_math_functions_filtering_base	external/Eigen/src/Core/MathFunctions.h	/^struct global_math_functions_filtering_base$/;"	s	namespace:Eigen::internal
gm	external/unsupported/test/mpreal/dlmalloc.c	2500;"	d	file:
gmres	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^bool gmres(const MatrixType & mat, const Rhs & rhs, Dest & x, const Preconditioner & precond,$/;"	f	namespace:Eigen::internal
gnorm	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar fnorm, gnorm;$/;"	m	class:Eigen::LevenbergMarquardt
grabMatrix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLDLT
grabMatrix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLLT
grabMatrix	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void grabMatrix(const MatrixType& matrix, ColSpMatrix& out)$/;"	f	class:Eigen::PastixLU
granularity	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t granularity;$/;"	m	struct:malloc_params	file:
granularity_align	external/unsupported/test/mpreal/dlmalloc.c	2532;"	d	file:
grapInput	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void grapInput(const MatrixType& mat)$/;"	f	class:Eigen::UmfPackLU
greatestRealRoot	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& greatestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
greatestRoot	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootType& greatestRoot() const$/;"	f	class:Eigen::PolynomialSolverBase
grow0	external/SuiteSparse/Include/cholmod_core.h	/^    double grow0 ;	\/* For a simplicial factorization, L->i and L->x can$/;"	m	struct:cholmod_common_struct
grow1	external/SuiteSparse/Include/cholmod_core.h	/^    double grow1 ;$/;"	m	struct:cholmod_common_struct
grow2	external/SuiteSparse/Include/cholmod_core.h	/^    size_t grow2 ;	\/* For a simplicial factorization, each column j of L$/;"	m	struct:cholmod_common_struct
gtol	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar gtol;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
hCoeffs	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::ColPivHouseholderQR
hCoeffs	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::FullPivHouseholderQR
hCoeffs	external/Eigen/src/QR/HouseholderQR.h	/^    const HCoeffsType& hCoeffs() const { return m_hCoeffs; }$/;"	f	class:Eigen::HouseholderQR
hahn1_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    hahn1_functor(void) : Functor<double>(7,236) {}$/;"	f	struct:hahn1_functor
hahn1_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct hahn1_functor : Functor<double>$/;"	s	file:
handmade_aligned_free	external/Eigen/src/Core/util/Memory.h	/^inline void handmade_aligned_free(void *ptr)$/;"	f	namespace:Eigen::internal
handmade_aligned_malloc	external/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_malloc(size_t size)$/;"	f	namespace:Eigen::internal
handmade_aligned_realloc	external/Eigen/src/Core/util/Memory.h	/^inline void* handmade_aligned_realloc(void* ptr, size_t size, size_t = 0)$/;"	f	namespace:Eigen::internal
hasRhs	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline bool hasRhs() {return m_hasRhs; }$/;"	f	class:Eigen::MatrixMarketIterator
has_direct_access	external/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { has_direct_access = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon274
has_direct_access	external/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename Derived> struct has_direct_access$/;"	s	namespace:Eigen::internal
has_none	external/Eigen/src/Core/util/Meta.h	/^struct has_none {int a[1];};$/;"	s	namespace:Eigen::internal
has_segment_link	external/unsupported/test/mpreal/dlmalloc.c	/^static int has_segment_link(mstate m, msegmentptr ss) {$/;"	f	file:
has_std_result_type	external/Eigen/src/Core/util/Meta.h	/^struct has_std_result_type {int a[2];};$/;"	s	namespace:Eigen::internal
has_tr1_result	external/Eigen/src/Core/util/Meta.h	/^struct has_tr1_result {int a[3];};$/;"	s	namespace:Eigen::internal
has_write_access	external/Eigen/src/Core/util/ForwardDeclarations.h	/^         has_write_access = (traits<Derived>::Flags & LvalueBit) ? 1 : 0,$/;"	e	enum:Eigen::internal::accessors_level::__anon274
hasrefX	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline bool hasrefX() {return m_hasrefX; }$/;"	f	class:Eigen::MatrixMarketIterator
hblkhd	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE hblkhd;   \/* space in mmapped regions *\/$/;"	m	struct:mallinfo	file:
hblkhd	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE hblkhd;   \/* space in mmapped regions *\/$/;"	m	struct:mallinfo
hblks	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE hblks;    \/* always 0 *\/$/;"	m	struct:mallinfo	file:
hblks	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE hblks;    \/* always 0 *\/$/;"	m	struct:mallinfo
head	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::head() const$/;"	f	class:Eigen::DenseBase
head	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::head()$/;"	f	class:Eigen::DenseBase
head	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::head(Index size) const$/;"	f	class:Eigen::DenseBase
head	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::head(Index size)$/;"	f	class:Eigen::DenseBase
head	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t                    head;$/;"	m	struct:malloc_tree_chunk	file:
head	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t               head;       \/* Size and inuse bits. *\/$/;"	m	struct:malloc_chunk	file:
hnormalized	external/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::hnormalized() const$/;"	f	class:Eigen::MatrixBase
hnormalized	external/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::hnormalized() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous	external/Eigen/src/Geometry/Homogeneous.h	/^MatrixBase<Derived>::homogeneous() const$/;"	f	class:Eigen::MatrixBase
homogeneous	external/Eigen/src/Geometry/Homogeneous.h	/^VectorwiseOp<ExpressionType,Direction>::homogeneous() const$/;"	f	class:Eigen::VectorwiseOp
homogeneous_left_product_impl	external/Eigen/src/Geometry/Homogeneous.h	/^  homogeneous_left_product_impl(const Lhs& lhs, const MatrixType& rhs)$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
homogeneous_left_product_impl	external/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs>$/;"	s	namespace:Eigen::internal
homogeneous_right_product_impl	external/Eigen/src/Geometry/Homogeneous.h	/^  homogeneous_right_product_impl(const MatrixType& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
homogeneous_right_product_impl	external/Eigen/src/Geometry/Homogeneous.h	/^struct homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs>$/;"	s	namespace:Eigen::internal
householder	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    const MatrixType& householder() const { return m_householder; }$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderCoefficients	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const CoeffVectorType& householderCoefficients() const$/;"	f	class:Eigen::HessenbergDecomposition
householderCoefficients	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline CoeffVectorType householderCoefficients() const$/;"	f	class:Eigen::Tridiagonalization
householderQ	external/Eigen/src/QR/ColPivHouseholderQR.h	/^  ::householderQ() const$/;"	f	class:Eigen::ColPivHouseholderQR
householderQ	external/Eigen/src/QR/HouseholderQR.h	/^    HouseholderSequenceType householderQ() const$/;"	f	class:Eigen::HouseholderQR
householderQr	external/Eigen/src/QR/HouseholderQR.h	/^MatrixBase<Derived>::householderQr() const$/;"	f	class:Eigen::MatrixBase
householderSequence	external/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType> householderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
householderU	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderUSequenceType householderU() const$/;"	f	class:Eigen::internal::UpperBidiagonalization
householderV	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    const HouseholderVSequenceType householderV() \/\/ const here gives nasty errors and i'm lazy$/;"	f	class:Eigen::internal::UpperBidiagonalization
householder_qr_inplace_blocked	external/Eigen/src/QR/HouseholderQR.h	/^void householder_qr_inplace_blocked(MatrixQR& mat, HCoeffs& hCoeffs,$/;"	f	namespace:Eigen::internal
householder_qr_inplace_unblocked	external/Eigen/src/QR/HouseholderQR.h	/^void householder_qr_inplace_unblocked(MatrixQR& mat, HCoeffs& hCoeffs, typename MatrixQR::Scalar* tempData = 0)$/;"	f	namespace:Eigen::internal
hseq_side_dependent_impl	external/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl$/;"	s	namespace:Eigen::internal
hseq_side_dependent_impl	external/Eigen/src/Householder/HouseholderSequence.h	/^struct hseq_side_dependent_impl<VectorsType, CoeffsType, OnTheRight>$/;"	s	namespace:Eigen::internal
hybrd1	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::hybrd1($/;"	f	class:Eigen::HybridNonLinearSolver
hybrd_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    hybrd_functor(void) : Functor<double>(9,9) {}$/;"	f	struct:hybrd_functor
hybrd_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct hybrd_functor : Functor<double>$/;"	s	file:
hybrj1	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::hybrj1($/;"	f	class:Eigen::HybridNonLinearSolver
hybrj_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    hybrj_functor(void) : Functor<double>(9,9) {}$/;"	f	struct:hybrj_functor
hybrj_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct hybrj_functor : Functor<double>$/;"	s	file:
hypot	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(hypot, Scalar) hypot(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
hypot	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal hypot (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
hypotNorm	external/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::hypotNorm() const$/;"	f	class:Eigen::MatrixBase
hypotNorm	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_hypotNorm,RealScalar>::Type hypotNorm() const$/;"	f	class:Eigen::VectorwiseOp
hypot_impl	external/Eigen/src/Core/MathFunctions.h	/^struct hypot_impl$/;"	s	namespace:Eigen::internal
hypot_retval	external/Eigen/src/Core/MathFunctions.h	/^struct hypot_retval$/;"	s	namespace:Eigen::internal
hypotenuse	external/SuiteSparse/Include/cholmod_core.h	/^    double (*hypotenuse) (double x, double y) ;$/;"	m	struct:cholmod_common_struct
i	external/SuiteSparse/Include/cholmod_core.h	/^    void *i ;		\/* i [0..nzmax-1], the row indices *\/$/;"	m	struct:cholmod_factor_struct
i	external/SuiteSparse/Include/cholmod_core.h	/^    void *i ;		\/* i [0..nzmax-1], the row indices *\/$/;"	m	struct:cholmod_sparse_struct
i	external/SuiteSparse/Include/cholmod_core.h	/^    void *i ;		\/* i [0..nzmax-1], the row indices *\/$/;"	m	struct:cholmod_triplet_struct
ialloc	external/unsupported/test/mpreal/dlmalloc.c	/^static void** ialloc(mstate m,$/;"	f	file:
icc_11_workaround	external/Eigen/src/Geometry/Transform.h	/^  template<int OtherMode,int OtherOptions> struct icc_11_workaround$/;"	s	class:Eigen::Transform
id1_	RGBDTrajectory.h	/^	int id1_;$/;"	m	struct:FramedTransformation
id2_	RGBDTrajectory.h	/^	int id2_;$/;"	m	struct:FramedTransformation
idx0_	OptApp.h	/^	int idx0_, idx1_;$/;"	m	struct:Correspondence
idx1_	OptApp.h	/^	int idx0_, idx1_;$/;"	m	struct:Correspondence
idx2bit	external/unsupported/test/mpreal/dlmalloc.c	2775;"	d	file:
idx_	PointCloud.h	/^	int idx_[ 8 ];$/;"	m	struct:Point
imag	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag, Scalar) imag(const Scalar& x)$/;"	f	namespace:Eigen::internal
imag	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() const { return derived(); }$/;"	f
imag	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^imag() { return derived(); }$/;"	f
imag	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline typename DerType::Scalar imag(const AutoDiffScalar<DerType>&)    { return 0.; }$/;"	f	namespace:Eigen
imag_impl	external/Eigen/src/Core/MathFunctions.h	/^struct imag_impl$/;"	s	namespace:Eigen::internal
imag_impl	external/Eigen/src/Core/MathFunctions.h	/^struct imag_impl<std::complex<RealScalar> >$/;"	s	namespace:Eigen::internal
imag_ref	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) imag_ref(Scalar& x)$/;"	f	namespace:Eigen::internal
imag_ref	external/Eigen/src/Core/MathFunctions.h	/^inline typename add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(imag_ref, Scalar) >::type imag_ref(const Scalar& x)$/;"	f	namespace:Eigen::internal
imag_ref_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl$/;"	s	namespace:Eigen::internal
imag_ref_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
imag_ref_impl	external/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_impl : imag_ref_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
imag_ref_retval	external/Eigen/src/Core/MathFunctions.h	/^struct imag_ref_retval$/;"	s	namespace:Eigen::internal
imag_retval	external/Eigen/src/Core/MathFunctions.h	/^struct imag_retval$/;"	s	namespace:Eigen::internal
image	external/Eigen/src/Eigen2Support/LU.h	/^    const ImageResultType image() const$/;"	f	class:Eigen::LU
image	external/Eigen/src/LU/FullPivLU.h	/^      image(const MatrixType& originalMatrix) const$/;"	f	class:Eigen::FullPivLU
image_retval	external/Eigen/src/LU/FullPivLU.h	/^struct image_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
image_retval_base	external/Eigen/src/misc/Image.h	/^  image_retval_base(const DecompositionType& dec, const MatrixType& originalMatrix)$/;"	f	struct:Eigen::internal::image_retval_base
image_retval_base	external/Eigen/src/misc/Image.h	/^template<typename _DecompositionType> struct image_retval_base$/;"	s	namespace:Eigen::internal
impl	external/Eigen/src/Core/Functors.h	/^  const linspaced_op_impl<Scalar,RandomAccess> impl;$/;"	m	struct:Eigen::internal::linspaced_op
incrementToNonZero	external/Eigen/src/SparseCore/SparseView.h	/^  void incrementToNonZero()$/;"	f	class:Eigen::SparseView::InnerIterator
increment_if_fixed_size	external/unsupported/test/polynomialsolver.cpp	/^struct increment_if_fixed_size$/;"	s	namespace:Eigen::internal	file:
increment_if_fixed_size	external/unsupported/test/polynomialutils.cpp	/^struct increment_if_fixed_size$/;"	s	namespace:Eigen::internal	file:
index	external/Eigen/src/Core/Diagonal.h	/^    int index() const$/;"	f	class:Eigen::Diagonal
index	external/Eigen/src/Core/Redux.h	/^    index = Start * packet_traits<typename Derived::Scalar>::size,$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon175
index	external/Eigen/src/SparseCore/AmbiVector.h	/^      Index index;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
index	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index index() const { return m_cachedIndex; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
index	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index& index(size_t i) { return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const Index& index(size_t i) const { return m_indices[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
index	external/Eigen/src/SparseCore/CoreIterators.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_inner; }$/;"	f	class:Eigen::DenseBase::InnerIterator
index	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index index() const { return m_matrix.innerIndexPtr()[m_id-1]; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
index	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index index() const { return m_matrix.innerIndexPtr()[m_id]; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
index	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_id; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
index	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_lhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
index	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index index() const { return m_rhsIter.index(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
index	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index index() const { return m_indices[m_id-1]; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
index	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index index() const { return m_indices[m_id]; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
index	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index index() const$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
index	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Index index() const { return m_data.index(m_id); }$/;"	f	class:Eigen::SparseVector::InnerIterator
index	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Index index() const { return m_data.index(m_id-1); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
index	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index index() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
index	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index index() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
index	external/unsupported/test/mpreal/dlmalloc.c	/^  bindex_t                  index;$/;"	m	struct:malloc_tree_chunk	file:
index_	PointCloud.h	/^	int index_;$/;"	m	class:PointCloud
index_	RGBDTrajectory.h	/^	int index_;$/;"	m	struct:RGBDTrajectory
indices	external/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	external/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	external/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	external/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::PermutationBase
indices	external/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	external/Eigen/src/Core/PermutationMatrix.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationMatrix
indices	external/Eigen/src/Core/PermutationMatrix.h	/^    indices() const { return m_indices; }$/;"	f	class:Eigen::PermutationWrapper
indices	external/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	external/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Map
indices	external/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	external/Eigen/src/Core/Transpositions.h	/^    IndicesType& indices() { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
indices	external/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return derived().indices(); }$/;"	f	class:Eigen::TranspositionsBase
indices	external/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Map
indices	external/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::Transpositions
indices	external/Eigen/src/Core/Transpositions.h	/^    const IndicesType& indices() const { return m_indices; }$/;"	f	class:Eigen::TranspositionsWrapper
info	external/Eigen/src/Cholesky/LDLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LDLT
info	external/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::LLT
info	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::CholmodBase
info	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexEigenSolver
info	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::ComplexSchur
info	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::EigenSolver
info	external/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::RealSchur
info	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
info	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::IncompleteLUT
info	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ComputationInfo info() const$/;"	f	class:Eigen::IterativeSolverBase
info	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PastixBase
info	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::PardisoImpl
info	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SimplicialCholeskyBase
info	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::SuperLUBase
info	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ComputationInfo info() const$/;"	f	class:Eigen::UmfPackLU
info_arch	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_arch	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_arch = "INFO" ":" "arch[" ARCHITECTURE_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_compiler	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_compiler = "INFO" ":" "compiler[" COMPILER_ID "]";$/;"	v
info_cray	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_cray	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const *info_cray = "INFO" ":" "compiler_wrapper[CrayPrgEnv]";$/;"	v
info_language_dialect_default	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^const char* info_language_dialect_default =$/;"	v
info_language_dialect_default	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^const char* info_language_dialect_default = "INFO" ":" "dialect_default["$/;"	v
info_platform	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_platform	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_platform = "INFO" ":" "platform[" PLATFORM_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* info_simulate = "INFO" ":" "simulate[" SIMULATE_ID "]";$/;"	v
info_simulate_version	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_simulate_version[] = {$/;"	v
info_simulate_version	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_simulate_version[] = {$/;"	v
info_version	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const info_version[] = {$/;"	v
info_version	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const info_version[] = {$/;"	v
init	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodDecomposition
init	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLDLT
init	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSimplicialLLT
init	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void init()$/;"	f	class:Eigen::CholmodSupernodalLLT
init	external/Eigen/src/Core/Block.h	/^    void init()$/;"	f	class:Eigen::Block
init	external/Eigen/src/Core/Visitor.h	/^  inline void init(const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::coeff_visitor
init	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  void init()$/;"	f	class:Eigen::IterativeSolverBase
init	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLDLT
init	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLLT
init	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    void init()$/;"	f	class:Eigen::PastixLU
init	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^void PastixBase<Derived>::init()$/;"	f	class:Eigen::PastixBase
init	external/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::init(double estimatedDensity)$/;"	f	class:Eigen::internal::AmbiVector
init	external/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::init(int mode)$/;"	f	class:Eigen::internal::AmbiVector
init	external/Eigen/src/SparseCore/SparseProduct.h	/^    void init()$/;"	f	class:Eigen::SparseSparseProduct
init	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperILU
init	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLU
init	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void init()$/;"	f	class:Eigen::SuperLUBase
init	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void init()$/;"	f	class:Eigen::UmfPackLU
init	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename Iter> void init(Iter begin, Iter end) { init(begin, end, 0, 0); }$/;"	f	class:Eigen::KdBVH
init	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  template<typename OIter, typename BIter> void init(OIter begin, OIter end, BIter boxBegin, BIter boxEnd)$/;"	f	class:Eigen::KdBVH
init	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void init()$/;"	f	class:Eigen::IterationController
init	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void init()$/;"	f	class:Scaling
initAcc	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(AccPacket& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(DoublePacket& p)$/;"	f	class:Eigen::internal::gebp_traits
initAcc	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void initAcc(Scalar& p) { p = Scalar(0); }$/;"	f	class:Eigen::internal::gebp_traits
initAssignment	external/Eigen/src/SparseCore/SparseMatrix.h	/^    void initAssignment(const Other& other)$/;"	f	class:Eigen::SparseMatrix
initFactorization	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void initFactorization(const MatrixType& a)$/;"	f	class:Eigen::SuperLUBase
initFrancisQRStep	external/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::initFrancisQRStep(Index il, Index iu, const Vector3s& shiftInfo, Index& im, Vector3s& firstHouseholderVector)$/;"	f	class:Eigen::RealSchur
initParallel	external/Eigen/src/Core/products/Parallelizer.h	/^inline void initParallel()$/;"	f	namespace:Eigen
initParallelSession	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void initParallelSession() const$/;"	f	struct:Eigen::internal::gemm_functor
init_bins	external/unsupported/test/mpreal/dlmalloc.c	/^static void init_bins(mstate m) {$/;"	f	file:
init_ctr_file_	OptApp.h	/^	std::string init_ctr_file_;$/;"	m	class:COptApp
init_malloc_global_mutex	external/unsupported/test/mpreal/dlmalloc.c	/^static void init_malloc_global_mutex() {$/;"	f	file:
init_mparams	external/unsupported/test/mpreal/dlmalloc.c	/^static int init_mparams(void) {$/;"	f	file:
init_top	external/unsupported/test/mpreal/dlmalloc.c	/^static void init_top(mstate m, mchunkptr p, size_t psize) {$/;"	f	file:
init_user_mstate	external/unsupported/test/mpreal/dlmalloc.c	/^static mstate init_user_mstate(char* tbase, size_t tsize) {$/;"	f	file:
inner	external/Eigen/src/Core/Assign.h	/^    inner = Index % Derived1::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling::__anon12
inner	external/Eigen/src/Core/Assign.h	/^    inner = Index % Derived1::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_innervec_CompleteUnrolling::__anon13
inner	external/Eigen/src/Core/Redux.h	/^    inner = Start % Derived::InnerSizeAtCompileTime$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon173
inner	external/Eigen/src/Core/Redux.h	/^    inner = index % int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon175
inner	external/Eigen/src/Core/Stride.h	/^    inline Index inner() const { return m_inner.value(); }$/;"	f	class:Eigen::Stride
innerInd	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *innerInd;$/;"	m	struct:Eigen::SluMatrix::__anon439
innerIndexPtr	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index* innerIndexPtr() { return m_innerIndices; }$/;"	f	class:Eigen::MappedSparseMatrix
innerIndexPtr	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline const Index* innerIndexPtr() const { return m_innerIndices; }$/;"	f	class:Eigen::MappedSparseMatrix
innerIndexPtr	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index* innerIndexPtr()$/;"	f	class:Eigen::SparseInnerVectorSet
innerIndexPtr	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Index* innerIndexPtr() const$/;"	f	class:Eigen::SparseInnerVectorSet
innerIndexPtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index* innerIndexPtr() { return &m_data.index(0); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Index* innerIndexPtr() const { return &m_data.index(0); }$/;"	f	class:Eigen::SparseMatrix
innerIndexPtr	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index* innerIndexPtr() { return &m_data.index(0); }$/;"	f	class:Eigen::SparseVector
innerIndexPtr	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const Index* innerIndexPtr() const { return &m_data.index(0); }$/;"	f	class:Eigen::SparseVector
innerNonZeroPtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index* innerNonZeroPtr() { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeroPtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Index* innerNonZeroPtr() const { return m_innerNonZeros; }$/;"	f	class:Eigen::SparseMatrix
innerNonZeros	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Eigen::Map<Matrix<Index,Dynamic,1> > innerNonZeros() { return Eigen::Map<Matrix<Index,Dynamic,1> >(m_innerNonZeros, m_innerNonZeros?m_outerSize:0); }$/;"	f	class:Eigen::SparseMatrix
innerNonZeros	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const  Eigen::Map<const Matrix<Index,Dynamic,1> > innerNonZeros() const { return Eigen::Map<const Matrix<Index,Dynamic,1> >(m_innerNonZeros, m_innerNonZeros?m_outerSize:0); }$/;"	f	class:Eigen::SparseMatrix
innerNonZeros	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index innerNonZeros(Index j) const { return m_data[j].size(); }$/;"	f	class:Eigen::DynamicSparseMatrix
innerSize	external/Eigen/src/Core/DenseBase.h	/^    Index innerSize() const$/;"	f	class:Eigen::DenseBase
innerSize	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
innerSize	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
innerSize	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index innerSize() const { return (int(Flags)&RowMajorBit) ? this->cols() : this->rows(); }$/;"	f	class:Eigen::SparseMatrixBase
innerSize	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index innerSize() const { return m_size; }$/;"	f	class:Eigen::SparseVector
innerSize	external/Eigen/src/SparseCore/SparseView.h	/^  inline Index innerSize() const { return m_matrix.innerSize(); }$/;"	f	class:Eigen::SparseView
innerSize	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index innerSize() const {$/;"	f	class:Eigen::SkylineMatrix
innerSize	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Index innerSize() const {$/;"	f	class:Eigen::SkylineMatrixBase
innerSize	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index innerSize() const { return m_innerSize; }$/;"	f	class:Eigen::DynamicSparseMatrix
innerStride	external/Eigen/src/Core/Array.h	/^    inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Array
innerStride	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ArrayWrapper
innerStride	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::MatrixWrapper
innerStride	external/Eigen/src/Core/Block.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Block
innerStride	external/Eigen/src/Core/CwiseUnaryView.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
innerStride	external/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
innerStride	external/Eigen/src/Core/Diagonal.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Diagonal
innerStride	external/Eigen/src/Core/Flagged.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::Flagged
innerStride	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
innerStride	external/Eigen/src/Core/Map.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Map
innerStride	external/Eigen/src/Core/Matrix.h	/^    inline Index innerStride() const { return 1; }$/;"	f	class:Eigen::Matrix
innerStride	external/Eigen/src/Core/NestByValue.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::NestByValue
innerStride	external/Eigen/src/Core/Reverse.h	/^    inline Index innerStride() const$/;"	f	class:Eigen::Reverse
innerStride	external/Eigen/src/Core/SelfAdjointView.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::SelfAdjointView
innerStride	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
innerStride	external/Eigen/src/Core/Swap.h	/^    inline Index innerStride() const { return m_expression.innerStride(); }$/;"	f	class:Eigen::SwapWrapper
innerStride	external/Eigen/src/Core/Transpose.h	/^    inline Index innerStride() const { return derived().nestedExpression().innerStride(); }$/;"	f	class:Eigen::TransposeImpl
innerStride	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return derived().innerStride(); }$/;"	f	class:Eigen::TriangularBase
innerStride	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index innerStride() const { return m_matrix.innerStride(); }$/;"	f	class:Eigen::TriangularView
innerVector	external/Eigen/src/SparseCore/SparseBlock.h	/^SparseInnerVectorSet<Derived,1> SparseMatrixBase<Derived>::innerVector(Index outer)$/;"	f	class:Eigen::SparseMatrixBase
innerVector	external/Eigen/src/SparseCore/SparseBlock.h	/^const SparseInnerVectorSet<Derived,1> SparseMatrixBase<Derived>::innerVector(Index outer) const$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	external/Eigen/src/SparseCore/SparseBlock.h	/^SparseInnerVectorSet<Derived,Dynamic> SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize)$/;"	f	class:Eigen::SparseMatrixBase
innerVectors	external/Eigen/src/SparseCore/SparseBlock.h	/^const SparseInnerVectorSet<Derived,Dynamic> SparseMatrixBase<Derived>::innerVectors(Index outerStart, Index outerSize) const$/;"	f	class:Eigen::SparseMatrixBase
inner_stride_at_compile_time	external/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time$/;"	s	namespace:Eigen::internal
inner_stride_at_compile_time	external/Eigen/src/Core/DenseCoeffsBase.h	/^struct inner_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
inplace_decomposition	external/Eigen/src/Cholesky/LLT.h	/^  static bool inplace_decomposition(MatrixType& m)$/;"	f	struct:Eigen::internal::LLT_Traits
inplace_transpose_selector	external/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,false> { \/\/ non square matrix$/;"	s	namespace:Eigen::internal
inplace_transpose_selector	external/Eigen/src/Core/Transpose.h	/^struct inplace_transpose_selector<MatrixType,true> { \/\/ square matrix$/;"	s	namespace:Eigen::internal
inputs	external/unsupported/test/NonLinearOptimization.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:Functor
inputs	external/unsupported/test/NumericalDiff.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:Functor
inputs	external/unsupported/test/autodiff.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:TestFunc1
inputs	external/unsupported/test/forward_adolc.cpp	/^  int inputs() const { return m_inputs; }$/;"	f	struct:TestFunc1
insert	external/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_DONT_INLINE Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insert	external/Eigen/src/SparseCore/SparseVector.h	/^    Scalar& insert(Index i)$/;"	f	class:Eigen::SparseVector
insert	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::SparseVector
insert	external/Eigen/src/StlSupport/StdDeque.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::deque
insert	external/Eigen/src/StlSupport/StdDeque.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::deque
insert	external/Eigen/src/StlSupport/StdList.h	/^    iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::list
insert	external/Eigen/src/StlSupport/StdList.h	/^    void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::list
insert	external/Eigen/src/StlSupport/StdVector.h	/^  iterator insert(const_iterator position, const value_type& x)$/;"	f	class:std::vector
insert	external/Eigen/src/StlSupport/StdVector.h	/^  void insert(const_iterator position, size_type new_size, const value_type& x)$/;"	f	class:std::vector
insert	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    EIGEN_DONT_INLINE Scalar & insert(Index row, Index col) {$/;"	f	class:Eigen::SkylineMatrix
insert	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& insert(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
insertBack	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBack(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertBack	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBack(Index i)$/;"	f	class:Eigen::SparseVector
insertBack	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& insertBack(Index row, Index col)$/;"	f	class:Eigen::DynamicSparseMatrix
insertBackByOuterInner	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackByOuterInner	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::SparseVector
insertBackByOuterInner	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Scalar& insertBackByOuterInner(Index outer, Index inner)$/;"	f	class:Eigen::DynamicSparseMatrix
insertBackByOuterInnerUnordered	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackByOuterInnerUnordered(Index outer, Index inner)$/;"	f	class:Eigen::SparseMatrix
insertBackUncompressed	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& insertBackUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertByOuterInner	external/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_DONT_INLINE Scalar& insertByOuterInner(Index j, Index i)$/;"	f	class:Eigen::SparseMatrix
insertCompressed	external/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_DONT_INLINE Scalar& insertCompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insertUncompressed	external/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_DONT_INLINE Scalar& insertUncompressed(Index row, Index col)$/;"	f	class:Eigen::SparseMatrix
insert_chunk	external/unsupported/test/mpreal/dlmalloc.c	3630;"	d	file:
insert_large_chunk	external/unsupported/test/mpreal/dlmalloc.c	3489;"	d	file:
insert_small_chunk	external/unsupported/test/mpreal/dlmalloc.c	3416;"	d	file:
interlockedcompareexchange	external/unsupported/test/mpreal/dlmalloc.c	1366;"	d	file:
interlockedexchange	external/unsupported/test/mpreal/dlmalloc.c	1367;"	d	file:
internal	external/Eigen/src/Cholesky/LDLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Cholesky/LLT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Cholesky/LLT.h	/^namespace internal{$/;"	n	namespace:Eigen
internal	external/Eigen/src/Cholesky/LLT_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Array.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/ArrayWrapper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Assign.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Assign_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/BandMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Block.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/BooleanRedux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/CwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/CwiseNullaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/CwiseUnaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/CwiseUnaryView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/DenseCoeffsBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/DenseStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Diagonal.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/DiagonalMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/DiagonalProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Dot.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Flagged.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/ForceAlignedAccess.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Functors.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Fuzzy.h	/^namespace internal$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/GeneralProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/GenericPacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/GlobalFunctions.h	/^  namespace internal$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/IO.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Map.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Matrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/NestByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/PermutationMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/PlainObjectBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Product.h	/^namespace internal {$/;"	n
internal	external/Eigen/src/Core/ProductBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Random.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Redux.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Replicate.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/ReturnByValue.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Reverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Select.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/SelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/SolveTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/StableNorm.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Swap.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Transpose.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Transpositions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/TriangularMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/VectorBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/VectorwiseOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/Visitor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/arch/NEON/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/arch/SSE/Complex.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/arch/SSE/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/GeneralMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/GeneralMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/Parallelizer.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/SelfadjointMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/SelfadjointRank2Update.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/TriangularSolverMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/TriangularSolverMatrix_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/products/TriangularSolverVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/BlasUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/ForwardDeclarations.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/MKL_support.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/Macros.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/Memory.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/Meta.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/StaticAssert.h	/^    namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Core/util/XprHelper.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Eigen2Support/Minor.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/AngleAxis.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/Homogeneous.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/OrthoMethods.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/Quaternion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/Rotation2D.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/RotationBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/Transform.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/Umeyama.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Householder/BlockHouseholder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Householder/Householder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Householder/HouseholderSequence.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/Jacobi/Jacobi.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/LU/Determinant.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/LU/FullPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/LU/Inverse.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/LU/PartialPivLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/LU/PartialPivLU_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/LU/arch/Inverse_SSE.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/OrderingMethods/Amd.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^namespace internal$/;"	n	namespace:Eigen
internal	external/Eigen/src/QR/ColPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/QR/FullPivHouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/QR/HouseholderQR.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/QR/HouseholderQR_MKL.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SVD/JacobiSVD.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SVD/UpperBidiagonalization.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/AmbiVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/CompressedStorage.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseBlock.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparsePermutation.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseTriangularView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseVector.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/SparseView.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SparseCore/TriangularSolver.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/StlSupport/details.h	/^  namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/misc/Image.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/misc/Kernel.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/misc/Solve.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/Eigen/src/misc/SparseSolve.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/BVH/KdBVH.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/chkder.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/covar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/dogleg.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/fdjac1.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/r1updt.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/Polynomials/Companion.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^namespace internal {$/;"	n	namespace:Eigen
internal	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^namespace internal $/;"	n	namespace:Eigen
internal	external/unsupported/doc/examples/BVH_Example.cpp	/^    namespace internal {$/;"	n	namespace:Eigen	file:
internal	external/unsupported/test/mpreal/mpreal.h	/^namespace internal{$/;"	n	namespace:mpfr
internal	external/unsupported/test/polynomialsolver.cpp	/^namespace internal {$/;"	n	namespace:Eigen	file:
internal	external/unsupported/test/polynomialutils.cpp	/^namespace internal {$/;"	n	namespace:Eigen	file:
internal_free	external/unsupported/test/mpreal/dlmalloc.c	3643;"	d	file:
internal_free	external/unsupported/test/mpreal/dlmalloc.c	3648;"	d	file:
internal_free	external/unsupported/test/mpreal/dlmalloc.c	3652;"	d	file:
internal_mallinfo	external/unsupported/test/mpreal/dlmalloc.c	/^static struct mallinfo internal_mallinfo(mstate m) {$/;"	f	file:
internal_malloc	external/unsupported/test/mpreal/dlmalloc.c	3642;"	d	file:
internal_malloc	external/unsupported/test/mpreal/dlmalloc.c	3646;"	d	file:
internal_malloc	external/unsupported/test/mpreal/dlmalloc.c	3651;"	d	file:
internal_malloc_stats	external/unsupported/test/mpreal/dlmalloc.c	/^static void internal_malloc_stats(mstate m) {$/;"	f	file:
internal_memalign	external/unsupported/test/mpreal/dlmalloc.c	/^static void* internal_memalign(mstate m, size_t alignment, size_t bytes) {$/;"	f	file:
internal_realloc	external/unsupported/test/mpreal/dlmalloc.c	/^static void* internal_realloc(mstate m, void* oldmem, size_t bytes) {$/;"	f	file:
intersectObject	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectObject(const Object1 &obj) { return intersector.intersectObjectObject(obj, stored); }$/;"	f	struct:Eigen::internal::intersector_helper1
intersectObject	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectObject(const Object2 &obj) { return intersector.intersectObjectObject(stored, obj); }$/;"	f	struct:Eigen::internal::intersector_helper2
intersectObject	external/unsupported/test/BVH.cpp	/^  bool intersectObject(const BallType &b) {$/;"	f	struct:BallPointStuff
intersectObjectObject	external/unsupported/test/BVH.cpp	/^  bool intersectObjectObject(const BallType &b, const VectorType &v){$/;"	f	struct:BallPointStuff
intersectObjectObject	external/unsupported/test/BVH.cpp	/^  bool intersectObjectObject(const BallType &b1, const BallType &b2){$/;"	f	struct:BallPointStuff
intersectObjectVolume	external/unsupported/test/BVH.cpp	/^  bool intersectObjectVolume(const BallType &b, const BoxType &r) { ++calls; return r.squaredExteriorDistance(b.center) < SQR(b.radius); }$/;"	f	struct:BallPointStuff
intersectVolume	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectVolume(const Volume1 &vol) { return intersector.intersectVolumeObject(vol, stored); }$/;"	f	struct:Eigen::internal::intersector_helper1
intersectVolume	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  bool intersectVolume(const Volume2 &vol) { return intersector.intersectObjectVolume(stored, vol); }$/;"	f	struct:Eigen::internal::intersector_helper2
intersectVolume	external/unsupported/test/BVH.cpp	/^  bool intersectVolume(const BoxType &r) { ++calls; return r.contains(p); }$/;"	f	struct:BallPointStuff
intersectVolumeObject	external/unsupported/test/BVH.cpp	/^  bool intersectVolumeObject(const BoxType &r, const BallType &b) { ++calls; return r.squaredExteriorDistance(b.center) < SQR(b.radius); }$/;"	f	struct:BallPointStuff
intersectVolumeObject	external/unsupported/test/BVH.cpp	/^  bool intersectVolumeObject(const BoxType &r, const VectorType &v) { ++calls; return r.contains(v); }$/;"	f	struct:BallPointStuff
intersectVolumeVolume	external/unsupported/test/BVH.cpp	/^  bool intersectVolumeVolume(const BoxType &r1, const BoxType &r2) { ++calls; return !(r1.intersection(r2)).isNull(); }$/;"	f	struct:BallPointStuff
intersect_helper	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^bool intersect_helper(const BVH &tree, Intersector &intersector, typename BVH::Index root)$/;"	f	namespace:Eigen::internal
intersection	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  VectorType intersection(const Hyperplane& other)$/;"	f	class:Eigen::Hyperplane
intersection	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim>::intersection(const Hyperplane<_Scalar, _AmbientDim>& hyperplane)$/;"	f	class:Eigen::ParametrizedLine
intersection	external/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox intersection(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
intersection	external/Eigen/src/Geometry/Hyperplane.h	/^  VectorType intersection(const Hyperplane& other) const$/;"	f	class:Eigen::Hyperplane
intersection	external/Eigen/src/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersection(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionParameter	external/Eigen/src/Geometry/ParametrizedLine.h	/^inline _Scalar ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionParameter(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersectionPoint	external/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::intersectionPoint(const Hyperplane<_Scalar, _AmbientDim, OtherOptions>& hyperplane) const$/;"	f	class:Eigen::ParametrizedLine
intersector	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Intersector &intersector;$/;"	m	struct:Eigen::internal::intersector_helper1
intersector	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Intersector &intersector;$/;"	m	struct:Eigen::internal::intersector_helper2
intersector_helper1	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  intersector_helper1(const Object2 &inStored, Intersector &in) : stored(inStored), intersector(in) {}$/;"	f	struct:Eigen::internal::intersector_helper1
intersector_helper1	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct intersector_helper1$/;"	s	namespace:Eigen::internal
intersector_helper2	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  intersector_helper2(const Object1 &inStored, Intersector &in) : stored(inStored), intersector(in) {}$/;"	f	struct:Eigen::internal::intersector_helper2
intersector_helper2	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct intersector_helper2$/;"	s	namespace:Eigen::internal
interval_	OptApp.h	/^	int interval_;$/;"	m	class:COptApp
inv	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv( Scalar * dst,const Complex * src,int nfft) $/;"	f	struct:Eigen::internal::fftw_impl
inv	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv(Complex * dst,const Complex  *src,int nfft)$/;"	f	struct:Eigen::internal::fftw_impl
inv	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv(complex_type * dst,complex_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
inv	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv(scalar_type * dst,complex_type * src,int nfft) {$/;"	f	struct:Eigen::internal::fftw_plan
inv	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void inv( Scalar * dst,const Complex * src,int nfft) $/;"	f	struct:Eigen::internal::kissfft_impl
inv	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void inv(Complex * dst,const Complex  *src,int nfft)$/;"	f	struct:Eigen::internal::kissfft_impl
inv2	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv2( complex_type * dst,complex_type * src,int n0,int n1) {$/;"	f	struct:Eigen::internal::fftw_plan
inv2	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      void inv2(Complex * dst, const Complex * src, int n0,int n1)$/;"	f	struct:Eigen::internal::fftw_impl
inv2	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void inv2( Complex * dst,const Complex *src,int n0,int n1)$/;"	f	struct:Eigen::internal::kissfft_impl
inverse	external/Eigen/src/Core/DiagonalMatrix.h	/^    inverse() const$/;"	f	class:Eigen::DiagonalBase
inverse	external/Eigen/src/Core/PermutationMatrix.h	/^    inline Transpose<PermutationBase> inverse() const$/;"	f	class:Eigen::PermutationBase
inverse	external/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> inverse() const$/;"	f	class:Eigen::TranspositionsBase
inverse	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::inverse() const$/;"	f	class:Eigen::Cwise
inverse	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  AngleAxis inverse() const$/;"	f	class:Eigen::AngleAxis
inverse	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar> Quaternion<Scalar>::inverse() const$/;"	f	class:Eigen::Quaternion
inverse	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D inverse() const { return -m_angle; }$/;"	f	class:Eigen::Rotation2D
inverse	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Derived inverse() const { return derived().inverse(); }$/;"	f	class:Eigen::RotationBase
inverse	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling inverse() const$/;"	f	class:Eigen::Scaling
inverse	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::inverse(TransformTraits traits) const$/;"	f	class:Eigen::Transform
inverse	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  Translation inverse() const { return Translation(-m_coeffs); }$/;"	f	class:Eigen::Translation
inverse	external/Eigen/src/Geometry/AngleAxis.h	/^  AngleAxis inverse() const$/;"	f	class:Eigen::AngleAxis
inverse	external/Eigen/src/Geometry/Quaternion.h	/^inline Quaternion<typename internal::traits<Derived>::Scalar> QuaternionBase<Derived>::inverse() const$/;"	f	class:Eigen::QuaternionBase
inverse	external/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D inverse() const { return -m_angle; }$/;"	f	class:Eigen::Rotation2D
inverse	external/Eigen/src/Geometry/RotationBase.h	/^    inline Derived inverse() const { return derived().inverse(); }$/;"	f	class:Eigen::RotationBase
inverse	external/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling inverse() const$/;"	f	class:Eigen::UniformScaling
inverse	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::inverse(TransformTraits hint) const$/;"	f	class:Eigen::Transform
inverse	external/Eigen/src/Geometry/Translation.h	/^  Translation inverse() const { return Translation(-m_coeffs); }$/;"	f	class:Eigen::Translation
inverse	external/Eigen/src/Householder/HouseholderSequence.h	/^    ConjugateReturnType inverse() const { return adjoint(); }$/;"	f	class:Eigen::HouseholderSequence
inverse	external/Eigen/src/LU/FullPivLU.h	/^    inline const internal::solve_retval<FullPivLU,typename MatrixType::IdentityReturnType> inverse() const$/;"	f	class:Eigen::FullPivLU
inverse	external/Eigen/src/LU/Inverse.h	/^inline const internal::inverse_impl<Derived> MatrixBase<Derived>::inverse() const$/;"	f	class:Eigen::MatrixBase
inverse	external/Eigen/src/LU/PartialPivLU.h	/^    inline const internal::solve_retval<PartialPivLU,typename MatrixType::IdentityReturnType> inverse() const$/;"	f	class:Eigen::PartialPivLU
inverse	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inverse() const$/;"	f	class:Eigen::ColPivHouseholderQR
inverse	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inverse() const$/;"	f	class:Eigen::FullPivHouseholderQR
inverse	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^inverse() const$/;"	f
inverse_impl	external/Eigen/src/LU/Inverse.h	/^  inverse_impl(const MatrixType& matrix)$/;"	f	struct:Eigen::internal::inverse_impl
inverse_impl	external/Eigen/src/LU/Inverse.h	/^struct inverse_impl : public ReturnByValue<inverse_impl<MatrixType> >$/;"	s	namespace:Eigen::internal
ioffset_	HashSparseMatrix.h	/^	int ioffset_, joffset_;$/;"	m	class:HashSparseMatrix
iparm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    Array<Index,IPARM_SIZE,1>& iparm()$/;"	f	class:Eigen::PastixBase
iparm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int& iparm(int idxparam)$/;"	f	class:Eigen::PastixBase
ipose_	OptApp.h	/^	std::vector< Eigen::Matrix4d > ipose_;$/;"	m	class:COptApp
isApprox	external/Eigen/src/Core/DiagonalMatrix.h	/^    bool isApprox(const DiagonalBase<OtherDerived>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::DiagonalBase
isApprox	external/Eigen/src/Core/DiagonalMatrix.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::DiagonalBase
isApprox	external/Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isApprox($/;"	f	class:Eigen::DenseBase
isApprox	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(bool x, bool y, bool)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApprox	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApprox(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApprox	external/Eigen/src/Core/MathFunctions.h	/^inline bool isApprox(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApprox	external/Eigen/src/Core/TriangularMatrix.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::TriangularView
isApprox	external/Eigen/src/Core/TriangularMatrix.h	/^    bool isApprox(const TriangularView<OtherMatrixType, Mode>& other, typename NumTraits<Scalar>::Real precision = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::TriangularView
isApprox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  bool isApprox(const AlignedBox& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::AlignedBox
isApprox	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  bool isApprox(const AngleAxis& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::AngleAxis
isApprox	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  bool isApprox(const Hyperplane& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Hyperplane
isApprox	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  bool isApprox(const ParametrizedLine& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::ParametrizedLine
isApprox	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  bool isApprox(const Quaternion& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Quaternion
isApprox	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  bool isApprox(const Rotation2D& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Rotation2D
isApprox	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  bool isApprox(const Scaling& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Scaling
isApprox	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  bool isApprox(const Transform& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Transform
isApprox	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  bool isApprox(const Translation& other, typename NumTraits<Scalar>::Real prec = precision<Scalar>()) const$/;"	f	class:Eigen::Translation
isApprox	external/Eigen/src/Geometry/AlignedBox.h	/^  bool isApprox(const AlignedBox& other, RealScalar prec = ScalarTraits::dummy_precision()) const$/;"	f	class:Eigen::AlignedBox
isApprox	external/Eigen/src/Geometry/AngleAxis.h	/^  bool isApprox(const AngleAxis& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::AngleAxis
isApprox	external/Eigen/src/Geometry/Hyperplane.h	/^  bool isApprox(const Hyperplane<Scalar,AmbientDimAtCompileTime,OtherOptions>& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Hyperplane
isApprox	external/Eigen/src/Geometry/ParametrizedLine.h	/^  bool isApprox(const ParametrizedLine& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::ParametrizedLine
isApprox	external/Eigen/src/Geometry/Quaternion.h	/^  bool isApprox(const QuaternionBase<OtherDerived>& other, RealScalar prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::QuaternionBase
isApprox	external/Eigen/src/Geometry/Rotation2D.h	/^  bool isApprox(const Rotation2D& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Rotation2D
isApprox	external/Eigen/src/Geometry/Scaling.h	/^  bool isApprox(const UniformScaling& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::UniformScaling
isApprox	external/Eigen/src/Geometry/Transform.h	/^  bool isApprox(const Transform& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Transform
isApprox	external/Eigen/src/Geometry/Translation.h	/^  bool isApprox(const Translation& other, typename NumTraits<Scalar>::Real prec = NumTraits<Scalar>::dummy_precision()) const$/;"	f	class:Eigen::Translation
isApprox	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isApprox(const MatrixBase<OtherDerived>& other,$/;"	f	class:Eigen::SparseMatrixBase
isApprox	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isApprox(const SparseMatrixBase<OtherDerived>& other,$/;"	f	class:Eigen::SparseMatrixBase
isApproxOrLessThan	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isApproxOrLessThan	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isApproxOrLessThan(const bool& x, const bool& y, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isApproxOrLessThan	external/Eigen/src/Core/MathFunctions.h	/^inline bool isApproxOrLessThan(const Scalar& x, const Scalar& y,$/;"	f	namespace:Eigen::internal
isApproxToConstant	external/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isApproxToConstant$/;"	f	class:Eigen::DenseBase
isApprox_selector	external/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector$/;"	s	namespace:Eigen::internal
isApprox_selector	external/Eigen/src/Core/Fuzzy.h	/^struct isApprox_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isCompressed	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline bool isCompressed() const { return m_innerNonZeros==0; }$/;"	f	class:Eigen::SparseMatrix
isConstant	external/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isConstant$/;"	f	class:Eigen::DenseBase
isDiagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^bool MatrixBase<Derived>::isDiagonal(RealScalar prec) const$/;"	f	class:Eigen::MatrixBase
isEmpty	external/Eigen/src/Geometry/AlignedBox.h	/^  inline bool isEmpty() const { return (m_min.array() > m_max.array()).any(); }$/;"	f	class:Eigen::AlignedBox
isEqualFuzzy	external/unsupported/test/mpreal/mpreal.h	/^inline bool isEqualFuzzy(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
isEqualFuzzy	external/unsupported/test/mpreal/mpreal.h	/^inline bool isEqualFuzzy(const mpreal& a, const mpreal& b, const mpreal& eps)$/;"	f	namespace:mpfr
isEqualUlps	external/unsupported/test/mpreal/mpreal.h	/^inline bool isEqualUlps(const mpreal& a, const mpreal& b, int maxUlps)$/;"	f	namespace:mpfr
isFullRank	external/Eigen/src/Eigen2Support/QR.h	/^    bool isFullRank() const {$/;"	f	class:Eigen::QR
isIdentity	external/Eigen/src/Core/CwiseNullaryOp.h	/^bool MatrixBase<Derived>::isIdentity$/;"	f	class:Eigen::MatrixBase
isInjective	external/Eigen/src/LU/FullPivLU.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivLU
isInjective	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInjective	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isInvertible	external/Eigen/src/LU/FullPivLU.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivLU
isInvertible	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::ColPivHouseholderQR
isInvertible	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isInvertible() const$/;"	f	class:Eigen::FullPivHouseholderQR
isLowerTriangular	external/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isLowerTriangular(RealScalar prec) const$/;"	f	class:Eigen::MatrixBase
isMuchSmallerThan	external/Eigen/src/Core/Fuzzy.h	/^bool DenseBase<Derived>::isMuchSmallerThan($/;"	f	class:Eigen::DenseBase
isMuchSmallerThan	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y, const RealScalar& prec)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const Scalar& x, const Scalar&, const RealScalar&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_default_impl
isMuchSmallerThan	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool isMuchSmallerThan(const bool& x, const bool&, const bool&)$/;"	f	struct:Eigen::internal::scalar_fuzzy_impl
isMuchSmallerThan	external/Eigen/src/Core/MathFunctions.h	/^inline bool isMuchSmallerThan(const Scalar& x, const OtherScalar& y,$/;"	f	namespace:Eigen::internal
isMuchSmallerThan_object_selector	external/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_object_selector	external/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_object_selector<Derived, OtherDerived, true>$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	external/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector$/;"	s	namespace:Eigen::internal
isMuchSmallerThan_scalar_selector	external/Eigen/src/Core/Fuzzy.h	/^struct isMuchSmallerThan_scalar_selector<Derived, true>$/;"	s	namespace:Eigen::internal
isNegative	external/Eigen/src/Cholesky/LDLT.h	/^    inline bool isNegative(void) const$/;"	f	class:Eigen::LDLT
isNull	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline bool isNull() const { return (m_min.cwise() > m_max).any(); }$/;"	f	class:Eigen::AlignedBox
isNull	external/Eigen/src/Geometry/AlignedBox.h	/^  inline bool isNull() const { return isEmpty(); }$/;"	f	class:Eigen::AlignedBox
isOnes	external/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isOnes$/;"	f	class:Eigen::DenseBase
isOrthogonal	external/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isOrthogonal$/;"	f	class:Eigen::MatrixBase
isPositive	external/Eigen/src/Cholesky/LDLT.h	/^    inline bool isPositive() const$/;"	f	class:Eigen::LDLT
isPositiveDefinite	external/Eigen/src/Cholesky/LDLT.h	/^    inline bool isPositiveDefinite() const$/;"	f	class:Eigen::LDLT
isPositiveDefinite	external/Eigen/src/Cholesky/LLT.h	/^    bool isPositiveDefinite() const { return true; }$/;"	f	class:Eigen::LLT
isRValue	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool isRValue() const { return m_isRValue; }$/;"	f	class:Eigen::SparseMatrixBase
isRValue	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    bool isRValue() const {$/;"	f	class:Eigen::SkylineMatrixBase
isSurjective	external/Eigen/src/LU/FullPivLU.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivLU
isSurjective	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::ColPivHouseholderQR
isSurjective	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline bool isSurjective() const$/;"	f	class:Eigen::FullPivHouseholderQR
isUnitary	external/Eigen/src/Core/Dot.h	/^bool MatrixBase<Derived>::isUnitary(RealScalar prec) const$/;"	f	class:Eigen::MatrixBase
isUpperTriangular	external/Eigen/src/Core/TriangularMatrix.h	/^bool MatrixBase<Derived>::isUpperTriangular(RealScalar prec) const$/;"	f	class:Eigen::MatrixBase
isVector	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline bool isVector() const { return rows()==1 || cols()==1; }$/;"	f	class:Eigen::SparseMatrixBase
isZero	external/Eigen/src/Core/CwiseNullaryOp.h	/^bool DenseBase<Derived>::isZero(RealScalar prec) const$/;"	f	class:Eigen::DenseBase
is_aligned	external/unsupported/test/mpreal/dlmalloc.c	1460;"	d	file:
is_arithmetic	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	s	namespace:Eigen::internal
is_arithmetic	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	s	namespace:Eigen::internal
is_const	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_const	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_custom_malloc	external/unsupported/test/mpreal/mpreal.cpp	/^bool       mpreal::is_custom_malloc = false;$/;"	m	class:mpfr::mpreal	file:
is_custom_malloc	external/unsupported/test/mpreal/mpreal.h	/^	static bool is_custom_malloc;$/;"	m	class:mpfr::mpreal
is_diagonal	external/Eigen/src/Core/util/Meta.h	/^template<typename T, int S> struct is_diagonal<DiagonalMatrix<T,S> >$/;"	s	namespace:Eigen
is_diagonal	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_diagonal$/;"	s	namespace:Eigen
is_diagonal	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_diagonal<DiagonalBase<T> >$/;"	s	namespace:Eigen
is_diagonal	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_diagonal<DiagonalWrapper<T> >$/;"	s	namespace:Eigen
is_extern_segment	external/unsupported/test/mpreal/dlmalloc.c	2348;"	d	file:
is_global	external/unsupported/test/mpreal/dlmalloc.c	2501;"	d	file:
is_granularity_aligned	external/unsupported/test/mpreal/dlmalloc.c	2549;"	d	file:
is_initialized	external/unsupported/test/mpreal/dlmalloc.c	2505;"	d	file:
is_inuse	external/unsupported/test/mpreal/dlmalloc.c	2132;"	d	file:
is_large	external/Eigen/src/Core/GeneralProduct.h	/^  enum { is_large = MaxSize == Dynamic ||$/;"	e	enum:Eigen::internal::product_size_category::__anon113
is_ll	external/SuiteSparse/Include/cholmod_core.h	/^    int is_ll ;		\/* TRUE if LL', FALSE if LDL' *\/$/;"	m	struct:cholmod_factor_struct
is_malloc_allowed	external/Eigen/src/Core/util/Memory.h	/^inline bool is_malloc_allowed() { return is_malloc_allowed_impl(false); }$/;"	f	namespace:Eigen::internal
is_malloc_allowed_impl	external/Eigen/src/Core/util/Memory.h	/^inline bool is_malloc_allowed_impl(bool update, bool new_value = false)$/;"	f	namespace:Eigen::internal
is_mmapped	external/unsupported/test/mpreal/dlmalloc.c	2133;"	d	file:
is_mmapped_segment	external/unsupported/test/mpreal/dlmalloc.c	2347;"	d	file:
is_monotonic	external/SuiteSparse/Include/cholmod_core.h	/^    int is_monotonic ;	\/* TRUE if columns of L appear in order 0..n-1.$/;"	m	struct:cholmod_factor_struct
is_page_aligned	external/unsupported/test/mpreal/dlmalloc.c	2547;"	d	file:
is_same	external/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	s	namespace:Eigen::internal
is_same	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
is_small	external/unsupported/test/mpreal/dlmalloc.c	2683;"	d	file:
is_super	external/SuiteSparse/Include/cholmod_core.h	/^    int is_super ;	\/* TRUE if supernodal, FALSE if simplicial *\/$/;"	m	struct:cholmod_factor_struct
isfinite	external/Eigen/src/Core/MathFunctions.h	/^template<typename T> bool (isfinite)(const T& x)$/;"	f	namespace:Eigen::internal
isfinite	external/unsupported/test/mpreal/mpreal.h	/^inline bool isfinite(const mpreal& v){	return (mpfr_number_p(v.mp)		!= 0);	}$/;"	f	namespace:mpfr
isinf	external/unsupported/test/mpreal/mpreal.h	/^inline bool isinf	(const mpreal& v){	return (mpfr_inf_p(v.mp)		!= 0);	}$/;"	f	namespace:mpfr
isint	external/unsupported/test/mpreal/mpreal.h	/^inline bool isint	(const mpreal& v){	return (mpfr_integer_p(v.mp)	!= 0);	}$/;"	f	namespace:mpfr
isnan	external/unsupported/test/mpreal/mpreal.h	/^inline bool isnan	(const mpreal& v){	return (mpfr_nan_p(v.mp)		!= 0);	}$/;"	f	namespace:mpfr
isregular	external/unsupported/test/mpreal/mpreal.h	/^inline bool isregular(const mpreal& v){	return (mpfr_regular_p(v.mp));}$/;"	f	namespace:mpfr
iszero	external/unsupported/test/mpreal/mpreal.h	/^inline bool iszero	(const mpreal& v){	return (mpfr_zero_p(v.mp)		!= 0);	}$/;"	f	namespace:mpfr
iter	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index iter;$/;"	m	class:Eigen::HybridNonLinearSolver
iter	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index iter;$/;"	m	class:Eigen::LevenbergMarquardt
iteration	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t iteration() const { return m_nit; }$/;"	f	class:Eigen::IterationController
iterations	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  int iterations() const$/;"	f	class:Eigen::IterativeSolverBase
itype	external/SuiteSparse/Include/cholmod_core.h	/^    int itype ;		\/* CHOLMOD_INT:     p, i, and nz are int.$/;"	m	struct:cholmod_sparse_struct
itype	external/SuiteSparse/Include/cholmod_core.h	/^    int itype ;		\/* If CHOLMOD_LONG, Flag, Head, and Iwork are$/;"	m	struct:cholmod_common_struct
itype	external/SuiteSparse/Include/cholmod_core.h	/^    int itype ; \/* CHOLMOD_LONG: i and j are SuiteSparse_long.  Otherwise int *\/$/;"	m	struct:cholmod_triplet_struct
itype	external/SuiteSparse/Include/cholmod_core.h	/^    int itype ; \/* The integer arrays are Perm, ColCount, p, i, nz,$/;"	m	struct:cholmod_factor_struct
iworksize	external/SuiteSparse/Include/cholmod_core.h	/^    size_t iworksize ;	\/* size of Iwork.  Upper bound: 6*nrow+ncol *\/$/;"	m	struct:cholmod_common_struct
j	external/SuiteSparse/Include/cholmod_core.h	/^    void *j ;		\/* j [0..nzmax-1], the column indices *\/$/;"	m	struct:cholmod_triplet_struct
jacobiSvd	external/Eigen/src/SVD/JacobiSVD.h	/^MatrixBase<Derived>::jacobiSvd(unsigned int computationOptions) const$/;"	f	class:Eigen::MatrixBase
jacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline JacobianType& jacobian() { return m_jacobian; }$/;"	f	class:Eigen::AutoDiffVector
jacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline const JacobianType& jacobian() const { return m_jacobian; }$/;"	f	class:Eigen::AutoDiffVector
jeval	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    bool jeval;$/;"	m	class:Eigen::HybridNonLinearSolver
joffset_	HashSparseMatrix.h	/^	int ioffset_, joffset_;$/;"	m	class:HashSparseMatrix
kc	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline DenseIndex kc() const { return m_kc; }$/;"	f	class:Eigen::internal::level3_blocking
keep_diag	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    struct keep_diag {$/;"	s	class:Eigen::IncompleteLUT
keep_diag	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    struct keep_diag {$/;"	s	class:Eigen::SimplicialCholeskyBase
keepcost	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	struct:mallinfo	file:
keepcost	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE keepcost; \/* releasable (via malloc_trim) space *\/$/;"	m	struct:mallinfo
kernel	external/Eigen/src/LU/FullPivLU.h	/^    inline const internal::kernel_retval<FullPivLU> kernel() const$/;"	f	class:Eigen::FullPivLU
kernel_retval	external/Eigen/src/LU/FullPivLU.h	/^struct kernel_retval<FullPivLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
kernel_retval_base	external/Eigen/src/misc/Kernel.h	/^  kernel_retval_base(const DecompositionType& dec)$/;"	f	struct:Eigen::internal::kernel_retval_base
kernel_retval_base	external/Eigen/src/misc/Kernel.h	/^template<typename _DecompositionType> struct kernel_retval_base$/;"	s	namespace:Eigen::internal
kiss_cpx_fft	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^struct kiss_cpx_fft$/;"	s	namespace:Eigen::internal
kissfft_impl	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^struct kissfft_impl$/;"	s	namespace:Eigen::internal
knots	external/unsupported/Eigen/src/Splines/Spline.h	/^    const KnotVectorType& knots() const { return m_knots; }$/;"	f	class:Eigen::Spline
kroneckerProduct	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void kroneckerProduct(const MatrixBase<A>& a, const MatrixBase<B>& b, Matrix<CScalar,CRows,CCols,COptions,CMaxRows,CMaxCols>& c)$/;"	f	namespace:Eigen
kroneckerProduct	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void kroneckerProduct(const MatrixBase<A>& a, const MatrixBase<B>& b, MatrixBase<C> const & c_)$/;"	f	namespace:Eigen
kroneckerProduct	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void kroneckerProduct(const MatrixBase<A>& a, const SparseMatrixBase<B>& b, SparseMatrixBase<C>& c)$/;"	f	namespace:Eigen
kroneckerProduct	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void kroneckerProduct(const SparseMatrixBase<A>& a, const MatrixBase<B>& b, SparseMatrixBase<C>& c)$/;"	f	namespace:Eigen
kroneckerProduct	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void kroneckerProduct(const SparseMatrixBase<A>& a, const SparseMatrixBase<B>& b, SparseMatrixBase<C>& c)$/;"	f	namespace:Eigen
kroneckerProduct_full	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void kroneckerProduct_full(const Derived_A& A, const Derived_B& B, Derived_AB & AB)$/;"	f	namespace:Eigen::internal
kroneckerProduct_sparse	external/unsupported/Eigen/src/KroneckerProduct/KroneckerTensorProduct.h	/^void kroneckerProduct_sparse(const Derived_A &A, const Derived_B &B, Derived_AB &AB)$/;"	f	namespace:Eigen::internal
l	external/unsupported/test/mpreal/dlmalloc.c	/^  volatile long l;$/;"	m	struct:win32_mlock_t	file:
l	external/unsupported/test/mpreal/dlmalloc.c	/^  volatile unsigned int l;$/;"	m	struct:pthread_mlock_t	file:
l1CacheSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l1CacheSize()$/;"	f	namespace:Eigen
l2CacheSize	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t l2CacheSize()$/;"	f	namespace:Eigen
lanczos1_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    lanczos1_functor(void) : Functor<double>(6,24) {}$/;"	f	struct:lanczos1_functor
lanczos1_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct lanczos1_functor : Functor<double>$/;"	s	file:
lastCoeff	external/Eigen/src/SparseCore/SparseBlock.h	/^    const Scalar& lastCoeff() const$/;"	f	class:Eigen::SparseInnerVectorSet
lastCoeff	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    const Scalar& lastCoeff() const$/;"	f	class:Eigen::SparseInnerVectorSet
lazy	external/Eigen/src/Eigen2Support/Lazy.h	/^MatrixBase<Derived>::lazy() const$/;"	f	class:Eigen::MatrixBase
lazyAssign	external/Eigen/src/Core/Assign.h	/^  ::lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
lazyAssign	external/Eigen/src/Core/MatrixBase.h	/^    Derived& lazyAssign(const Flagged<OtherDerived, 0, EvalBeforeAssigningBit>& other)$/;"	f	class:Eigen::MatrixBase
lazyAssign	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& lazyAssign(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::PlainObjectBase
lazyAssign	external/Eigen/src/Core/ProductBase.h	/^Derived& MatrixBase<Derived>::lazyAssign(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::MatrixBase
lazyAssign	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE SelfCwiseBinaryOp& lazyAssign(const DenseBase<RhsDerived>& rhs)$/;"	f	class:Eigen::SelfCwiseBinaryOp
lazyAssign	external/Eigen/src/Core/TriangularMatrix.h	/^void TriangularView<MatrixType, Mode>::lazyAssign(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
lazyAssign	external/Eigen/src/Core/TriangularMatrix.h	/^void TriangularView<MatrixType, Mode>::lazyAssign(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
lazyProduct	external/Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::lazyProduct(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
lda	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon439::__anon440
ldexp	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal ldexp(const mpreal& v, mp_exp_t exp)$/;"	f	namespace:mpfr
ldlt	external/Eigen/src/Cholesky/LDLT.h	/^MatrixBase<Derived>::ldlt() const$/;"	f	class:Eigen::MatrixBase
ldlt	external/Eigen/src/Cholesky/LDLT.h	/^SelfAdjointView<MatrixType, UpLo>::ldlt() const$/;"	f	class:Eigen::SelfAdjointView
ldlt_inplace	external/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Lower>$/;"	s	namespace:Eigen::internal
ldlt_inplace	external/Eigen/src/Cholesky/LDLT.h	/^template<> struct ldlt_inplace<Upper>$/;"	s	namespace:Eigen::internal
least_addr	external/unsupported/test/mpreal/dlmalloc.c	/^  char*      least_addr;$/;"	m	struct:malloc_state	file:
least_bit	external/unsupported/test/mpreal/dlmalloc.c	2787;"	d	file:
leftCols	external/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr leftCols(Index n)$/;"	f
leftCols	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr leftCols(Index n) const$/;"	f
leftCols	external/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type leftCols() const$/;"	f
leftCols	external/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type leftCols()$/;"	f
left_bits	external/unsupported/test/mpreal/dlmalloc.c	2790;"	d	file:
leftmost_child	external/unsupported/test/mpreal/dlmalloc.c	2281;"	d	file:
leftshift_for_tree_index	external/unsupported/test/mpreal/dlmalloc.c	2762;"	d	file:
length	external/Eigen/src/Householder/HouseholderSequence.h	/^    Index length() const { return m_length; }  \/**< \\brief Returns the length of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
length_	OptApp.h	/^	double length_;$/;"	m	class:COptApp
length_	PointCloud.h	/^	float length_;$/;"	m	class:PointCloud
level3_blocking	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    level3_blocking()$/;"	f	class:Eigen::internal::level3_blocking
level3_blocking	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^class level3_blocking$/;"	c	namespace:Eigen::internal
lgamma	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal lgamma (const mpreal& v, int *signp, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
lhs	external/Eigen/src/Core/CwiseBinaryOp.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::CwiseBinaryOp
lhs	external/Eigen/src/Core/Product.h	/^    const LhsNestedCleaned& lhs() const { return m_lhs; }$/;"	f	class:Product
lhs	external/Eigen/src/Core/ProductBase.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::ProductBase
lhs	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::CoeffBasedProduct
lhs	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::SparseDenseOuterProduct
lhs	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::SparseDiagonalProduct
lhs	external/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const { return m_lhs; }$/;"	f	class:Eigen::SparseSparseProduct
lhs	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE const _LhsNested& lhs() const {$/;"	f	class:Eigen::internal::SkylineProduct
li2	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal li2(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
linear	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline ConstLinearPart linear() const { return m_matrix.template block<Dim,Dim>(0,0); }$/;"	f	class:Eigen::Transform
linear	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline LinearPart linear() { return m_matrix.template block<Dim,Dim>(0,0); }$/;"	f	class:Eigen::Transform
linear	external/Eigen/src/Geometry/Transform.h	/^  inline ConstLinearPart linear() const { return ConstLinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linear	external/Eigen/src/Geometry/Transform.h	/^  inline LinearPart linear() { return LinearPart(m_matrix,0,0); }$/;"	f	class:Eigen::Transform
linearExt	external/Eigen/src/Geometry/Transform.h	/^  inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt()$/;"	f	class:Eigen::Transform
linearExt	external/Eigen/src/Geometry/Transform.h	/^  inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,Dim> linearExt() const$/;"	f	class:Eigen::Transform
linearRegression	external/Eigen/src/Eigen2Support/LeastSquares.h	/^void linearRegression(int numPoints,$/;"	f	namespace:Eigen
linspaced_op	external/Eigen/src/Core/Functors.h	/^  linspaced_op(Scalar low, Scalar high, int num_steps) : impl((num_steps==1 ? high : low), (num_steps==1 ? Scalar() : (high-low)\/(num_steps-1))) {}$/;"	f	struct:Eigen::internal::linspaced_op
linspaced_op	external/Eigen/src/Core/Functors.h	/^template <typename Scalar, bool RandomAccess> struct linspaced_op$/;"	s	namespace:Eigen::internal
linspaced_op_impl	external/Eigen/src/Core/Functors.h	/^  linspaced_op_impl(Scalar low, Scalar step) :$/;"	f	struct:Eigen::internal::linspaced_op_impl
linspaced_op_impl	external/Eigen/src/Core/Functors.h	/^struct linspaced_op_impl<Scalar,false>$/;"	s	namespace:Eigen::internal
linspaced_op_impl	external/Eigen/src/Core/Functors.h	/^struct linspaced_op_impl<Scalar,true>$/;"	s	namespace:Eigen::internal
list	external/Eigen/src/StlSupport/StdList.h	/^  class list<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
list_base	external/Eigen/src/StlSupport/StdList.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > list_base;$/;"	t	class:std::list
llt	external/Eigen/src/Cholesky/LLT.h	/^MatrixBase<Derived>::llt() const$/;"	f	class:Eigen::MatrixBase
llt	external/Eigen/src/Cholesky/LLT.h	/^SelfAdjointView<MatrixType, UpLo>::llt() const$/;"	f	class:Eigen::SelfAdjointView
llt_inplace	external/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Lower>$/;"	s	namespace:Eigen::internal
llt_inplace	external/Eigen/src/Cholesky/LLT.h	/^template<typename Scalar> struct llt_inplace<Scalar, Upper>$/;"	s	namespace:Eigen::internal
llt_rank_update_lower	external/Eigen/src/Cholesky/LLT.h	/^static typename MatrixType::Index llt_rank_update_lower(MatrixType& mat, const VectorType& vec, const typename MatrixType::RealScalar& sigma)$/;"	f	namespace:Eigen::internal
lm_param	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar lm_param(void) { return par; }$/;"	f	class:Eigen::LevenbergMarquardt
lmder1	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::lmder1($/;"	f	class:Eigen::LevenbergMarquardt
lmder_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    lmder_functor(void): Functor<double>(3,15) {}$/;"	f	struct:lmder_functor
lmder_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct lmder_functor : Functor<double>$/;"	s	file:
lmdif1	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::lmdif1($/;"	f	class:Eigen::LevenbergMarquardt
lmdif_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    lmdif_functor(void) : Functor<double>(3,15) {}$/;"	f	struct:lmdif_functor
lmdif_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct lmdif_functor : Functor<double>$/;"	s	file:
lmpar	external/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^void lmpar($/;"	f	namespace:Eigen::internal
lmpar2	external/unsupported/Eigen/src/NonLinearOptimization/lmpar.h	/^void lmpar2($/;"	f	namespace:Eigen::internal
lmstr1	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::lmstr1($/;"	f	class:Eigen::LevenbergMarquardt
lmstr_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    lmstr_functor(void) : Functor<double>(3,15) {}$/;"	f	struct:lmstr_functor
lmstr_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct lmstr_functor : Functor<double>$/;"	s	file:
lngamma	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal lngamma (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
lnz	external/SuiteSparse/Include/cholmod_core.h	/^	double lnz ;	    \/* nnz(L) excl. zeros from supernodal amalgamation,$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
lnz	external/SuiteSparse/Include/cholmod_core.h	/^    double lnz ;	    \/* fundamental nz in L *\/$/;"	m	struct:cholmod_common_struct
loadLhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadLhs(const LhsScalar* a, LhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadMarket	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool loadMarket(SparseMatrixType& mat, const std::string& filename)$/;"	f	namespace:Eigen
loadMarketVector	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool loadMarketVector(VectorType& vec, const std::string& filename)$/;"	f	namespace:Eigen
loadRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, DoublePacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, ResPacket& dest) const { dest = *b; }$/;"	f	class:Eigen::internal::gebp_traits
loadRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void loadRhs(const RhsScalar* b, RhsPacket& dest) const$/;"	f	class:Eigen::internal::gebp_traits
log	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::log() const$/;"	f	class:Eigen::Cwise
log	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^log() const$/;"	f
log	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^const MatrixLogarithmReturnValue<Derived> MatrixBase<Derived>::log() const$/;"	f	class:Eigen::MatrixBase
log	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log  (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
log10	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log10(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
log1p	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log1p  (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
log2	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^  template <typename Scalar> Scalar log2(Scalar v) { using std::log; return log(v)\/log(Scalar(2)); }$/;"	f	namespace:Eigen
log2	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal log2(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
logAbsDeterminant	external/Eigen/src/QR/ColPivHouseholderQR.h	/^typename MatrixType::RealScalar ColPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::ColPivHouseholderQR
logAbsDeterminant	external/Eigen/src/QR/FullPivHouseholderQR.h	/^typename MatrixType::RealScalar FullPivHouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::FullPivHouseholderQR
logAbsDeterminant	external/Eigen/src/QR/HouseholderQR.h	/^typename MatrixType::RealScalar HouseholderQR<MatrixType>::logAbsDeterminant() const$/;"	f	class:Eigen::HouseholderQR
lower	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Scalar& lower(Index i) {$/;"	f	class:Eigen::SkylineStorage
lower	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Scalar& lower(Index i) const {$/;"	f	class:Eigen::SkylineStorage
lowerNonZeros	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index lowerNonZeros() const {$/;"	f	class:Eigen::SkylineMatrix
lowerNonZeros	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index lowerNonZeros(Index j) const {$/;"	f	class:Eigen::SkylineMatrix
lowerProfile	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index& lowerProfile(Index i) {$/;"	f	class:Eigen::SkylineStorage
lowerProfile	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Index& lowerProfile(Index i) const {$/;"	f	class:Eigen::SkylineStorage
lowerProfileSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index lowerProfileSize() const {$/;"	f	class:Eigen::SkylineStorage
lowerSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index lowerSize() const {$/;"	f	class:Eigen::SkylineStorage
lpNorm	external/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::lpNorm() const$/;"	f	class:Eigen::MatrixBase
lpNorm_selector	external/Eigen/src/Core/Dot.h	/^struct lpNorm_selector$/;"	s	namespace:Eigen::internal
lpNorm_selector	external/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 1>$/;"	s	namespace:Eigen::internal
lpNorm_selector	external/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, 2>$/;"	s	namespace:Eigen::internal
lpNorm_selector	external/Eigen/src/Core/Dot.h	/^struct lpNorm_selector<Derived, Infinity>$/;"	s	namespace:Eigen::internal
lu	external/Eigen/src/Eigen2Support/LU.h	/^MatrixBase<Derived>::lu() const$/;"	f	class:Eigen::MatrixBase
lu	external/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::lu() const$/;"	f	class:Eigen::MatrixBase
m	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index m;$/;"	m	class:Eigen::LevenbergMarquardt
m_A	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typename internal::nested<Derived>::type m_A;$/;"	m	class:Eigen::MatrixFunctionReturnValue
m_A	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    typename internal::nested<MatrixType>::type m_A; \/**< \\brief Reference to argument of matrix function. *\/$/;"	m	class:Eigen::MatrixFunction
m_A	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  typename internal::nested<Derived>::type m_A;$/;"	m	class:Eigen::MatrixLogarithmReturnValue
m_A	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    const MatrixType& m_A;$/;"	m	class:Eigen::MatrixSquareRoot
m_A	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    const MatrixType& m_A;$/;"	m	class:Eigen::MatrixSquareRootQuasiTriangular
m_A	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    const MatrixType& m_A;$/;"	m	class:Eigen::MatrixSquareRootTriangular
m_Arows	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    Index m_Arows;$/;"	m	class:Eigen::MatrixFunctionAtomic
m_Ashifted	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    MatrixType m_Ashifted;$/;"	m	class:Eigen::MatrixFunctionAtomic
m_Id	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    MatrixType m_Id;$/;"	m	class:Eigen::MatrixExponential
m_LDLT	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_LDLT;$/;"	m	class:Eigen::SimplicialCholesky
m_M	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    typename internal::nested<MatrixType>::type m_M;$/;"	m	class:Eigen::MatrixExponential
m_P	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_P;     \/\/ Fill-reducing permutation$/;"	m	class:Eigen::IncompleteLUT
m_P	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_P;     \/\/ the permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_Pinv	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_Pinv;  \/\/ Inverse permutation$/;"	m	class:Eigen::IncompleteLUT
m_Pinv	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    PermutationMatrix<Dynamic,Dynamic,Index> m_Pinv;  \/\/ the inverse permutation$/;"	m	class:Eigen::SimplicialCholeskyBase
m_T	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    MatrixType m_T; \/**< \\brief Triangular part of Schur decomposition *\/$/;"	m	class:Eigen::MatrixFunction
m_U	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    MatrixType m_U;$/;"	m	class:Eigen::MatrixExponential
m_U	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    MatrixType m_U; \/**< \\brief Unitary part of Schur decomposition *\/$/;"	m	class:Eigen::MatrixFunction
m_V	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    MatrixType m_V;$/;"	m	class:Eigen::MatrixExponential
m_actualAlpha	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Scalar m_actualAlpha;$/;"	m	struct:Eigen::internal::gemm_functor
m_adjoint	external/Eigen/src/SVD/JacobiSVD.h	/^  TransposeTypeWithSameStorageOrder m_adjoint;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_allocatedElements	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_allocatedElements;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_allocatedSize;$/;"	m	class:Eigen::internal::AmbiVector
m_allocatedSize	external/Eigen/src/SparseCore/CompressedStorage.h	/^    size_t m_allocatedSize;$/;"	m	class:Eigen::internal::CompressedStorage
m_allocatedSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_allocatedSize;$/;"	m	class:Eigen::SkylineStorage
m_alpha	external/Eigen/src/Core/ProductBase.h	/^    Scalar m_alpha;$/;"	m	class:Eigen::ScaledProduct
m_analysisIsOk	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::CholmodBase
m_analysisIsOk	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_analysisIsOk	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_isInitialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_analysisIsOk	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::PastixBase
m_analysisIsOk	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_initialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_analysisIsOk	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_analysisIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_analysisIsOk	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::SuperLUBase
m_analysisIsOk	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_analysisIsOk;$/;"	m	class:Eigen::UmfPackLU
m_angle	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Scalar m_angle;$/;"	m	class:Eigen::AngleAxis
m_angle	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  Scalar m_angle;$/;"	m	class:Eigen::Rotation2D
m_angle	external/Eigen/src/Geometry/AngleAxis.h	/^  Scalar m_angle;$/;"	m	class:Eigen::AngleAxis
m_angle	external/Eigen/src/Geometry/Rotation2D.h	/^  Scalar m_angle;$/;"	m	class:Eigen::Rotation2D
m_atomic	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    AtomicType& m_atomic; \/**< \\brief Class for computing matrix function of atomic blocks. *\/$/;"	m	class:Eigen::MatrixFunction
m_avgEival	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    Scalar m_avgEival;$/;"	m	class:Eigen::MatrixFunctionAtomic
m_axis	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  Vector3 m_axis;$/;"	m	class:Eigen::AngleAxis
m_axis	external/Eigen/src/Geometry/AngleAxis.h	/^  Vector3 m_axis;$/;"	m	class:Eigen::AngleAxis
m_base	external/Eigen/src/Core/Functors.h	/^  mutable Packet m_base;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_bidiagonal	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    BidiagonalType m_bidiagonal;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_bl_diag	external/unsupported/Eigen/src/Polynomials/Companion.h	/^      BottomLeftDiagonal         m_bl_diag;$/;"	m	class:Eigen::internal::companion
m_blockA	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    LhsScalar* m_blockA;$/;"	m	class:Eigen::internal::level3_blocking
m_blockB	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    RhsScalar* m_blockB;$/;"	m	class:Eigen::internal::level3_blocking
m_blockCols	external/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_blockCols;$/;"	m	class:Eigen::Block
m_blockRows	external/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_blockRows;$/;"	m	class:Eigen::Block
m_blockStart	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    DynamicIntVectorType m_blockStart; \/**< \\brief Row index at which block corresponding to i-th cluster starts *\/$/;"	m	class:Eigen::MatrixFunction
m_blockW	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    RhsScalar* m_blockW;$/;"	m	class:Eigen::internal::level3_blocking
m_blocking	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    BlockingType& m_blocking;$/;"	m	struct:Eigen::internal::gemm_functor
m_buffer	external/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar* m_buffer;$/;"	m	class:Eigen::internal::AmbiVector
m_c	external/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_cachedIndex	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_cachedIndex;          \/\/ current coordinate$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_cachedValue	external/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_cachedValue;       \/\/ current value$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_callback	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void (*m_callback)(const IterationController&);$/;"	m	class:Eigen::IterationController
m_cholmod	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable cholmod_common m_cholmod;$/;"	m	class:Eigen::CholmodBase
m_cholmodFactor	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    cholmod_factor* m_cholmodFactor;$/;"	m	class:Eigen::CholmodBase
m_clusterSize	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    DynamicIntVectorType m_clusterSize; \/**< \\brief Number of eigenvalues in each clusters  *\/$/;"	m	class:Eigen::MatrixFunction
m_clusters	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    ListOfClusters m_clusters; \/**< \\brief Partition of eigenvalues into clusters of ei'vals "close" to each other *\/$/;"	m	class:Eigen::MatrixFunction
m_coeffs	external/Eigen/src/Core/BandMatrix.h	/^    CoefficientsType m_coeffs;$/;"	m	class:Eigen::internal::BandMatrix
m_coeffs	external/Eigen/src/Core/BandMatrix.h	/^    const CoefficientsType& m_coeffs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_coeffs	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Hyperplane
m_coeffs	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Quaternion
m_coeffs	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Scaling
m_coeffs	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Translation
m_coeffs	external/Eigen/src/Geometry/Hyperplane.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Hyperplane
m_coeffs	external/Eigen/src/Geometry/Quaternion.h	/^    Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	external/Eigen/src/Geometry/Quaternion.h	/^    const Coefficients m_coeffs;$/;"	m	class:Eigen::Map
m_coeffs	external/Eigen/src/Geometry/Quaternion.h	/^  Coefficients m_coeffs;$/;"	m	class:Eigen::Quaternion
m_coeffs	external/Eigen/src/Geometry/Translation.h	/^  VectorType m_coeffs;$/;"	m	class:Eigen::Translation
m_coeffs	external/Eigen/src/Householder/HouseholderSequence.h	/^    typename CoeffsType::Nested m_coeffs;$/;"	m	class:Eigen::HouseholderSequence
m_col	external/Eigen/src/Core/CommaInitializer.h	/^  Index m_col;              \/\/ current col id$/;"	m	struct:Eigen::CommaInitializer
m_col	external/Eigen/src/Eigen2Support/Minor.h	/^    const Index m_row, m_col;$/;"	m	class:Eigen::Minor
m_col	external/Eigen/src/SparseCore/SparseUtil.h	/^  Index m_row, m_col;$/;"	m	class:Eigen::Triplet
m_colFactor	external/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, ColFactor> m_colFactor;$/;"	m	class:Eigen::Replicate
m_colSqNorms	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealRowVectorType m_colSqNorms;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colStartIndex	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index* m_colStartIndex;$/;"	m	class:Eigen::SkylineMatrix
m_cols	external/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::CwiseNullaryOp
m_cols	external/Eigen/src/Core/DenseStorage.h	/^    DenseIndex m_cols;$/;"	m	class:Eigen::DenseStorage
m_cols	external/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, ColsAtCompileTime> m_cols;$/;"	m	class:Eigen::MapBase
m_cols	external/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_cols	external/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_cols	external/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_colsPermutation	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    PermutationType m_colsPermutation;$/;"	m	class:Eigen::ColPivHouseholderQR
m_colsTranspositions	external/Eigen/src/LU/FullPivLU.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_colsTranspositions	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    IntRowVectorType m_colsTranspositions;$/;"	m	class:Eigen::ColPivHouseholderQR
m_cols_permutation	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    PermutationType m_cols_permutation;$/;"	m	class:Eigen::FullPivHouseholderQR
m_cols_transpositions	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntRowVectorType m_cols_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_comm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_comm; \/\/ The MPI communicator identifier$/;"	m	class:Eigen::PastixBase
m_computationOptions	external/Eigen/src/SVD/JacobiSVD.h	/^    unsigned int m_computationOptions;$/;"	m	class:Eigen::JacobiSVD
m_computeFullU	external/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::JacobiSVD
m_computeFullV	external/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::JacobiSVD
m_computeThinU	external/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullU, m_computeThinU;$/;"	m	class:Eigen::JacobiSVD
m_computeThinV	external/Eigen/src/SVD/JacobiSVD.h	/^    bool m_computeFullV, m_computeThinV;$/;"	m	class:Eigen::JacobiSVD
m_condition	external/Eigen/src/Core/Select.h	/^    typename ConditionMatrixType::Nested m_condition;$/;"	m	class:Eigen::Select
m_conservative	external/Eigen/src/SparseCore/SparseProduct.h	/^    bool m_conservative;$/;"	m	class:Eigen::SparseSparseProduct
m_copyMatrix	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    UmfpackMatrixType m_copyMatrix;$/;"	m	class:Eigen::UmfPackLU
m_countPerCol	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    mutable VectorI m_countPerCol;$/;"	m	class:Eigen::SparseSelfAdjointView
m_countPerRow	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    mutable VectorI m_countPerRow;$/;"	m	class:Eigen::SparseSelfAdjointView
m_ctrls	external/unsupported/Eigen/src/Splines/Spline.h	/^    ControlPointVectorType  m_ctrls; \/*!< Control points. *\/$/;"	m	class:Eigen::Spline
m_currentBlockRows	external/Eigen/src/Core/CommaInitializer.h	/^  Index m_currentBlockRows; \/\/ current block height$/;"	m	struct:Eigen::CommaInitializer
m_currentEl	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_currentEl;            \/\/ the current element in sparse\/linked-list mode$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_curs_id	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    struct dirent *m_curs_id; $/;"	m	class:Eigen::MatrixMarketIterator	typeref:struct:Eigen::MatrixMarketIterator::dirent
m_data	external/Eigen/src/Core/DenseStorage.h	/^    T *m_data;$/;"	m	class:Eigen::DenseStorage
m_data	external/Eigen/src/Core/DenseStorage.h	/^    internal::plain_array<T,Size,_Options> m_data;$/;"	m	class:Eigen::DenseStorage
m_data	external/Eigen/src/Core/GeneralProduct.h	/^  internal::plain_array<Scalar,EIGEN_SIZE_MIN_PREFER_FIXED(Size,MaxSize),0> m_data;$/;"	m	struct:Eigen::internal::gemv_static_vector_if
m_data	external/Eigen/src/Core/MapBase.h	/^    PointerType m_data;$/;"	m	class:Eigen::MapBase
m_data	external/Eigen/src/Core/util/BlasUtil.h	/^    Scalar* EIGEN_RESTRICT m_data;$/;"	m	class:Eigen::internal::blas_data_mapper
m_data	external/Eigen/src/Core/util/BlasUtil.h	/^    const Scalar* EIGEN_RESTRICT m_data;$/;"	m	class:Eigen::internal::const_blas_data_mapper
m_data	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Storage m_data;$/;"	m	class:Eigen::SparseMatrix
m_data	external/Eigen/src/SparseCore/SparseVector.h	/^    const internal::CompressedStorage<Scalar,Index>& m_data;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_data	external/Eigen/src/SparseCore/SparseVector.h	/^    const internal::CompressedStorage<Scalar,Index>& m_data;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_data	external/Eigen/src/SparseCore/SparseVector.h	/^    internal::CompressedStorage<Scalar,Index> m_data;$/;"	m	class:Eigen::SparseVector
m_data	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    SkylineStorage<Scalar> m_data;$/;"	m	class:Eigen::SkylineMatrix
m_data	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    std::vector<internal::CompressedStorage<Scalar,Index> > m_data;$/;"	m	class:Eigen::DynamicSparseMatrix
m_deallocate	external/Eigen/src/Core/util/Memory.h	/^    bool m_deallocate;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_dec	external/Eigen/src/misc/Image.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::image_retval_base
m_dec	external/Eigen/src/misc/Kernel.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_dec	external/Eigen/src/misc/Solve.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::solve_retval_base
m_dec	external/Eigen/src/misc/SparseSolve.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::solve_retval_with_guess
m_dec	external/Eigen/src/misc/SparseSolve.h	/^    const DecompositionType& m_dec;$/;"	m	struct:Eigen::internal::sparse_solve_retval_base
m_derivatives	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    DerType m_derivatives;$/;"	m	class:Eigen::AutoDiffScalar
m_dest	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    Dest& m_dest;$/;"	m	struct:Eigen::internal::gemm_functor
m_det_p	external/Eigen/src/LU/PartialPivLU.h	/^    Index m_det_p;$/;"	m	class:Eigen::PartialPivLU
m_det_pq	external/Eigen/src/LU/FullPivLU.h	/^    Index m_det_pq, m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_det_pq	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::ColPivHouseholderQR
m_det_pq	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_det_pq;$/;"	m	class:Eigen::FullPivHouseholderQR
m_diag	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorType m_diag;                                \/\/ the diagonal coefficients (LDLT mode)$/;"	m	class:Eigen::SimplicialCholeskyBase
m_diag	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Scalar* m_diag;$/;"	m	class:Eigen::SkylineStorage
m_diagSize	external/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_diagSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_diagSize;$/;"	m	class:Eigen::SkylineStorage
m_diagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalVectorType m_diagonal;$/;"	m	class:Eigen::DiagonalMatrix
m_diagonal	external/Eigen/src/Core/DiagonalMatrix.h	/^    typename DiagonalVectorType::Nested m_diagonal;$/;"	m	class:Eigen::DiagonalWrapper
m_diagonal	external/Eigen/src/Core/DiagonalProduct.h	/^    typename DiagonalType::Nested m_diagonal;$/;"	m	class:Eigen::DiagonalProduct
m_direction	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_direction	external/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_dparm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<double,DPARM_SIZE,1> m_dparm; \/\/ Scalar vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_droptol	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    RealScalar m_droptol;$/;"	m	class:Eigen::IncompleteLUT
m_eigenvectorsOk	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::ComplexEigenSolver
m_eigenvectorsOk	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::EigenSolver
m_eigenvectorsOk	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_eigenvectorsOk;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivalToCluster	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    DynamicIntVectorType m_eivalToCluster; \/**< \\brief m_eivalToCluster[i] = j means i-th ei'val is in j-th cluster *\/$/;"	m	class:Eigen::MatrixFunction
m_eivalues	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivalues	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    EigenvalueType m_eivalues;$/;"	m	class:Eigen::EigenSolver
m_eivalues	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    RealVectorType m_eivalues;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_eivec	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_eivec;$/;"	m	class:Eigen::ComplexEigenSolver
m_eivec	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::EigenSolver
m_eivec	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType m_eivec;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_else	external/Eigen/src/Core/Select.h	/^    typename ElseMatrixType::Nested m_else;$/;"	m	class:Eigen::Select
m_end	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_end;$/;"	m	class:Eigen::internal::AmbiVector
m_end	external/Eigen/src/SparseCore/CoreIterators.h	/^    const Index m_end;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_end	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_end	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_end	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_end;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_end	external/Eigen/src/SparseCore/SparseVector.h	/^    const Index m_end;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_end	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_end	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_end;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_epsilon	external/Eigen/src/SparseCore/AmbiVector.h	/^    RealScalar m_epsilon;       \/\/ epsilon used to prune zero coefficients$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_epsilon	external/Eigen/src/SparseCore/SparseView.h	/^  typename NumTraits<Scalar>::Real m_epsilon;$/;"	m	class:Eigen::SparseView
m_error	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable RealScalar m_error;$/;"	m	class:Eigen::IterativeSolverBase
m_exponent	external/Eigen/src/Core/Functors.h	/^  const Scalar m_exponent;$/;"	m	struct:Eigen::internal::scalar_pow_op
m_expression	external/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::ArrayWrapper
m_expression	external/Eigen/src/Core/ArrayWrapper.h	/^    NestedExpressionType m_expression;$/;"	m	class:Eigen::MatrixWrapper
m_expression	external/Eigen/src/Core/ForceAlignedAccess.h	/^    const ExpressionType& m_expression;$/;"	m	class:Eigen::ForceAlignedAccess
m_expression	external/Eigen/src/Core/NestByValue.h	/^    const ExpressionType m_expression;$/;"	m	class:Eigen::NestByValue
m_expression	external/Eigen/src/Core/NoAlias.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::NoAlias
m_expression	external/Eigen/src/Core/Swap.h	/^    ExpressionType& m_expression;$/;"	m	class:Eigen::SwapWrapper
m_expression	external/Eigen/src/SparseCore/CoreIterators.h	/^    const Derived& m_expression;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_extractedDataAreDirty	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::SuperLUBase
m_extractedDataAreDirty	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable bool m_extractedDataAreDirty;$/;"	m	class:Eigen::UmfPackLU
m_f	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    StemFunction *m_f;$/;"	m	class:Eigen::MatrixFunctionReturnValue
m_f	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    StemFunction* m_f;$/;"	m	class:Eigen::MatrixFunctionAtomic
m_fT	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    MatrixType m_fT; \/**< \\brief %Matrix function applied to #m_T *\/$/;"	m	class:Eigen::MatrixFunction
m_factor	external/Eigen/src/Geometry/Scaling.h	/^  Scalar m_factor;$/;"	m	class:Eigen::UniformScaling
m_factor	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    Scalar m_factor;$/;"	m	class:Eigen::SparseDenseOuterProduct::InnerIterator
m_factorizationIsOk	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::CholmodBase
m_factorizationIsOk	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::IncompleteLUT
m_factorizationIsOk	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_isInitialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_factorizationIsOk	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::PastixBase
m_factorizationIsOk	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_initialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_factorizationIsOk	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_factorizationIsOk;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_factorizationIsOk	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::SuperLUBase
m_factorizationIsOk	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    int m_factorizationIsOk;$/;"	m	class:Eigen::UmfPackLU
m_fillfactor	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    int m_fillfactor;$/;"	m	class:Eigen::IncompleteLUT
m_flags	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    int m_flags;$/;"	m	class:Eigen::SkylineInplaceLU
m_folder	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    std::string m_folder;$/;"	m	class:Eigen::MatrixMarketIterator
m_folder_id	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    DIR * m_folder_id;$/;"	m	class:Eigen::MatrixMarketIterator
m_format	external/Eigen/src/Core/IO.h	/^    IOFormat m_format;$/;"	m	class:Eigen::WithFormat
m_functor	external/Eigen/src/Core/CwiseBinaryOp.h	/^    const BinaryOp m_functor;$/;"	m	class:Eigen::CwiseBinaryOp
m_functor	external/Eigen/src/Core/CwiseNullaryOp.h	/^    const NullaryOp m_functor;$/;"	m	class:Eigen::CwiseNullaryOp
m_functor	external/Eigen/src/Core/CwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOp
m_functor	external/Eigen/src/Core/CwiseUnaryView.h	/^    ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryView
m_functor	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::SelfCwiseBinaryOp
m_functor	external/Eigen/src/Core/VectorwiseOp.h	/^    const MemberOp m_functor;$/;"	m	class:Eigen::PartialReduxExpr
m_functor	external/Eigen/src/Core/VectorwiseOp.h	/^  const BinaryOp m_functor;$/;"	m	struct:Eigen::internal::member_redux
m_functor	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryFunc m_functor;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_functor	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryFunc& m_functor;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_functor	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const BinaryOp& m_functor;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_functor	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOpImpl::InnerIterator
m_functor	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const UnaryOp m_functor;$/;"	m	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
m_functor	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryViewImpl::InnerIterator
m_functor	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    const ViewOp m_functor;$/;"	m	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
m_guess	external/Eigen/src/misc/SparseSolve.h	/^    const typename Guess::Nested m_guess;$/;"	m	struct:Eigen::internal::solve_retval_with_guess
m_hCoeffs	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::HessenbergDecomposition
m_hCoeffs	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    CoeffVectorType m_hCoeffs;$/;"	m	class:Eigen::Tridiagonalization
m_hCoeffs	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::ColPivHouseholderQR
m_hCoeffs	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::FullPivHouseholderQR
m_hCoeffs	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename HCoeffsType::Nested m_hCoeffs;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_hCoeffs	external/Eigen/src/QR/HouseholderQR.h	/^    HCoeffsType m_hCoeffs;$/;"	m	class:Eigen::HouseholderQR
m_hasRhs	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_hasRhs; \/\/ The right hand side exists$/;"	m	class:Eigen::MatrixMarketIterator
m_hashmaps	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    HashMapType* m_hashmaps;$/;"	m	class:Eigen::RandomSetter
m_hasrefX	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_hasrefX; \/\/ A reference solution is provided$/;"	m	class:Eigen::MatrixMarketIterator
m_hess	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::ComplexSchur
m_hess	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const HessenbergDecomposition<MatrixType>& m_hess;$/;"	m	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
m_hess	external/Eigen/src/Eigenvalues/RealSchur.h	/^    HessenbergDecomposition<MatrixType> m_hess;$/;"	m	class:Eigen::RealSchur
m_householder	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    MatrixType m_householder;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_id	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_id	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_id	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Index m_id;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_id	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_id	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_id	external/Eigen/src/SparseCore/SparseVector.h	/^    Index m_id;$/;"	m	class:Eigen::SparseVector::InnerIterator
m_id	external/Eigen/src/SparseCore/SparseVector.h	/^    Index m_id;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_id	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_id	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_id;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_index	external/Eigen/src/Core/Diagonal.h	/^    const internal::variable_if_dynamic<Index, DiagIndex> m_index;$/;"	m	class:Eigen::Diagonal
m_index	external/Eigen/src/SparseCore/SparseMatrix.h	/^        Index m_index;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_indices	external/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	external/Eigen/src/Core/PermutationMatrix.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::PermutationMatrix
m_indices	external/Eigen/src/Core/PermutationMatrix.h	/^    typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::PermutationWrapper
m_indices	external/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Map
m_indices	external/Eigen/src/Core/Transpositions.h	/^    IndicesType m_indices;$/;"	m	class:Eigen::Transpositions
m_indices	external/Eigen/src/Core/Transpositions.h	/^    const typename IndicesType::Nested m_indices;$/;"	m	class:Eigen::TranspositionsWrapper
m_indices	external/Eigen/src/SparseCore/CompressedStorage.h	/^    Index* m_indices;$/;"	m	class:Eigen::internal::CompressedStorage
m_indices	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index* m_indices;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_indices	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index* m_indices;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_info	external/Eigen/src/Cholesky/LLT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::LLT
m_info	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::CholmodBase
m_info	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::ComplexSchur
m_info	external/Eigen/src/Eigenvalues/RealSchur.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::RealSchur
m_info	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_info	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::IncompleteLUT
m_info	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable ComputationInfo m_info;$/;"	m	class:Eigen::IterativeSolverBase
m_info	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable ComputationInfo m_info; $/;"	m	class:Eigen::PastixBase
m_info	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ComputationInfo m_info;$/;"	m	class:Eigen::PardisoImpl
m_info	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_info	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::SuperLUBase
m_info	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable ComputationInfo m_info;$/;"	m	class:Eigen::UmfPackLU
m_info	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    mutable ComputationInfo m_info; $/;"	m	class:Scaling
m_initialized	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    bool m_initialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::PardisoImpl
m_initisOk	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    int m_initisOk; $/;"	m	class:Eigen::PastixBase
m_inner	external/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, InnerStrideAtCompileTime> m_inner;$/;"	m	class:Eigen::Stride
m_inner	external/Eigen/src/SparseCore/CoreIterators.h	/^    Index m_inner;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_innerIndexPtr	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    const int* m_innerIndexPtr;$/;"	m	class:Eigen::UmfPackLU
m_innerIndices	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index*  m_innerIndices;$/;"	m	class:Eigen::MappedSparseMatrix
m_innerNonZeros	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Index* m_innerNonZeros;     \/\/ optional, if null then the data is compressed$/;"	m	class:Eigen::SparseMatrix
m_innerSize	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index   m_innerSize;$/;"	m	class:Eigen::MappedSparseMatrix
m_innerSize	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::SparseMatrix
m_innerSize	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::SkylineMatrix
m_innerSize	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    Index m_innerSize;$/;"	m	class:Eigen::DynamicSparseMatrix
m_inputs	external/unsupported/test/NonLinearOptimization.cpp	/^  const int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_inputs	external/unsupported/test/NumericalDiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_inputs	external/unsupported/test/autodiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_inputs	external/unsupported/test/forward_adolc.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_interPacket	external/Eigen/src/Core/Functors.h	/^  const Packet m_interPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_invdiag	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Vector m_invdiag;$/;"	m	class:Eigen::DiagonalPreconditioner
m_inverse	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  bool m_inverse;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_invp	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<Index,Dynamic,1> m_invp;  \/\/ Inverse permutation vector$/;"	m	class:Eigen::PastixBase
m_iparm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<int,IPARM_SIZE,1> m_iparm; \/\/ integer vector for the input parameters$/;"	m	class:Eigen::PastixBase
m_iparm	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable ParameterType m_iparm;$/;"	m	class:Eigen::PardisoImpl
m_isAllocated	external/Eigen/src/SVD/JacobiSVD.h	/^    bool m_isInitialized, m_isAllocated;$/;"	m	class:Eigen::JacobiSVD
m_isDense	external/Eigen/src/SparseCore/AmbiVector.h	/^    bool m_isDense;             \/\/ mode of the vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_isInitialized	external/Eigen/src/Cholesky/LDLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LDLT
m_isInitialized	external/Eigen/src/Cholesky/LLT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::LLT
m_isInitialized	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::CholmodBase
m_isInitialized	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexEigenSolver
m_isInitialized	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::ComplexSchur
m_isInitialized	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::EigenSolver
m_isInitialized	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HessenbergDecomposition
m_isInitialized	external/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::RealSchur
m_isInitialized	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_isInitialized	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::Tridiagonalization
m_isInitialized	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::DiagonalPreconditioner
m_isInitialized	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::IncompleteLUT
m_isInitialized	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable bool m_isInitialized, m_analysisIsOk, m_factorizationIsOk;$/;"	m	class:Eigen::IterativeSolverBase
m_isInitialized	external/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_isInitialized	external/Eigen/src/LU/PartialPivLU.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::PartialPivLU
m_isInitialized	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::PastixBase
m_isInitialized	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_isInitialized	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_isInitialized	external/Eigen/src/QR/HouseholderQR.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::HouseholderQR
m_isInitialized	external/Eigen/src/SVD/JacobiSVD.h	/^    bool m_isInitialized, m_isAllocated;$/;"	m	class:Eigen::JacobiSVD
m_isInitialized	external/Eigen/src/SVD/UpperBidiagonalization.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::internal::UpperBidiagonalization
m_isInitialized	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_isInitialized	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::SuperLUBase
m_isInitialized	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::UmfPackLU
m_isInitialized	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    bool m_isInitialized;$/;"	m	class:Eigen::IncompleteLU
m_isInitialized	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    bool m_isInitialized; $/;"	m	class:Scaling
m_isRValue	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    bool m_isRValue;$/;"	m	class:Eigen::SparseMatrixBase
m_isRValue	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    bool m_isRValue;$/;"	m	class:Eigen::SkylineMatrixBase
m_isvalid	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_isvalid; $/;"	m	class:Eigen::MatrixMarketIterator
m_iterations	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  mutable int m_iterations;$/;"	m	class:Eigen::IterativeSolverBase
m_jacobian	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    JacobianType m_jacobian;$/;"	m	class:Eigen::AutoDiffVector
m_kc	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_kc;$/;"	m	class:Eigen::internal::level3_blocking
m_keyBitsOffset	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    unsigned char m_keyBitsOffset;$/;"	m	class:Eigen::RandomSetter
m_knots	external/unsupported/Eigen/src/Splines/Spline.h	/^    KnotVectorType m_knots; \/*!< Knot vector. *\/$/;"	m	class:Eigen::Spline
m_l	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::SuperLUBase
m_l	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_l;$/;"	m	class:Eigen::UmfPackLU
m_l1norm	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    RealScalar m_l1norm;$/;"	m	class:Eigen::MatrixExponential
m_left	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd m_left; \/\/ Left scaling vector$/;"	m	class:Scaling
m_length	external/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_length;$/;"	m	class:Eigen::HouseholderSequence
m_lhs	external/Eigen/src/Core/CwiseBinaryOp.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_lhs	external/Eigen/src/Core/Product.h	/^    const LhsNested m_lhs;$/;"	m	class:Product
m_lhs	external/Eigen/src/Core/ProductBase.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::ProductBase
m_lhs	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typename internal::add_const_on_value_type<LhsNested>::type m_lhs;$/;"	m	class:Eigen::CoeffBasedProduct
m_lhs	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Lhs& m_lhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_lhs	external/Eigen/src/Geometry/Homogeneous.h	/^  typename LhsMatrixTypeCleaned::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_lhs	external/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_lhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_lhs	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::SparseDenseOuterProduct
m_lhs	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::SparseDiagonalProduct
m_lhs	external/Eigen/src/SparseCore/SparseProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::SparseSparseProduct
m_lhs	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    LhsNested m_lhs;$/;"	m	class:Eigen::internal::SkylineProduct
m_lhsIter	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    LhsIterator m_lhsIter;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_llCurrent	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_llCurrent;$/;"	m	class:Eigen::internal::AmbiVector
m_llSize	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_llSize;$/;"	m	class:Eigen::internal::AmbiVector
m_llStart	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_llStart;$/;"	m	class:Eigen::internal::AmbiVector
m_low	external/Eigen/src/Core/Functors.h	/^  const Scalar m_low;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lowPacket	external/Eigen/src/Core/Functors.h	/^  const Packet m_lowPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_lower	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Scalar* m_lower;$/;"	m	class:Eigen::SkylineStorage
m_lowerProfile	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index* m_lowerProfile;$/;"	m	class:Eigen::SkylineStorage
m_lowerProfileSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_lowerProfileSize;$/;"	m	class:Eigen::SkylineStorage
m_lowerSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_lowerSize;$/;"	m	class:Eigen::SkylineStorage
m_lu	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    FactorType m_lu;$/;"	m	class:Eigen::IncompleteLUT
m_lu	external/Eigen/src/LU/FullPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::FullPivLU
m_lu	external/Eigen/src/LU/PartialPivLU.h	/^    MatrixType m_lu;$/;"	m	class:Eigen::PartialPivLU
m_lu	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    FactorType m_lu;$/;"	m	class:Eigen::IncompleteLU
m_lu	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    MatrixType& m_lu;$/;"	m	class:Eigen::SkylineInplaceLU
m_mat	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    MatrixType m_mat; \/\/ Current matrix  $/;"	m	class:Eigen::MatrixMarketIterator
m_matIsLoaded	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    bool m_matIsLoaded; \/\/ Determine if the matrix has already been loaded from the file$/;"	m	class:Eigen::MatrixMarketIterator
m_matT	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matT	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::EigenSolver
m_matT	external/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matT;$/;"	m	class:Eigen::RealSchur
m_matU	external/Eigen/src/Eigen2Support/SVD.h	/^    MatrixUType m_matU;$/;"	m	class:Eigen::SVD
m_matU	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    ComplexMatrixType m_matT, m_matU;$/;"	m	class:Eigen::ComplexSchur
m_matU	external/Eigen/src/Eigenvalues/RealSchur.h	/^    MatrixType m_matU;$/;"	m	class:Eigen::RealSchur
m_matUisUptodate	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::ComplexSchur
m_matUisUptodate	external/Eigen/src/Eigenvalues/RealSchur.h	/^    bool m_matUisUptodate;$/;"	m	class:Eigen::RealSchur
m_matV	external/Eigen/src/Eigen2Support/SVD.h	/^    MatrixVType m_matV;$/;"	m	class:Eigen::SVD
m_matX	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    EigenvectorType m_matX;$/;"	m	class:Eigen::ComplexEigenSolver
m_matname	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    std::string m_matname; \/\/ Matrix Name$/;"	m	class:Eigen::MatrixMarketIterator
m_matrix	external/Eigen/src/Cholesky/LDLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LDLT
m_matrix	external/Eigen/src/Cholesky/LLT.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::LLT
m_matrix	external/Eigen/src/Core/CwiseUnaryView.h	/^    typename internal::nested<MatrixType>::type m_matrix;$/;"	m	class:Eigen::CwiseUnaryView
m_matrix	external/Eigen/src/Core/Diagonal.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Diagonal
m_matrix	external/Eigen/src/Core/DiagonalProduct.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::DiagonalProduct
m_matrix	external/Eigen/src/Core/Flagged.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::Flagged
m_matrix	external/Eigen/src/Core/IO.h	/^    const typename ExpressionType::Nested m_matrix;$/;"	m	class:Eigen::WithFormat
m_matrix	external/Eigen/src/Core/PermutationMatrix.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::permut_matrix_product_retval
m_matrix	external/Eigen/src/Core/Replicate.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::Replicate
m_matrix	external/Eigen/src/Core/Reverse.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Reverse
m_matrix	external/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SelfAdjointView
m_matrix	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    Lhs& m_matrix;$/;"	m	class:Eigen::SelfCwiseBinaryOp
m_matrix	external/Eigen/src/Core/Transpose.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Transpose
m_matrix	external/Eigen/src/Core/Transpositions.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::transposition_matrix_product_retval
m_matrix	external/Eigen/src/Core/TriangularMatrix.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::TriangularView
m_matrix	external/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::VectorwiseOp
m_matrix	external/Eigen/src/Core/VectorwiseOp.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::PartialReduxExpr
m_matrix	external/Eigen/src/Eigen2Support/Cwise.h	/^    ExpressionTypeNested m_matrix;$/;"	m	class:Eigen::Cwise
m_matrix	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  MatrixType m_matrix;$/;"	m	class:Eigen::Transform
m_matrix	external/Eigen/src/Eigen2Support/Minor.h	/^    const typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Minor
m_matrix	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::HessenbergDecomposition
m_matrix	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixType m_matrix;$/;"	m	class:Eigen::Tridiagonalization
m_matrix	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
m_matrix	external/Eigen/src/Geometry/Homogeneous.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::Homogeneous
m_matrix	external/Eigen/src/Geometry/Transform.h	/^  MatrixType m_matrix;$/;"	m	class:Eigen::Transform
m_matrix	external/Eigen/src/LU/Inverse.h	/^  MatrixTypeNested m_matrix;$/;"	m	struct:Eigen::internal::inverse_impl
m_matrix	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable SparseMatrixType m_matrix;$/;"	m	class:Eigen::PardisoImpl
m_matrix	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    CholMatrixType m_matrix;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_matrix	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const MappedSparseMatrix& m_matrix;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_matrix	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const MappedSparseMatrix& m_matrix;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_matrix	external/Eigen/src/SparseCore/SparseBlock.h	/^    const typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::SparseInnerVectorSet
m_matrix	external/Eigen/src/SparseCore/SparseBlock.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::SparseInnerVectorSet
m_matrix	external/Eigen/src/SparseCore/SparsePermutation.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	struct:Eigen::internal::permut_sparsematrix_product_retval
m_matrix	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_matrix	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::SparseSelfAdjointView
m_matrix	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseTriangularView
m_matrix	external/Eigen/src/SparseCore/SparseView.h	/^  MatrixTypeNested m_matrix;$/;"	m	class:Eigen::SparseView
m_matrix	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_matrix;  \/\/ copy of the factorized matrix$/;"	m	class:Eigen::SuperLUBase
m_matrix	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    MatrixType m_matrix;$/;"	m	class:Scaling
m_matrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const SkylineMatrix& m_matrix;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_matrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const SkylineMatrix& m_matrix;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_matrix	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    const typename MatrixType::Nested m_matrix;$/;"	m	class:Eigen::SparseInnerVectorSet
m_matrixU	external/Eigen/src/SVD/JacobiSVD.h	/^    MatrixUType m_matrixU;$/;"	m	class:Eigen::JacobiSVD
m_matrixV	external/Eigen/src/SVD/JacobiSVD.h	/^    MatrixVType m_matrixV;$/;"	m	class:Eigen::JacobiSVD
m_max	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_max	external/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_maxIterations	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    static const int m_maxIterations = 30;$/;"	m	class:Eigen::ComplexSchur
m_maxIterations	external/Eigen/src/Eigenvalues/RealSchur.h	/^    static const int m_maxIterations = 40;$/;"	m	class:Eigen::RealSchur
m_maxIterations	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    static const int m_maxIterations = 30;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_maxIterations	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  int m_maxIterations;$/;"	m	class:Eigen::IterativeSolverBase
m_maxiter	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t m_maxiter;     \/\/\/< Max. number of iterations$/;"	m	class:Eigen::IterationController
m_maxits	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    int m_maxits; \/\/ Maximum number of iterations allowed$/;"	m	class:Scaling
m_maxpivot	external/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_maxpivot	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_maxpivot	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_mc	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_mc;$/;"	m	class:Eigen::internal::level3_blocking
m_min	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_min	external/Eigen/src/Geometry/AlignedBox.h	/^  VectorType m_min, m_max;$/;"	m	class:Eigen::AlignedBox
m_mode	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_mode;$/;"	m	class:Eigen::internal::AmbiVector
m_monic	external/unsupported/Eigen/src/Polynomials/Companion.h	/^      RightColumn                m_monic;$/;"	m	class:Eigen::internal::companion
m_msglvl	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_mu	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^    RealScalar m_mu;$/;"	m	class:Eigen::MatrixFunctionAtomic
m_nc	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_nc;$/;"	m	class:Eigen::internal::level3_blocking
m_nit	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t m_nit;         \/\/\/< iteration number$/;"	m	class:Eigen::IterationController
m_nnz	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index   m_nnz;$/;"	m	class:Eigen::MappedSparseMatrix
m_noise	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    int m_noise;          \/\/\/< if noise > 0 iterations are printed$/;"	m	class:Eigen::IterationController
m_nonZerosPerCol	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorXi m_nonZerosPerCol;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_nonzeroSingularValues	external/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_nonzero_pivots	external/Eigen/src/LU/FullPivLU.h	/^    Index m_det_pq, m_nonzero_pivots;$/;"	m	class:Eigen::FullPivLU
m_nonzero_pivots	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::ColPivHouseholderQR
m_nonzero_pivots	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index m_nonzero_pivots;$/;"	m	class:Eigen::FullPivHouseholderQR
m_numeric	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_numeric;$/;"	m	class:Eigen::UmfPackLU
m_origin	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_origin	external/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType m_origin, m_direction;$/;"	m	class:Eigen::ParametrizedLine
m_originalMatrix	external/Eigen/src/Eigen2Support/LU.h	/^    const MatrixType& m_originalMatrix;$/;"	m	class:Eigen::LU
m_originalMatrix	external/Eigen/src/misc/Image.h	/^    const MatrixType& m_originalMatrix;$/;"	m	struct:Eigen::internal::image_retval_base
m_other	external/Eigen/src/Core/Functors.h	/^  Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_inverse_mult_op
m_other	external/Eigen/src/Core/Functors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_add_op
m_other	external/Eigen/src/Core/Functors.h	/^  const Scalar m_other;$/;"	m	struct:Eigen::internal::scalar_constant_op
m_other	external/Eigen/src/Core/Functors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar2>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_multiple2_op
m_other	external/Eigen/src/Core/Functors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_multiple_op
m_other	external/Eigen/src/Core/Functors.h	/^  typename add_const_on_value_type<typename NumTraits<Scalar>::Nested>::type m_other;$/;"	m	struct:Eigen::internal::scalar_quotient1_op
m_outer	external/Eigen/src/Core/Stride.h	/^    internal::variable_if_dynamic<Index, OuterStrideAtCompileTime> m_outer;$/;"	m	class:Eigen::Stride
m_outer	external/Eigen/src/SparseCore/CoreIterators.h	/^    const Index m_outer;$/;"	m	class:Eigen::DenseBase::InnerIterator
m_outer	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_outer	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_outer	external/Eigen/src/SparseCore/SparseBlock.h	/^        Index m_outer;$/;"	m	class:Eigen::SparseInnerVectorSet::InnerIterator
m_outer	external/Eigen/src/SparseCore/SparseBlock.h	/^        Index m_outer;$/;"	m	class:Eigen::SparseInnerVectorSet::ReverseInnerIterator
m_outer	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const Index m_outer;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_outer	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    int m_outer;$/;"	m	class:Eigen::SparseDenseOuterProduct::InnerIterator
m_outer	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    Index m_outer;$/;"	m	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
m_outer	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_outer	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_outer	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_outer	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_outer	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^        Index m_outer;$/;"	m	class:Eigen::SparseInnerVectorSet::InnerIterator
m_outer	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::DynamicSparseMatrix::InnerIterator
m_outer	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    const Index m_outer;$/;"	m	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
m_outerIndex	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index*  m_outerIndex;$/;"	m	class:Eigen::MappedSparseMatrix
m_outerIndex	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Index* m_outerIndex;$/;"	m	class:Eigen::SparseMatrix
m_outerIndexPtr	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    const int* m_outerIndexPtr;$/;"	m	class:Eigen::UmfPackLU
m_outerPackets	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    Index m_outerPackets;$/;"	m	class:Eigen::RandomSetter
m_outerSize	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Index   m_outerSize;$/;"	m	class:Eigen::MappedSparseMatrix
m_outerSize	external/Eigen/src/SparseCore/SparseBlock.h	/^    const internal::variable_if_dynamic<Index, Size> m_outerSize;$/;"	m	class:Eigen::SparseInnerVectorSet
m_outerSize	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Index m_outerSize;$/;"	m	class:Eigen::SparseMatrix
m_outerSize	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index m_outerSize;$/;"	m	class:Eigen::SkylineMatrix
m_outerSize	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    const internal::variable_if_dynamic<Index, Size> m_outerSize;$/;"	m	class:Eigen::SparseInnerVectorSet
m_outerStart	external/Eigen/src/SparseCore/SparseBlock.h	/^    Index m_outerStart;$/;"	m	class:Eigen::SparseInnerVectorSet
m_outerStart	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    Index m_outerStart;$/;"	m	class:Eigen::SparseInnerVectorSet
m_outerStride	external/Eigen/src/Core/Block.h	/^    Index m_outerStride;$/;"	m	class:Eigen::Block
m_p	external/Eigen/src/LU/FullPivLU.h	/^    PermutationPType m_p;$/;"	m	class:Eigen::FullPivLU
m_p	external/Eigen/src/LU/PartialPivLU.h	/^    PermutationType m_p;$/;"	m	class:Eigen::PartialPivLU
m_p	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::SuperLUBase
m_p	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntColVectorType m_p;$/;"	m	class:Eigen::UmfPackLU
m_packetStep	external/Eigen/src/Core/Functors.h	/^  const Packet m_packetStep;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_parent	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    VectorXi m_parent;                                \/\/ elimination tree$/;"	m	class:Eigen::SimplicialCholeskyBase
m_pastixdata	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable pastix_data_t *m_pastixdata; \/\/ Data structure for pastix$/;"	m	class:Eigen::PastixBase
m_perm	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable Matrix<Index,Dynamic,1> m_perm;  \/\/ Permutation vector$/;"	m	class:Eigen::PastixBase
m_perm	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable IntColVectorType m_perm;$/;"	m	class:Eigen::PardisoImpl
m_perm	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const Perm& m_perm;$/;"	m	class:Eigen::SparseSymmetricPermutationProduct
m_permutation	external/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& m_permutation;$/;"	m	class:Eigen::Transpose
m_permutation	external/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& m_permutation;$/;"	m	struct:Eigen::internal::permut_matrix_product_retval
m_permutation	external/Eigen/src/SparseCore/SparsePermutation.h	/^    const PermutationType& m_permutation;$/;"	m	struct:Eigen::internal::permut_sparsematrix_product_retval
m_permutation	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    IntVectorType m_permutation; \/**< \\brief Permutation which groups ei'vals in the same cluster together *\/$/;"	m	class:Eigen::MatrixFunction
m_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ::fftw_plan m_plan;$/;"	m	struct:Eigen::internal::fftw_plan
m_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      fftwf_plan m_plan;$/;"	m	struct:Eigen::internal::fftw_plan
m_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      fftwl_plan m_plan;$/;"	m	struct:Eigen::internal::fftw_plan
m_plans	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      PlanMap m_plans;$/;"	m	struct:Eigen::internal::fftw_impl
m_plans	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  PlanMap m_plans;$/;"	m	struct:Eigen::internal::kissfft_impl
m_precision	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_precision;$/;"	m	class:Eigen::FullPivHouseholderQR
m_precision	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    RealScalar m_precision;$/;"	m	class:Eigen::SkylineInplaceLU
m_preconditioner	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner m_preconditioner;$/;"	m	class:Eigen::IterativeSolverBase
m_prescribedThreshold	external/Eigen/src/LU/FullPivLU.h	/^    RealScalar m_maxpivot, m_prescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_prescribedThreshold	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::ColPivHouseholderQR
m_prescribedThreshold	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar m_prescribedThreshold, m_maxpivot;$/;"	m	class:Eigen::FullPivHouseholderQR
m_prod	external/Eigen/src/Core/ProductBase.h	/^    const NestedProduct& m_prod;$/;"	m	class:Eigen::ScaledProduct
m_pt	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    mutable void *m_pt[64];$/;"	m	class:Eigen::PardisoImpl
m_ptr	external/Eigen/src/Core/util/Memory.h	/^    T* m_ptr;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_q	external/Eigen/src/LU/FullPivLU.h	/^    PermutationQType m_q;$/;"	m	class:Eigen::FullPivLU
m_q	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::SuperLUBase
m_q	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable IntRowVectorType m_q;$/;"	m	class:Eigen::UmfPackLU
m_qr	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::ColPivHouseholderQR
m_qr	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::FullPivHouseholderQR
m_qr	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename MatrixType::Nested m_qr;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_qr	external/Eigen/src/QR/HouseholderQR.h	/^    MatrixType m_qr;$/;"	m	class:Eigen::HouseholderQR
m_qr	external/Eigen/src/SVD/JacobiSVD.h	/^  ColPivHouseholderQR<MatrixType> m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	external/Eigen/src/SVD/JacobiSVD.h	/^  ColPivHouseholderQR<TransposeTypeWithSameStorageOrder> m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	external/Eigen/src/SVD/JacobiSVD.h	/^  FullPivHouseholderQR<MatrixType> m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	external/Eigen/src/SVD/JacobiSVD.h	/^  FullPivHouseholderQR<TransposeTypeWithSameStorageOrder> m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	external/Eigen/src/SVD/JacobiSVD.h	/^  HouseholderQR<MatrixType> m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr	external/Eigen/src/SVD/JacobiSVD.h	/^  HouseholderQR<TransposeTypeWithSameStorageOrder> m_qr;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_qr_precond_morecols	external/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreColsThanRows> m_qr_precond_morecols;$/;"	m	class:Eigen::JacobiSVD
m_qr_precond_morerows	external/Eigen/src/SVD/JacobiSVD.h	/^    internal::qr_preconditioner_impl<MatrixType, QRPreconditioner, internal::PreconditionIfMoreRowsThanCols> m_qr_precond_morerows;$/;"	m	class:Eigen::JacobiSVD
m_rank	external/Eigen/src/misc/Image.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::image_retval_base
m_rank	external/Eigen/src/misc/Kernel.h	/^    Index m_rank, m_cols;$/;"	m	struct:Eigen::internal::kernel_retval_base
m_realSchur	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    RealSchur<MatrixType> m_realSchur;$/;"	m	class:Eigen::EigenSolver
m_realTwiddles	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::map<int, std::vector<Complex> > m_realTwiddles;$/;"	m	struct:Eigen::internal::kissfft_impl
m_refX	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    VectorType m_refX; \/\/ The reference solution, if exists$/;"	m	class:Eigen::MatrixMarketIterator
m_reference	external/Eigen/src/SparseCore/SparseView.h	/^  Scalar m_reference;$/;"	m	class:Eigen::SparseView
m_res	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_res;         \/\/\/< last computed residual$/;"	m	class:Eigen::IterationController
m_resadd	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_resminreach, m_resadd;$/;"	m	class:Eigen::IterationController
m_resmax	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_resmax;      \/\/\/< maximum residual$/;"	m	class:Eigen::IterationController
m_resminreach	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_resminreach, m_resadd;$/;"	m	class:Eigen::IterationController
m_restart	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  int m_restart;$/;"	m	class:Eigen::GMRES
m_result	external/Eigen/src/Core/ProductBase.h	/^    mutable PlainObject m_result;$/;"	m	class:Eigen::ProductBase
m_result	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    mutable PlainObject m_result;$/;"	m	class:Eigen::CoeffBasedProduct
m_returnOne	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    bool m_returnOne;$/;"	m	class:Eigen::SparseTriangularView::InnerIterator
m_rhs	external/Eigen/src/Core/CwiseBinaryOp.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::CwiseBinaryOp
m_rhs	external/Eigen/src/Core/Product.h	/^    const RhsNested m_rhs;$/;"	m	class:Product
m_rhs	external/Eigen/src/Core/ProductBase.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::ProductBase
m_rhs	external/Eigen/src/Core/SolveTriangular.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_rhs	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    typename internal::add_const_on_value_type<RhsNested>::type m_rhs;$/;"	m	class:Eigen::CoeffBasedProduct
m_rhs	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    const Rhs& m_rhs;$/;"	m	struct:Eigen::internal::gemm_functor
m_rhs	external/Eigen/src/Geometry/Homogeneous.h	/^  typename MatrixType::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_left_product_impl
m_rhs	external/Eigen/src/Geometry/Homogeneous.h	/^  typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::homogeneous_right_product_impl
m_rhs	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_rhs	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::SparseDenseOuterProduct
m_rhs	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::SparseDiagonalProduct
m_rhs	external/Eigen/src/SparseCore/SparseProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::SparseSparseProduct
m_rhs	external/Eigen/src/misc/Solve.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::solve_retval_base
m_rhs	external/Eigen/src/misc/SparseSolve.h	/^    const typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::solve_retval_with_guess
m_rhs	external/Eigen/src/misc/SparseSolve.h	/^    typename Rhs::Nested m_rhs;$/;"	m	struct:Eigen::internal::sparse_solve_retval_base
m_rhs	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    RhsNested m_rhs;$/;"	m	class:Eigen::internal::SkylineProduct
m_rhs	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    VectorType m_rhs;  \/\/ Current vector$/;"	m	class:Eigen::MatrixMarketIterator
m_rhsIter	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    RhsIterator m_rhsIter;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_rhsn	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double m_rhsn;        \/\/\/< Right hand side norm$/;"	m	class:Eigen::IterationController
m_right	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    VectorXd m_right; \/\/ m_right scaling vector$/;"	m	class:Scaling
m_roots	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    RootsType               m_roots;$/;"	m	class:Eigen::PolynomialSolverBase
m_row	external/Eigen/src/Core/CommaInitializer.h	/^  Index m_row;              \/\/ current row id$/;"	m	struct:Eigen::CommaInitializer
m_row	external/Eigen/src/Eigen2Support/Minor.h	/^    const Index m_row, m_col;$/;"	m	class:Eigen::Minor
m_row	external/Eigen/src/SparseCore/SparseUtil.h	/^  Index m_row, m_col;$/;"	m	class:Eigen::Triplet
m_rowFactor	external/Eigen/src/Core/Replicate.h	/^    const internal::variable_if_dynamic<Index, RowFactor> m_rowFactor;$/;"	m	class:Eigen::Replicate
m_rowStartIndex	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    Index* m_rowStartIndex;$/;"	m	class:Eigen::SkylineMatrix
m_rows	external/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrix
m_rows	external/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Rows>   m_rows;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_rows	external/Eigen/src/Core/CwiseNullaryOp.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::CwiseNullaryOp
m_rows	external/Eigen/src/Core/DenseStorage.h	/^    DenseIndex m_rows;$/;"	m	class:Eigen::DenseStorage
m_rows	external/Eigen/src/Core/MapBase.h	/^    const internal::variable_if_dynamic<Index, RowsAtCompileTime> m_rows;$/;"	m	class:Eigen::MapBase
m_rows	external/Eigen/src/SVD/JacobiSVD.h	/^    Index m_nonzeroSingularValues, m_rows, m_cols, m_diagSize;$/;"	m	class:Eigen::JacobiSVD
m_rowsTranspositions	external/Eigen/src/LU/FullPivLU.h	/^    IntColVectorType m_rowsTranspositions;$/;"	m	class:Eigen::FullPivLU
m_rowsTranspositions	external/Eigen/src/LU/PartialPivLU.h	/^    TranspositionType m_rowsTranspositions;$/;"	m	class:Eigen::PartialPivLU
m_rowsTranspositions	external/Eigen/src/QR/FullPivHouseholderQR.h	/^  typename IntColVectorType::Nested m_rowsTranspositions;$/;"	m	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
m_rows_transpositions	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    IntColVectorType m_rows_transpositions;$/;"	m	class:Eigen::FullPivHouseholderQR
m_s	external/Eigen/src/Jacobi/Jacobi.h	/^    Scalar m_c, m_s;$/;"	m	class:Eigen::JacobiRotation
m_schur	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^    ComplexSchur<MatrixType> m_schur;$/;"	m	class:Eigen::ComplexEigenSolver
m_scratchBuf	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_scratchBuf;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_shift	external/Eigen/src/Householder/HouseholderSequence.h	/^    Index m_shift;$/;"	m	class:Eigen::HouseholderSequence
m_shiftOffset	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftOffset;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_shiftScale	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    RealScalar m_shiftScale;$/;"	m	class:Eigen::SimplicialCholeskyBase
m_sigma	external/Eigen/src/Eigen2Support/SVD.h	/^    SingularValuesType m_sigma;$/;"	m	class:Eigen::SVD
m_sign	external/Eigen/src/Cholesky/LDLT.h	/^    int m_sign;$/;"	m	class:Eigen::LDLT
m_singularValues	external/Eigen/src/SVD/JacobiSVD.h	/^    SingularValuesType m_singularValues;$/;"	m	class:Eigen::JacobiSVD
m_size	external/Eigen/src/Core/util/Memory.h	/^    size_t m_size;$/;"	m	class:Eigen::internal::aligned_stack_memory_handler
m_size	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    mutable int m_size; \/\/ Size of the matrix $/;"	m	class:Eigen::PastixBase
m_size	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_size;$/;"	m	class:Eigen::PardisoImpl
m_size	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_size;$/;"	m	class:Eigen::internal::AmbiVector
m_size	external/Eigen/src/SparseCore/CompressedStorage.h	/^    size_t m_size;$/;"	m	class:Eigen::internal::CompressedStorage
m_size	external/Eigen/src/SparseCore/SparseVector.h	/^    Index m_size;$/;"	m	class:Eigen::SparseVector
m_sizeA	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_sizeA;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizeB	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_sizeB;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sizeW	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    DenseIndex m_sizeW;$/;"	m	class:Eigen::internal::gemm_blocking_space
m_sluA	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluA;$/;"	m	class:Eigen::SuperLUBase
m_sluB	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_sluBerr	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluCscale	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluEqued	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable char m_sluEqued;$/;"	m	class:Eigen::SuperLUBase
m_sluEtree	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable std::vector<int> m_sluEtree;$/;"	m	class:Eigen::SuperLUBase
m_sluFerr	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluFerr, m_sluBerr;$/;"	m	class:Eigen::SuperLUBase
m_sluL	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluOptions	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable superlu_options_t m_sluOptions;$/;"	m	class:Eigen::SuperLUBase
m_sluRscale	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable Matrix<RealScalar,Dynamic,1> m_sluRscale, m_sluCscale;$/;"	m	class:Eigen::SuperLUBase
m_sluStat	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperLUStat_t m_sluStat;$/;"	m	class:Eigen::SuperLUBase
m_sluU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SuperMatrix m_sluL, m_sluU;$/;"	m	class:Eigen::SuperLUBase
m_sluX	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable SluMatrix m_sluB, m_sluX;$/;"	m	class:Eigen::SuperLUBase
m_squarings	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    int m_squarings;$/;"	m	class:Eigen::MatrixExponential
m_src	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    const Derived& m_src;$/;"	m	struct:Eigen::MatrixExponentialReturnValue
m_src	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    const Derived& m_src;$/;"	m	class:Eigen::MatrixSquareRootReturnValue
m_stageRadix	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<int> m_stageRadix;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_stageRemainder	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<int> m_stageRemainder;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_start	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index m_start;$/;"	m	class:Eigen::internal::AmbiVector
m_start	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::MappedSparseMatrix::InnerIterator
m_start	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
m_start	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_start	external/Eigen/src/SparseCore/SparseVector.h	/^    const Index m_start;$/;"	m	class:Eigen::SparseVector::ReverseInnerIterator
m_start	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::SkylineMatrix::InnerLowerIterator
m_start	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    const Index m_start;$/;"	m	class:Eigen::SkylineMatrix::InnerUpperIterator
m_startCol	external/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, XprType::ColsAtCompileTime == 1 ? 0 : Dynamic> m_startCol;$/;"	m	class:Eigen::Block
m_startRow	external/Eigen/src/Core/Block.h	/^    const internal::variable_if_dynamic<Index, XprType::RowsAtCompileTime == 1 ? 0 : Dynamic> m_startRow;$/;"	m	class:Eigen::Block
m_staticA	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN16 LhsScalar m_staticA[SizeA];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticB	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN16 RhsScalar m_staticB[SizeB];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_staticW	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    EIGEN_ALIGN16 RhsScalar m_staticW[SizeW];$/;"	m	class:Eigen::internal::gemm_blocking_space
m_status	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    mutable int m_status;$/;"	m	class:Eigen::SkylineInplaceLU
m_step	external/Eigen/src/Core/Functors.h	/^  const Scalar m_step;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_stepPacket	external/Eigen/src/Core/Functors.h	/^  const Packet m_stepPacket;$/;"	m	struct:Eigen::internal::linspaced_op_impl
m_storage	external/Eigen/src/Core/PlainObjectBase.h	/^    DenseStorage<Scalar, Base::MaxSizeAtCompileTime, Base::RowsAtCompileTime, Base::ColsAtCompileTime, Options> m_storage;$/;"	m	class:Eigen::PlainObjectBase
m_stride	external/Eigen/src/Core/Map.h	/^    StrideType m_stride;$/;"	m	class:Eigen::Map
m_stride	external/Eigen/src/Core/util/BlasUtil.h	/^    Index m_stride;$/;"	m	class:Eigen::internal::blas_data_mapper
m_stride	external/Eigen/src/Core/util/BlasUtil.h	/^    Index m_stride;$/;"	m	class:Eigen::internal::const_blas_data_mapper
m_structureIsUptodate	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    bool m_structureIsUptodate;$/;"	m	class:Eigen::PastixLU
m_subdiag	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    typename TridiagonalizationType::SubDiagonalType m_subdiag;$/;"	m	class:Eigen::SelfAdjointEigenSolver
m_subs	external/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrix
m_subs	external/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Subs>   m_subs;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_succeeded	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    bool m_succeeded;$/;"	m	class:Eigen::SkylineInplaceLU
m_supers	external/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrix
m_supers	external/Eigen/src/Core/BandMatrix.h	/^    internal::variable_if_dynamic<Index, _Supers> m_supers;$/;"	m	class:Eigen::internal::BandMatrixWrapper
m_sym	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    int m_sym; \/\/ Symmetry of the matrix$/;"	m	class:Eigen::MatrixMarketIterator
m_symbolic	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    void* m_symbolic;$/;"	m	class:Eigen::UmfPackLU
m_temp	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    VectorType m_temp;$/;"	m	class:Eigen::HessenbergDecomposition
m_temp	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::ColPivHouseholderQR
m_temp	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::FullPivHouseholderQR
m_temp	external/Eigen/src/QR/HouseholderQR.h	/^    RowVectorType m_temp;$/;"	m	class:Eigen::HouseholderQR
m_temporary	external/Eigen/src/Cholesky/LDLT.h	/^    TmpMatrixType m_temporary;$/;"	m	class:Eigen::LDLT
m_then	external/Eigen/src/Core/Select.h	/^    typename ThenMatrixType::Nested m_then;$/;"	m	class:Eigen::Select
m_tmp	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    ColumnVectorType m_tmp;$/;"	m	class:Eigen::EigenSolver
m_tmp1	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    MatrixType m_tmp1;$/;"	m	class:Eigen::MatrixExponential
m_tmp2	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    MatrixType m_tmp2;$/;"	m	class:Eigen::MatrixExponential
m_tmpBuf1	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_tmpBuf1;$/;"	m	struct:Eigen::internal::kissfft_impl
m_tmpBuf2	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_tmpBuf2;$/;"	m	struct:Eigen::internal::kissfft_impl
m_tol	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    double m_tol; $/;"	m	class:Scaling
m_tolerance	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar m_tolerance;$/;"	m	class:Eigen::IterativeSolverBase
m_tolerance	external/Eigen/src/SparseCore/SparseProduct.h	/^    RealScalar m_tolerance;$/;"	m	class:Eigen::SparseSparseProduct
m_trans	external/Eigen/src/Householder/HouseholderSequence.h	/^    bool m_trans;$/;"	m	class:Eigen::HouseholderSequence
m_transpositions	external/Eigen/src/Cholesky/LDLT.h	/^    TranspositionType m_transpositions;$/;"	m	class:Eigen::LDLT
m_transpositions	external/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& m_transpositions;$/;"	m	class:Eigen::Transpose
m_transpositions	external/Eigen/src/Core/Transpositions.h	/^    const TranspositionType& m_transpositions;$/;"	m	struct:Eigen::internal::transposition_matrix_product_retval
m_triangularMatrix	external/Eigen/src/Core/SolveTriangular.h	/^    const TriangularType& m_triangularMatrix;$/;"	m	struct:Eigen::internal::triangular_solve_retval
m_twiddles	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^  std::vector<Complex> m_twiddles;$/;"	m	struct:Eigen::internal::kiss_cpx_fft
m_type	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    Index m_type, m_msglvl;$/;"	m	class:Eigen::PardisoImpl
m_u	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::SuperLUBase
m_u	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    mutable LUMatrixType m_u;$/;"	m	class:Eigen::UmfPackLU
m_upper	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Scalar* m_upper;$/;"	m	class:Eigen::SkylineStorage
m_upperProfile	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index* m_upperProfile;$/;"	m	class:Eigen::SkylineStorage
m_upperProfileSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_upperProfileSize;$/;"	m	class:Eigen::SkylineStorage
m_upperSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    Index m_upperSize;$/;"	m	class:Eigen::SkylineStorage
m_usePrescribedThreshold	external/Eigen/src/LU/FullPivLU.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivLU
m_usePrescribedThreshold	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::ColPivHouseholderQR
m_usePrescribedThreshold	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    bool m_isInitialized, m_usePrescribedThreshold;$/;"	m	class:Eigen::FullPivHouseholderQR
m_value	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    Scalar m_value;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_value	external/Eigen/src/SparseCore/SparseMatrix.h	/^        Index m_value;$/;"	m	class:Eigen::SparseMatrix::SingletonVector
m_value	external/Eigen/src/SparseCore/SparseUtil.h	/^  Scalar m_value;$/;"	m	class:Eigen::Triplet
m_value	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    Scalar m_value;$/;"	m	class:Eigen::AutoDiffScalar
m_valuePtr	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    const Scalar* m_valuePtr;$/;"	m	class:Eigen::UmfPackLU
m_values	external/Eigen/src/SparseCore/CompressedStorage.h	/^    Scalar* m_values;$/;"	m	class:Eigen::internal::CompressedStorage
m_values	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    Scalar* m_values;$/;"	m	class:Eigen::MappedSparseMatrix
m_values	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseMatrix::InnerIterator
m_values	external/Eigen/src/SparseCore/SparseMatrix.h	/^    const Scalar* m_values;$/;"	m	class:Eigen::SparseMatrix::ReverseInnerIterator
m_values	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    ValueType m_values;$/;"	m	class:Eigen::AutoDiffVector
m_values	external/unsupported/test/NonLinearOptimization.cpp	/^  const int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_values	external/unsupported/test/NumericalDiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:Functor	file:
m_values	external/unsupported/test/autodiff.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_values	external/unsupported/test/forward_adolc.cpp	/^  int m_inputs, m_values;$/;"	m	struct:TestFunc1	file:
m_vector	external/Eigen/src/SparseCore/AmbiVector.h	/^    const AmbiVector& m_vector; \/\/ the target vector$/;"	m	class:Eigen::internal::AmbiVector::Iterator
m_vectors	external/Eigen/src/Householder/HouseholderSequence.h	/^    typename VectorsType::Nested m_vectors;$/;"	m	class:Eigen::HouseholderSequence
m_view	external/Eigen/src/SparseCore/SparseView.h	/^  const SparseView& m_view;$/;"	m	class:Eigen::SparseView::InnerIterator
m_workMatrix	external/Eigen/src/SVD/JacobiSVD.h	/^    WorkMatrixType m_workMatrix;$/;"	m	class:Eigen::JacobiSVD
m_workspace	external/Eigen/src/SVD/JacobiSVD.h	/^  WorkspaceType m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	external/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_col_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspace	external/Eigen/src/SVD/JacobiSVD.h	/^  typename internal::plain_row_type<MatrixType>::type m_workspace;$/;"	m	class:Eigen::internal::qr_preconditioner_impl
m_workspaceVector	external/Eigen/src/Eigenvalues/RealSchur.h	/^    ColumnVectorType m_workspaceVector;$/;"	m	class:Eigen::RealSchur
m_written	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    bool m_written;$/;"	m	class:Eigen::IterationController
m_x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_x[14];$/;"	m	struct:misra1a_functor	file:
m_x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_x[236];$/;"	m	struct:hahn1_functor	file:
m_x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_x[54];$/;"	m	struct:chwirut2_functor	file:
m_x	external/unsupported/test/NonLinearOptimization.cpp	/^const double chwirut2_functor::m_x[54] = { 0.500E0, 1.000E0, 1.750E0, 3.750E0, 5.750E0, 0.875E0, 2.250E0, 3.250E0, 5.250E0, 0.750E0, 1.750E0, 2.750E0, 4.750E0, 0.625E0, 1.250E0, 2.250E0, 4.250E0, .500E0, 3.000E0, .750E0, 3.000E0, 1.500E0, 6.000E0, 3.000E0, 6.000E0, 1.500E0, 3.000E0, .500E0, 2.000E0, 4.000E0, .750E0, 2.000E0, 5.000E0, .750E0, 2.250E0, 3.750E0, 5.750E0, 3.000E0, .750E0, 2.500E0, 4.000E0, .750E0, 2.500E0, 4.000E0, .750E0, 2.500E0, 4.000E0, .500E0, 6.000E0, 3.000E0, .500E0, 2.750E0, .500E0, 1.750E0};$/;"	m	class:chwirut2_functor	file:
m_x	external/unsupported/test/NonLinearOptimization.cpp	/^const double hahn1_functor::m_x[236] = { 24.41E0 , 34.82E0 , 44.09E0 , 45.07E0 , 54.98E0 , 65.51E0 , 70.53E0 , 75.70E0 , 89.57E0 , 91.14E0 , 96.40E0 , 97.19E0 , 114.26E0 , 120.25E0 , 127.08E0 , 133.55E0 , 133.61E0 , 158.67E0 , 172.74E0 , 171.31E0 , 202.14E0 , 220.55E0 , 221.05E0 , 221.39E0 , 250.99E0 , 268.99E0 , 271.80E0 , 271.97E0 , 321.31E0 , 321.69E0 , 330.14E0 , 333.03E0 , 333.47E0 , 340.77E0 , 345.65E0 , 373.11E0 , 373.79E0 , 411.82E0 , 419.51E0 , 421.59E0 , 422.02E0 , 422.47E0 , 422.61E0 , 441.75E0 , 447.41E0 , 448.7E0  , 472.89E0 , 476.69E0 , 522.47E0 , 522.62E0 , 524.43E0 , 546.75E0 , 549.53E0 , 575.29E0 , 576.00E0 , 625.55E0 , 20.15E0 , 28.78E0 , 29.57E0 , 37.41E0 , 39.12E0 , 50.24E0 , 61.38E0 , 66.25E0 , 73.42E0 , 95.52E0 , 107.32E0 , 122.04E0 , 134.03E0 , 163.19E0 , 163.48E0 , 175.70E0 , 179.86E0 , 211.27E0 , 217.78E0 , 219.14E0 , 262.52E0 , 268.01E0 , 268.62E0 , 336.25E0 , 337.23E0 , 339.33E0 , 427.38E0 , 428.58E0 , 432.68E0 , 528.99E0 , 531.08E0 , 628.34E0 , 253.24E0 , 273.13E0 , 273.66E0 , 282.10E0 , 346.62E0 , 347.19E0 , 348.78E0 , 351.18E0 , 450.10E0 , 450.35E0 , 451.92E0 , 455.56E0 , 552.22E0 , 553.56E0 , 555.74E0 , 652.59E0 , 656.20E0 , 14.13E0 , 20.41E0 , 31.30E0 , 33.84E0 , 39.70E0 , 48.83E0 , 54.50E0 , 60.41E0 , 72.77E0 , 75.25E0 , 86.84E0 , 94.88E0 , 96.40E0 , 117.37E0 , 139.08E0 , 147.73E0 , 158.63E0 , 161.84E0 , 192.11E0 , 206.76E0 , 209.07E0 , 213.32E0 , 226.44E0 , 237.12E0 , 330.90E0 , 358.72E0 , 370.77E0 , 372.72E0 , 396.24E0 , 416.59E0 , 484.02E0 , 495.47E0 , 514.78E0 , 515.65E0 , 519.47E0 , 544.47E0 , 560.11E0 , 620.77E0 , 18.97E0 , 28.93E0 , 33.91E0 , 40.03E0 , 44.66E0 , 49.87E0 , 55.16E0 , 60.90E0 , 72.08E0 , 85.15E0 , 97.06E0 , 119.63E0 , 133.27E0 , 143.84E0 , 161.91E0 , 180.67E0 , 198.44E0 , 226.86E0 , 229.65E0 , 258.27E0 , 273.77E0 , 339.15E0 , 350.13E0 , 362.75E0 , 371.03E0 , 393.32E0 , 448.53E0 , 473.78E0 , 511.12E0 , 524.70E0 , 548.75E0 , 551.64E0 , 574.02E0 , 623.86E0 , 21.46E0 , 24.33E0 , 33.43E0 , 39.22E0 , 44.18E0 , 55.02E0 , 94.33E0 , 96.44E0 , 118.82E0 , 128.48E0 , 141.94E0 , 156.92E0 , 171.65E0 , 190.00E0 , 223.26E0 , 223.88E0 , 231.50E0 , 265.05E0 , 269.44E0 , 271.78E0 , 273.46E0 , 334.61E0 , 339.79E0 , 349.52E0 , 358.18E0 , 377.98E0 , 394.77E0 , 429.66E0 , 468.22E0 , 487.27E0 , 519.54E0 , 523.03E0 , 612.99E0 , 638.59E0 , 641.36E0 , 622.05E0 , 631.50E0 , 663.97E0 , 646.9E0  , 748.29E0 , 749.21E0 , 750.14E0 , 647.04E0 , 646.89E0 , 746.9E0  , 748.43E0 , 747.35E0 , 749.27E0 , 647.61E0 , 747.78E0 , 750.51E0 , 851.37E0 , 845.97E0 , 847.54E0 , 849.93E0 , 851.61E0 , 849.75E0 , 850.98E0 , 848.23E0};$/;"	m	class:hahn1_functor	file:
m_x	external/unsupported/test/NonLinearOptimization.cpp	/^const double misra1a_functor::m_x[14] = { 77.6E0, 114.9E0, 141.1E0, 190.8E0, 239.9E0, 289.0E0, 332.8E0, 378.4E0, 434.8E0, 477.3E0, 536.8E0, 593.1E0, 689.1E0, 760.0E0};$/;"	m	class:misra1a_functor	file:
m_xpr	external/Eigen/src/Core/Block.h	/^    const typename XprType::Nested m_xpr;$/;"	m	class:Eigen::Block
m_xpr	external/Eigen/src/Core/Block.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::Block
m_xpr	external/Eigen/src/Core/CommaInitializer.h	/^  XprType& m_xpr;   \/\/ target expression$/;"	m	struct:Eigen::CommaInitializer
m_xpr	external/Eigen/src/Core/CwiseUnaryOp.h	/^    typename XprType::Nested m_xpr;$/;"	m	class:Eigen::CwiseUnaryOp
m_xpr	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    const CwiseBinaryXpr& m_xpr;$/;"	m	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
m_y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_y[14];$/;"	m	struct:misra1a_functor	file:
m_y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double m_y[54];$/;"	m	struct:chwirut2_functor	file:
m_y	external/unsupported/test/NonLinearOptimization.cpp	/^const double chwirut2_functor::m_y[54] = { 92.9000E0 ,57.1000E0 ,31.0500E0 ,11.5875E0 ,8.0250E0 ,63.6000E0 ,21.4000E0 ,14.2500E0 ,8.4750E0 ,63.8000E0 ,26.8000E0 ,16.4625E0 ,7.1250E0 ,67.3000E0 ,41.0000E0 ,21.1500E0 ,8.1750E0 ,81.5000E0 ,13.1200E0 ,59.9000E0 ,14.6200E0 ,32.9000E0 ,5.4400E0 ,12.5600E0 ,5.4400E0 ,32.0000E0 ,13.9500E0 ,75.8000E0 ,20.0000E0 ,10.4200E0 ,59.5000E0 ,21.6700E0 ,8.5500E0 ,62.0000E0 ,20.2000E0 ,7.7600E0 ,3.7500E0 ,11.8100E0 ,54.7000E0 ,23.7000E0 ,11.5500E0 ,61.3000E0 ,17.7000E0 ,8.7400E0 ,59.2000E0 ,16.3000E0 ,8.6200E0 ,81.0000E0 ,4.8700E0 ,14.6200E0 ,81.7000E0 ,17.1700E0 ,81.3000E0 ,28.9000E0  };$/;"	m	class:chwirut2_functor	file:
m_y	external/unsupported/test/NonLinearOptimization.cpp	/^const double misra1a_functor::m_y[14] = { 10.07E0, 14.73E0, 17.94E0, 23.93E0, 29.61E0, 35.18E0, 40.02E0, 44.82E0, 50.76E0, 55.05E0, 61.01E0, 66.40E0, 75.47E0, 81.78E0};$/;"	m	class:misra1a_functor	file:
m_zero	external/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar m_zero;$/;"	m	class:Eigen::internal::AmbiVector
machine_epsilon	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T machine_epsilon () { return NumTraits<T>::epsilon(); }$/;"	f	namespace:Eigen
machine_epsilon	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal machine_epsilon(const mpreal& x)$/;"	f	namespace:mpfr
machine_epsilon	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal machine_epsilon(mp_prec_t prec)$/;"	f	namespace:mpfr
madd	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, AccPacket& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp) const$/;"	f	class:Eigen::internal::gebp_traits
madd	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, DoublePacket& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd(const LhsPacket& a, const RhsPacket& b, ResPacket& c, RhsPacket& \/*tmp*\/) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsPacket& a, const RhsPacket& b, AccPacket& c, RhsPacket& tmp, const true_type&) const$/;"	f	class:Eigen::internal::gebp_traits
madd_impl	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void madd_impl(const LhsScalar& a, const RhsScalar& b, ResScalar& c, RhsScalar& \/*tmp*\/, const false_type&) const$/;"	f	class:Eigen::internal::gebp_traits
mag2	external/unsupported/doc/examples/FFT.cpp	/^T mag2(T a)$/;"	f
mag2	external/unsupported/doc/examples/FFT.cpp	/^T mag2(const std::vector<T> & vec)$/;"	f
mag2	external/unsupported/doc/examples/FFT.cpp	/^T mag2(const std::vector<std::complex<T> > & vec)$/;"	f
mag2	external/unsupported/doc/examples/FFT.cpp	/^T mag2(std::complex<T> a)$/;"	f
magic	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     magic;$/;"	m	struct:malloc_state	file:
magic	external/unsupported/test/mpreal/dlmalloc.c	/^  volatile size_t magic;$/;"	m	struct:malloc_params	file:
main	FragmentOptimizer.cpp	/^int main(int argc, char * argv[])$/;"	f
main	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^int main(argc, argv) int argc; char *argv[];$/;"	f
main	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^void main() {}$/;"	f
main	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^int main(int argc, char* argv[])$/;"	f
main	build/CMakeFiles/feature_tests.c	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	build/CMakeFiles/feature_tests.cxx	/^int main(int argc, char** argv) { (void)argv; return features[argc]; }$/;"	f
main	external/unsupported/doc/examples/BVH_Example.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/FFT.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/MatrixExponential.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/MatrixFunction.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/MatrixLogarithm.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/MatrixSine.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/MatrixSinh.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/MatrixSquareRoot.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/PolynomialSolver1.cpp	/^int main()$/;"	f
main	external/unsupported/doc/examples/PolynomialUtils1.cpp	/^int main()$/;"	f
makeAffine	external/Eigen/src/Geometry/Transform.h	/^  void makeAffine()$/;"	f	class:Eigen::Transform
makeCompressed	external/Eigen/src/SparseCore/SparseMatrix.h	/^    void makeCompressed()$/;"	f	class:Eigen::SparseMatrix
makeGivens	external/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::false_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	external/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* r, internal::true_type)$/;"	f	class:Eigen::JacobiRotation
makeGivens	external/Eigen/src/Jacobi/Jacobi.h	/^void JacobiRotation<Scalar>::makeGivens(const Scalar& p, const Scalar& q, Scalar* z)$/;"	f	class:Eigen::JacobiRotation
makeHouseholder	external/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholder($/;"	f	class:Eigen::MatrixBase
makeHouseholderInPlace	external/Eigen/src/Householder/Householder.h	/^void MatrixBase<Derived>::makeHouseholderInPlace(Scalar& tau, RealScalar& beta)$/;"	f	class:Eigen::MatrixBase
makeJacobi	external/Eigen/src/Jacobi/Jacobi.h	/^bool JacobiRotation<Scalar>::makeJacobi(RealScalar x, Scalar y, RealScalar z)$/;"	f	class:Eigen::JacobiRotation
makeJacobi	external/Eigen/src/Jacobi/Jacobi.h	/^inline bool JacobiRotation<Scalar>::makeJacobi(const MatrixBase<Derived>& m, typename Derived::Index p, typename Derived::Index q)$/;"	f	class:Eigen::JacobiRotation
make_block_householder_triangular_factor	external/Eigen/src/Householder/BlockHouseholder.h	/^void make_block_householder_triangular_factor(TriangularFactorType& triFactor, const VectorsType& vectors, const CoeffsType& hCoeffs)$/;"	f	namespace:Eigen::internal
make_coherent	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^void make_coherent(const A& a, const B&b)$/;"	f	namespace:Eigen::internal
make_coherent_impl	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl {$/;"	s	namespace:Eigen::internal
make_coherent_impl	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl<A, Matrix<B_Scalar, B_Rows, B_Cols, B_Options, B_MaxRows, B_MaxCols> > {$/;"	s	namespace:Eigen::internal
make_coherent_impl	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl<Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols>, B> {$/;"	s	namespace:Eigen::internal
make_coherent_impl	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct make_coherent_impl<Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols>,$/;"	s	namespace:Eigen::internal
make_twiddles	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void make_twiddles(int nfft,bool inverse)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
mallinfo	external/unsupported/test/mpreal/dlmalloc.c	/^struct mallinfo {$/;"	s	file:
mallinfo	external/unsupported/test/mpreal/dlmalloc.h	/^struct mallinfo {$/;"	s
malloc_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^struct malloc_chunk {$/;"	s	file:
malloc_corruption_error_count	external/unsupported/test/mpreal/dlmalloc.c	/^int malloc_corruption_error_count;$/;"	v
malloc_count	external/SuiteSparse/Include/cholmod_core.h	/^    size_t malloc_count ;   \/* # of objects malloc'ed minus the # free'd*\/$/;"	m	struct:cholmod_common_struct
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1398;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1402;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1405;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1411;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1415;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1417;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1421;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1424;"	d	file:
malloc_getpagesize	external/unsupported/test/mpreal/dlmalloc.c	1426;"	d	file:
malloc_global_mutex	external/unsupported/test/mpreal/dlmalloc.c	/^static MLOCK_T malloc_global_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
malloc_global_mutex	external/unsupported/test/mpreal/dlmalloc.c	/^static MLOCK_T malloc_global_mutex = { 0, 0, 0};$/;"	v	file:
malloc_global_mutex	external/unsupported/test/mpreal/dlmalloc.c	/^static MLOCK_T malloc_global_mutex;$/;"	v	file:
malloc_global_mutex_status	external/unsupported/test/mpreal/dlmalloc.c	/^static volatile long malloc_global_mutex_status;$/;"	v	file:
malloc_memory	external/SuiteSparse/Include/SuiteSparse_config.h	/^    void *(*malloc_memory) (size_t) ;           \/* pointer to malloc *\/$/;"	m	struct:SuiteSparse_config_struct
malloc_memory	external/SuiteSparse/Include/cholmod_core.h	/^    void *(*malloc_memory) (size_t) ;		\/* pointer to malloc *\/$/;"	m	struct:cholmod_common_struct
malloc_params	external/unsupported/test/mpreal/dlmalloc.c	/^struct malloc_params {$/;"	s	file:
malloc_segment	external/unsupported/test/mpreal/dlmalloc.c	/^struct malloc_segment {$/;"	s	file:
malloc_state	external/unsupported/test/mpreal/dlmalloc.c	/^struct malloc_state {$/;"	s	file:
malloc_tree_chunk	external/unsupported/test/mpreal/dlmalloc.c	/^struct malloc_tree_chunk {$/;"	s	file:
manageErrorCode	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void manageErrorCode(Index error)$/;"	f	class:Eigen::PardisoImpl
manage_caching_sizes	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void manage_caching_sizes(Action action, std::ptrdiff_t* l1=0, std::ptrdiff_t* l2=0)$/;"	f	namespace:Eigen::internal
manage_caching_sizes_helper	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline std::ptrdiff_t manage_caching_sizes_helper(std::ptrdiff_t a, std::ptrdiff_t b)$/;"	f	namespace:Eigen::internal
manage_multi_threading	external/Eigen/src/Core/products/Parallelizer.h	/^inline void manage_multi_threading(Action action, int* v)$/;"	f	namespace:Eigen::internal
map_	HashSparseMatrix.h	/^	HashMap map_;$/;"	m	class:HashSparseMatrix
map_superlu	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^MappedSparseMatrix<Scalar,Flags,Index> map_superlu(SluMatrix& sluMat)$/;"	f	namespace:Eigen::internal
mark	external/SuiteSparse/Include/cholmod_core.h	/^    SuiteSparse_long mark ;	\/* mark value for Flag array *\/$/;"	m	struct:cholmod_common_struct
markAsRValue	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& markAsRValue() { m_isRValue = true; return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
markAsRValue	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Derived& markAsRValue() {$/;"	f	class:Eigen::SkylineMatrixBase
mark_inuse_foot	external/unsupported/test/mpreal/dlmalloc.c	2907;"	d	file:
mark_inuse_foot	external/unsupported/test/mpreal/dlmalloc.c	2928;"	d	file:
mark_smallmap	external/unsupported/test/mpreal/dlmalloc.c	2778;"	d	file:
mark_treemap	external/unsupported/test/mpreal/dlmalloc.c	2782;"	d	file:
marked	external/Eigen/src/Eigen2Support/Lazy.h	/^MatrixBase<Derived>::marked() const$/;"	f	class:Eigen::MatrixBase
matPrefix	external/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
matSuffix	external/Eigen/src/Core/IO.h	/^  std::string matPrefix, matSuffix;$/;"	m	struct:Eigen::IOFormat
matname	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline std::string& matname() { return m_matname; }$/;"	f	class:Eigen::MatrixMarketIterator
matrix	external/Eigen/src/Core/ArrayBase.h	/^    MatrixWrapper<Derived> matrix() { return derived(); }$/;"	f	class:Eigen::ArrayBase
matrix	external/Eigen/src/Core/ArrayBase.h	/^    const MatrixWrapper<const Derived> matrix() const { return derived(); }$/;"	f	class:Eigen::ArrayBase
matrix	external/Eigen/src/Core/MatrixBase.h	/^    MatrixBase<Derived>& matrix() { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	external/Eigen/src/Core/MatrixBase.h	/^    const MatrixBase<Derived>& matrix() const { return *this; }$/;"	f	class:Eigen::MatrixBase
matrix	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline MatrixType& matrix() { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline const MatrixType& matrix() const { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	external/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType matrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
matrix	external/Eigen/src/Geometry/Transform.h	/^  inline MatrixType& matrix() { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	external/Eigen/src/Geometry/Transform.h	/^  inline const MatrixType& matrix() const { return m_matrix; }$/;"	f	class:Eigen::Transform
matrix	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    _MatrixTypeNested& matrix() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::SparseSelfAdjointView
matrix	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    const _MatrixTypeNested& matrix() const { return m_matrix; }$/;"	f	class:Eigen::SparseSelfAdjointView
matrix	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline MatrixType& matrix() $/;"	f	class:Eigen::MatrixMarketIterator
matrixFunction	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::matrixFunction(typename internal::stem_function<typename internal::traits<Derived>::Scalar>::type f) const$/;"	f	class:Eigen::MatrixBase
matrixH	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    MatrixHReturnType matrixH() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixL	external/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LDLT
matrixL	external/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixL matrixL() const$/;"	f	class:Eigen::LLT
matrixL	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixL	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixL matrixL() const {$/;"	f	class:Eigen::SimplicialLLT
matrixL	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const LMatrixType& matrixL() const$/;"	f	class:Eigen::SuperLU
matrixL	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixL() const$/;"	f	class:Eigen::UmfPackLU
matrixLDLT	external/Eigen/src/Cholesky/LDLT.h	/^    inline const MatrixType& matrixLDLT() const$/;"	f	class:Eigen::LDLT
matrixLLT	external/Eigen/src/Cholesky/LLT.h	/^    inline const MatrixType& matrixLLT() const$/;"	f	class:Eigen::LLT
matrixLU	external/Eigen/src/LU/FullPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::FullPivLU
matrixLU	external/Eigen/src/LU/PartialPivLU.h	/^    inline const MatrixType& matrixLU() const$/;"	f	class:Eigen::PartialPivLU
matrixQ	external/Eigen/src/Eigen2Support/QR.h	/^    MatrixType matrixQ(void) const {$/;"	f	class:Eigen::QR
matrixQ	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::HessenbergDecomposition
matrixQ	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    HouseholderSequenceType matrixQ() const$/;"	f	class:Eigen::Tridiagonalization
matrixQ	external/Eigen/src/QR/FullPivHouseholderQR.h	/^inline typename FullPivHouseholderQR<MatrixType>::MatrixQReturnType FullPivHouseholderQR<MatrixType>::matrixQ() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQR	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::ColPivHouseholderQR
matrixQR	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::FullPivHouseholderQR
matrixQR	external/Eigen/src/QR/HouseholderQR.h	/^    const MatrixType& matrixQR() const$/;"	f	class:Eigen::HouseholderQR
matrixR	external/Eigen/src/Eigen2Support/QR.h	/^    matrixR(void) const$/;"	f	class:Eigen::QR
matrixT	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixT() const$/;"	f	class:Eigen::ComplexSchur
matrixT	external/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixT() const$/;"	f	class:Eigen::RealSchur
matrixT	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    MatrixTReturnType matrixT() const$/;"	f	class:Eigen::Tridiagonalization
matrixU	external/Eigen/src/Cholesky/LDLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LDLT
matrixU	external/Eigen/src/Cholesky/LLT.h	/^    inline typename Traits::MatrixU matrixU() const$/;"	f	class:Eigen::LLT
matrixU	external/Eigen/src/Eigen2Support/SVD.h	/^    const MatrixUType& matrixU() const { return m_matU; }$/;"	f	class:Eigen::SVD
matrixU	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^    const ComplexMatrixType& matrixU() const$/;"	f	class:Eigen::ComplexSchur
matrixU	external/Eigen/src/Eigenvalues/RealSchur.h	/^    const MatrixType& matrixU() const$/;"	f	class:Eigen::RealSchur
matrixU	external/Eigen/src/SVD/JacobiSVD.h	/^    const MatrixUType& matrixU() const$/;"	f	class:Eigen::JacobiSVD
matrixU	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLDLT
matrixU	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const MatrixU matrixU() const {$/;"	f	class:Eigen::SimplicialLLT
matrixU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const UMatrixType& matrixU() const$/;"	f	class:Eigen::SuperLU
matrixU	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const LUMatrixType& matrixU() const$/;"	f	class:Eigen::UmfPackLU
matrixV	external/Eigen/src/Eigen2Support/SVD.h	/^    const MatrixVType& matrixV() const { return m_matV; }$/;"	f	class:Eigen::SVD
matrixV	external/Eigen/src/SVD/JacobiSVD.h	/^    const MatrixVType& matrixV() const$/;"	f	class:Eigen::JacobiSVD
matrix_size_	OptApp.h	/^	int matrix_size_;$/;"	m	class:COptApp
matrix_swap_impl	external/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl$/;"	s	namespace:Eigen::internal
matrix_swap_impl	external/Eigen/src/Core/PlainObjectBase.h	/^struct matrix_swap_impl<MatrixTypeA, MatrixTypeB, true>$/;"	s	namespace:Eigen::internal
matrix_type_times_scalar_type	external/Eigen/src/Householder/HouseholderSequence.h	/^template<typename OtherScalarType, typename MatrixType> struct matrix_type_times_scalar_type$/;"	s	namespace:Eigen::internal
max	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline VectorType& (max)() { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline const VectorType& (max)() const { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	external/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType& (max)() { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	external/Eigen/src/Geometry/AlignedBox.h	/^  inline const VectorType& (max)() const { return m_max; }$/;"	f	class:Eigen::AlignedBox
max	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^(max)(const Scalar &other) const$/;"	f
max	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (max)(const AutoDiffScalar<DerType>& x, const T& y)    { return (x >= y ? x : y); }$/;"	f	namespace:Eigen
max	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (max)(const T& x, const AutoDiffScalar<DerType>& y)    { return (x > y ? x : y); }$/;"	f	namespace:Eigen
max	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal (max)(const mpreal& x, const mpreal& y)$/;"	f	namespace:mpfr
maxCoeff	external/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::maxCoeff() const$/;"	f	class:Eigen::DenseBase
maxCoeff	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_maxCoeff>::Type maxCoeff() const$/;"	f	class:Eigen::VectorwiseOp
maxCoeff	external/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
maxCoeff	external/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::maxCoeff(IndexType* row, IndexType* col) const$/;"	f	class:Eigen::DenseBase
maxIterarions	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    size_t maxIterarions() const { return m_maxiter; }$/;"	f	class:Eigen::IterationController
maxIterations	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  int maxIterations() const$/;"	f	class:Eigen::IterativeSolverBase
maxPadeDegree	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  static const int maxPadeDegree = std::numeric_limits<RealScalar>::digits<= 24?  5:      \/\/ single precision$/;"	m	class:Eigen::MatrixLogarithmAtomic
maxPivot	external/Eigen/src/LU/FullPivLU.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivLU
maxPivot	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::ColPivHouseholderQR
maxPivot	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar maxPivot() const { return m_maxpivot; }$/;"	f	class:Eigen::FullPivHouseholderQR
maxResidual	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double maxResidual() const { return m_resmax; }$/;"	f	class:Eigen::IterationController
max_coeff_visitor	external/Eigen/src/Core/Visitor.h	/^struct max_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
max_footprint	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     max_footprint;$/;"	m	struct:malloc_state	file:
max_inner_iteration_	OptApp.h	/^	int max_inner_iteration_;$/;"	m	class:COptApp
max_iteration_	OptApp.h	/^	int max_iteration_;$/;"	m	class:COptApp
max_size	external/Eigen/src/Core/util/Memory.h	/^    size_type max_size() const$/;"	f	class:Eigen::aligned_allocator
maxcsize	external/SuiteSparse/Include/cholmod_core.h	/^    size_t maxcsize ;	\/* size of largest update matrix *\/$/;"	m	struct:cholmod_factor_struct
maxesize	external/SuiteSparse/Include/cholmod_core.h	/^    size_t maxesize ;	\/* max # of rows in supernodes, excl. triangular part *\/$/;"	m	struct:cholmod_factor_struct
maxfev	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Index maxfev;   \/\/ maximum number of function evaluation$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
maxfev	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Index maxfev;   \/\/ maximum number of function evaluation$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
maxrank	external/SuiteSparse/Include/cholmod_core.h	/^    size_t maxrank ;	\/* rank of maximum update\/downdate.  Valid values:$/;"	m	struct:cholmod_common_struct
mc	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline DenseIndex mc() const { return m_mc; }$/;"	f	class:Eigen::internal::level3_blocking
mchunk	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_chunk  mchunk;$/;"	t	typeref:struct:malloc_chunk	file:
mchunkptr	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_chunk* mchunkptr;$/;"	t	typeref:struct:malloc_chunk	file:
mean	external/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::mean() const$/;"	f	class:Eigen::DenseBase
mean	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_mean>::Type mean() const$/;"	f	class:Eigen::VectorwiseOp
mem2chunk	external/unsupported/test/mpreal/dlmalloc.c	2093;"	d	file:
member_redux	external/Eigen/src/Core/VectorwiseOp.h	/^  member_redux(const BinaryOp func) : m_functor(func) {}$/;"	f	struct:Eigen::internal::member_redux
member_redux	external/Eigen/src/Core/VectorwiseOp.h	/^struct member_redux {$/;"	s	namespace:Eigen::internal
memory_inuse	external/SuiteSparse/Include/cholmod_core.h	/^    size_t memory_inuse ;   \/* current memory usage in bytes *\/$/;"	m	struct:cholmod_common_struct
memory_usage	external/SuiteSparse/Include/cholmod_core.h	/^    size_t memory_usage ;   \/* peak memory usage in bytes *\/$/;"	m	struct:cholmod_common_struct
merged	external/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox merged(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
meta_sqrt	external/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	c	namespace:Eigen
method	external/SuiteSparse/Include/cholmod_core.h	/^    } method [CHOLMOD_MAXMETHODS + 1] ;$/;"	m	struct:cholmod_common_struct	typeref:struct:cholmod_common_struct::cholmod_method_struct
metis_dswitch	external/SuiteSparse/Include/cholmod_core.h	/^    double metis_dswitch ;	\/* METIS_NodeND in METIS 4.0.1 gives a seg *\/$/;"	m	struct:cholmod_common_struct
metis_memory	external/SuiteSparse/Include/cholmod_core.h	/^    double metis_memory ;   \/* This is a parameter for CHOLMOD's interface to$/;"	m	struct:cholmod_common_struct
metis_nswitch	external/SuiteSparse/Include/cholmod_core.h	/^    size_t metis_nswitch ;	\/* fault with one matrix of order n = 3005 and$/;"	m	struct:cholmod_common_struct
mflags	external/unsupported/test/mpreal/dlmalloc.c	/^  flag_t     mflags;$/;"	m	struct:malloc_state	file:
middle	external/Eigen/src/Core/MathFunctions.h	/^  enum { middle = (lower + upper) \/ 2,$/;"	e	enum:Eigen::internal::floor_log2_selector::__anon149
middleCols	external/Eigen/src/SparseCore/SparseBlock.h	/^SparseInnerVectorSet<Derived,Dynamic> SparseMatrixBase<Derived>::middleCols(Index start, Index size)$/;"	f	class:Eigen::SparseMatrixBase
middleCols	external/Eigen/src/SparseCore/SparseBlock.h	/^const SparseInnerVectorSet<Derived,Dynamic> SparseMatrixBase<Derived>::middleCols(Index start, Index size) const$/;"	f	class:Eigen::SparseMatrixBase
middleCols	external/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr middleCols(Index startCol, Index numCols)$/;"	f
middleCols	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr middleCols(Index startCol, Index numCols) const$/;"	f
middleCols	external/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type middleCols(Index startCol) const$/;"	f
middleCols	external/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type middleCols(Index startCol)$/;"	f
middleRows	external/Eigen/src/SparseCore/SparseBlock.h	/^SparseInnerVectorSet<Derived,Dynamic> SparseMatrixBase<Derived>::middleRows(Index start, Index size)$/;"	f	class:Eigen::SparseMatrixBase
middleRows	external/Eigen/src/SparseCore/SparseBlock.h	/^const SparseInnerVectorSet<Derived,Dynamic> SparseMatrixBase<Derived>::middleRows(Index start, Index size) const$/;"	f	class:Eigen::SparseMatrixBase
middleRows	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr middleRows(Index startRow, Index numRows) const$/;"	f
middleRows	external/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr middleRows(Index startRow, Index numRows)$/;"	f
middleRows	external/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type middleRows(Index startRow) const$/;"	f
middleRows	external/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type middleRows(Index startRow)$/;"	f
min	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline VectorType& (min)() { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline const VectorType& (min)() const { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	external/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType& (min)() { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	external/Eigen/src/Geometry/AlignedBox.h	/^  inline const VectorType& (min)() const { return m_min; }$/;"	f	class:Eigen::AlignedBox
min	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^(min)(const Scalar &other) const$/;"	f
min	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (min)(const AutoDiffScalar<DerType>& x, const T& y)    { return (x <= y ? x : y); }$/;"	f	namespace:Eigen
min	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline AutoDiffScalar<DerType> (min)(const T& x, const AutoDiffScalar<DerType>& y)    { return (x < y ? x : y); }$/;"	f	namespace:Eigen
min	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal (min)(const mpreal& x, const mpreal& y)$/;"	f	namespace:mpfr
minCoeff	external/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::minCoeff() const$/;"	f	class:Eigen::DenseBase
minCoeff	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_minCoeff>::Type minCoeff() const$/;"	f	class:Eigen::VectorwiseOp
minCoeff	external/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* index) const$/;"	f	class:Eigen::DenseBase
minCoeff	external/Eigen/src/Core/Visitor.h	/^DenseBase<Derived>::minCoeff(IndexType* row, IndexType* col) const$/;"	f	class:Eigen::DenseBase
minPadeDegree	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  static const int minPadeDegree = 3;$/;"	m	class:Eigen::MatrixLogarithmAtomic
min_coeff_visitor	external/Eigen/src/Core/Visitor.h	/^struct min_coeff_visitor : coeff_visitor<Derived>$/;"	s	namespace:Eigen::internal
minimize	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimize(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeInit	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeInit(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOneStep	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOneStep(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOptimumStorage	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOptimumStorage(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOptimumStorageInit	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOptimumStorageInit(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimizeOptimumStorageOneStep	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^LevenbergMarquardt<FunctorType,Scalar>::minimizeOptimumStorageOneStep(FVectorType  &x)$/;"	f	class:Eigen::LevenbergMarquardt
minimize_helper	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^typename Minimizer::Scalar minimize_helper(const BVH &tree, Minimizer &minimizer, typename BVH::Index root, typename Minimizer::Scalar minimum)$/;"	f	namespace:Eigen::internal
minimizer	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Minimizer &minimizer;$/;"	m	struct:Eigen::internal::minimizer_helper1
minimizer	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Minimizer &minimizer;$/;"	m	struct:Eigen::internal::minimizer_helper2
minimizer_helper1	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  minimizer_helper1(const Object2 &inStored, Minimizer &m) : stored(inStored), minimizer(m) {}$/;"	f	struct:Eigen::internal::minimizer_helper1
minimizer_helper1	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct minimizer_helper1$/;"	s	namespace:Eigen::internal
minimizer_helper2	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  minimizer_helper2(const Object1 &inStored, Minimizer &m) : stored(inStored), minimizer(m) {}$/;"	f	struct:Eigen::internal::minimizer_helper2
minimizer_helper2	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^struct minimizer_helper2$/;"	s	namespace:Eigen::internal
minimumOnObject	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnObject(const Object1 &obj) { return minimizer.minimumOnObjectObject(obj, stored); }$/;"	f	struct:Eigen::internal::minimizer_helper1
minimumOnObject	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnObject(const Object2 &obj) { return minimizer.minimumOnObjectObject(stored, obj); }$/;"	f	struct:Eigen::internal::minimizer_helper2
minimumOnObject	external/unsupported/test/BVH.cpp	/^  double minimumOnObject(const BallType &b) { ++calls; return (std::max)(0., (b.center - p).squaredNorm() - SQR(b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnObjectObject	external/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnObjectObject(const Vector2d &v1, const Vector2d &v2) { ++calls; return (v1 - v2).squaredNorm(); }$/;"	f	struct:PointPointMinimizer
minimumOnObjectObject	external/unsupported/test/BVH.cpp	/^  double minimumOnObjectObject(const BallType &b, const VectorType &v){ ++calls; return SQR((std::max)(0., (b.center - v).norm() - b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnObjectObject	external/unsupported/test/BVH.cpp	/^  double minimumOnObjectObject(const BallType &b1, const BallType &b2){ ++calls; return SQR((std::max)(0., (b1.center - b2.center).norm() - b1.radius - b2.radius)); }$/;"	f	struct:BallPointStuff
minimumOnObjectVolume	external/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnObjectVolume(const Vector2d &v, const Box2d &r) { ++calls; return r.squaredExteriorDistance(v); }$/;"	f	struct:PointPointMinimizer
minimumOnObjectVolume	external/unsupported/test/BVH.cpp	/^  double minimumOnObjectVolume(const BallType &b, const BoxType &r) { ++calls; return SQR((std::max)(0., r.exteriorDistance(b.center) - b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnVolume	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnVolume(const Volume1 &vol) { return minimizer.minimumOnVolumeObject(vol, stored); }$/;"	f	struct:Eigen::internal::minimizer_helper1
minimumOnVolume	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Scalar minimumOnVolume(const Volume2 &vol) { return minimizer.minimumOnObjectVolume(stored, vol); }$/;"	f	struct:Eigen::internal::minimizer_helper2
minimumOnVolume	external/unsupported/test/BVH.cpp	/^  double minimumOnVolume(const BoxType &r) { ++calls; return r.squaredExteriorDistance(p); }$/;"	f	struct:BallPointStuff
minimumOnVolumeObject	external/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnVolumeObject(const Box2d &r, const Vector2d &v) { ++calls; return r.squaredExteriorDistance(v); }$/;"	f	struct:PointPointMinimizer
minimumOnVolumeObject	external/unsupported/test/BVH.cpp	/^  double minimumOnVolumeObject(const BoxType &r, const BallType &b) { ++calls; return SQR((std::max)(0., r.exteriorDistance(b.center) - b.radius)); }$/;"	f	struct:BallPointStuff
minimumOnVolumeObject	external/unsupported/test/BVH.cpp	/^  double minimumOnVolumeObject(const BoxType &r, const VectorType &v) { ++calls; return r.squaredExteriorDistance(v); }$/;"	f	struct:BallPointStuff
minimumOnVolumeVolume	external/unsupported/doc/examples/BVH_Example.cpp	/^  double minimumOnVolumeVolume(const Box2d &r1, const Box2d &r2) { ++calls; return r1.squaredExteriorDistance(r2); }$/;"	f	struct:PointPointMinimizer
minimumOnVolumeVolume	external/unsupported/test/BVH.cpp	/^  double minimumOnVolumeVolume(const BoxType &r1, const BoxType &r2) { ++calls; return r1.squaredExteriorDistance(r2); }$/;"	f	struct:BallPointStuff
minimum_degree_ordering	external/Eigen/src/OrderingMethods/Amd.h	/^void minimum_degree_ordering(SparseMatrix<Scalar,ColMajor,Index>& C, PermutationMatrix<Dynamic,Dynamic,Index>& perm)$/;"	f	namespace:Eigen::internal
minor	external/Eigen/src/Eigen2Support/Minor.h	/^MatrixBase<Derived>::minor(Index row, Index col) const$/;"	f	class:Eigen::MatrixBase
minor	external/Eigen/src/Eigen2Support/Minor.h	/^MatrixBase<Derived>::minor(Index row, Index col)$/;"	f	class:Eigen::MatrixBase
minor	external/SuiteSparse/Include/cholmod_core.h	/^    size_t minor ;	\/* If the factorization failed, L->minor is the column$/;"	m	struct:cholmod_factor_struct
minsize_for_tree_index	external/unsupported/test/mpreal/dlmalloc.c	2767;"	d	file:
misra1a_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    misra1a_functor(void) : Functor<double>(2,14) {}$/;"	f	struct:misra1a_functor
misra1a_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct misra1a_functor : Functor<double>$/;"	s	file:
misra1d_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    misra1d_functor(void) : Functor<double>(2,14) {}$/;"	f	struct:misra1d_functor
misra1d_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct misra1d_functor : Functor<double>$/;"	s	file:
mmap_align	external/unsupported/test/mpreal/dlmalloc.c	2539;"	d	file:
mmap_align	external/unsupported/test/mpreal/dlmalloc.c	2541;"	d	file:
mmap_alloc	external/unsupported/test/mpreal/dlmalloc.c	/^static void* mmap_alloc(mstate m, size_t nb) {$/;"	f	file:
mmap_resize	external/unsupported/test/mpreal/dlmalloc.c	/^static mchunkptr mmap_resize(mstate m, mchunkptr oldp, size_t nb) {$/;"	f	file:
mmap_threshold	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t mmap_threshold;$/;"	m	struct:malloc_params	file:
modf	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal modf(const mpreal& v, mpreal& n)$/;"	f	namespace:mpfr
modfl	external/SuiteSparse/Include/cholmod_core.h	/^    double modfl ;	    \/* flop count from most recent update\/downdate\/$/;"	m	struct:cholmod_common_struct
mp	external/unsupported/test/mpreal/mpreal.h	/^	mpfr_t mp;$/;"	m	class:mpfr::mpreal
mp_matrix	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const MatrixType* mp_matrix;$/;"	m	class:Eigen::IterativeSolverBase
mp_target	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    SparseMatrixType* mp_target;$/;"	m	class:Eigen::RandomSetter
mparams	external/unsupported/test/mpreal/dlmalloc.c	/^static struct malloc_params mparams;$/;"	v	typeref:struct:malloc_params	file:
mpfr	external/unsupported/test/mpreal/mpreal.cpp	/^namespace mpfr{$/;"	n	file:
mpfr	external/unsupported/test/mpreal/mpreal.h	/^namespace mpfr {$/;"	n
mpfr_ptr	external/unsupported/test/mpreal/mpreal.h	/^inline ::mpfr_ptr		mpreal::mpfr_ptr()			{	return mp;	}$/;"	f	class:mpfr::mpreal
mpfr_srcptr	external/unsupported/test/mpreal/mpreal.h	/^inline ::mpfr_srcptr	mpreal::mpfr_srcptr() const	{	return const_cast< ::mpfr_srcptr >(mp);	}$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal() $/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const char* s, mp_prec_t prec, int base, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const double u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const int64_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const long double u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const long int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const mpf_t u)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const mpfr_t u)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const mpq_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const mpreal& u) $/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const mpz_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const std::string& s, mp_prec_t prec, int base, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const uint64_t u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const unsigned int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::mpreal(const unsigned long int u, mp_prec_t prec, mp_rnd_t mode)$/;"	f	class:mpfr::mpreal
mpreal	external/unsupported/test/mpreal/mpreal.h	/^class mpreal {$/;"	c	namespace:mpfr
mpreal_allocate	external/unsupported/test/mpreal/mpreal.cpp	/^	void * mpreal::mpreal_allocate(size_t alloc_size)$/;"	f	class:mpfr::mpreal
mpreal_free	external/unsupported/test/mpreal/mpreal.cpp	/^	void mpreal::mpreal_free(void *ptr, size_t size)$/;"	f	class:mpfr::mpreal
mpreal_max	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal_max(mp_prec_t prec)$/;"	f	namespace:mpfr
mpreal_min	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal_min(mp_prec_t prec)$/;"	f	namespace:mpfr
mpreal_reallocate	external/unsupported/test/mpreal/mpreal.cpp	/^	void * mpreal::mpreal_reallocate(void *ptr, size_t old_size, size_t new_size)$/;"	f	class:mpfr::mpreal
mr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2 * LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
mr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2 * LhsPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
mr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2 * ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
mr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    mr = 2*ResPacketSize,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
msegment	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_segment  msegment;$/;"	t	typeref:struct:malloc_segment	file:
msegmentptr	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_segment* msegmentptr;$/;"	t	typeref:struct:malloc_segment	file:
mspace	external/unsupported/test/mpreal/dlmalloc.c	/^typedef void* mspace;$/;"	t	file:
mspace	external/unsupported/test/mpreal/dlmalloc.h	/^typedef void* mspace;$/;"	t
mspace_calloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* mspace_calloc(mspace msp, size_t n_elements, size_t elem_size) {$/;"	f
mspace_footprint	external/unsupported/test/mpreal/dlmalloc.c	/^size_t mspace_footprint(mspace msp) {$/;"	f
mspace_free	external/unsupported/test/mpreal/dlmalloc.c	/^void mspace_free(mspace msp, void* mem) {$/;"	f
mspace_independent_calloc	external/unsupported/test/mpreal/dlmalloc.c	/^void** mspace_independent_calloc(mspace msp, size_t n_elements,$/;"	f
mspace_independent_comalloc	external/unsupported/test/mpreal/dlmalloc.c	/^void** mspace_independent_comalloc(mspace msp, size_t n_elements,$/;"	f
mspace_mallinfo	external/unsupported/test/mpreal/dlmalloc.c	/^struct mallinfo mspace_mallinfo(mspace msp) {$/;"	f
mspace_malloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* mspace_malloc(mspace msp, size_t bytes) {$/;"	f
mspace_malloc_stats	external/unsupported/test/mpreal/dlmalloc.c	/^void mspace_malloc_stats(mspace msp) {$/;"	f
mspace_mallopt	external/unsupported/test/mpreal/dlmalloc.c	/^int mspace_mallopt(int param_number, int value) {$/;"	f
mspace_max_footprint	external/unsupported/test/mpreal/dlmalloc.c	/^size_t mspace_max_footprint(mspace msp) {$/;"	f
mspace_memalign	external/unsupported/test/mpreal/dlmalloc.c	/^void* mspace_memalign(mspace msp, size_t alignment, size_t bytes) {$/;"	f
mspace_realloc	external/unsupported/test/mpreal/dlmalloc.c	/^void* mspace_realloc(mspace msp, void* oldmem, size_t bytes) {$/;"	f
mspace_track_large_chunks	external/unsupported/test/mpreal/dlmalloc.c	/^int mspace_track_large_chunks(mspace msp, int enable) {$/;"	f
mspace_trim	external/unsupported/test/mpreal/dlmalloc.c	/^int mspace_trim(mspace msp, size_t pad) {$/;"	f
mspace_usable_size	external/unsupported/test/mpreal/dlmalloc.c	/^size_t mspace_usable_size(void* mem) {$/;"	f
mstate	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_state*    mstate;$/;"	t	typeref:struct:malloc_state	file:
mul_2si	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mul_2si(const mpreal& v, long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
mul_2ui	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mul_2ui(const mpreal& v, unsigned long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
mutex	external/unsupported/test/mpreal/dlmalloc.c	/^  MLOCK_T    mutex;     \/* locate lock among fields that rarely change *\/$/;"	m	struct:malloc_state	file:
my_functor	external/unsupported/test/NumericalDiff.cpp	/^    my_functor(void): Functor<double>(3,15) {}$/;"	f	struct:my_functor
my_functor	external/unsupported/test/NumericalDiff.cpp	/^struct my_functor : Functor<double>$/;"	s	file:
n	external/SuiteSparse/Include/cholmod_core.h	/^    size_t n ;		\/* L is n-by-n *\/$/;"	m	struct:cholmod_factor_struct
n	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index n;$/;"	m	class:Eigen::HybridNonLinearSolver
n	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index n;$/;"	m	class:Eigen::LevenbergMarquardt
n_	PointCloud.h	/^	float n_[ 3 ];$/;"	m	struct:Point
nbThreads	external/Eigen/src/Core/products/Parallelizer.h	/^inline int nbThreads()$/;"	f	namespace:Eigen
nb_of_subdiagonals	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Index nb_of_subdiagonals;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
nb_of_superdiagonals	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Index nb_of_superdiagonals;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
nc	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    inline DenseIndex nc() const { return m_nc; }$/;"	f	class:Eigen::internal::level3_blocking
ncfail	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index ncfail;$/;"	m	class:Eigen::HybridNonLinearSolver
ncol	external/SuiteSparse/Include/cholmod_core.h	/^    size_t ncol ;$/;"	m	struct:cholmod_dense_struct
ncol	external/SuiteSparse/Include/cholmod_core.h	/^    size_t ncol ;$/;"	m	struct:cholmod_sparse_struct
ncol	external/SuiteSparse/Include/cholmod_core.h	/^    size_t ncol ;$/;"	m	struct:cholmod_triplet_struct
ncsuc	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index ncsuc;$/;"	m	class:Eigen::HybridNonLinearSolver
nd_camd	external/SuiteSparse/Include/cholmod_core.h	/^	int nd_camd ;	    \/* If 1, follow the nested dissection ordering$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
nd_components	external/SuiteSparse/Include/cholmod_core.h	/^	int nd_components ; \/* The nested dissection ordering finds a node$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
nd_compress	external/SuiteSparse/Include/cholmod_core.h	/^	int nd_compress ;   \/* If TRUE, compress the graph and subgraphs before$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
nd_oksep	external/SuiteSparse/Include/cholmod_core.h	/^	double nd_oksep ;   \/* in NESDIS, when a node separator is computed, it$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
nd_small	external/SuiteSparse/Include/cholmod_core.h	/^	size_t nd_small ;    \/* do not partition graphs with fewer nodes than$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
ndbounds_hit	external/SuiteSparse/Include/cholmod_core.h	/^    double ndbounds_hit ;   \/* # of times diagonal modified by dbound *\/$/;"	m	struct:cholmod_common_struct
nestByValue	external/Eigen/src/Core/NestByValue.h	/^DenseBase<Derived>::nestByValue() const$/;"	f	class:Eigen::DenseBase
nested	external/Eigen/src/Core/ProductBase.h	/^struct nested<GeneralProduct<Lhs,Rhs,Mode>, N, PlainObject>$/;"	s	namespace:Eigen::internal
nested	external/Eigen/src/Core/ReturnByValue.h	/^struct nested<ReturnByValue<Derived>, n, PlainObject>$/;"	s	namespace:Eigen::internal
nested	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct nested<CoeffBasedProduct<Lhs,Rhs,EvalBeforeNestingBit|EvalBeforeAssigningBit>, N, PlainObject>$/;"	s	namespace:Eigen::internal
nestedExpression	external/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::ArrayWrapper
nestedExpression	external/Eigen/src/Core/ArrayWrapper.h	/^    nestedExpression() const $/;"	f	class:Eigen::MatrixWrapper
nestedExpression	external/Eigen/src/Core/Block.h	/^    const typename internal::remove_all<typename XprType::Nested>::type& nestedExpression() const $/;"	f	class:Eigen::Block
nestedExpression	external/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() const { return m_xpr; }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	external/Eigen/src/Core/CwiseUnaryOp.h	/^    nestedExpression() { return m_xpr.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryOp
nestedExpression	external/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	external/Eigen/src/Core/CwiseUnaryView.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::CwiseUnaryView
nestedExpression	external/Eigen/src/Core/Diagonal.h	/^    nestedExpression() const $/;"	f	class:Eigen::Diagonal
nestedExpression	external/Eigen/src/Core/Replicate.h	/^    const _MatrixTypeNested& nestedExpression() const$/;"	f	class:Eigen::Replicate
nestedExpression	external/Eigen/src/Core/Reverse.h	/^    nestedExpression() const $/;"	f	class:Eigen::Reverse
nestedExpression	external/Eigen/src/Core/SelfAdjointView.h	/^    MatrixTypeNestedCleaned& nestedExpression() { return *const_cast<MatrixTypeNestedCleaned*>(&m_matrix); }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	external/Eigen/src/Core/SelfAdjointView.h	/^    const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SelfAdjointView
nestedExpression	external/Eigen/src/Core/Transpose.h	/^    nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::Transpose
nestedExpression	external/Eigen/src/Core/Transpose.h	/^    nestedExpression() { return m_matrix.const_cast_derived(); }$/;"	f	class:Eigen::Transpose
nestedExpression	external/Eigen/src/Core/TriangularMatrix.h	/^    MatrixTypeNestedCleaned& nestedExpression() { return *const_cast<MatrixTypeNestedCleaned*>(&m_matrix); }$/;"	f	class:Eigen::TriangularView
nestedExpression	external/Eigen/src/Core/TriangularMatrix.h	/^    const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::TriangularView
nestedExpression	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline const MatrixTypeNestedCleaned& nestedExpression() const { return m_matrix; }$/;"	f	class:Eigen::SparseTriangularView
nestedPermutation	external/Eigen/src/Core/PermutationMatrix.h	/^    const PermutationType& nestedPermutation() const { return m_permutation; }$/;"	f	class:Eigen::Transpose
next	external/Eigen/src/SparseCore/AmbiVector.h	/^      Index next;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
next	external/SuiteSparse/Include/cholmod_core.h	/^    void *next ;	\/* size ncol+2. next [j] is the next column in i\/x *\/$/;"	m	struct:cholmod_factor_struct
next	external/unsupported/test/mpreal/dlmalloc.c	/^  struct malloc_segment* next;   \/* ptr to next segment *\/$/;"	m	struct:malloc_segment	typeref:struct:malloc_segment::malloc_segment	file:
next_chunk	external/unsupported/test/mpreal/dlmalloc.c	2144;"	d	file:
next_pinuse	external/unsupported/test/mpreal/dlmalloc.c	2148;"	d	file:
nextabove	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal nextabove  (const mpreal& x)$/;"	f	namespace:mpfr
nextbelow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal nextbelow  (const mpreal& x)$/;"	f	namespace:mpfr
nexttoward	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal nexttoward (const mpreal& x, const mpreal& y)$/;"	f	namespace:mpfr
nfev	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index nfev;$/;"	m	class:Eigen::HybridNonLinearSolver
nfev	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index nfev;$/;"	m	class:Eigen::LevenbergMarquardt
njev	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index njev;$/;"	m	class:Eigen::HybridNonLinearSolver
njev	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Index njev;$/;"	m	class:Eigen::LevenbergMarquardt
nmethods	external/SuiteSparse/Include/cholmod_core.h	/^    int nmethods ;	\/* The number of ordering methods to try.  Default: 0.$/;"	m	struct:cholmod_common_struct
nnz	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    union {int nnz;int lda;};$/;"	m	union:Eigen::SluMatrix::__anon439::__anon440
nnz	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nnz ;	\/* number of nonzeros in the matrix *\/$/;"	m	struct:cholmod_triplet_struct
no_assignment_operator	external/Eigen/src/Core/util/XprHelper.h	/^class no_assignment_operator$/;"	c	namespace:Eigen::internal
no_workspace_reallocate	external/SuiteSparse/Include/cholmod_core.h	/^    int no_workspace_reallocate ;   \/* this is an internal flag, used as a$/;"	m	struct:cholmod_common_struct
noalias	external/Eigen/src/Core/NoAlias.h	/^NoAlias<Derived,MatrixBase> MatrixBase<Derived>::noalias()$/;"	f	class:Eigen::MatrixBase
noiseLevel	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    int noiseLevel() const { return m_noise; }$/;"	f	class:Eigen::IterationController
nonZeros	external/Eigen/src/Core/DenseBase.h	/^    inline Index nonZeros() const { return size(); }$/;"	f	class:Eigen::DenseBase
nonZeros	external/Eigen/src/SparseCore/AmbiVector.h	/^_Index AmbiVector<_Scalar,_Index>::nonZeros() const$/;"	f	class:Eigen::internal::AmbiVector
nonZeros	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index nonZeros() const  { return m_nnz; }$/;"	f	class:Eigen::MappedSparseMatrix
nonZeros	external/Eigen/src/SparseCore/SparseBlock.h	/^    Index nonZeros() const$/;"	f	class:Eigen::SparseInnerVectorSet
nonZeros	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index nonZeros() const$/;"	f	class:Eigen::SparseMatrix
nonZeros	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index nonZeros() const { return derived().nonZeros(); }$/;"	f	class:Eigen::SparseMatrixBase
nonZeros	external/Eigen/src/SparseCore/SparseTranspose.h	/^    inline Index nonZeros() const { return derived().nestedExpression().nonZeros(); }$/;"	f	class:Eigen::TransposeImpl
nonZeros	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Index nonZeros() const  { return static_cast<Index>(m_data.size()); }$/;"	f	class:Eigen::SparseVector
nonZeros	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index nonZeros() const {$/;"	f	class:Eigen::SkylineMatrix
nonZeros	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index nonZeros() const {$/;"	f	class:Eigen::SkylineMatrixBase
nonZeros	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    Index nonZeros() const$/;"	f	class:Eigen::SparseInnerVectorSet
nonZeros	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    Index nonZeros() const$/;"	f	class:Eigen::DynamicSparseMatrix
nonZeros	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    Index nonZeros() const$/;"	f	class:Eigen::RandomSetter
noncopyable	external/Eigen/src/Core/util/Meta.h	/^  noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
noncopyable	external/Eigen/src/Core/util/Meta.h	/^class noncopyable$/;"	c	namespace:Eigen::internal
nonzeroPivots	external/Eigen/src/LU/FullPivLU.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivLU
nonzeroPivots	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::ColPivHouseholderQR
nonzeroPivots	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index nonzeroPivots() const$/;"	f	class:Eigen::FullPivHouseholderQR
nonzeroSingularValues	external/Eigen/src/SVD/JacobiSVD.h	/^    Index nonzeroSingularValues() const$/;"	f	class:Eigen::JacobiSVD
norm	external/Eigen/src/Core/Dot.h	/^inline typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::norm() const$/;"	f	class:Eigen::MatrixBase
norm	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_norm,RealScalar>::Type norm() const$/;"	f	class:Eigen::VectorwiseOp
norm	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar norm() const { return m_coeffs.norm(); }$/;"	f	class:Eigen::Quaternion
norm	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar norm() const { return coeffs().norm(); }$/;"	f	class:Eigen::QuaternionBase
norm	external/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::norm() const$/;"	f	class:Eigen::SparseMatrixBase
norm	external/unsupported/test/FFTW.cpp	/^double norm(double x) {return x*x;}$/;"	f
norm	external/unsupported/test/FFTW.cpp	/^float norm(float x) {return x*x;}$/;"	f
norm	external/unsupported/test/FFTW.cpp	/^long double norm(long double x) {return x*x;}$/;"	f
norm1	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(norm1, Scalar) norm1(const Scalar& x)$/;"	f	namespace:Eigen::internal
norm1_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl$/;"	s	namespace:Eigen::internal
norm1_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct norm1_default_impl<Scalar, false>$/;"	s	namespace:Eigen::internal
norm1_impl	external/Eigen/src/Core/MathFunctions.h	/^struct norm1_impl : norm1_default_impl<Scalar, NumTraits<Scalar>::IsComplex> {};$/;"	s	namespace:Eigen::internal
norm1_retval	external/Eigen/src/Core/MathFunctions.h	/^struct norm1_retval$/;"	s	namespace:Eigen::internal
normal	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline NormalReturnType normal() { return NormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline const NormalReturnType normal() const { return NormalReturnType(*const_cast<Coefficients*>(&m_coeffs),0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	external/Eigen/src/Geometry/Hyperplane.h	/^  inline ConstNormalReturnType normal() const { return ConstNormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normal	external/Eigen/src/Geometry/Hyperplane.h	/^  inline NormalReturnType normal() { return NormalReturnType(m_coeffs,0,0,dim(),1); }$/;"	f	class:Eigen::Hyperplane
normalize	external/Eigen/src/Core/Dot.h	/^inline void MatrixBase<Derived>::normalize()$/;"	f	class:Eigen::MatrixBase
normalize	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  void normalize(void)$/;"	f	class:Eigen::Hyperplane
normalize	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline void normalize() { m_coeffs.normalize(); }$/;"	f	class:Eigen::Quaternion
normalize	external/Eigen/src/Geometry/Hyperplane.h	/^  void normalize(void)$/;"	f	class:Eigen::Hyperplane
normalize	external/Eigen/src/Geometry/Quaternion.h	/^  inline void normalize() { coeffs().normalize(); }$/;"	f	class:Eigen::QuaternionBase
normalized	external/Eigen/src/Core/Dot.h	/^MatrixBase<Derived>::normalized() const$/;"	f	class:Eigen::MatrixBase
normalized	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion normalized() const { return Quaternion(m_coeffs.normalized()); }$/;"	f	class:Eigen::Quaternion
normalized	external/Eigen/src/Geometry/Quaternion.h	/^  inline Quaternion<Scalar> normalized() const { return Quaternion<Scalar>(coeffs().normalized()); }$/;"	f	class:Eigen::QuaternionBase
nper_	OptApp.h	/^	int nper_;$/;"	m	class:COptApp
nper_	PointCloud.h	/^	int nper_;$/;"	m	class:PointCloud
nr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 2,$/;"	e	enum:Eigen::internal::gebp_traits::__anon239
nr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = 4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon240
nr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = NumberOfRegisters\/4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon237
nr	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    nr = NumberOfRegisters\/4,$/;"	e	enum:Eigen::internal::gebp_traits::__anon238
nrealloc_col	external/SuiteSparse/Include/cholmod_core.h	/^    double nrealloc_col ;   \/* # of column reallocations *\/$/;"	m	struct:cholmod_common_struct
nrealloc_factor	external/SuiteSparse/Include/cholmod_core.h	/^    double nrealloc_factor ;\/* # of factor reallocations due to col. reallocs *\/$/;"	m	struct:cholmod_common_struct
nrelax	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nrelax [3] ;$/;"	m	struct:cholmod_common_struct
nrow	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nrow ;	\/* size of Flag and Head *\/$/;"	m	struct:cholmod_common_struct
nrow	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nrow ;	\/* the matrix is nrow-by-ncol *\/$/;"	m	struct:cholmod_dense_struct
nrow	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nrow ;	\/* the matrix is nrow-by-ncol *\/$/;"	m	struct:cholmod_sparse_struct
nrow	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nrow ;	\/* the matrix is nrow-by-ncol *\/$/;"	m	struct:cholmod_triplet_struct
nslow1	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index nslow1, nslow2;$/;"	m	class:Eigen::HybridNonLinearSolver
nslow2	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Index nslow1, nslow2;$/;"	m	class:Eigen::HybridNonLinearSolver
nsuper	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nsuper ;	\/* number of supernodes *\/$/;"	m	struct:cholmod_factor_struct
num_	OptApp.h	/^	int num_;$/;"	m	class:COptApp
nval_	PointCloud.h	/^	float nval_[ 8 ];$/;"	m	struct:Point
nz	external/SuiteSparse/Include/cholmod_core.h	/^    void *nz ;		\/* nz [0..ncol-1], the # of nonzeros in each col.  In$/;"	m	struct:cholmod_sparse_struct
nz	external/SuiteSparse/Include/cholmod_core.h	/^    void *nz ;		\/* nz [0..ncol-1], the # of nonzeros in each column.$/;"	m	struct:cholmod_factor_struct
nzmax	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nzmax ;	\/* maximum number of entries in the matrix *\/$/;"	m	struct:cholmod_dense_struct
nzmax	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nzmax ;	\/* maximum number of entries in the matrix *\/$/;"	m	struct:cholmod_sparse_struct
nzmax	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nzmax ;	\/* maximum number of entries in the matrix *\/$/;"	m	struct:cholmod_triplet_struct
nzmax	external/SuiteSparse/Include/cholmod_core.h	/^    size_t nzmax ;	\/* size of i and x *\/$/;"	m	struct:cholmod_factor_struct
objects	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  ObjectList objects;$/;"	m	class:Eigen::KdBVH
offset	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Scalar& offset() { return m_coeffs(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline const Scalar& offset() const { return m_coeffs.coeff(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar& offset() { return m_coeffs(dim()); }$/;"	f	class:Eigen::Hyperplane
offset	external/Eigen/src/Geometry/Hyperplane.h	/^  inline const Scalar& offset() const { return m_coeffs.coeff(dim()); }$/;"	f	class:Eigen::Hyperplane
offset_	PointCloud.h	/^	int offset_;$/;"	m	class:PointCloud
ok_address	external/unsupported/test/mpreal/dlmalloc.c	2869;"	d	file:
ok_address	external/unsupported/test/mpreal/dlmalloc.c	2878;"	d	file:
ok_inuse	external/unsupported/test/mpreal/dlmalloc.c	2873;"	d	file:
ok_inuse	external/unsupported/test/mpreal/dlmalloc.c	2880;"	d	file:
ok_magic	external/unsupported/test/mpreal/dlmalloc.c	2886;"	d	file:
ok_magic	external/unsupported/test/mpreal/dlmalloc.c	2888;"	d	file:
ok_next	external/unsupported/test/mpreal/dlmalloc.c	2871;"	d	file:
ok_next	external/unsupported/test/mpreal/dlmalloc.c	2879;"	d	file:
ok_pinuse	external/unsupported/test/mpreal/dlmalloc.c	2875;"	d	file:
ok_pinuse	external/unsupported/test/mpreal/dlmalloc.c	2881;"	d	file:
operator !=	external/Eigen/src/Core/MatrixBase.h	/^    inline bool operator!=(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator !=	external/Eigen/src/Core/util/Memory.h	/^    bool operator!=(const aligned_allocator<T>& ) const$/;"	f	class:Eigen::aligned_allocator
operator !=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator!=(Scalar s) const$/;"	f	class:Eigen::Cwise
operator !=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator!=(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator !=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator!=(const Scalar& a, const AutoDiffScalar& b) { return a != b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator !=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator!=(const Scalar& other) const  { return m_value != other; }$/;"	f	class:Eigen::AutoDiffScalar
operator !=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator!=(const AutoDiffScalar<OtherDerType>& b) const  { return m_value != b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator !=	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator != (const mpreal& a, const mpreal& b){	return (mpfr_lessgreater_p(a.mp,b.mp)	!=0);	}$/;"	f	namespace:mpfr
operator &&	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator&&(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator ()	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE CoeffReturnType operator()(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	external/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	external/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	external/Eigen/src/Core/DenseCoeffsBase.h	/^    operator()(Index row, Index col)$/;"	f	class:Eigen::DenseCoeffsBase
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a * m_other; }$/;"	f	struct:Eigen::internal::scalar_multiple_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE Scalar operator() (const Scalar& a) const { return a \/ m_other; }$/;"	f	struct:Eigen::internal::scalar_quotient1_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a && b; }$/;"	f	struct:Eigen::internal::scalar_boolean_and_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE bool operator() (const bool& a, const bool& b) const { return a || b; }$/;"	f	struct:Eigen::internal::scalar_boolean_or_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const NewType operator() (const Scalar& a) const { return cast<Scalar, NewType>(a); }$/;"	f	struct:Eigen::internal::scalar_cast_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index i) const { return impl(i); }$/;"	f	struct:Eigen::internal::linspaced_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index i) const { return m_low+i*m_step; }$/;"	f	struct:Eigen::internal::linspaced_op_impl
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const $/;"	f	struct:Eigen::internal::linspaced_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index row, Index col) const { return row==col ? Scalar(1) : Scalar(0); }$/;"	f	struct:Eigen::internal::scalar_identity_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (Index, Index = 0) const { return m_other; }$/;"	f	struct:Eigen::internal::scalar_constant_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& _x, const Scalar& _y) const$/;"	f	struct:Eigen::internal::scalar_hypot_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return -a; }$/;"	f	struct:Eigen::internal::scalar_opposite_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a) const { return internal::conj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a + b; }$/;"	f	struct:Eigen::internal::scalar_sum_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a - b; }$/;"	f	struct:Eigen::internal::scalar_difference_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { return a \/ b; }$/;"	f	struct:Eigen::internal::scalar_quotient_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { using std::max; return (max)(a, b); }$/;"	f	struct:Eigen::internal::scalar_max_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar operator() (const Scalar& a, const Scalar& b) const { using std::min; return (min)(a, b); }$/;"	f	struct:Eigen::internal::scalar_min_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const { return a * b; }$/;"	f	struct:Eigen::internal::scalar_product_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const LhsScalar& a, const RhsScalar& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return internal::abs(a); }$/;"	f	struct:Eigen::internal::scalar_abs_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type operator() (const Scalar& a) const { return internal::abs2(a); }$/;"	f	struct:Eigen::internal::scalar_abs2_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return internal::imag(a); }$/;"	f	struct:Eigen::internal::scalar_imag_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar& a) const { return internal::real(a); }$/;"	f	struct:Eigen::internal::scalar_real_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type operator() (const Scalar1& a) const { return a * m_other; }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return internal::imag_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_imag_ref_op
operator ()	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE result_type& operator() (const Scalar& a) const { return internal::real_ref(*const_cast<Scalar*>(&a)); }$/;"	f	struct:Eigen::internal::scalar_real_ref_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return Scalar(1)\/a; }$/;"	f	struct:Eigen::internal::scalar_inverse_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return a + m_other; }$/;"	f	struct:Eigen::internal::scalar_add_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return a*a*a; }$/;"	f	struct:Eigen::internal::scalar_cube_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return a*a; }$/;"	f	struct:Eigen::internal::scalar_square_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return internal::cos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return internal::pow(a, m_exponent); }$/;"	f	struct:Eigen::internal::scalar_pow_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a) const { return m_other \/ a; }$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline Scalar operator() (const Scalar& a, const OtherScalar& b) const { return internal::pow(a, b); }$/;"	f	struct:Eigen::internal::scalar_binary_pow_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { return internal::acos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { return internal::asin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { return internal::exp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { return internal::log(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { return internal::sin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { return internal::sqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
operator ()	external/Eigen/src/Core/Functors.h	/^  inline const Scalar operator() (const Scalar& a) const { return internal::tan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
operator ()	external/Eigen/src/Core/Random.h	/^  inline const Scalar operator() (Index, Index = 0) const { return random<Scalar>(); }$/;"	f	struct:Eigen::internal::scalar_random_op
operator ()	external/Eigen/src/Core/Reverse.h	/^    inline Scalar& operator()(Index index)$/;"	f	class:Eigen::Reverse
operator ()	external/Eigen/src/Core/Reverse.h	/^    inline Scalar& operator()(Index row, Index col)$/;"	f	class:Eigen::Reverse
operator ()	external/Eigen/src/Core/Transpositions.h	/^    inline Index& operator()(Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	external/Eigen/src/Core/Transpositions.h	/^    inline const Index& operator()(Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator ()	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar operator()(Index row, Index col) const$/;"	f	class:Eigen::TriangularBase
operator ()	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Scalar& operator()(Index row, Index col)$/;"	f	class:Eigen::TriangularBase
operator ()	external/Eigen/src/Core/VectorwiseOp.h	/^  inline result_type operator()(const DenseBase<Derived>& mat) const$/;"	f	struct:Eigen::internal::member_redux
operator ()	external/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::max_coeff_visitor
operator ()	external/Eigen/src/Core/Visitor.h	/^  void operator() (const Scalar& value, Index i, Index j)$/;"	f	struct:Eigen::internal::min_coeff_visitor
operator ()	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_DONT_INLINE void operator()(Scalar* blockA, const Scalar* EIGEN_RESTRICT _lhs, Index lhsStride, Index depth, Index rows,$/;"	f	struct:Eigen::internal::gemm_pack_lhs
operator ()	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_DONT_INLINE void operator()(Scalar* blockB, const Scalar* rhs, Index rhsStride, Index depth, Index cols,$/;"	f	struct:Eigen::internal::gemm_pack_rhs
operator ()	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  void operator()(ResScalar* res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index rows, Index depth, Index cols, ResScalar alpha,$/;"	f	struct:Eigen::internal::gebp_kernel
operator ()	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  void operator() (Index row, Index rows, Index col=0, Index cols=-1, GemmParallelInfo<Index>* info=0) const$/;"	f	struct:Eigen::internal::gemm_functor
operator ()	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  void operator()(ResScalar* res, Index resStride, const LhsScalar* blockA, const RhsScalar* blockB, Index size, Index depth, ResScalar alpha, RhsScalar* workspace)$/;"	f	struct:Eigen::internal::tribb_kernel
operator ()	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockA, const Scalar* _lhs, Index lhsStride, Index cols, Index rows)$/;"	f	struct:Eigen::internal::symm_pack_lhs
operator ()	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void operator()(Scalar* blockB, const Scalar* _rhs, Index rhsStride, Index rows, Index cols, Index k2)$/;"	f	struct:Eigen::internal::symm_pack_rhs
operator ()	external/Eigen/src/Core/util/BlasUtil.h	/^    EIGEN_STRONG_INLINE Scalar& operator()(Index i, Index j)$/;"	f	class:Eigen::internal::blas_data_mapper
operator ()	external/Eigen/src/Core/util/BlasUtil.h	/^    EIGEN_STRONG_INLINE const Scalar& operator()(Index i, Index j) const$/;"	f	class:Eigen::internal::const_blas_data_mapper
operator ()	external/Eigen/src/Core/util/BlasUtil.h	/^  inline T operator()(const T& x) { return conj(x); }$/;"	f	struct:Eigen::internal::conj_if
operator ()	external/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& operator()(const T& x) { return x; }$/;"	f	struct:Eigen::internal::conj_if
operator ()	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Scalar operator() (int row, int col) const { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Scalar& operator() (int row, int col) { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	external/Eigen/src/Geometry/Transform.h	/^  inline Scalar operator() (Index row, Index col) const { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	external/Eigen/src/Geometry/Transform.h	/^  inline Scalar& operator() (Index row, Index col) { return m_matrix(row,col); }$/;"	f	class:Eigen::Transform
operator ()	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::IncompleteLUT::keep_diag
operator ()	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^      inline bool operator() (const Index& row, const Index& col, const Scalar&) const$/;"	f	struct:Eigen::SimplicialCholeskyBase::keep_diag
operator ()	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline bool operator() (const Index&, const Index&, const Scalar& value) const$/;"	f	struct:Eigen::SparseMatrix::default_prunning_func
operator ()	external/unsupported/Eigen/src/AutoDiff/AutoDiffJacobian.h	/^  void operator() (const InputType& x, ValueType* v, JacobianType* _jac=0) const$/;"	f	class:Eigen::AutoDiffJacobian
operator ()	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    CoeffType operator() (Index i) { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator ()	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    const CoeffType operator() (Index i) const { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator ()	external/unsupported/Eigen/src/BVH/KdBVH.h	/^    inline bool operator()(const VIPair &v1, const VIPair &v2) const { return v1.first[dim] < v2.first[dim]; }$/;"	f	struct:Eigen::KdBVH::VectorComparator
operator ()	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  void operator()(const ObjectList &objects, BoxIter boxBegin, BoxIter boxEnd, VolumeList &outBoxes)$/;"	f	struct:Eigen::internal::get_boxes_helper
operator ()	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  void operator()(const ObjectList &objects, int, int, VolumeList &outBoxes)$/;"	f	struct:Eigen::internal::get_boxes_helper
operator ()	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    EIGEN_STRONG_INLINE const _Scalar operator()(Index row, Index col ) const$/;"	f	class:Eigen::internal::companion
operator ()	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    Scalar& operator() (Index row, Index col)$/;"	f	class:Eigen::RandomSetter
operator ()	external/unsupported/Eigen/src/Splines/Spline.h	/^  typename Spline<_Scalar, _Dim, _Degree>::PointType Spline<_Scalar, _Dim, _Degree>::operator()(Scalar u) const$/;"	f	class:Eigen::Spline
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:Bennett5_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:BoxBOD_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH09_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH10_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:MGH17_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:chwirut2_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:eckerle4_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:hahn1_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:lanczos1_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:misra1a_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:misra1d_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:rat42_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:rat43_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &b, VectorXd &fvec)$/;"	f	struct:thurber_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:hybrd_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:lmder_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:lmdif_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec)$/;"	f	struct:hybrj_functor
operator ()	external/unsupported/test/NonLinearOptimization.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec)$/;"	f	struct:lmstr_functor
operator ()	external/unsupported/test/NumericalDiff.cpp	/^    int operator()(const VectorXd &x, VectorXd &fvec) const$/;"	f	struct:my_functor
operator ()	external/unsupported/test/autodiff.cpp	/^  void operator() (const InputType& x, ValueType* v, JacobianType* _j) const$/;"	f	struct:TestFunc1
operator ()	external/unsupported/test/autodiff.cpp	/^  void operator() (const Matrix<T,InputsAtCompileTime,1>& x, Matrix<T,ValuesAtCompileTime,1>* _v) const$/;"	f	struct:TestFunc1
operator ()	external/unsupported/test/forward_adolc.cpp	/^  void operator() (const InputType& x, ValueType* v, JacobianType* _j) const$/;"	f	struct:TestFunc1
operator ()	external/unsupported/test/forward_adolc.cpp	/^  void operator() (const Matrix<T,InputsAtCompileTime,1>& x, Matrix<T,ValuesAtCompileTime,1>* _v) const$/;"	f	struct:TestFunc1
operator *	external/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar) const$/;"	f	class:Eigen::DiagonalBase
operator *	external/Eigen/src/Core/DiagonalMatrix.h	/^    operator*(const Scalar& scalar, const DiagonalBase& other)$/;"	f	class:Eigen::DiagonalBase
operator *	external/Eigen/src/Core/DiagonalProduct.h	/^DiagonalBase<DiagonalDerived>::operator*(const MatrixBase<MatrixDerived> &matrix) const$/;"	f	class:Eigen::DiagonalBase
operator *	external/Eigen/src/Core/DiagonalProduct.h	/^MatrixBase<Derived>::operator*(const DiagonalBase<DiagonalDerived> &diagonal) const$/;"	f	class:Eigen::MatrixBase
operator *	external/Eigen/src/Core/GeneralProduct.h	/^MatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::MatrixBase
operator *	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const PermutationBase<Other>& other) const$/;"	f	class:Eigen::PermutationBase
operator *	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const Transpose<PermutationBase<Other> >& other) const$/;"	f	class:Eigen::PermutationBase
operator *	external/Eigen/src/Core/PermutationMatrix.h	/^    inline PlainPermutationType operator*(const Transpose<PermutationBase<Other> >& other, const PermutationBase& perm)$/;"	f	class:Eigen::PermutationBase
operator *	external/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	external/Eigen/src/Core/PermutationMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& matrix, const Transpose& trPerm)$/;"	f	class:Eigen::Transpose
operator *	external/Eigen/src/Core/PermutationMatrix.h	/^operator*(const MatrixBase<Derived>& matrix,$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/PermutationMatrix.h	/^operator*(const PermutationBase<PermutationDerived> &permutation,$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/ProductBase.h	/^operator*(const ProductBase<Derived,Lhs,Rhs>& prod, typename Derived::RealScalar x)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/ProductBase.h	/^operator*(const ProductBase<Derived,Lhs,Rhs>& prod, typename Derived::Scalar x)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/ProductBase.h	/^operator*(typename Derived::RealScalar x,const ProductBase<Derived,Lhs,Rhs>& prod)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/ProductBase.h	/^operator*(typename Derived::Scalar x,const ProductBase<Derived,Lhs,Rhs>& prod)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SelfAdjointView& rhs)$/;"	f	class:Eigen::SelfAdjointView
operator *	external/Eigen/src/Core/SelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SelfAdjointView
operator *	external/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<Derived>& matrix) const$/;"	f	class:Eigen::Transpose
operator *	external/Eigen/src/Core/Transpositions.h	/^    operator*(const MatrixBase<Derived>& matrix, const Transpose& trt)$/;"	f	class:Eigen::Transpose
operator *	external/Eigen/src/Core/Transpositions.h	/^operator*(const MatrixBase<Derived>& matrix,$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/Transpositions.h	/^operator*(const TranspositionsBase<TranspositionDerived> &transpositions,$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const EigenBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::TriangularView
operator *	external/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const TriangularView& rhs)$/;"	f	class:Eigen::TriangularView
operator *	external/Eigen/src/Core/TriangularMatrix.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::TriangularView
operator *	external/Eigen/src/Core/VectorwiseOp.h	/^    operator*(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator *	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator *	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  friend inline QuaternionType operator* (const QuaternionType& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline Matrix3 operator* (const Matrix3& other) const$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const AngleAxis& other) const$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const QuaternionType& other) const$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline Vector3 operator* (const Vector3& other) const$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^  inline friend Matrix3 operator* (const Matrix3& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^Quaternion<Scalar>::operator* (const MatrixBase<Derived>& v) const$/;"	f	class:Eigen::Quaternion
operator *	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar> Quaternion<Scalar>::operator* (const Quaternion& other) const$/;"	f	class:Eigen::Quaternion
operator *	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  Vector2 operator* (const Vector2& vec) const$/;"	f	class:Eigen::Rotation2D
operator *	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D operator*(const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
operator *	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const Scaling<Scalar,Dim>& s) const$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim> operator*(const Transform<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim> operator*(const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  friend inline LinearMatrixType operator* (const LinearMatrixType& other, const Scaling& s)$/;"	f	class:Eigen::Scaling
operator *	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline LinearMatrixType operator* (const LinearMatrixType& other) const$/;"	f	class:Eigen::Scaling
operator *	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline LinearMatrixType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Scaling
operator *	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling operator* (const Scaling& other) const$/;"	f	class:Eigen::Scaling
operator *	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline VectorType operator* (const VectorType& other) const$/;"	f	class:Eigen::Scaling
operator *	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^Scaling<Scalar,Dim>::operator* (const TransformType& t) const$/;"	f	class:Eigen::Scaling
operator *	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^Scaling<Scalar,Dim>::operator* (const TranslationType& t) const$/;"	f	class:Eigen::Scaling
operator *	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  friend inline Transform operator*(const LinearMatrixType& mat, const Transform& t)$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  operator * (const MatrixBase<OtherDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  operator * (const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  operator * (const Transform& other) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim> Transform<Scalar,Dim>::operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim> Transform<Scalar,Dim>::operator*(const ScalingType& s) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim> Transform<Scalar,Dim>::operator*(const TranslationType& t) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  friend inline TransformType operator* (const LinearMatrixType& linear, const Translation& t)$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline TransformType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline Translation operator* (const Translation& other) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  inline VectorType operator* (const VectorType& other) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const LinearMatrixType& linear) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const ScalingType& other) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const TransformType& t) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Geometry/AngleAxis.h	/^  friend inline QuaternionType operator* (const QuaternionType& a, const AngleAxis& b)$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const AngleAxis& other) const$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Geometry/AngleAxis.h	/^  inline QuaternionType operator* (const QuaternionType& other) const$/;"	f	class:Eigen::AngleAxis
operator *	external/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Lhs>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	external/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const MatrixBase<Rhs>& rhs) const$/;"	f	class:Eigen::Homogeneous
operator *	external/Eigen/src/Geometry/Homogeneous.h	/^    operator* (const Transform<Scalar,Dim,Mode,Options>& lhs, const Homogeneous& rhs)$/;"	f	class:Eigen::Homogeneous
operator *	external/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::operator* (const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
operator *	external/Eigen/src/Geometry/Rotation2D.h	/^  Vector2 operator* (const Vector2& vec) const$/;"	f	class:Eigen::Rotation2D
operator *	external/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D operator*(const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
operator *	external/Eigen/src/Geometry/RotationBase.h	/^    friend inline Transform<Scalar,Dim,Affine> operator*(const DiagonalMatrix<Scalar,Dim>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const EigenBase<OtherDerived>& l, const Derived& r)$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim,Isometry> operator*(const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Geometry/RotationBase.h	/^    inline Transform<Scalar,Dim,Mode> operator*(const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Geometry/RotationBase.h	/^    operator*(const EigenBase<OtherDerived>& e) const$/;"	f	class:Eigen::RotationBase
operator *	external/Eigen/src/Geometry/Scaling.h	/^  inline Matrix<Scalar,Dim,Dim> operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::UniformScaling
operator *	external/Eigen/src/Geometry/Scaling.h	/^  inline Transform<Scalar,Dim,(int(Mode)==int(Isometry)?Affine:Mode)> operator* (const Transform<Scalar,Dim, Mode, Options>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	external/Eigen/src/Geometry/Scaling.h	/^  inline UniformScaling operator* (const UniformScaling& other) const$/;"	f	class:Eigen::UniformScaling
operator *	external/Eigen/src/Geometry/Scaling.h	/^  inline typename internal::plain_matrix_type<Derived>::type operator* (const MatrixBase<Derived>& other) const$/;"	f	class:Eigen::UniformScaling
operator *	external/Eigen/src/Geometry/Scaling.h	/^MatrixBase<Derived>::operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::MatrixBase
operator *	external/Eigen/src/Geometry/Scaling.h	/^UniformScaling<Scalar>::operator* (const Translation<Scalar,Dim>& t) const$/;"	f	class:Eigen::UniformScaling
operator *	external/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^    operator * (const DiagonalBase<DiagonalDerived> &b) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^    operator * (const EigenBase<OtherDerived> &a, const Transform &b)$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^    operator * (const Transform<Scalar,Dim,OtherMode,OtherOptions>& other) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^  inline Transform<Scalar,Dim,(int(Mode)==int(Isometry)?Affine:Isometry)> operator*(const UniformScaling<Scalar>& s) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^  inline const Transform operator * (const Transform& other) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^  operator * (const EigenBase<OtherDerived> &other) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options> Transform<Scalar,Dim,Mode,Options>::operator*(const TranslationType& t) const$/;"	f	class:Eigen::Transform
operator *	external/Eigen/src/Geometry/Translation.h	/^  inline AffineTransformType operator*(const EigenBase<OtherDerived>& linear, const Translation& t)$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Geometry/Translation.h	/^  inline IsometryTransformType operator*(const RotationBase<Derived,Dim>& r) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Geometry/Translation.h	/^  inline Transform<Scalar,Dim,Mode> operator* (const Transform<Scalar,Dim,Mode,Options>& t) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Geometry/Translation.h	/^  inline Translation operator* (const Translation& other) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Geometry/Translation.h	/^  inline VectorType operator* (const VectorType& other) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const EigenBase<OtherDerived>& linear) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Geometry/Translation.h	/^Translation<Scalar,Dim>::operator* (const UniformScaling<Scalar>& other) const$/;"	f	class:Eigen::Translation
operator *	external/Eigen/src/Householder/HouseholderSequence.h	/^    typename internal::matrix_type_times_scalar_type<Scalar, OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::HouseholderSequence
operator *	external/Eigen/src/Householder/HouseholderSequence.h	/^typename internal::matrix_type_times_scalar_type<typename VectorsType::Scalar,OtherDerived>::Type operator*(const MatrixBase<OtherDerived>& other, const HouseholderSequence<VectorsType,CoeffsType,Side>& h)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation operator*(const JacobiRotation& other)$/;"	f	class:Eigen::JacobiRotation
operator *	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^SparseMatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^SparseMatrixBase<Derived>::operator*(const DiagonalBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const DiagonalBase<OtherDerived> &lhs, const SparseMatrixBase& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const Derived& rhs)$/;"	f	class:Eigen::SparseMatrixBase
operator *	external/Eigen/src/SparseCore/SparsePermutation.h	/^operator*( const PermutationBase<PermDerived>& perm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const PermutationBase<PermDerived>& perm)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const SparseMatrixBase<SparseDerived>& matrix, const Transpose<PermutationBase<PermDerived> >& tperm)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/SparseCore/SparsePermutation.h	/^operator*(const Transpose<PermutationBase<PermDerived> >& tperm, const SparseMatrixBase<SparseDerived>& matrix)$/;"	f	namespace:Eigen
operator *	external/Eigen/src/SparseCore/SparseProduct.h	/^SparseMatrixBase<Derived>::operator*(const SparseMatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::SparseMatrixBase
operator *	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& lhs, const SparseSelfAdjointView& rhs)$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    operator*(const MatrixBase<OtherDerived>& rhs) const$/;"	f	class:Eigen::SparseSelfAdjointView
operator *	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator*(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator *	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const Scalar& scalar) const$/;"	f
operator *	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const Scalar& scalar, const StorageBaseType& matrix)$/;"	f
operator *	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const std::complex<Scalar>& scalar) const$/;"	f
operator *	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator*(const std::complex<Scalar>& scalar, const StorageBaseType& matrix)$/;"	f
operator *	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator*(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator *	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator*(const Scalar& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator *	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator*(const Scalar& other, const AutoDiffScalar& a)$/;"	f	class:Eigen::AutoDiffScalar
operator *	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  operator*(const Real& other) const$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator *	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  operator*(const Real& other, const AutoDiffScalar<_DerType>& a)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator *	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator*(const BaseScalar& other) const$/;"	f	class:Eigen::AutoDiffVector
operator *	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator*(const Scalar& other, const AutoDiffVector& v)$/;"	f	class:Eigen::AutoDiffVector
operator *	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^SkylineMatrixBase<Derived>::operator*(const MatrixBase<OtherDerived> &other) const {$/;"	f	class:Eigen::SkylineMatrixBase
operator *	external/unsupported/test/mpreal/mpreal.h	/^	operator*(const Lhs& lhs, const mpreal& rhs){ return mpreal(rhs) *= lhs;	} $/;"	f	namespace:mpfr
operator *	external/unsupported/test/mpreal/mpreal.h	/^	operator*(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) *= rhs;	}$/;"	f	namespace:mpfr
operator *	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator*(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator *=	external/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator*=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator *=	external/Eigen/src/Core/EigenBase.h	/^MatrixBase<Derived>::operator*=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator *=	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& DenseBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator *=	external/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView&  operator*=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = m_matrix * other; }$/;"	f	class:Eigen::TriangularView
operator *=	external/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator*=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator *=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator*=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Cwise
operator *=	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator*= (const Quaternion& other)$/;"	f	class:Eigen::Quaternion
operator *=	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D& operator*=(const Rotation2D& other)$/;"	f	class:Eigen::Rotation2D
operator *=	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator*=(const RotationBase<Derived,Dim>& r) { return rotate(r.toRotationMatrix()); }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator*=(const ScalingType& s) { return scale(s.coeffs()); }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator*=(const TranslationType& t) { return translate(t.vector()); }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator*= (const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator *=	external/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D& operator*=(const Rotation2D& other)$/;"	f	class:Eigen::Rotation2D
operator *=	external/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const DiagonalMatrix<Scalar,Dim>& s) { linear() *= s; return *this; }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const EigenBase<OtherDerived>& other) { return *this = *this * other; }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const RotationBase<Derived,Dim>& r) { return rotate(r.toRotationMatrix()); }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const TranslationType& t) { return translate(t.vector()); }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator*=(const UniformScaling<Scalar>& s) { return scale(s.factor()); }$/;"	f	class:Eigen::Transform
operator *=	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator*=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator *=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator*=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator *=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator*=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator *=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  inline AutoDiffScalar<_DerType>& operator*=(const Scalar& other)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator *=	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator*=(const AutoDiffVector<OtherValueType,OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator *=	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator*=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffVector
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*= (const mpreal& v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const double v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const int v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const int64_t  u){	*this *= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const long double v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const long int v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const uint64_t u){	*this *= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const unsigned int v)$/;"	f	class:mpfr::mpreal
operator *=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator*=(const unsigned long int v)$/;"	f	class:mpfr::mpreal
operator +	external/Eigen/src/Core/VectorwiseOp.h	/^    operator+(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator +	external/Eigen/src/Eigen2Support/Cwise.h	/^    operator+(const Scalar& scalar, const Cwise& mat)$/;"	f	class:Eigen::Cwise
operator +	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator+(const Scalar& scalar) const$/;"	f	class:Eigen::Cwise
operator +	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator+(const Scalar& scalar) const$/;"	f
operator +	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator+(const Scalar& scalar,const EIGEN_CURRENT_STORAGE_BASE_CLASS<Derived>& other)$/;"	f
operator +	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline const AutoDiffScalar<DerType&> operator+(const Scalar& a, const AutoDiffScalar& b)$/;"	f	class:Eigen::AutoDiffScalar
operator +	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const AutoDiffScalar<DerType&> operator+(const Scalar& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator +	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator+(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator +	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  friend inline const AutoDiffScalar<DerType&> operator+(const Real& a, const AutoDiffScalar<_DerType>& b)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator +	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  inline const AutoDiffScalar<DerType&> operator+(const Real& other) const$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator +	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator+(const AutoDiffVector<OtherValueType,OtherJacobianType>& other) const$/;"	f	class:Eigen::AutoDiffVector
operator +	external/unsupported/test/mpreal/mpreal.h	/^	operator+(const Lhs& lhs, const mpreal& rhs){ return mpreal(rhs) += lhs;	} $/;"	f	namespace:mpfr
operator +	external/unsupported/test/mpreal/mpreal.h	/^	operator+(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) += rhs;	}$/;"	f	namespace:mpfr
operator +	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator+()const	{	return mpreal(*this); }$/;"	f	class:mpfr::mpreal
operator +	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator+(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator ++	external/Eigen/src/SparseCore/AmbiVector.h	/^    Iterator& operator++()$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator ++	external/Eigen/src/SparseCore/CoreIterators.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++() { m_inner++; return *this; }$/;"	f	class:Eigen::DenseBase::InnerIterator
operator ++	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
operator ++	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Derived& operator++()$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator ++	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::CwiseUnaryOpImpl::InnerIterator
operator ++	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
operator ++	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
operator ++	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
operator ++	external/Eigen/src/SparseCore/SparseVector.h	/^    inline InnerIterator& operator++() { m_id++; return *this; }$/;"	f	class:Eigen::SparseVector::InnerIterator
operator ++	external/Eigen/src/SparseCore/SparseView.h	/^  EIGEN_STRONG_INLINE InnerIterator& operator++()$/;"	f	class:Eigen::SparseView::InnerIterator
operator ++	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void operator ++() { (*this)++; }$/;"	f	class:Eigen::IterationController
operator ++	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void operator ++(int) { m_nit++; m_written = false; m_resadd += m_res; }$/;"	f	class:Eigen::IterationController
operator ++	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerLowerIterator & operator++() {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
operator ++	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerUpperIterator & operator++() {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
operator ++	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline MatrixMarketIterator& operator++()$/;"	f	class:Eigen::MatrixMarketIterator
operator ++	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator++ (int)$/;"	f	class:mpfr::mpreal
operator ++	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator++() $/;"	f	class:mpfr::mpreal
operator +=	external/Eigen/src/Core/ArrayBase.h	/^    Derived& operator+=(const Scalar& scalar)$/;"	f	class:Eigen::ArrayBase
operator +=	external/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator+=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator +=	external/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator+=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator +=	external/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator+=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator +=	external/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator+=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator +=	external/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator+=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator +=	external/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const CoeffBasedProduct<Lhs,Rhs,NestingFlags>& other)$/;"	f	class:Eigen::NoAlias
operator +=	external/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::NoAlias
operator +=	external/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator+=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator +=	external/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator+=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::TriangularView
operator +=	external/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator+=(const ScaledProduct<ProductDerived>& other)$/;"	f	class:Eigen::TriangularView
operator +=	external/Eigen/src/Core/TriangularMatrix.h	/^    template<typename Other> TriangularView&  operator+=(const DenseBase<Other>& other) { return *this = m_matrix + other.derived(); }$/;"	f	class:Eigen::TriangularView
operator +=	external/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator+=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator +=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator+=(const Scalar& scalar)$/;"	f	class:Eigen::Cwise
operator +=	external/Eigen/src/Eigen2Support/Lazy.h	/^Derived& MatrixBase<Derived>::operator+=(const Flagged<ProductBase<ProductDerived, Lhs,Rhs>, 0,$/;"	f	class:Eigen::MatrixBase
operator +=	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator+=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator +=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator+=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator +=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator+=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator +=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  inline AutoDiffScalar<_DerType>& operator+=(const Real& other)$/;"	f	struct:Eigen::internal::auto_diff_special_op
operator +=	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator+=(const AutoDiffVector<OtherValueType,OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator +=	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerLowerIterator & operator+=(Index shift) {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
operator +=	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline InnerUpperIterator & operator+=(Index shift) {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+= (const double u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+= (const long double u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const int u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const int64_t  u){	*this += mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const long int u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpf_t u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpq_t u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpreal& v)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const mpz_t u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const uint64_t u){	*this += mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const unsigned int u)$/;"	f	class:mpfr::mpreal
operator +=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator+=(const unsigned long int u)$/;"	f	class:mpfr::mpreal
operator ,	external/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::CommaInitializer
operator ,	external/Eigen/src/Core/CommaInitializer.h	/^  CommaInitializer& operator,(const Scalar& s)$/;"	f	struct:Eigen::CommaInitializer
operator -	external/Eigen/src/Core/VectorwiseOp.h	/^    operator-(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator -	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator-(const Scalar& scalar) const$/;"	f	class:Eigen::Cwise
operator -	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator-(const Scalar& scalar) const$/;"	f
operator -	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator-(const Scalar& scalar,const EIGEN_CURRENT_STORAGE_BASE_CLASS<Derived>& other)$/;"	f
operator -	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator-() const { return derived(); }$/;"	f
operator -	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const AutoDiffScalar<DerType&> operator-(const Scalar& b) const$/;"	f	class:Eigen::AutoDiffScalar
operator -	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-() const$/;"	f	class:Eigen::AutoDiffScalar
operator -	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator -	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-(const Scalar& a, const AutoDiffScalar& b)$/;"	f	class:Eigen::AutoDiffScalar
operator -	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator-() const$/;"	f	class:Eigen::AutoDiffVector
operator -	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator-(const AutoDiffVector<OtherValueType,OtherJacobianType>& other) const$/;"	f	class:Eigen::AutoDiffVector
operator -	external/unsupported/doc/examples/FFT.cpp	/^vector<T> operator-(const vector<T> & a,const vector<T> & b )$/;"	f
operator -	external/unsupported/test/mpreal/mpreal.h	/^	operator-(const Lhs& lhs, const mpreal& rhs){ return mpreal(lhs) -= rhs;	}$/;"	f	namespace:mpfr
operator -	external/unsupported/test/mpreal/mpreal.h	/^	operator-(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) -= rhs;	}$/;"	f	namespace:mpfr
operator -	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator-()const$/;"	f	class:mpfr::mpreal
operator -	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const double  b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const int b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator -	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const unsigned int b, const mpreal& a)$/;"	f	namespace:mpfr
operator -	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator-(const unsigned long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator --	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline ReverseInnerIterator& operator--() { m_id--; return *this; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
operator --	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator& operator--()$/;"	f	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
operator --	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE ReverseInnerIterator& operator--()$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
operator --	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline ReverseInnerIterator& operator--() { --m_id; return *this; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
operator --	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE InnerIterator& operator--()$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
operator --	external/Eigen/src/SparseCore/SparseVector.h	/^    inline ReverseInnerIterator& operator--() { m_id--; return *this; }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
operator --	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal mpreal::operator-- (int)$/;"	f	class:mpfr::mpreal
operator --	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator--() $/;"	f	class:mpfr::mpreal
operator -=	external/Eigen/src/Core/ArrayBase.h	/^    Derived& operator-=(const Scalar& scalar)$/;"	f	class:Eigen::ArrayBase
operator -=	external/Eigen/src/Core/ArrayBase.h	/^    template<typename OtherDerived> Derived& operator-=(const MatrixBase<OtherDerived>& )$/;"	f	class:Eigen::ArrayBase
operator -=	external/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator-=(const ArrayBase<OtherDerived> &other)$/;"	f	class:Eigen::ArrayBase
operator -=	external/Eigen/src/Core/CwiseBinaryOp.h	/^MatrixBase<Derived>::operator-=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::MatrixBase
operator -=	external/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator-=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator -=	external/Eigen/src/Core/MatrixBase.h	/^    template<typename OtherDerived> Derived& operator-=(const ArrayBase<OtherDerived>& )$/;"	f	class:Eigen::MatrixBase
operator -=	external/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const CoeffBasedProduct<Lhs,Rhs,NestingFlags>& other)$/;"	f	class:Eigen::NoAlias
operator -=	external/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::NoAlias
operator -=	external/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator-=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator -=	external/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator-=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::TriangularView
operator -=	external/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator-=(const ScaledProduct<ProductDerived>& other)$/;"	f	class:Eigen::TriangularView
operator -=	external/Eigen/src/Core/TriangularMatrix.h	/^    template<typename Other> TriangularView&  operator-=(const DenseBase<Other>& other) { return *this = m_matrix - other.derived(); }$/;"	f	class:Eigen::TriangularView
operator -=	external/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator-=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator -=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator-=(const Scalar& scalar)$/;"	f	class:Eigen::Cwise
operator -=	external/Eigen/src/Eigen2Support/Lazy.h	/^Derived& MatrixBase<Derived>::operator-=(const Flagged<ProductBase<ProductDerived, Lhs,Rhs>, 0,$/;"	f	class:Eigen::MatrixBase
operator -=	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^SparseMatrixBase<Derived>::operator-=(const SparseMatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator -=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator-=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator -=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator-=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator -=	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    operator-=(const AutoDiffVector<OtherValueType,OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-= (const mpreal& v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const double v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const int v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const int64_t  u){	*this -= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const long double v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const long int v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const uint64_t u){	*this -= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const unsigned int v)$/;"	f	class:mpfr::mpreal
operator -=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator-=(const unsigned long int v)$/;"	f	class:mpfr::mpreal
operator /	external/Eigen/src/Core/GlobalFunctions.h	/^    operator\/(typename Derived::Scalar s, const Eigen::ArrayBase<Derived>& a)$/;"	f	namespace:Eigen
operator /	external/Eigen/src/Core/VectorwiseOp.h	/^    operator\/(const DenseBase<OtherDerived>& other) const$/;"	f	class:Eigen::VectorwiseOp
operator /	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator\/(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator /	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator\/(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operator /	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^operator\/(const Scalar& scalar) const$/;"	f
operator /	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator\/(const AutoDiffScalar<OtherDerType>& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator /	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator\/(const Scalar& other) const$/;"	f	class:Eigen::AutoDiffScalar
operator /	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    operator\/(const Scalar& other, const AutoDiffScalar& a)$/;"	f	class:Eigen::AutoDiffScalar
operator /	external/unsupported/test/mpreal/mpreal.h	/^	operator\/(const Lhs& lhs, const mpreal& rhs){ return mpreal(lhs) \/= rhs;	}$/;"	f	namespace:mpfr
operator /	external/unsupported/test/mpreal/mpreal.h	/^	operator\/(const mpreal& lhs, const Rhs& rhs){ return mpreal(lhs) \/= rhs;	}$/;"	f	namespace:mpfr
operator /	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const double  b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const mpreal& a, const mpreal& b)$/;"	f	namespace:mpfr
operator /	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const unsigned int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator\/(const unsigned long int b, const mpreal& a)$/;"	f	namespace:mpfr
operator /=	external/Eigen/src/Core/ArrayBase.h	/^ArrayBase<Derived>::operator\/=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::ArrayBase
operator /=	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^inline Derived& DenseBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::DenseBase
operator /=	external/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView&  operator\/=(const typename internal::traits<MatrixType>::Scalar& other) { return *this = m_matrix \/ other; }$/;"	f	class:Eigen::TriangularView
operator /=	external/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator\/=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator /=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^inline ExpressionType& Cwise<ExpressionType>::operator\/=(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Cwise
operator /=	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^SparseMatrixBase<Derived>::operator\/=(const Scalar& other)$/;"	f	class:Eigen::SparseMatrixBase
operator /=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator\/=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator /=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator\/=(const Scalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const double v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const int v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const int64_t  u){	*this \/= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const long double v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const long int v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const mpreal& v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const uint64_t u){	*this \/= mpreal(u); MPREAL_MSVC_DEBUGVIEW_CODE; return *this;	}$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const unsigned int v)$/;"	f	class:mpfr::mpreal
operator /=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator\/=(const unsigned long int v)$/;"	f	class:mpfr::mpreal
operator <	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<(Scalar s) const$/;"	f	class:Eigen::Cwise
operator <	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator <	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator< (const Scalar& a, const AutoDiffScalar& b) { return a <  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator< (const Scalar& other) const  { return m_value <  other; }$/;"	f	class:Eigen::AutoDiffScalar
operator <	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator< (const AutoDiffScalar<OtherDerType>& b) const  { return m_value <  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator <  (const mpreal& a, const mpreal& b){	return (mpfr_less_p(a.mp,b.mp)			!=0);	}$/;"	f	namespace:mpfr
operator <<	external/Eigen/src/Core/CommaInitializer.h	/^DenseBase<Derived>::operator<<(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator <<	external/Eigen/src/Core/CommaInitializer.h	/^inline CommaInitializer<Derived> DenseBase<Derived>::operator<< (const Scalar& s)$/;"	f	class:Eigen::DenseBase
operator <<	external/Eigen/src/Core/IO.h	/^    friend std::ostream & operator << (std::ostream & s, const WithFormat& wf)$/;"	f	class:Eigen::WithFormat
operator <<	external/Eigen/src/Core/IO.h	/^std::ostream & operator <<$/;"	f	namespace:Eigen
operator <<	external/Eigen/src/SparseCore/SparseMatrix.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrix& m)$/;"	f	class:Eigen::SparseMatrix
operator <<	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseMatrixBase& m)$/;"	f	class:Eigen::SparseMatrixBase
operator <<	external/Eigen/src/SparseCore/SparseVector.h	/^    friend std::ostream & operator << (std::ostream & s, const SparseVector& m)$/;"	f	class:Eigen::SparseVector
operator <<	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend  std::ostream & operator << (std::ostream & s, const AutoDiffScalar& a)$/;"	f	class:Eigen::AutoDiffScalar
operator <<	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    friend std::ostream & operator <<(std::ostream & s, const SkylineMatrix & m) {$/;"	f	class:Eigen::SkylineMatrix
operator <<	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    friend std::ostream & operator <<(std::ostream & s, const SkylineMatrixBase& m) {$/;"	f	class:Eigen::SkylineMatrixBase
operator <<	external/unsupported/test/mpreal/mpreal.cpp	/^ostream& operator<<(ostream& os, const mpreal& v)$/;"	f	namespace:mpfr
operator <<	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const int k)$/;"	f	namespace:mpfr
operator <<	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const long int k)$/;"	f	namespace:mpfr
operator <<	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const unsigned int k)$/;"	f	namespace:mpfr
operator <<	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator<<(const mpreal& v, const unsigned long int k)$/;"	f	namespace:mpfr
operator <<=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const int u)$/;"	f	class:mpfr::mpreal
operator <<=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const long int u)$/;"	f	class:mpfr::mpreal
operator <<=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const unsigned int u)$/;"	f	class:mpfr::mpreal
operator <<=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator<<=(const unsigned long int u)$/;"	f	class:mpfr::mpreal
operator <=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<=(Scalar s) const$/;"	f	class:Eigen::Cwise
operator <=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator<=(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator <=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator<=(const Scalar& a, const AutoDiffScalar& b) { return a <= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator<=(const Scalar& other) const  { return m_value <= other; }$/;"	f	class:Eigen::AutoDiffScalar
operator <=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator<=(const AutoDiffScalar<OtherDerType>& b) const  { return m_value <= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator <=	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator <= (const mpreal& a, const mpreal& b){	return (mpfr_lessequal_p(a.mp,b.mp)		!=0);	}$/;"	f	namespace:mpfr
operator =	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const Array& other)$/;"	f	class:Eigen::Array
operator =	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const ArrayBase<OtherDerived>& other)$/;"	f	class:Eigen::Array
operator =	external/Eigen/src/Core/Array.h	/^    EIGEN_STRONG_INLINE Array& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Array
operator =	external/Eigen/src/Core/ArrayBase.h	/^    Derived& operator=(const ArrayBase& other)$/;"	f	class:Eigen::ArrayBase
operator =	external/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase& other)$/;"	f	class:Eigen::DenseBase
operator =	external/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	external/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	external/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	external/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const MatrixBase& other)$/;"	f	class:Eigen::MatrixBase
operator =	external/Eigen/src/Core/Assign.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::MatrixBase
operator =	external/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalBase<OtherDerived>& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	external/Eigen/src/Core/DiagonalMatrix.h	/^    DiagonalMatrix& operator=(const DiagonalMatrix& other)$/;"	f	class:Eigen::DiagonalMatrix
operator =	external/Eigen/src/Core/EigenBase.h	/^Derived& DenseBase<Derived>::operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::DenseBase
operator =	external/Eigen/src/Core/MapBase.h	/^    Derived& operator=(const MapBase& other)$/;"	f	class:Eigen::MapBase
operator =	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::Matrix
operator =	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const Matrix& other)$/;"	f	class:Eigen::Matrix
operator =	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Matrix
operator =	external/Eigen/src/Core/Matrix.h	/^    EIGEN_STRONG_INLINE Matrix& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::Matrix
operator =	external/Eigen/src/Core/NoAlias.h	/^    EIGEN_STRONG_INLINE ExpressionType& operator=(const StorageBase<OtherDerived>& other)$/;"	f	class:Eigen::NoAlias
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase& other)$/;"	f	class:Eigen::PermutationBase
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const PermutationBase<OtherDerived>& other)$/;"	f	class:Eigen::PermutationBase
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& tr)$/;"	f	class:Eigen::PermutationBase
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::Map
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    Map& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::Map
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationBase<Other>& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const PermutationMatrix& other)$/;"	f	class:Eigen::PermutationMatrix
operator =	external/Eigen/src/Core/PermutationMatrix.h	/^    PermutationMatrix& operator=(const TranspositionsBase<Other>& tr)$/;"	f	class:Eigen::PermutationMatrix
operator =	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::PlainObjectBase
operator =	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const PlainObjectBase& other)$/;"	f	class:Eigen::PlainObjectBase
operator =	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Derived& operator=(const ReturnByValue<OtherDerived>& func)$/;"	f	class:Eigen::PlainObjectBase
operator =	external/Eigen/src/Core/ReturnByValue.h	/^      Unusable& operator=(const Unusable&) {return *this;}$/;"	f	class:Eigen::ReturnByValue::Unusable
operator =	external/Eigen/src/Core/ReturnByValue.h	/^Derived& DenseBase<Derived>::operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
operator =	external/Eigen/src/Core/SelfAdjointView.h	/^    SelfAdjointView& operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SelfAdjointView
operator =	external/Eigen/src/Core/SelfAdjointView.h	/^    SelfAdjointView& operator=(const TriangularView<OtherMatrixType, OtherMode>& other)$/;"	f	class:Eigen::SelfAdjointView
operator =	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    SelfCwiseBinaryOp& operator=(const Rhs& _rhs)$/;"	f	class:Eigen::SelfCwiseBinaryOp
operator =	external/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	external/Eigen/src/Core/Transpositions.h	/^    Derived& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsBase
operator =	external/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const Map& other)$/;"	f	class:Eigen::Map
operator =	external/Eigen/src/Core/Transpositions.h	/^    Map& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Map
operator =	external/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const Transpositions& other)$/;"	f	class:Eigen::Transpositions
operator =	external/Eigen/src/Core/Transpositions.h	/^    Transpositions& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::Transpositions
operator =	external/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsBase<OtherDerived>& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	external/Eigen/src/Core/Transpositions.h	/^    TranspositionsWrapper& operator=(const TranspositionsWrapper& other)$/;"	f	class:Eigen::TranspositionsWrapper
operator =	external/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator=(const ProductBase<ProductDerived, Lhs,Rhs>& other)$/;"	f	class:Eigen::TriangularView
operator =	external/Eigen/src/Core/TriangularMatrix.h	/^    EIGEN_STRONG_INLINE TriangularView& operator=(const ScaledProduct<ProductDerived>& other)$/;"	f	class:Eigen::TriangularView
operator =	external/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& operator=(const TriangularView& other)$/;"	f	class:Eigen::TriangularView
operator =	external/Eigen/src/Core/TriangularMatrix.h	/^TriangularView<MatrixType, Mode>::operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
operator =	external/Eigen/src/Core/TriangularMatrix.h	/^TriangularView<MatrixType, Mode>::operator=(const TriangularBase<OtherDerived>& other)$/;"	f	class:Eigen::TriangularView
operator =	external/Eigen/src/Core/VectorwiseOp.h	/^    ExpressionType& operator=(const DenseBase<OtherDerived>& other)$/;"	f	class:Eigen::VectorwiseOp
operator =	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
operator =	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const QuaternionType& q)$/;"	f	class:Eigen::AngleAxis
operator =	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator=(const AngleAxisType& aa)$/;"	f	class:Eigen::Quaternion
operator =	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator=(const MatrixBase<Derived>& xpr)$/;"	f	class:Eigen::Quaternion
operator =	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::operator=(const Quaternion& other)$/;"	f	class:Eigen::Quaternion
operator =	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^::operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
operator =	external/Eigen/src/Eigen2Support/Geometry/Scaling.h	/^  inline Scaling& operator=(const Scaling& other)$/;"	f	class:Eigen::Scaling
operator =	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator=(const MatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline Transform& operator=(const Transform& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const QMatrix& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const QTransform& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const RotationBase<Derived,Dim>& r)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const ScalingType& s)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::operator=(const TranslationType& t)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  Translation& operator=(const Translation& other)$/;"	f	class:Eigen::Translation
operator =	external/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const MatrixBase<Derived>& mat)$/;"	f	class:Eigen::AngleAxis
operator =	external/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>& AngleAxis<Scalar>::operator=(const QuaternionBase<QuatDerived>& q)$/;"	f	class:Eigen::AngleAxis
operator =	external/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const AngleAxisType& aa)$/;"	f	class:Eigen::QuaternionBase
operator =	external/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE Derived& QuaternionBase<Derived>::operator=(const QuaternionBase<OtherDerived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	external/Eigen/src/Geometry/Quaternion.h	/^EIGEN_STRONG_INLINE QuaternionBase<Derived>& QuaternionBase<Derived>::operator=(const QuaternionBase<Derived>& other)$/;"	f	class:Eigen::QuaternionBase
operator =	external/Eigen/src/Geometry/Quaternion.h	/^inline Derived& QuaternionBase<Derived>::operator=(const MatrixBase<MatrixDerived>& xpr)$/;"	f	class:Eigen::QuaternionBase
operator =	external/Eigen/src/Geometry/RotationBase.h	/^::operator=(const RotationBase<OtherDerived,ColsAtCompileTime>& r)$/;"	f	class:Eigen::Matrix
operator =	external/Eigen/src/Geometry/Transform.h	/^  Transform& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Transform.h	/^  inline Transform& operator=(const Transform& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QMatrix& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const QTransform& other)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const RotationBase<Derived,Dim>& r)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const TranslationType& t)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::operator=(const UniformScaling<Scalar>& s)$/;"	f	class:Eigen::Transform
operator =	external/Eigen/src/Geometry/Translation.h	/^  Translation& operator=(const Translation& other)$/;"	f	class:Eigen::Translation
operator =	external/Eigen/src/SparseCore/CompressedStorage.h	/^    CompressedStorage& operator=(const CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
operator =	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline SparseInnerVectorSet& operator=(const SparseInnerVectorSet& other)$/;"	f	class:Eigen::SparseInnerVectorSet
operator =	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline SparseInnerVectorSet& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseInnerVectorSet
operator =	external/Eigen/src/SparseCore/SparseMatrix.h	/^    EIGEN_DONT_INLINE SparseMatrix& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const EigenBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrix
operator =	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
operator =	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline SparseMatrix& operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseMatrix
operator =	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& operator=(const EigenBase<OtherDerived> &other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Derived& operator=(const ReturnByValue<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& operator=(const Derived& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Derived& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseMatrixBase
operator =	external/Eigen/src/SparseCore/SparseProduct.h	/^inline Derived& SparseMatrixBase<Derived>::operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseMatrixBase
operator =	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSelfAdjointView<SrcMatrixType,SrcUpLo>& src)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSelfAdjointView& operator=(const SparseSymmetricPermutationProduct<SrcMatrixType,SrcUpLo>& permutedMatrix)$/;"	f	class:Eigen::SparseSelfAdjointView
operator =	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseVector
operator =	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseSparseProduct<Lhs,Rhs>& product)$/;"	f	class:Eigen::SparseVector
operator =	external/Eigen/src/SparseCore/SparseVector.h	/^    inline SparseVector& operator=(const SparseVector& other)$/;"	f	class:Eigen::SparseVector
operator =	external/Eigen/src/StlSupport/details.h	/^    inline T& operator=(const OtherT& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	external/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support& operator=(const workaround_msvc_stl_support& other)$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator =	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  SluMatrix& operator=(const SluMatrix& other)$/;"	f	struct:Eigen::SluMatrix
operator =	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator=(const AutoDiffScalar& other)$/;"	f	class:Eigen::AutoDiffScalar
operator =	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline AutoDiffScalar& operator=(const AutoDiffScalar<OtherDerType>& other)$/;"	f	class:Eigen::AutoDiffScalar
operator =	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator=(const AutoDiffVector& other)$/;"	f	class:Eigen::AutoDiffVector
operator =	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline AutoDiffVector& operator=(const AutoDiffVector<OtherValueType, OtherJacobianType>& other)$/;"	f	class:Eigen::AutoDiffVector
operator =	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  minimizer_helper1& operator=(const minimizer_helper1&) {}$/;"	f	struct:Eigen::internal::minimizer_helper1
operator =	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^            inline SkylineMatrix & operator=(const SkylineMatrixBase<OtherDerived>& other) {$/;"	f	class:Eigen::SkylineMatrix
operator =	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline SkylineMatrix & operator=(const SkylineMatrix & other) {$/;"	f	class:Eigen::SkylineMatrix
operator =	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^            inline Derived & operator=(const SkylineMatrixBase<OtherDerived>& other) {$/;"	f	class:Eigen::SkylineMatrixBase
operator =	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Derived & operator=(const Derived& other) {$/;"	f	class:Eigen::SkylineMatrixBase
operator =	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    SkylineStorage & operator=(const SkylineStorage& other) {$/;"	f	class:Eigen::SkylineStorage
operator =	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    inline SparseInnerVectorSet& operator=(const SparseInnerVectorSet& other)$/;"	f	class:Eigen::SparseInnerVectorSet
operator =	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    inline SparseInnerVectorSet& operator=(const SparseMatrixBase<OtherDerived>& other)$/;"	f	class:Eigen::SparseInnerVectorSet
operator =	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline DynamicSparseMatrix& operator=(const DynamicSparseMatrix& other)$/;"	f	class:Eigen::DynamicSparseMatrix
operator =	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal& mpreal::operator=(const char* s)$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const double v)				$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const int v)$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const long double v)		$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const long int v)			$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpf_t v)$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpq_t v)$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpreal& v)$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const mpz_t v)$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const unsigned int v)		$/;"	f	class:mpfr::mpreal
operator =	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator=(const unsigned long int v)	$/;"	f	class:mpfr::mpreal
operator ==	external/Eigen/src/Core/MatrixBase.h	/^    inline bool operator==(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::MatrixBase
operator ==	external/Eigen/src/Core/util/Memory.h	/^    bool operator==(const aligned_allocator<T>& ) const$/;"	f	class:Eigen::aligned_allocator
operator ==	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator==(Scalar s) const$/;"	f	class:Eigen::Cwise
operator ==	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator==(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator ==	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator==(const Scalar& a, const AutoDiffScalar& b) { return a == b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator ==	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator==(const Scalar& other) const  { return m_value == other; }$/;"	f	class:Eigen::AutoDiffScalar
operator ==	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator==(const AutoDiffScalar<OtherDerType>& b) const  { return m_value == b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator ==	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const double b			){	return (mpfr_cmp_d(a.mp,b)  == 0);	}$/;"	f	namespace:mpfr
operator ==	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const int b				){	return (mpfr_cmp_si(a.mp,b) == 0);	}$/;"	f	namespace:mpfr
operator ==	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const long double b		){	return (mpfr_cmp_ld(a.mp,b) == 0);	}$/;"	f	namespace:mpfr
operator ==	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const long int b			){	return (mpfr_cmp_si(a.mp,b) == 0);	}$/;"	f	namespace:mpfr
operator ==	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const mpreal& b){	return (mpfr_equal_p(a.mp,b.mp)			!=0);	}$/;"	f	namespace:mpfr
operator ==	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const unsigned int b		){	return (mpfr_cmp_ui(a.mp,b) == 0);	}$/;"	f	namespace:mpfr
operator ==	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator == (const mpreal& a, const unsigned long int b	){	return (mpfr_cmp_ui(a.mp,b) == 0);	}$/;"	f	namespace:mpfr
operator >	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>(Scalar s) const$/;"	f	class:Eigen::Cwise
operator >	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator >	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator> (const Scalar& a, const AutoDiffScalar& b) { return a >  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator> (const Scalar& other) const  { return m_value >  other; }$/;"	f	class:Eigen::AutoDiffScalar
operator >	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator> (const AutoDiffScalar<OtherDerType>& b) const  { return m_value >  b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator >	(const mpreal& a, const mpreal& b){	return (mpfr_greater_p(a.mp,b.mp)		!=0);	}$/;"	f	namespace:mpfr
operator >=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>=(Scalar s) const$/;"	f	class:Eigen::Cwise
operator >=	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::operator>=(const MatrixBase<OtherDerived> &other) const$/;"	f	class:Eigen::Cwise
operator >=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    friend inline bool operator>=(const Scalar& a, const AutoDiffScalar& b) { return a >= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline bool operator>=(const Scalar& other) const  { return m_value >= other; }$/;"	f	class:Eigen::AutoDiffScalar
operator >=	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    template<typename OtherDerType> inline bool operator>=(const AutoDiffScalar<OtherDerType>& b) const  { return m_value >= b.value(); }$/;"	f	class:Eigen::AutoDiffScalar
operator >=	external/unsupported/test/mpreal/mpreal.h	/^inline bool operator >= (const mpreal& a, const mpreal& b){	return (mpfr_greaterequal_p(a.mp,b.mp)	!=0);	}$/;"	f	namespace:mpfr
operator >>	external/unsupported/test/mpreal/mpreal.cpp	/^istream& operator>>(istream &is, mpreal& v)$/;"	f	namespace:mpfr
operator >>	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const int k)$/;"	f	namespace:mpfr
operator >>	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const long int k)$/;"	f	namespace:mpfr
operator >>	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const unsigned int k)$/;"	f	namespace:mpfr
operator >>	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal operator>>(const mpreal& v, const unsigned long int k)$/;"	f	namespace:mpfr
operator >>=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const int u)$/;"	f	class:mpfr::mpreal
operator >>=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const long int u)$/;"	f	class:mpfr::mpreal
operator >>=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const unsigned int u)$/;"	f	class:mpfr::mpreal
operator >>=	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::operator>>=(const unsigned long int u)$/;"	f	class:mpfr::mpreal
operator T&	external/Eigen/src/StlSupport/details.h	/^    inline operator T& () { return *static_cast<T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator []	external/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
operator []	external/Eigen/src/Core/DenseCoeffsBase.h	/^    operator[](Index index)$/;"	f	class:Eigen::DenseCoeffsBase
operator []	external/Eigen/src/Core/Transpositions.h	/^    inline Index& operator[](Index i) { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	external/Eigen/src/Core/Transpositions.h	/^    inline const Index& operator[](Index i) const { return indices()(i); }$/;"	f	class:Eigen::TranspositionsBase
operator []	external/Eigen/src/SparseCore/SparseMatrix.h	/^        Index operator[](Index i) const { return i==m_index ? m_value : 0; }$/;"	f	class:Eigen::SparseMatrix::SingletonVector
operator []	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    CoeffType operator[] (Index i) { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator []	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    const CoeffType operator[] (Index i) const { return CoeffType(m_values[i], m_jacobian.col(i)); }$/;"	f	class:Eigen::AutoDiffVector
operator bool	external/Eigen/src/SparseCore/AmbiVector.h	/^    operator bool() const { return m_cachedIndex>=0; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
operator bool	external/Eigen/src/SparseCore/CoreIterators.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_inner < m_end && m_inner>=0; }$/;"	f	class:Eigen::DenseBase::InnerIterator
operator bool	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline operator bool() const { return (m_id < m_end) && (m_id>=m_start); }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
operator bool	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline operator bool() const { return (m_id <= m_end) && (m_id>m_start); }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
operator bool	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return (m_lhsIter && m_rhsIter); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_id>=0; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_lhsIter; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE operator bool() const { return m_rhsIter; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
operator bool	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
operator bool	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
operator bool	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
operator bool	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    EIGEN_STRONG_INLINE operator bool() const$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
operator bool	external/Eigen/src/SparseCore/SparseVector.h	/^    inline operator bool() const { return (m_id < m_end); }$/;"	f	class:Eigen::SparseVector::InnerIterator
operator bool	external/Eigen/src/SparseCore/SparseVector.h	/^    inline operator bool() const { return (m_id > m_start); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
operator bool	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline operator bool() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
operator bool	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline operator bool() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
operator bool	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline operator bool() const { return m_isvalid;}$/;"	f	class:Eigen::MatrixMarketIterator
operator const ExpressionType&	external/Eigen/src/Core/ForceAlignedAccess.h	/^    operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::ForceAlignedAccess
operator const ExpressionType&	external/Eigen/src/Core/NestByValue.h	/^    operator const ExpressionType&() const { return m_expression; }$/;"	f	class:Eigen::NestByValue
operator const PlainObject&	external/Eigen/src/Core/ProductBase.h	/^    operator const PlainObject& () const$/;"	f	class:Eigen::ProductBase
operator const PlainObject&	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE operator const PlainObject& () const$/;"	f	class:Eigen::CoeffBasedProduct
operator const T&	external/Eigen/src/StlSupport/details.h	/^    inline operator const T& () const { return *static_cast<const T*>(this); }$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
operator const typename Base::Scalar	external/Eigen/src/Core/GeneralProduct.h	/^    operator const typename Base::Scalar() const {$/;"	f	class:Eigen::GeneralProduct
operator ||	external/Eigen/src/plugins/ArrayCwiseBinaryOps.h	/^operator||(const EIGEN_CURRENT_STORAGE_BASE_CLASS<OtherDerived> &other) const$/;"	f
operatorInverseSqrt	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorInverseSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
operatorNorm	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^MatrixBase<Derived>::operatorNorm() const$/;"	f	class:Eigen::MatrixBase
operatorNorm	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^SelfAdjointView<MatrixType, UpLo>::operatorNorm() const$/;"	f	class:Eigen::SelfAdjointView
operatorSqrt	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^    MatrixType operatorSqrt() const$/;"	f	class:Eigen::SelfAdjointEigenSolver
options	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline superlu_options_t& options() { return m_sluOptions; }$/;"	f	class:Eigen::SuperLUBase
ordblks	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE ordblks;  \/* number of free chunks *\/$/;"	m	struct:mallinfo	file:
ordblks	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE ordblks;  \/* number of free chunks *\/$/;"	m	struct:mallinfo
order_for_lu	external/SuiteSparse/Include/cholmod_core.h	/^	int order_for_lu ;  \/* CCOLAMD can be optimized to produce an ordering$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
ordering	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^void SimplicialCholeskyBase<Derived>::ordering(const MatrixType& a, CholMatrixType& ap)$/;"	f	class:Eigen::SimplicialCholeskyBase
ordering	external/SuiteSparse/Include/cholmod_core.h	/^	int ordering ;$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
ordering	external/SuiteSparse/Include/cholmod_core.h	/^    int ordering ;	\/* ordering method used *\/$/;"	m	struct:cholmod_factor_struct
orderingMethod	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    int orderingMethod() const {$/;"	f	class:Eigen::SkylineInplaceLU
origin	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType& origin() { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  const VectorType& origin() const { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	external/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType& origin() { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
origin	external/Eigen/src/Geometry/ParametrizedLine.h	/^  const VectorType& origin() const { return m_origin; }$/;"	f	class:Eigen::ParametrizedLine
originalMatrix	external/Eigen/src/misc/Image.h	/^  inline const MatrixType& originalMatrix() const { return m_originalMatrix; }$/;"	f	struct:Eigen::internal::image_retval_base
other	external/Eigen/src/Core/util/Memory.h	/^        typedef aligned_allocator<U> other;$/;"	t	struct:Eigen::aligned_allocator::rebind
other	external/Eigen/src/StlSupport/details.h	/^      typedef aligned_allocator_indirection<U> other;$/;"	t	struct:Eigen::aligned_allocator_indirection::rebind
other1	external/SuiteSparse/Include/cholmod_core.h	/^    double other1 [10] ;        \/* [0..9] for CHOLMOD GPU\/CPU numerical$/;"	m	struct:cholmod_common_struct
other2	external/SuiteSparse/Include/cholmod_core.h	/^    SuiteSparse_long other2 [6] ;        \/* unused (for future expansion) *\/$/;"	m	struct:cholmod_common_struct
other3	external/SuiteSparse/Include/cholmod_core.h	/^    int other3 [10] ;           \/* unused (for future expansion) *\/$/;"	m	struct:cholmod_common_struct
other4	external/SuiteSparse/Include/cholmod_core.h	/^    size_t  other4 [16] ;    \/* [0..7] for CHOLMOD GPU\/CPU numerical$/;"	m	struct:cholmod_common_struct
other5	external/SuiteSparse/Include/cholmod_core.h	/^    void   *other5 [16] ;    \/* unused (for future expansion) *\/$/;"	m	struct:cholmod_common_struct
other_1	external/SuiteSparse/Include/cholmod_core.h	/^	double other_1 [4] ; \/* future expansion *\/$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
other_2	external/SuiteSparse/Include/cholmod_core.h	/^	size_t other_2 [4] ; \/* future expansion *\/$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
other_3	external/SuiteSparse/Include/cholmod_core.h	/^	size_t other_3 [4] ; \/* future expansion *\/$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
outer	external/Eigen/src/Core/Assign.h	/^    outer = Index \/ Derived1::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling::__anon12
outer	external/Eigen/src/Core/Assign.h	/^    outer = Index \/ Derived1::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::assign_innervec_CompleteUnrolling::__anon13
outer	external/Eigen/src/Core/Redux.h	/^    outer = Start \/ Derived::InnerSizeAtCompileTime,$/;"	e	enum:Eigen::internal::redux_novec_unroller::__anon173
outer	external/Eigen/src/Core/Redux.h	/^    outer = index \/ int(Derived::InnerSizeAtCompileTime),$/;"	e	enum:Eigen::internal::redux_vec_unroller::__anon175
outer	external/Eigen/src/Core/Stride.h	/^    inline Index outer() const { return m_outer.value(); }$/;"	f	class:Eigen::Stride
outer	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
outer	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
outer	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
outer	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outer() const { return m_outer; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
outerInd	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    int *outerInd;$/;"	m	struct:Eigen::SluMatrix::__anon439
outerIndexPtr	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index* outerIndexPtr() { return m_outerIndex; }$/;"	f	class:Eigen::MappedSparseMatrix
outerIndexPtr	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline const Index* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::MappedSparseMatrix
outerIndexPtr	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline Index* outerIndexPtr()$/;"	f	class:Eigen::SparseInnerVectorSet
outerIndexPtr	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Index* outerIndexPtr() const$/;"	f	class:Eigen::SparseInnerVectorSet
outerIndexPtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index* outerIndexPtr() { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerIndexPtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Index* outerIndexPtr() const { return m_outerIndex; }$/;"	f	class:Eigen::SparseMatrix
outerSize	external/Eigen/src/Core/DenseBase.h	/^    Index outerSize() const$/;"	f	class:Eigen::DenseBase
outerSize	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
outerSize	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index outerSize() const { return m_outerSize; }$/;"	f	class:Eigen::SparseMatrix
outerSize	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Index outerSize() const { return (int(Flags)&RowMajorBit) ? this->rows() : this->cols(); }$/;"	f	class:Eigen::SparseMatrixBase
outerSize	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index outerSize() const { return 1; }$/;"	f	class:Eigen::SparseVector
outerSize	external/Eigen/src/SparseCore/SparseView.h	/^  inline Index outerSize() const { return m_matrix.outerSize(); }$/;"	f	class:Eigen::SparseView
outerSize	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index outerSize() const {$/;"	f	class:Eigen::SkylineMatrix
outerSize	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Index outerSize() const {$/;"	f	class:Eigen::SkylineMatrixBase
outerSize	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index outerSize() const { return static_cast<Index>(m_data.size()); }$/;"	f	class:Eigen::DynamicSparseMatrix
outerStride	external/Eigen/src/Core/Array.h	/^    inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Array
outerStride	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ArrayWrapper
outerStride	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::MatrixWrapper
outerStride	external/Eigen/src/Core/Block.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Block
outerStride	external/Eigen/src/Core/CwiseUnaryView.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::CwiseUnaryViewImpl
outerStride	external/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::DenseCoeffsBase
outerStride	external/Eigen/src/Core/Diagonal.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Diagonal
outerStride	external/Eigen/src/Core/Flagged.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::Flagged
outerStride	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::ForceAlignedAccess
outerStride	external/Eigen/src/Core/Map.h	/^    inline Index outerStride() const$/;"	f	class:Eigen::Map
outerStride	external/Eigen/src/Core/Matrix.h	/^    inline Index outerStride() const { return this->innerSize(); }$/;"	f	class:Eigen::Matrix
outerStride	external/Eigen/src/Core/NestByValue.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::NestByValue
outerStride	external/Eigen/src/Core/SelfAdjointView.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::SelfAdjointView
outerStride	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
outerStride	external/Eigen/src/Core/Swap.h	/^    inline Index outerStride() const { return m_expression.outerStride(); }$/;"	f	class:Eigen::SwapWrapper
outerStride	external/Eigen/src/Core/Transpose.h	/^    inline Index outerStride() const { return derived().nestedExpression().outerStride(); }$/;"	f	class:Eigen::TransposeImpl
outerStride	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return derived().outerStride(); }$/;"	f	class:Eigen::TriangularBase
outerStride	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index outerStride() const { return m_matrix.outerStride(); }$/;"	f	class:Eigen::TriangularView
outer_product_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<> struct outer_product_selector<ColMajor> {$/;"	s	namespace:Eigen::internal
outer_product_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<> struct outer_product_selector<RowMajor> {$/;"	s	namespace:Eigen::internal
outer_stride_at_compile_time	external/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time$/;"	s	namespace:Eigen::internal
outer_stride_at_compile_time	external/Eigen/src/Core/DenseCoeffsBase.h	/^struct outer_stride_at_compile_time<Derived, false>$/;"	s	namespace:Eigen::internal
output_traj_	OptApp.h	/^	RGBDTrajectory output_traj_;$/;"	m	class:COptApp
overhead_for	external/unsupported/test/mpreal/dlmalloc.c	2163;"	d	file:
p	external/SuiteSparse/Include/cholmod_core.h	/^    void *p ;		\/* p [0..ncol], the column pointers *\/$/;"	m	struct:cholmod_factor_struct
p	external/SuiteSparse/Include/cholmod_core.h	/^    void *p ;		\/* p [0..ncol], the column pointers *\/$/;"	m	struct:cholmod_sparse_struct
p	external/unsupported/test/BVH.cpp	/^  VectorType p;$/;"	m	struct:BallPointStuff	file:
p16uc_COMPLEX_IM	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_IM   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 1), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 3), 8);\/\/{ 4,5,6,7, 4,5,6,7, 12,13,14,15, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX_RE	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_RE   = vec_sld((Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet16uc) vec_splat((Packet4ui)p16uc_FORWARD, 2), 8);\/\/{ 0,1,2,3, 0,1,2,3, 8,9,10,11, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX_REV	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_REV  = vec_sld(p16uc_REVERSE, p16uc_REVERSE, 8);\/\/{ 4,5,6,7, 0,1,2,3, 12,13,14,15, 8,9,10,11 };$/;"	m	namespace:Eigen::internal
p16uc_COMPLEX_REV2	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_COMPLEX_REV2 = vec_sld(p16uc_FORWARD, p16uc_FORWARD, 8);\/\/{ 8,9,10,11, 12,13,14,15, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_DUPLICATE	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_DUPLICATE = {0,1,2,3, 0,1,2,3, 4,5,6,7, 4,5,6,7};$/;"	m	namespace:Eigen::internal
p16uc_FORWARD	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_FORWARD = vec_lvsl(0, (float*)0);$/;"	m	namespace:Eigen::internal
p16uc_PSET_HI	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_PSET_HI = (Packet16uc) vec_mergeh((Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 0), (Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 1));\/\/{ 0,1,2,3, 4,5,6,7, 0,1,2,3, 4,5,6,7 };$/;"	m	namespace:Eigen::internal
p16uc_PSET_LO	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet16uc p16uc_PSET_LO = (Packet16uc) vec_mergeh((Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 2), (Packet4ui) vec_splat((Packet4ui)p16uc_FORWARD, 3));\/\/{ 8,9,10,11, 12,13,14,15, 8,9,10,11, 12,13,14,15 };$/;"	m	namespace:Eigen::internal
p16uc_REVERSE	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet16uc p16uc_REVERSE = {12,13,14,15, 8,9,10,11, 4,5,6,7, 0,1,2,3};$/;"	m	namespace:Eigen::internal
p2ui_CONJ_XOR	external/Eigen/src/Core/arch/NEON/Complex.h	/^static uint32x2_t p2ui_CONJ_XOR = EIGEN_INIT_NEON_PACKET2(0x00000000, 0x80000000);$/;"	m	namespace:Eigen::internal
p4f_COUNTDOWN	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_COUNTDOWN = { 3.0, 2.0, 1.0, 0.0 };$/;"	m	namespace:Eigen::internal
p4f_ONE	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ONE = vec_ctf(p4i_ONE, 0);$/;"	m	namespace:Eigen::internal
p4f_ZERO_	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4f p4f_ZERO_ = (Packet4f) vec_sl((Packet4ui)p4i_MINUS1, (Packet4ui)p4i_MINUS1);$/;"	m	namespace:Eigen::internal
p4i_COUNTDOWN	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^static Packet4i p4i_COUNTDOWN = { 3, 2, 1, 0 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^static Packet4ui  p4ui_CONJ_XOR = vec_mergeh((Packet4ui)p4i_ZERO, (Packet4ui)p4f_ZERO_);\/\/{ 0x00000000, 0x80000000, 0x00000000, 0x80000000 };$/;"	m	namespace:Eigen::internal
p4ui_CONJ_XOR	external/Eigen/src/Core/arch/NEON/Complex.h	/^static uint32x4_t p4ui_CONJ_XOR = EIGEN_INIT_NEON_PACKET4(0x00000000, 0x80000000, 0x00000000, 0x80000000);$/;"	m	namespace:Eigen::internal
p_	PointCloud.h	/^	float p_[ 3 ];$/;"	m	struct:Point
pabs	external/Eigen/src/Core/GenericPacketMath.h	/^pabs(const Packet& a) { return abs(a); }$/;"	f	namespace:Eigen::internal
pabs	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vec_abs(a); }$/;"	f	namespace:Eigen::internal
pabs	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a) { return vabsq_f32(a); }$/;"	f	namespace:Eigen::internal
pabs	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a) { return vabsq_s32(a); }$/;"	f	namespace:Eigen::internal
pabs	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pabs(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pabs	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pabs(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pabs	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pabs(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pack	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  void pack(Scalar* blockA, const const_blas_data_mapper<Scalar,Index,StorageOrder>& lhs, Index cols, Index i, Index& count)$/;"	f	struct:Eigen::internal::symm_pack_lhs
packed	external/SuiteSparse/Include/cholmod_core.h	/^    int packed ;	\/* TRUE if packed (nz ignored), FALSE if unpacked$/;"	m	struct:cholmod_sparse_struct
packedMatrix	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    const MatrixType& packedMatrix() const$/;"	f	class:Eigen::HessenbergDecomposition
packedMatrix	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    inline const MatrixType& packedMatrix() const$/;"	f	class:Eigen::Tridiagonalization
packet	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ArrayWrapper
packet	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::MatrixWrapper
packet	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::ArrayWrapper
packet	external/Eigen/src/Core/ArrayWrapper.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::MatrixWrapper
packet	external/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::Block
packet	external/Eigen/src/Core/Block.h	/^    inline PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::Block
packet	external/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
packet	external/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::CwiseBinaryOpImpl
packet	external/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::CwiseNullaryOp
packet	external/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::CwiseNullaryOp
packet	external/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
packet	external/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::CwiseUnaryOpImpl
packet	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index index) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packet(Index row, Index col) const$/;"	f	class:Eigen::DenseCoeffsBase
packet	external/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::DiagonalProduct
packet	external/Eigen/src/Core/Flagged.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::Flagged
packet	external/Eigen/src/Core/Flagged.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::Flagged
packet	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::ForceAlignedAccess
packet	external/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index index) const$/;"	f	class:Eigen::MapBase
packet	external/Eigen/src/Core/MapBase.h	/^    inline PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::MapBase
packet	external/Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::NestByValue
packet	external/Eigen/src/Core/NestByValue.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::NestByValue
packet	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index index) const$/;"	f	class:Eigen::PlainObjectBase
packet	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::PlainObjectBase
packet	external/Eigen/src/Core/Replicate.h	/^    inline PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::Replicate
packet	external/Eigen/src/Core/Reverse.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::Reverse
packet	external/Eigen/src/Core/Reverse.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::Reverse
packet	external/Eigen/src/Core/Transpose.h	/^    inline const PacketScalar packet(Index index) const$/;"	f	class:Eigen::TransposeImpl
packet	external/Eigen/src/Core/Transpose.h	/^    inline const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::TransposeImpl
packet	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE const PacketScalar packet(Index row, Index col) const$/;"	f	class:Eigen::CoeffBasedProduct
packetByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE PacketReturnType packetByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index i) const { return impl.packetOp(i); }$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index i) const$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index row, Index col) const$/;"	f	struct:Eigen::internal::linspaced_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index) const { return m_base = padd(m_base,m_packetStep); }$/;"	f	struct:Eigen::internal::linspaced_op_impl
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(Index, Index = 0) const { return internal::pset1<Packet>(m_other); }$/;"	f	struct:Eigen::internal::scalar_constant_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const { return internal::pconj(a); }$/;"	f	struct:Eigen::internal::scalar_conjugate_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs2_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_abs_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_multiple_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_opposite_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_quotient1_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_conj_product_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_difference_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_max_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_min_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_product_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_quotient_op
packetOp	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Packet packetOp(const Packet& a, const Packet& b) const$/;"	f	struct:Eigen::internal::scalar_sum_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pacos(a); }$/;"	f	struct:Eigen::internal::scalar_acos_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pasin(a); }$/;"	f	struct:Eigen::internal::scalar_asin_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pcos(a); }$/;"	f	struct:Eigen::internal::scalar_cos_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::pexp(a); }$/;"	f	struct:Eigen::internal::scalar_exp_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::plog(a); }$/;"	f	struct:Eigen::internal::scalar_log_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::psin(a); }$/;"	f	struct:Eigen::internal::scalar_sin_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::psqrt(a); }$/;"	f	struct:Eigen::internal::scalar_sqrt_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline Packet packetOp(const Packet& a) const { return internal::ptan(a); }$/;"	f	struct:Eigen::internal::scalar_tan_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_add_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_cube_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_inverse_op
packetOp	external/Eigen/src/Core/Functors.h	/^  inline const Packet packetOp(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_square_op
packet_impl	external/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE PacketScalar packet_impl(Index row, Index col, Index id, internal::false_type) const$/;"	f	class:Eigen::DiagonalProduct
packet_impl	external/Eigen/src/Core/DiagonalProduct.h	/^    EIGEN_STRONG_INLINE PacketScalar packet_impl(Index row, Index col, Index id, internal::true_type) const$/;"	f	class:Eigen::DiagonalProduct
packet_traits	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename T> struct packet_traits : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<double> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct packet_traits<std::complex<float> >  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<double> : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<float>  : default_packet_traits$/;"	s	namespace:Eigen::internal
packet_traits	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct packet_traits<int>    : default_packet_traits$/;"	s	namespace:Eigen::internal
pacos	external/Eigen/src/Core/GenericPacketMath.h	/^Packet pacos(const Packet& a) { return acos(a); }$/;"	f	namespace:Eigen::internal
pad_request	external/unsupported/test/mpreal/dlmalloc.c	2102;"	d	file:
padd	external/Eigen/src/Core/GenericPacketMath.h	/^padd(const Packet& a,$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_add(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_add(a,b); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_add(a,b); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(padd<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return vaddq_f32(a,b); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return vaddq_s32(a,b); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd padd<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_add_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf padd<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_add_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d padd<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_add_pd(a,b); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f padd<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_add_ps(a,b); }$/;"	f	namespace:Eigen::internal
padd	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i padd<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_add_epi32(a,b); }$/;"	f	namespace:Eigen::internal
pade13	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^EIGEN_STRONG_INLINE void MatrixExponential<MatrixType>::pade13(const MatrixType &A)$/;"	f	class:Eigen::MatrixExponential
pade17	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^EIGEN_STRONG_INLINE void MatrixExponential<MatrixType>::pade17(const MatrixType &A)$/;"	f	class:Eigen::MatrixExponential
pade3	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^EIGEN_STRONG_INLINE void MatrixExponential<MatrixType>::pade3(const MatrixType &A)$/;"	f	class:Eigen::MatrixExponential
pade5	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^EIGEN_STRONG_INLINE void MatrixExponential<MatrixType>::pade5(const MatrixType &A)$/;"	f	class:Eigen::MatrixExponential
pade7	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^EIGEN_STRONG_INLINE void MatrixExponential<MatrixType>::pade7(const MatrixType &A)$/;"	f	class:Eigen::MatrixExponential
pade9	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^EIGEN_STRONG_INLINE void MatrixExponential<MatrixType>::pade9(const MatrixType &A)$/;"	f	class:Eigen::MatrixExponential
page_align	external/unsupported/test/mpreal/dlmalloc.c	2528;"	d	file:
page_size	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t page_size;$/;"	m	struct:malloc_params	file:
palign	external/Eigen/src/Core/GenericPacketMath.h	/^inline void palign(PacketType& first, const PacketType& second)$/;"	f	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/GenericPacketMath.h	/^struct palign_impl$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/NEON/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet1cd>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/SSE/Complex.h	/^struct palign_impl<Offset,Packet2cf>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet2d>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4f>$/;"	s	namespace:Eigen::internal
palign_impl	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^struct palign_impl<Offset,Packet4i>$/;"	s	namespace:Eigen::internal
pand	external/Eigen/src/Core/GenericPacketMath.h	/^pand(const Packet& a, const Packet& b) { return a & b; }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_and(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, b); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return vandq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pand   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_and_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pand   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_and_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pand<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_and_pd(a,b); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pand<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_and_ps(a,b); }$/;"	f	namespace:Eigen::internal
pand	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pand<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_and_si128(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/GenericPacketMath.h	/^pandnot(const Packet& a, const Packet& b) { return a & (!b); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_and(a.v, vec_nor(b.v,b.v))); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_and(a, vec_nor(b, b)); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return vbicq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pandnot<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_andnot_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pandnot<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_andnot_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pandnot<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_andnot_pd(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pandnot<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_andnot_ps(a,b); }$/;"	f	namespace:Eigen::internal
pandnot	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pandnot<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_andnot_si128(a,b); }$/;"	f	namespace:Eigen::internal
par	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar par, sum;$/;"	m	class:Eigen::LevenbergMarquardt
parallelize_gemm	external/Eigen/src/Core/products/Parallelizer.h	/^void parallelize_gemm(const Functor& func, Index rows, Index cols, bool transpose)$/;"	f	namespace:Eigen::internal
parameters	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Parameters parameters;$/;"	m	class:Eigen::HybridNonLinearSolver
parameters	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Parameters parameters;$/;"	m	class:Eigen::LevenbergMarquardt
pardisoInit	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoInit(int type)$/;"	f	class:Eigen::PardisoImpl
pardisoParameterArray	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ParameterType& pardisoParameterArray()$/;"	f	class:Eigen::PardisoImpl
pardisoRelease	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    void pardisoRelease()$/;"	f	class:Eigen::PardisoImpl
pardiso_run_selector	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector$/;"	s	namespace:Eigen::internal
pardiso_run_selector	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_run_selector<long long int>$/;"	s	namespace:Eigen::internal
pardiso_traits	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLDLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLLT<_MatrixType, Options> >$/;"	s	namespace:Eigen::internal
pardiso_traits	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^  struct pardiso_traits< PardisoLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
parent	external/unsupported/test/mpreal/dlmalloc.c	/^  struct malloc_tree_chunk* parent;$/;"	m	struct:malloc_tree_chunk	typeref:struct:malloc_tree_chunk::malloc_tree_chunk	file:
part	external/Eigen/src/Core/MatrixBase.h	/^    const DiagonalWrapper<ConstDiagonalReturnType> part() const$/;"	f	class:Eigen::MatrixBase
part	external/Eigen/src/Core/TriangularMatrix.h	/^const typename internal::eigen2_part_return_type<Derived, Mode>::type MatrixBase<Derived>::part() const$/;"	f	class:Eigen::MatrixBase
part	external/Eigen/src/Core/TriangularMatrix.h	/^typename internal::eigen2_part_return_type<Derived, Mode>::type MatrixBase<Derived>::part()$/;"	f	class:Eigen::MatrixBase
partialPivLu	external/Eigen/src/LU/PartialPivLU.h	/^MatrixBase<Derived>::partialPivLu() const$/;"	f	class:Eigen::MatrixBase
partial_lu_impl	external/Eigen/src/LU/PartialPivLU.h	/^struct partial_lu_impl$/;"	s	namespace:Eigen::internal
partial_lu_inplace	external/Eigen/src/LU/PartialPivLU.h	/^void partial_lu_inplace(MatrixType& lu, TranspositionType& row_transpositions, typename TranspositionType::Index& nb_transpositions)$/;"	f	namespace:Eigen::internal
partitionEigenvalues	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::partitionEigenvalues()$/;"	f	class:Eigen::MatrixFunction
pasin	external/Eigen/src/Core/GenericPacketMath.h	/^Packet pasin(const Packet& a) { return asin(a); }$/;"	f	namespace:Eigen::internal
pasin	external/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^template<> EIGEN_DONT_INLINE Packet4f pasin(Packet4f x)$/;"	f	namespace:Eigen::internal
pasin	external/unsupported/Eigen/src/MoreVectorization/MathFunctions.h	/^template<typename Packet> inline static Packet pasin(Packet a) { return std::asin(a); }$/;"	f	namespace:Eigen::internal
pastix_traits	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLDLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLLT<_MatrixType,Options> >$/;"	s	namespace:Eigen::internal
pastix_traits	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^  struct pastix_traits< PastixLU<_MatrixType> >$/;"	s	namespace:Eigen::internal
pconj	external/Eigen/src/Core/GenericPacketMath.h	/^pconj(const Packet& a) { return conj(a); }$/;"	f	namespace:Eigen::internal
pconj	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a) { return Packet2cf((Packet4f)vec_xor((Packet4ui)a.v, p4ui_CONJ_XOR)); }$/;"	f	namespace:Eigen::internal
pconj	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pconj(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pconj	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pconj(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pconj	external/Eigen/src/Core/util/BlasUtil.h	/^  inline T pconj(const T& x) { return internal::pconj(x); }$/;"	f	struct:Eigen::internal::conj_if
pconj	external/Eigen/src/Core/util/BlasUtil.h	/^  inline const T& pconj(const T& x) { return x; }$/;"	f	struct:Eigen::internal::conj_if
pcos	external/Eigen/src/Core/GenericPacketMath.h	/^Packet pcos(const Packet& a) { return cos(a); }$/;"	f	namespace:Eigen::internal
pcos	external/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pcos<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pcplxflip	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline Packet pcplxflip(const Packet& a)$/;"	f	namespace:Eigen::internal
pcplxflip	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pcplxflip	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pcplxflip<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pcplxflip	external/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet1cd pcplxflip\/*<Packet1cd>*\/(const Packet1cd& x)$/;"	f	namespace:Eigen::internal
pcplxflip	external/Eigen/src/Core/arch/SSE/Complex.h	/^EIGEN_STRONG_INLINE Packet2cf pcplxflip\/*<Packet2cf>*\/(const Packet2cf& x)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/GenericPacketMath.h	/^pdiv(const Packet& a,$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pdiv<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pdiv<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pdiv<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_div_pd(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pdiv<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_div_ps(a,b); }$/;"	f	namespace:Eigen::internal
pdiv	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pdiv<Packet4i>(const Packet4i& \/*a*\/, const Packet4i& \/*b*\/)$/;"	f	namespace:Eigen::internal
performFrancisQRStep	external/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::performFrancisQRStep(Index il, Index im, Index iu, bool computeU, const Vector3s& firstHouseholderVector, Scalar* workspace)$/;"	f	class:Eigen::RealSchur
permut_matrix_product_retval	external/Eigen/src/Core/PermutationMatrix.h	/^    permut_matrix_product_retval(const PermutationType& perm, const MatrixType& matrix)$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
permut_matrix_product_retval	external/Eigen/src/Core/PermutationMatrix.h	/^struct permut_matrix_product_retval$/;"	s	namespace:Eigen::internal
permut_sparsematrix_product_retval	external/Eigen/src/SparseCore/SparsePermutation.h	/^    permut_sparsematrix_product_retval(const PermutationType& perm, const MatrixType& matrix)$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
permut_sparsematrix_product_retval	external/Eigen/src/SparseCore/SparsePermutation.h	/^struct permut_sparsematrix_product_retval$/;"	s	namespace:Eigen::internal
permutation	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    PermutationMatrix<Dynamic,Dynamic> permutation;$/;"	m	class:Eigen::LevenbergMarquardt
permutationP	external/Eigen/src/LU/FullPivLU.h	/^    inline const PermutationPType& permutationP() const$/;"	f	class:Eigen::FullPivLU
permutationP	external/Eigen/src/LU/PartialPivLU.h	/^    inline const PermutationType& permutationP() const$/;"	f	class:Eigen::PartialPivLU
permutationP	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,Index>& permutationP() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationP	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::SuperLU
permutationP	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntColVectorType& permutationP() const$/;"	f	class:Eigen::UmfPackLU
permutationPinv	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    const PermutationMatrix<Dynamic,Dynamic,Index>& permutationPinv() const$/;"	f	class:Eigen::SimplicialCholeskyBase
permutationQ	external/Eigen/src/LU/FullPivLU.h	/^    inline const PermutationQType& permutationQ() const$/;"	f	class:Eigen::FullPivLU
permutationQ	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::SuperLU
permutationQ	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const IntRowVectorType& permutationQ() const$/;"	f	class:Eigen::UmfPackLU
permuteSchur	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::permuteSchur()$/;"	f	class:Eigen::MatrixFunction
permute_symm_to_fullsymm	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_fullsymm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DestOrder,typename MatrixType::Index>& _dest, const typename MatrixType::Index* perm)$/;"	f	namespace:Eigen::internal
permute_symm_to_symm	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^void permute_symm_to_symm(const MatrixType& mat, SparseMatrix<typename MatrixType::Scalar,DstOrder,typename MatrixType::Index>& _dest, const typename MatrixType::Index* perm)$/;"	f	namespace:Eigen::internal
pexp	external/Eigen/src/Core/GenericPacketMath.h	/^Packet pexp(const Packet& a) { return exp(a); }$/;"	f	namespace:Eigen::internal
pexp	external/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f pexp<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type pfirst(const Packet& a)$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x[4]; vec_st(a, 0, x); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x[4]; vec_st(a, 0, x); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float EIGEN_ALIGN16 x[4]; vst1q_f32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int   EIGEN_ALIGN16 x[4]; vst1q_s32(x, a); return x[0]; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double>  pfirst<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float>  pfirst<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { double x = _mm_cvtsd_f64(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return _mm_cvtsd_f64(a); }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double pfirst<Packet2d>(const Packet2d& a) { return a.m128d_f64[0]; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { float x = _mm_cvtss_f32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return _mm_cvtss_f32(a); }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float  pfirst<Packet4f>(const Packet4f& a) { return a.m128_f32[0]; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { int x = _mm_cvtsi128_si32(a); return x; }$/;"	f	namespace:Eigen::internal
pfirst	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int    pfirst<Packet4i>(const Packet4i& a) { return _mm_cvtsi128_si32(a); }$/;"	f	namespace:Eigen::internal
pi	external/SuiteSparse/Include/cholmod_core.h	/^    void *pi ;		\/* size nsuper+1, pointers to integer patterns *\/$/;"	m	struct:cholmod_factor_struct
pinuse	external/unsupported/test/mpreal/dlmalloc.c	2131;"	d	file:
plain_array	external/Eigen/src/Core/DenseStorage.h	/^  plain_array() { EIGEN_MAKE_UNALIGNED_ARRAY_ASSERT(0xf) }$/;"	f	struct:Eigen::internal::plain_array
plain_array	external/Eigen/src/Core/DenseStorage.h	/^  plain_array() {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	external/Eigen/src/Core/DenseStorage.h	/^  plain_array(constructor_without_unaligned_array_assert) {}$/;"	f	struct:Eigen::internal::plain_array
plain_array	external/Eigen/src/Core/DenseStorage.h	/^struct plain_array$/;"	s	namespace:Eigen::internal
plain_array	external/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, 0, MatrixOrArrayOptions, Alignment>$/;"	s	namespace:Eigen::internal
plain_array	external/Eigen/src/Core/DenseStorage.h	/^struct plain_array<T, Size, MatrixOrArrayOptions, 16>$/;"	s	namespace:Eigen::internal
plain_matrix_type	external/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct plain_matrix_type<T,Sparse>$/;"	s	namespace:Eigen::internal
pload	external/Eigen/src/Core/GenericPacketMath.h	/^pload(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from) { EIGEN_DEBUG_ALIGNED_LOAD return vec_ld(0, from); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return vec_ld(0, from); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float* from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*   from) { EIGEN_DEBUG_ALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pload <Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pload <Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_ALIGNED_LOAD return Packet2cf(pload<Packet4f>(&real_ref(*from))); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pload<Packet2d>(const double*  from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_pd(from); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pload<Packet4f>(const float*   from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_ps(from); }$/;"	f	namespace:Eigen::internal
pload	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pload<Packet4i>(const int*     from) { EIGEN_DEBUG_ALIGNED_LOAD return _mm_load_si128(reinterpret_cast<const Packet4i*>(from)); }$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/GenericPacketMath.h	/^ploaddup(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>*     from)$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploaddup<Packet1cd>(const std::complex<double>* from) { return pset1<Packet1cd>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploaddup<Packet2cf>(const std::complex<float>* from) { return pset1<Packet2cf>(*from); }$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploaddup<Packet2d>(const double*  from)$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploaddup<Packet4f>(const float*   from)$/;"	f	namespace:Eigen::internal
ploaddup	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploaddup<Packet4i>(const int*     from)$/;"	f	namespace:Eigen::internal
ploadt	external/Eigen/src/Core/GenericPacketMath.h	/^inline Packet ploadt(const typename unpacket_traits<Packet>::type* from)$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/GenericPacketMath.h	/^ploadu(const typename unpacket_traits<Packet>::type* from) { return *from; }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>((const float*)from)); }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from) { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_f32(from); }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)   { EIGEN_DEBUG_UNALIGNED_LOAD return vld1q_s32(from); }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd ploadu<Packet1cd>(const std::complex<double>* from)$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf ploadu<Packet2cf>(const std::complex<float>* from) { EIGEN_DEBUG_UNALIGNED_LOAD return Packet2cf(ploadu<Packet4f>(&real_ref(*from))); }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm_loadu_pd(from); }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float*  from) {$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int*    from) { EIGEN_DEBUG_UNALIGNED_LOAD return _mm_loadu_si128(reinterpret_cast<const Packet4i*>(from)); }$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d ploadu<Packet2d>(const double* from)$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f ploadu<Packet4f>(const float* from)$/;"	f	namespace:Eigen::internal
ploadu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i ploadu<Packet4i>(const int* from)$/;"	f	namespace:Eigen::internal
plog	external/Eigen/src/Core/GenericPacketMath.h	/^Packet plog(const Packet& a) { return log(a); }$/;"	f	namespace:Eigen::internal
plog	external/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f plog<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/GenericPacketMath.h	/^plset(const Scalar& a) { return a; }$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a) { return vec_add(pset1<Packet4f>(a), p4f_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a)     { return vec_add(pset1<Packet4i>(a), p4i_COUNTDOWN); }$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a)$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a)$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d plset<double>(const double& a) { return _mm_add_pd(pset1<Packet2d>(a),_mm_set_pd(1,0)); }$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f plset<float>(const float& a) { return _mm_add_ps(pset1<Packet4f>(a), _mm_set_ps(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
plset	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i plset<int>(const int& a) { return _mm_add_epi32(pset1<Packet4i>(a),_mm_set_epi32(3,2,1,0)); }$/;"	f	namespace:Eigen::internal
pmadd	external/Eigen/src/Core/GenericPacketMath.h	/^pmadd(const Packet&  a,$/;"	f	namespace:Eigen::internal
pmadd	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vec_madd(a, b, c); }$/;"	f	namespace:Eigen::internal
pmadd	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	external/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmadd(const Packet4f& a, const Packet4f& b, const Packet4f& c) { return vmlaq_f32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return vmlaq_s32(c,a,b); }$/;"	f	namespace:Eigen::internal
pmadd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet1cd& x, const Packet2d& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmadd(const Packet2d& x, const Packet1cd& y, const Packet1cd& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet2cf& x, const Packet4f& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmadd(const Packet4f& x, const Packet2cf& y, const Packet2cf& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmadd(const Packet4i& a, const Packet4i& b, const Packet4i& c) { return padd(pmul(a,b), c); }$/;"	f	namespace:Eigen::internal
pmadd	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const RealScalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const RealScalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const { return internal::pmadd(x,y,c); }$/;"	f	struct:Eigen::internal::conj_helper
pmadd	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmadd(const Scalar& x, const Scalar& y, const Scalar& c) const$/;"	f	struct:Eigen::internal::conj_helper
pmax	external/Eigen/src/Core/GenericPacketMath.h	/^pmax(const Packet& a,$/;"	f	namespace:Eigen::internal
pmax	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_max(a, b); }$/;"	f	namespace:Eigen::internal
pmax	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmaxq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmaxq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmax	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmax<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_max_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmax	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmax<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_max_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmax	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmax<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/GenericPacketMath.h	/^pmin(const Packet& a,$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_min(a, b); }$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return vminq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b) { return vminq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmin<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_min_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmin<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_min_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmin	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmin<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/GenericPacketMath.h	/^pmul(const Packet& a,$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<double> pmul(const std::complex<double>& a, const std::complex<double>& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/GenericPacketMath.h	/^template<> inline std::complex<float> pmul(const std::complex<float>& a, const std::complex<float>& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_madd(a,b,p4f_ZERO); }$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return vmulq_f32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b) { return vmulq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& a, const Packet1cd& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet1cd& x, const Packet2d& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet1cd pmul(const Packet2d& x, const Packet1cd& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& a, const Packet2cf& b) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet2cf& x, const Packet4f& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^  EIGEN_STRONG_INLINE Packet2cf pmul(const Packet4f& x, const Packet2cf& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pmul<Packet1cd>(const Packet1cd& a, const Packet1cd& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pmul<Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pmul<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_mul_pd(a,b); }$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pmul<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_mul_ps(a,b); }$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pmul<Packet4i>(const Packet4i& a, const Packet4i& b)$/;"	f	namespace:Eigen::internal
pmul	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const RealScalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const RealScalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const { return internal::pmul(x,y); }$/;"	f	struct:Eigen::internal::conj_helper
pmul	external/Eigen/src/Core/util/BlasUtil.h	/^  EIGEN_STRONG_INLINE Scalar pmul(const Scalar& x, const Scalar& y) const$/;"	f	struct:Eigen::internal::conj_helper
pnegate	external/Eigen/src/Core/GenericPacketMath.h	/^pnegate(const Packet& a) { return -a; }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return psub<Packet4f>(p4f_ZERO, a); }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return psub<Packet4i>(p4i_ZERO, a); }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a) { return Packet2cf(pnegate<Packet4f>(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a) { return vnegq_f32(a); }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a) { return vnegq_s32(a); }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pnegate(const Packet1cd& a) { return Packet1cd(pnegate(a.v)); }$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pnegate(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pnegate(const Packet2d& a)$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pnegate(const Packet4f& a)$/;"	f	namespace:Eigen::internal
pnegate	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pnegate(const Packet4i& a)$/;"	f	namespace:Eigen::internal
pnorm	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar pnorm, xnorm, fnorm1;$/;"	m	class:Eigen::HybridNonLinearSolver
pnorm	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
pointAt	external/Eigen/src/Geometry/ParametrizedLine.h	/^ParametrizedLine<_Scalar, _AmbientDim,_Options>::pointAt( _Scalar t ) const$/;"	f	class:Eigen::ParametrizedLine
pointclouds_	OptApp.h	/^	std::vector< PointCloud > pointclouds_;$/;"	m	class:COptApp
pointer	external/Eigen/src/Core/util/Memory.h	/^    typedef T*        pointer;$/;"	t	class:Eigen::aligned_allocator
pointer	external/Eigen/src/StlSupport/details.h	/^    typedef T*        pointer;$/;"	t	class:Eigen::aligned_allocator_indirection
points_	PointCloud.h	/^	std::vector< Point > points_;$/;"	m	class:PointCloud
poly_eval	external/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^T poly_eval( const Polynomials& poly, const T& x )$/;"	f	namespace:Eigen
poly_eval_horner	external/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^T poly_eval_horner( const Polynomials& poly, const T& x )$/;"	f	namespace:Eigen
polynomialsolver	external/unsupported/test/polynomialsolver.cpp	/^void polynomialsolver(int deg)$/;"	f
por	external/Eigen/src/Core/GenericPacketMath.h	/^por(const Packet& a, const Packet& b) { return a | b; }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_or(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_or(a, b); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return vorrq_s32(a,b); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd por    <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_or_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf por    <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_or_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d por<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_or_pd(a,b); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f por<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_or_ps(a,b); }$/;"	f	namespace:Eigen::internal
por	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i por<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_or_si128(a,b); }$/;"	f	namespace:Eigen::internal
pose_	OptApp.h	/^	std::vector< Eigen::Matrix4d > pose_;$/;"	m	class:COptApp
pose_filename_	OptApp.h	/^	std::string pose_filename_;$/;"	m	class:COptApp
pose_rot_t_	OptApp.h	/^	std::vector< Eigen::Matrix3d > pose_rot_t_;$/;"	m	class:COptApp
postorder	external/SuiteSparse/Include/cholmod_core.h	/^    int postorder ;	\/* If TRUE, cholmod_analyze follows the ordering with a$/;"	m	struct:cholmod_common_struct
pow	external/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const Eigen::ArrayBase<Derived>& exponents) $/;"	f	namespace:std
pow	external/Eigen/src/Core/GlobalFunctions.h	/^  pow(const Eigen::ArrayBase<Derived>& x, const typename Derived::Scalar& exponent) {$/;"	f	namespace:std
pow	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(pow, Scalar) pow(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
pow	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::pow(const Scalar& exponent) const$/;"	f	class:Eigen::Cwise
pow	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^pow(const Scalar& exponent) const$/;"	f
pow	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^pow(const Eigen::AutoDiffScalar<DerType>& x, typename Eigen::internal::traits<DerType>::Scalar y)$/;"	f	namespace:Eigen
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const double a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long double a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const long int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const mpz_t b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const mpreal& a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const long double b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const mpreal& b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const unsigned int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal pow(const unsigned long int a, const unsigned long int b, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
pow_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct pow_default_impl$/;"	s	namespace:Eigen::internal
pow_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct pow_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
pow_impl	external/Eigen/src/Core/MathFunctions.h	/^struct pow_impl : pow_default_impl<Scalar, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
pow_retval	external/Eigen/src/Core/MathFunctions.h	/^struct pow_retval$/;"	s	namespace:Eigen::internal
precise	external/SuiteSparse/Include/cholmod_core.h	/^    int precise ;	\/* if TRUE, print 16 digits.  Otherwise print 5 *\/$/;"	m	struct:cholmod_common_struct
precision	external/Eigen/src/Core/IO.h	/^  int precision;$/;"	m	struct:Eigen::IOFormat
precision	external/Eigen/src/Eigen2Support/MathFunctions.h	/^template<typename T> inline T precision () { return NumTraits<T>::dummy_precision(); }$/;"	f	namespace:Eigen
precision	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    RealScalar precision() const {$/;"	f	class:Eigen::SkylineInplaceLU
preconditioner	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Preconditioner& preconditioner() { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
preconditioner	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  const Preconditioner& preconditioner() const { return m_preconditioner; }$/;"	f	class:Eigen::IterativeSolverBase
predux	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_max_op
predux	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_min_op
predux	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const Scalar predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_sum_op
predux	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE const result_type predux(const Packet& a) const$/;"	f	struct:Eigen::internal::scalar_product_op
predux	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux(const Packet& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a) { return pfirst(_mm_hadd_pd(a, a)); }$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux_max(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_max<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_max<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_max	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_max<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux_min(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_min<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_min<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_min	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_min<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline typename unpacket_traits<Packet>::type predux_mul(const Packet& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<double> predux_mul<Packet1cd>(const Packet1cd& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE std::complex<float> predux_mul<Packet2cf>(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE double predux_mul<Packet2d>(const Packet2d& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE float predux_mul<Packet4f>(const Packet4f& a)$/;"	f	namespace:Eigen::internal
predux_mul	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE int predux_mul<Packet4i>(const Packet4i& a)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/GenericPacketMath.h	/^preduxp(const Packet* vecs) { return vecs[0]; }$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preduxp<Packet1cd>(const Packet1cd* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preduxp<Packet2cf>(const Packet2cf* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preduxp<Packet2d>(const Packet2d* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preduxp<Packet4f>(const Packet4f* vecs)$/;"	f	namespace:Eigen::internal
preduxp	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preduxp<Packet4i>(const Packet4i* vecs)$/;"	f	namespace:Eigen::internal
prefer_binary	external/SuiteSparse/Include/cholmod_core.h	/^    int prefer_binary ;	    \/* cholmod_read_triplet converts a symmetric$/;"	m	struct:cholmod_common_struct
prefer_upper	external/SuiteSparse/Include/cholmod_core.h	/^    int prefer_upper ;	    \/* cholmod_analyze and cholmod_factorize work$/;"	m	struct:cholmod_common_struct
prefer_zomplex	external/SuiteSparse/Include/cholmod_core.h	/^    int prefer_zomplex ;    \/* X = cholmod_solve (sys, L, B, Common) computes$/;"	m	struct:cholmod_common_struct
prefetch	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar> inline void prefetch(const Scalar* addr)$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { vec_dstt((float *)addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr) { vec_dstt(addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr) { vec_dstt(addr, DST_CTRL(2,2,32), DST_CHAN); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { __pld((float *)addr); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float* addr) { __pld(addr); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*     addr) { __pld(addr); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<double> >(const std::complex<double> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void prefetch<std::complex<float> >(const std::complex<float> *   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<double>(const double* addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<float>(const float*   addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prefetch	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void prefetch<int>(const int*       addr) { _mm_prefetch((const char*)(addr), _MM_HINT_T0); }$/;"	f	namespace:Eigen::internal
prepend_alloc	external/unsupported/test/mpreal/dlmalloc.c	/^static void* prepend_alloc(mstate m, char* newbase, char* oldbase,$/;"	f	file:
prered	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar actred, prered;$/;"	m	class:Eigen::HybridNonLinearSolver
prered	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
prerotate	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::prerotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
prerotate	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prerotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
prescale	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::prescale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prescale	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::prescale(Scalar s)$/;"	f	class:Eigen::Transform
prescale	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::prescale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prescale	external/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::prescale(Scalar s)$/;"	f	class:Eigen::Transform
preshear	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::preshear(Scalar sx, Scalar sy)$/;"	f	class:Eigen::Transform
preshear	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::preshear(Scalar sx, Scalar sy)$/;"	f	class:Eigen::Transform
pretranslate	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::pretranslate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
pretranslate	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::pretranslate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
prev	external/SuiteSparse/Include/cholmod_core.h	/^    void *prev ;	\/* size ncol+2. prev [j] is the prior column in i\/x.$/;"	m	struct:cholmod_factor_struct
prev_chunk	external/unsupported/test/mpreal/dlmalloc.c	2145;"	d	file:
prev_foot	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t                    prev_foot;$/;"	m	struct:malloc_tree_chunk	file:
prev_foot	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t               prev_foot;  \/* Size of previous chunk (if free).  *\/$/;"	m	struct:malloc_chunk	file:
preverse	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Packet> inline Packet preverse(const Packet& a)$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) { return (Packet4f)vec_perm((Packet16uc)a,(Packet16uc)a, p16uc_REVERSE); }$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) { return (Packet4i)vec_perm((Packet16uc)a,(Packet16uc)a, p16uc_REVERSE); }$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a)$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a) {$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a) {$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd preverse(const Packet1cd& a) { return a; }$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf preverse(const Packet2cf& a) { return Packet2cf(_mm_castpd_ps(preverse(_mm_castps_pd(a.v)))); }$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d preverse(const Packet2d& a)$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f preverse(const Packet4f& a)$/;"	f	namespace:Eigen::internal
preverse	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i preverse(const Packet4i& a)$/;"	f	namespace:Eigen::internal
print	external/SuiteSparse/Include/cholmod_core.h	/^    int print ;		\/* print level. Default: 3 *\/$/;"	m	struct:cholmod_common_struct
printInfoLog	external/unsupported/test/openglsupport.cpp	/^void printInfoLog(GLuint objectID)$/;"	f
print_function	external/SuiteSparse/Include/cholmod_core.h	/^    int (*print_function) (const char *, ...) ;	\/* pointer to printf *\/$/;"	m	struct:cholmod_common_struct
print_help	FragmentOptimizer.cpp	/^int print_help ()$/;"	f
print_matrix	external/Eigen/src/Core/IO.h	/^std::ostream & print_matrix(std::ostream & s, const Derived& _m, const IOFormat& fmt)$/;"	f	namespace:Eigen::internal
prod	external/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::prod() const$/;"	f	class:Eigen::DenseBase
prod	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_prod>::Type prod() const$/;"	f	class:Eigen::VectorwiseOp
product_coeff_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<DefaultTraversal, 0, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<DefaultTraversal, Dynamic, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<DefaultTraversal, UnrollingIndex, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<InnerVectorizedTraversal, Dynamic, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_impl<InnerVectorizedTraversal, UnrollingIndex, Lhs, Rhs, RetScalar>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector<Lhs,Rhs,1,1>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector<Lhs,Rhs,1,RhsCols>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_dyn_selector	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_dyn_selector<Lhs,Rhs,LhsRows,1>$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_unroller	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_unroller$/;"	s	namespace:Eigen::internal
product_coeff_vectorized_unroller	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_coeff_vectorized_unroller<0, Lhs, Rhs, Packet>$/;"	s	namespace:Eigen::internal
product_packet_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<ColMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<ColMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<ColMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<RowMajor, 0, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<RowMajor, Dynamic, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_packet_impl	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct product_packet_impl<RowMajor, UnrollingIndex, Lhs, Rhs, Packet, LoadMode>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,LhsSelfAdjoint,ConjugateLhs, RhsStorageOrder,RhsSelfAdjoint,ConjugateRhs,RowMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,false,ConjugateLhs, RhsStorageOrder,true,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_selfadjoint_matrix	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct product_selfadjoint_matrix<Scalar,Index,LhsStorageOrder,true,ConjugateLhs, RhsStorageOrder,false,ConjugateRhs,ColMajor>$/;"	s	namespace:Eigen::internal
product_size_category	external/Eigen/src/Core/GeneralProduct.h	/^template<int Size, int MaxSize> struct product_size_category$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,LhsIsTriangular,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,false,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct product_triangular_matrix_matrix<Scalar,Index,Mode,true,$/;"	s	namespace:Eigen::internal
product_triangular_matrix_matrix_trmm	external/Eigen/src/Core/products/TriangularMatrixMatrix_MKL.h	/^struct product_triangular_matrix_matrix_trmm :$/;"	s	namespace:Eigen::internal
product_type	external/Eigen/src/Core/GeneralProduct.h	/^template<typename Lhs, typename Rhs> struct product_type$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	s	namespace:Eigen::internal
product_type_selector	external/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	s	namespace:Eigen::internal
projection	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline VectorType projection(const VectorType& p) const { return p - signedDistance(p) * normal(); }$/;"	f	class:Eigen::Hyperplane
projection	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  VectorType projection(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
projection	external/Eigen/src/Geometry/Hyperplane.h	/^  inline VectorType projection(const VectorType& p) const { return p - signedDistance(p) * normal(); }$/;"	f	class:Eigen::Hyperplane
projection	external/Eigen/src/Geometry/ParametrizedLine.h	/^  VectorType projection(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
projective_transform_inverse	external/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse$/;"	s	namespace:Eigen::internal
projective_transform_inverse	external/Eigen/src/Geometry/Transform.h	/^struct projective_transform_inverse<TransformType, Projective>$/;"	s	namespace:Eigen::internal
promote	external/unsupported/test/FFTW.cpp	/^complex<long double>  promote(complex<T> x) { return complex<long double>(x.real(),x.imag()); }$/;"	f
promote	external/unsupported/test/FFTW.cpp	/^complex<long double>  promote(double x) { return complex<long double>( x); }$/;"	f
promote	external/unsupported/test/FFTW.cpp	/^complex<long double>  promote(float x) { return complex<long double>( x); }$/;"	f
promote	external/unsupported/test/FFTW.cpp	/^complex<long double>  promote(long double x) { return complex<long double>( x); }$/;"	f
promote_index_type	external/Eigen/src/Core/util/XprHelper.h	/^struct promote_index_type$/;"	s	namespace:Eigen::internal
promote_storage_type	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^template<> struct promote_storage_type<Dense,Sparse>$/;"	s	namespace:Eigen::internal
promote_storage_type	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^template<> struct promote_storage_type<Sparse,Dense>$/;"	s	namespace:Eigen::internal
prune	external/Eigen/src/SparseCore/CompressedStorage.h	/^    void prune(Scalar reference, RealScalar epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::internal::CompressedStorage
prune	external/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(Scalar reference, RealScalar epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseMatrix
prune	external/Eigen/src/SparseCore/SparseMatrix.h	/^    void prune(const KeepFunc& keep = KeepFunc())$/;"	f	class:Eigen::SparseMatrix
prune	external/Eigen/src/SparseCore/SparseVector.h	/^    void prune(Scalar reference, RealScalar epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::SparseVector
prune	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    void prune(Scalar reference, RealScalar epsilon = dummy_precision<RealScalar > ()) {$/;"	f	class:Eigen::SkylineMatrix
prune	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void prune(Scalar reference, RealScalar epsilon = dummy_precision<RealScalar>()) {$/;"	f	class:Eigen::SkylineStorage
prune	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void prune(Scalar reference, RealScalar epsilon = NumTraits<RealScalar>::dummy_precision())$/;"	f	class:Eigen::DynamicSparseMatrix
prune_dense	external/SuiteSparse/Include/cholmod_core.h	/^	double prune_dense ;\/* dense row\/col control for AMD, SYMAMD, CSYMAMD,$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
prune_dense2	external/SuiteSparse/Include/cholmod_core.h	/^	double prune_dense2 ;\/* dense row control for COLAMD and CCOLAMD.$/;"	m	struct:cholmod_common_struct::cholmod_method_struct
pruned	external/Eigen/src/SparseCore/SparseProduct.h	/^    SparseSparseProduct pruned(Scalar reference = 0, RealScalar epsilon = NumTraits<RealScalar>::dummy_precision()) const$/;"	f	class:Eigen::SparseSparseProduct
pset1	external/Eigen/src/Core/GenericPacketMath.h	/^pset1(const typename unpacket_traits<Packet>::type& a) { return a; }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) {$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   {$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return vdupq_n_f32(from); }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from)   { return vdupq_n_s32(from); }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pset1<Packet1cd>(const std::complex<double>&  from)$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pset1<Packet2cf>(const std::complex<float>&  from)$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set1_pd(from); }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pset1<Packet2d>(const double& from) { return _mm_set_pd(from,from); }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set1_ps(from); }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pset1<Packet4f>(const float&  from) { return _mm_set_ps(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set1_epi32(from); }$/;"	f	namespace:Eigen::internal
pset1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pset1<Packet4i>(const int&    from) { return _mm_set_epi32(from,from,from,from); }$/;"	f	namespace:Eigen::internal
pseudoEigenvalueMatrix	external/Eigen/src/Eigenvalues/EigenSolver.h	/^MatrixType EigenSolver<MatrixType>::pseudoEigenvalueMatrix() const$/;"	f	class:Eigen::EigenSolver
pseudoEigenvectors	external/Eigen/src/Eigenvalues/EigenSolver.h	/^    const MatrixType& pseudoEigenvectors() const$/;"	f	class:Eigen::EigenSolver
pseudo_inverse	external/unsupported/Eigen/src/IterativeSolvers/ConstrainedConjGrad.h	/^void pseudo_inverse(const CMatrix &C, CINVMatrix &CINV)$/;"	f	namespace:Eigen::internal
psin	external/Eigen/src/Core/GenericPacketMath.h	/^Packet psin(const Packet& a) { return sin(a); }$/;"	f	namespace:Eigen::internal
psin	external/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psin<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
psqrt	external/Eigen/src/Core/GenericPacketMath.h	/^Packet psqrt(const Packet& a) { return sqrt(a); }$/;"	f	namespace:Eigen::internal
psqrt	external/Eigen/src/Core/arch/SSE/MathFunctions.h	/^Packet4f psqrt<Packet4f>(const Packet4f& _x)$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> inline void pstore(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vec_st(from, 0, to); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vec_st(from, 0, to); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_ALIGNED_STORE pstore((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstore <std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_ALIGNED_STORE pstore(&real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<double>(double* to, const Packet2d& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_pd(to, from); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<float>(float*   to, const Packet4f& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_ps(to, from); }$/;"	f	namespace:Eigen::internal
pstore	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore<int>(int*       to, const Packet4i& from) { EIGEN_DEBUG_ALIGNED_STORE _mm_store_si128(reinterpret_cast<Packet4i*>(to), from); }$/;"	f	namespace:Eigen::internal
pstore1	external/Eigen/src/Core/GenericPacketMath.h	/^inline void pstore1(typename unpacket_traits<Packet>::type* to, const typename unpacket_traits<Packet>::type& a)$/;"	f	namespace:Eigen::internal
pstore1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet2d>(double* to, const double& a)$/;"	f	namespace:Eigen::internal
pstore1	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstore1<Packet4f>(float* to, const float& a)$/;"	f	namespace:Eigen::internal
pstoret	external/Eigen/src/Core/GenericPacketMath.h	/^inline void pstoret(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/GenericPacketMath.h	/^template<typename Scalar, typename Packet> inline void pstoreu(Scalar* to, const Packet& from)$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from)$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from)$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((float*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_f32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE vst1q_s32(to, from); }$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<double> >(std::complex<double> *   to, const Packet1cd& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu((double*)to, from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<std::complex<float> >(std::complex<float> *   to, const Packet2cf& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(&real_ref(*to), from.v); }$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<double>(double* to, const Packet2d& from) {$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<float>(float*  to, const Packet4f& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castps_pd(from)); }$/;"	f	namespace:Eigen::internal
pstoreu	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE void pstoreu<int>(int*      to, const Packet4i& from) { EIGEN_DEBUG_UNALIGNED_STORE pstoreu(reinterpret_cast<double*>(to), _mm_castsi128_pd(from)); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/GenericPacketMath.h	/^psub(const Packet& a,$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_sub(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_sub(a,b); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_sub(a,b); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(psub<Packet4f>(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return vsubq_f32(a,b); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return vsubq_s32(a,b); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd psub<Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_sub_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf psub<Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_sub_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d psub<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_sub_pd(a,b); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f psub<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_sub_ps(a,b); }$/;"	f	namespace:Eigen::internal
psub	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i psub<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_sub_epi32(a,b); }$/;"	f	namespace:Eigen::internal
ptan	external/Eigen/src/Core/GenericPacketMath.h	/^Packet ptan(const Packet& a) { return tan(a); }$/;"	f	namespace:Eigen::internal
pthread_acquire_lock	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE int pthread_acquire_lock (MLOCK_T *sl) {$/;"	f	file:
pthread_init_lock	external/unsupported/test/mpreal/dlmalloc.c	/^static int pthread_init_lock (MLOCK_T *sl) {$/;"	f	file:
pthread_mlock_t	external/unsupported/test/mpreal/dlmalloc.c	/^struct pthread_mlock_t {$/;"	s	file:
pthread_mutexattr_settype	external/unsupported/test/mpreal/dlmalloc.c	1841;"	d	file:
pthread_release_lock	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE void pthread_release_lock (MLOCK_T *sl) {$/;"	f	file:
pthread_try_lock	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE int pthread_try_lock (MLOCK_T *sl) {$/;"	f	file:
punpackp	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^EIGEN_STRONG_INLINE void punpackp(Packet4f* vecs)$/;"	f	namespace:Eigen::internal
push_back	external/Eigen/src/StlSupport/StdDeque.h	/^  void push_back(const value_type& x)$/;"	f	class:std::deque
push_back	external/Eigen/src/StlSupport/StdList.h	/^    void push_back(const value_type& x)$/;"	f	class:std::list
push_back	external/Eigen/src/StlSupport/StdVector.h	/^  void push_back(const value_type& x)$/;"	f	class:std::vector
push_front	external/Eigen/src/StlSupport/StdDeque.h	/^  void push_front(const value_type& x)$/;"	f	class:std::deque
putMarketHeader	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void putMarketHeader(std::string& header,int sym)$/;"	f	namespace:Eigen::internal
putVectorElt	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void putVectorElt(Scalar value, std::ofstream& out)$/;"	f	namespace:Eigen::internal
putVectorElt	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^  inline void putVectorElt(std::complex<Scalar> value, std::ofstream& out)$/;"	f	namespace:Eigen::internal
px	external/SuiteSparse/Include/cholmod_core.h	/^    void *px ;		\/* size nsuper+1, pointers to real parts *\/$/;"	m	struct:cholmod_factor_struct
pxor	external/Eigen/src/Core/GenericPacketMath.h	/^pxor(const Packet& a, const Packet& b) { return a ^ b; }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(vec_xor(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return vec_xor(a, b); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b)$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b)$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return veorq_s32(a,b); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet1cd pxor   <Packet1cd>(const Packet1cd& a, const Packet1cd& b) { return Packet1cd(_mm_xor_pd(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> EIGEN_STRONG_INLINE Packet2cf pxor   <Packet2cf>(const Packet2cf& a, const Packet2cf& b) { return Packet2cf(_mm_xor_ps(a.v,b.v)); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet2d pxor<Packet2d>(const Packet2d& a, const Packet2d& b) { return _mm_xor_pd(a,b); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4f pxor<Packet4f>(const Packet4f& a, const Packet4f& b) { return _mm_xor_ps(a,b); }$/;"	f	namespace:Eigen::internal
pxor	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> EIGEN_STRONG_INLINE Packet4i pxor<Packet4i>(const Packet4i& a, const Packet4i& b) { return _mm_xor_si128(a,b); }$/;"	f	namespace:Eigen::internal
qnxnto	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qnxnto	build/CMakeFiles/3.8.0/CompilerIdCXX/CMakeCXXCompilerId.cpp	/^char const* qnxnto = "INFO" ":" "qnxnto[]";$/;"	v
qr	external/Eigen/src/Eigen2Support/QR.h	/^MatrixBase<Derived>::qr() const$/;"	f	class:Eigen::MatrixBase
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^> struct qr_preconditioner_impl {};$/;"	s	namespace:Eigen::internal
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, ColPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, FullPivHouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreColsThanRows, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, HouseholderQRPreconditioner, PreconditionIfMoreRowsThanCols, true>$/;"	c	namespace:Eigen::internal
qr_preconditioner_impl	external/Eigen/src/SVD/JacobiSVD.h	/^class qr_preconditioner_impl<MatrixType, QRPreconditioner, Case, false>$/;"	c	namespace:Eigen::internal
qr_preconditioner_should_do_anything	external/Eigen/src/SVD/JacobiSVD.h	/^struct qr_preconditioner_should_do_anything$/;"	s	namespace:Eigen::internal
qrsolv	external/unsupported/Eigen/src/NonLinearOptimization/qrsolv.h	/^void qrsolv($/;"	f	namespace:Eigen::internal
qtf	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::HybridNonLinearSolver
qtf	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType  fvec, qtf, diag;$/;"	m	class:Eigen::LevenbergMarquardt
quat_product	external/Eigen/src/Geometry/Quaternion.h	/^template<int Arch, class Derived1, class Derived2, typename Scalar, int _Options> struct quat_product$/;"	s	namespace:Eigen::internal
quat_product	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, double, Aligned>$/;"	s	namespace:Eigen::internal
quat_product	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^struct quat_product<Architecture::SSE, Derived, OtherDerived, float, Aligned>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	external/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,3,3>$/;"	s	namespace:Eigen::internal
quaternionbase_assign_impl	external/Eigen/src/Geometry/Quaternion.h	/^struct quaternionbase_assign_impl<Other,4,1>$/;"	s	namespace:Eigen::internal
queryCacheSizes	external/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_amd	external/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_amd(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel	external/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel(int& l1, int& l2, int& l3, int max_std_funcs)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_codes	external/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_codes(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryCacheSizes_intel_direct	external/Eigen/src/Core/util/Memory.h	/^inline void queryCacheSizes_intel_direct(int& l1, int& l2, int& l3)$/;"	f	namespace:Eigen::internal
queryL1CacheSize	external/Eigen/src/Core/util/Memory.h	/^inline int queryL1CacheSize()$/;"	f	namespace:Eigen::internal
queryTopLevelCacheSize	external/Eigen/src/Core/util/Memory.h	/^inline int queryTopLevelCacheSize()$/;"	f	namespace:Eigen::internal
quick_return_if_not_posdef	external/SuiteSparse/Include/cholmod_core.h	/^    int quick_return_if_not_posdef ;	\/* if TRUE, the supernodal numeric$/;"	m	struct:cholmod_common_struct
r1mpyq	external/unsupported/Eigen/src/NonLinearOptimization/r1mpyq.h	/^void r1mpyq(DenseIndex m, DenseIndex n, Scalar *a, const std::vector<JacobiRotation<Scalar> > &v_givens, const std::vector<JacobiRotation<Scalar> > &w_givens)$/;"	f	namespace:Eigen::internal
r1updt	external/unsupported/Eigen/src/NonLinearOptimization/r1updt.h	/^void r1updt($/;"	f	namespace:Eigen::internal
radius	external/unsupported/test/BVH.cpp	/^  double radius;$/;"	m	struct:Ball	file:
radix	external/unsupported/Eigen/src/Polynomials/Companion.h	/^T radix(){ return 2; }$/;"	f	namespace:Eigen::internal
radix2	external/unsupported/Eigen/src/Polynomials/Companion.h	/^T radix2(){ return radix<T>()*radix<T>(); }$/;"	f	namespace:Eigen::internal
random	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random()$/;"	f	namespace:Eigen::internal
random	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(random, Scalar) random(const Scalar& x, const Scalar& y)$/;"	f	namespace:Eigen::internal
random	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal random(unsigned int seed)$/;"	f	namespace:mpfr
random2	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal random2 (mp_size_t size, mp_exp_t exp)$/;"	f	namespace:mpfr
randomMatrixWithImagEivals	external/unsupported/test/matrix_function.cpp	/^struct randomMatrixWithImagEivals$/;"	s	file:
randomMatrixWithImagEivals	external/unsupported/test/matrix_function.cpp	/^struct randomMatrixWithImagEivals<MatrixType, 0>$/;"	s	file:
randomMatrixWithImagEivals	external/unsupported/test/matrix_function.cpp	/^struct randomMatrixWithImagEivals<MatrixType, 1>$/;"	s	file:
randomMatrixWithRealEivals	external/unsupported/test/matrix_function.cpp	/^MatrixType randomMatrixWithRealEivals(const typename MatrixType::Index size)$/;"	f
randomTest	external/unsupported/test/matrix_exponential.cpp	/^void randomTest(const MatrixType& m, double tol)$/;"	f
random_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl {};$/;"	s	namespace:Eigen::internal
random_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
random_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
random_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct random_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
random_impl	external/Eigen/src/Core/MathFunctions.h	/^struct random_impl : random_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
random_impl	external/Eigen/src/Core/MathFunctions.h	/^template<> struct random_impl<bool>$/;"	s	namespace:Eigen::internal
random_retval	external/Eigen/src/Core/MathFunctions.h	/^struct random_retval$/;"	s	namespace:Eigen::internal
rank	external/Eigen/src/LU/FullPivLU.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivLU
rank	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::ColPivHouseholderQR
rank	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rank() const$/;"	f	class:Eigen::FullPivHouseholderQR
rank	external/Eigen/src/misc/Image.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::image_retval_base
rank	external/Eigen/src/misc/Kernel.h	/^  inline Index rank() const { return m_rank; }$/;"	f	struct:Eigen::internal::kernel_retval_base
rankUpdate	external/Eigen/src/Cholesky/LDLT.h	/^LDLT<MatrixType,_UpLo>& LDLT<MatrixType,_UpLo>::rankUpdate(const MatrixBase<Derived>& w,typename NumTraits<typename MatrixType::Scalar>::Real sigma)$/;"	f	class:Eigen::LDLT
rankUpdate	external/Eigen/src/Cholesky/LLT.h	/^  static typename MatrixType::Index rankUpdate(MatrixType& mat, const VectorType& vec, const RealScalar& sigma)$/;"	f	struct:Eigen::internal::llt_inplace
rankUpdate	external/Eigen/src/Cholesky/LLT.h	/^LLT<_MatrixType,_UpLo> LLT<_MatrixType,_UpLo>::rankUpdate(const VectorType& v, const RealScalar& sigma)$/;"	f	class:Eigen::LLT
rankUpdate	external/Eigen/src/Core/products/SelfadjointProduct.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, Scalar alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	external/Eigen/src/Core/products/SelfadjointRank2Update.h	/^::rankUpdate(const MatrixBase<DerivedU>& u, const MatrixBase<DerivedV>& v, Scalar alpha)$/;"	f	class:Eigen::SelfAdjointView
rankUpdate	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^SparseSelfAdjointView<MatrixType,UpLo>::rankUpdate(const SparseMatrixBase<DerivedU>& u, Scalar alpha)$/;"	f	class:Eigen::SparseSelfAdjointView
rat42_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    rat42_functor(void) : Functor<double>(3,9) {}$/;"	f	struct:rat42_functor
rat42_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct rat42_functor : Functor<double>$/;"	s	file:
rat43_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    rat43_functor(void) : Functor<double>(4,15) {}$/;"	f	struct:rat43_functor
rat43_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct rat43_functor : Functor<double>$/;"	s	file:
ratio	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar ratio;$/;"	m	class:Eigen::HybridNonLinearSolver
ratio	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar ratio;$/;"	m	class:Eigen::LevenbergMarquardt
rawMatrix	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const CholMatrixType rawMatrix() const {$/;"	f	class:Eigen::SimplicialCholesky
real	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real, Scalar) real(const Scalar& x)$/;"	f	namespace:Eigen::internal
real	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() const { return derived(); }$/;"	f
real	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^real() { return derived(); }$/;"	f
real	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^inline const AutoDiffScalar<DerType>& real(const AutoDiffScalar<DerType>& x)  { return x; }$/;"	f	namespace:Eigen
realRoots	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline void realRoots( Stl_back_insertion_sequence& bi_seq,$/;"	f	class:Eigen::PolynomialSolverBase
realRoots_to_monicPolynomial_scalar	external/unsupported/test/polynomialutils.cpp	/^template<typename _Scalar> void realRoots_to_monicPolynomial_scalar()$/;"	f
realRoots_to_monicPolynomial_test	external/unsupported/test/polynomialutils.cpp	/^void realRoots_to_monicPolynomial_test(int deg)$/;"	f
real_2x2_jacobi_svd	external/Eigen/src/SVD/JacobiSVD.h	/^void real_2x2_jacobi_svd(const MatrixType& matrix, Index p, Index q,$/;"	f	namespace:Eigen::internal
real_impl	external/Eigen/src/Core/MathFunctions.h	/^struct real_impl$/;"	s	namespace:Eigen::internal
real_impl	external/Eigen/src/Core/MathFunctions.h	/^struct real_impl<std::complex<RealScalar> >$/;"	s	namespace:Eigen::internal
real_ref	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) real_ref(Scalar& x)$/;"	f	namespace:Eigen::internal
real_ref	external/Eigen/src/Core/MathFunctions.h	/^inline typename add_const_on_value_type< EIGEN_MATHFUNC_RETVAL(real_ref, Scalar) >::type real_ref(const Scalar& x)$/;"	f	namespace:Eigen::internal
real_ref_impl	external/Eigen/src/Core/MathFunctions.h	/^struct real_ref_impl$/;"	s	namespace:Eigen::internal
real_ref_retval	external/Eigen/src/Core/MathFunctions.h	/^struct real_ref_retval$/;"	s	namespace:Eigen::internal
real_retval	external/Eigen/src/Core/MathFunctions.h	/^struct real_retval$/;"	s	namespace:Eigen::internal
real_twiddles	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    Complex * real_twiddles(int ncfft2)$/;"	f	struct:Eigen::internal::kissfft_impl
realloc_memory	external/SuiteSparse/Include/SuiteSparse_config.h	/^    void *(*realloc_memory) (void *, size_t) ;  \/* pointer to realloc *\/$/;"	m	struct:SuiteSparse_config_struct
realloc_memory	external/SuiteSparse/Include/cholmod_core.h	/^    void *(*realloc_memory) (void *, size_t) ;  \/* pointer to realloc *\/$/;"	m	struct:cholmod_common_struct
reallocate	external/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocate(Index size)$/;"	f	class:Eigen::internal::AmbiVector
reallocate	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline void reallocate(size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
reallocate	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline void reallocate(Index diagSize, Index upperProfileSize, Index lowerProfileSize, Index upperSize, Index lowerSize) {$/;"	f	class:Eigen::SkylineStorage
reallocateSparse	external/Eigen/src/SparseCore/AmbiVector.h	/^    void reallocateSparse()$/;"	f	class:Eigen::internal::AmbiVector
rebind	external/Eigen/src/Core/util/Memory.h	/^    struct rebind$/;"	s	class:Eigen::aligned_allocator
rebind	external/Eigen/src/StlSupport/details.h	/^    struct rebind$/;"	s	class:Eigen::aligned_allocator_indirection
rec_sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rec_sqrt(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
reconstructedMatrix	external/Eigen/src/Cholesky/LDLT.h	/^MatrixType LDLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LDLT
reconstructedMatrix	external/Eigen/src/Cholesky/LLT.h	/^MatrixType LLT<MatrixType,_UpLo>::reconstructedMatrix() const$/;"	f	class:Eigen::LLT
reconstructedMatrix	external/Eigen/src/LU/FullPivLU.h	/^MatrixType FullPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::FullPivLU
reconstructedMatrix	external/Eigen/src/LU/PartialPivLU.h	/^MatrixType PartialPivLU<MatrixType>::reconstructedMatrix() const$/;"	f	class:Eigen::PartialPivLU
reduceNoiseLevel	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void reduceNoiseLevel() { if (m_noise > 0) m_noise--; }$/;"	f	class:Eigen::IterationController
reduceToTriangularForm	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^void ComplexSchur<MatrixType>::reduceToTriangularForm(bool computeU)$/;"	f	class:Eigen::ComplexSchur
redux	external/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::redux(const Func& func) const$/;"	f	class:Eigen::DenseBase
redux	external/Eigen/src/Core/VectorwiseOp.h	/^    redux(const BinaryOp& func = BinaryOp()) const$/;"	f	class:Eigen::VectorwiseOp
redux_impl	external/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, DefaultTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	external/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	external/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, LinearVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	external/Eigen/src/Core/Redux.h	/^struct redux_impl<Func, Derived, SliceVectorizedTraversal, NoUnrolling>$/;"	s	namespace:Eigen::internal
redux_impl	external/Eigen/src/Core/Redux.h	/^struct redux_impl<Func,Derived, DefaultTraversal, CompleteUnrolling>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	external/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller$/;"	s	namespace:Eigen::internal
redux_novec_unroller	external/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 0>$/;"	s	namespace:Eigen::internal
redux_novec_unroller	external/Eigen/src/Core/Redux.h	/^struct redux_novec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
redux_traits	external/Eigen/src/Core/Redux.h	/^struct redux_traits$/;"	s	namespace:Eigen::internal
redux_vec_unroller	external/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller$/;"	s	namespace:Eigen::internal
redux_vec_unroller	external/Eigen/src/Core/Redux.h	/^struct redux_vec_unroller<Func, Derived, Start, 1>$/;"	s	namespace:Eigen::internal
refX	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline VectorType& refX() $/;"	f	class:Eigen::MatrixMarketIterator
reference	external/Eigen/src/Core/util/Memory.h	/^    typedef T&        reference;$/;"	t	class:Eigen::aligned_allocator
reference	external/Eigen/src/SparseCore/SparseMatrix.h	/^    Scalar reference;$/;"	m	struct:Eigen::SparseMatrix::default_prunning_func
reference	external/Eigen/src/StlSupport/details.h	/^    typedef T&        reference;$/;"	t	class:Eigen::aligned_allocator_indirection
reg_filename_	OptApp.h	/^	std::string reg_filename_;$/;"	m	class:COptApp
reg_traj_	OptApp.h	/^	RGBDTrajectory reg_traj_;$/;"	m	class:COptApp
relative2absolute_map_	OptApp.h	/^	std::vector< int > relative2absolute_map_;$/;"	m	class:COptApp
release_checks	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     release_checks;$/;"	m	struct:malloc_state	file:
release_unused_segments	external/unsupported/test/mpreal/dlmalloc.c	/^static size_t release_unused_segments(mstate m) {$/;"	f	file:
relerr	external/unsupported/test/matrix_exponential.cpp	/^double relerr(const MatrixBase<Derived>& A, const MatrixBase<OtherDerived>& B)$/;"	f
remainder	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal remainder (const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
remove_all	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_all	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_all	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	s	namespace:Eigen::internal
remove_const	external/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	s	namespace:Eigen::internal
remove_const	external/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	external/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_const	external/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	s	namespace:Eigen::internal
remove_pointer	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_pointer	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	s	namespace:Eigen::internal
remove_reference	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	s	namespace:Eigen::internal
remquo	external/unsupported/test/mpreal/mpreal.cpp	/^const mpreal remquo (long* q, const mpreal& x, const mpreal& y, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
replace_dv	external/unsupported/test/mpreal/dlmalloc.c	3475;"	d	file:
replicate	external/Eigen/src/Core/Replicate.h	/^DenseBase<Derived>::replicate() const$/;"	f	class:Eigen::DenseBase
replicate	external/Eigen/src/Core/Replicate.h	/^DenseBase<Derived>::replicate(Index rowFactor,Index colFactor) const$/;"	f	class:Eigen::DenseBase
replicate	external/Eigen/src/Core/Replicate.h	/^VectorwiseOp<ExpressionType,Direction>::replicate(Index factor) const$/;"	f	class:Eigen::VectorwiseOp
replicate	external/Eigen/src/Core/VectorwiseOp.h	/^    replicate(Index factor = Factor) const$/;"	f	class:Eigen::VectorwiseOp
request2size	external/unsupported/test/mpreal/dlmalloc.c	2106;"	d	file:
res	external/Eigen/src/Core/Visitor.h	/^  Scalar res;$/;"	m	struct:Eigen::internal::coeff_visitor
reserve	external/Eigen/src/SparseCore/CompressedStorage.h	/^    void reserve(size_t size)$/;"	f	class:Eigen::internal::CompressedStorage
reserve	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(Index reserveSize)$/;"	f	class:Eigen::SparseMatrix
reserve	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(const SizesType& reserveSizes, const typename SizesType::Scalar& enableif =$/;"	f	class:Eigen::SparseMatrix
reserve	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserve(const SizesType& reserveSizes, const typename SizesType::value_type& enableif = typename SizesType::value_type())$/;"	f	class:Eigen::SparseMatrix
reserve	external/Eigen/src/SparseCore/SparseVector.h	/^    inline void reserve(Index reserveSize) { m_data.reserve(reserveSize); }$/;"	f	class:Eigen::SparseVector
reserve	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void reserve(Index reserveSize, Index reserveUpperSize, Index reserveLowerSize) {$/;"	f	class:Eigen::SkylineMatrix
reserve	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void reserve(Index size, Index upperProfileSize, Index lowerProfileSize, Index upperSize, Index lowerSize) {$/;"	f	class:Eigen::SkylineStorage
reserve	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void reserve(Index reserveSize = 1000)$/;"	f	class:Eigen::DynamicSparseMatrix
reserveInnerVectors	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void reserveInnerVectors(const SizesType& reserveSizes)$/;"	f	class:Eigen::SparseMatrix
reset	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline void reset() {$/;"	f	class:Eigen::SkylineStorage
resetParameters	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    void resetParameters(void) { parameters = Parameters(); }$/;"	f	class:Eigen::HybridNonLinearSolver
resetParameters	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    void resetParameters(void) { parameters = Parameters(); }$/;"	f	class:Eigen::LevenbergMarquardt
reset_on_error	external/unsupported/test/mpreal/dlmalloc.c	/^static void reset_on_error(mstate m) {$/;"	f	file:
residual	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double residual() const { return m_res; }$/;"	f	class:Eigen::IterationController
resize	external/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index nbRows, Index nbCols) { m_expression.const_cast_derived().resize(nbRows,nbCols); }$/;"	f	class:Eigen::ArrayWrapper
resize	external/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index nbRows, Index nbCols) { m_expression.const_cast_derived().resize(nbRows,nbCols); }$/;"	f	class:Eigen::MatrixWrapper
resize	external/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.const_cast_derived().resize(newSize); }$/;"	f	class:Eigen::ArrayWrapper
resize	external/Eigen/src/Core/ArrayWrapper.h	/^    void resize(Index newSize) { m_expression.const_cast_derived().resize(newSize); }$/;"	f	class:Eigen::MatrixWrapper
resize	external/Eigen/src/Core/DenseBase.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::DenseBase
resize	external/Eigen/src/Core/DenseBase.h	/^    void resize(Index size)$/;"	f	class:Eigen::DenseBase
resize	external/Eigen/src/Core/DenseStorage.h	/^    EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex rows, DenseIndex)$/;"	f	class:Eigen::DenseStorage
resize	external/Eigen/src/Core/DenseStorage.h	/^    EIGEN_STRONG_INLINE void resize(DenseIndex size, DenseIndex, DenseIndex cols)$/;"	f	class:Eigen::DenseStorage
resize	external/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex, DenseIndex rows, DenseIndex cols) { m_rows = rows; m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	external/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex, DenseIndex rows, DenseIndex) { m_rows = rows; }$/;"	f	class:Eigen::DenseStorage
resize	external/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex, DenseIndex, DenseIndex cols) { m_cols = cols; }$/;"	f	class:Eigen::DenseStorage
resize	external/Eigen/src/Core/DenseStorage.h	/^    inline void resize(DenseIndex,DenseIndex,DenseIndex) {}$/;"	f	class:Eigen::DenseStorage
resize	external/Eigen/src/Core/DenseStorage.h	/^    void resize(DenseIndex size, DenseIndex rows, DenseIndex cols)$/;"	f	class:Eigen::DenseStorage
resize	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline void resize(Index size) { m_diagonal.resize(size); }$/;"	f	class:Eigen::DiagonalMatrix
resize	external/Eigen/src/Core/PermutationMatrix.h	/^    inline void resize(Index size)$/;"	f	class:Eigen::PermutationBase
resize	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resize(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	external/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index rows, NoChange_t)$/;"	f	class:Eigen::PlainObjectBase
resize	external/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(Index size)$/;"	f	class:Eigen::PlainObjectBase
resize	external/Eigen/src/Core/PlainObjectBase.h	/^    inline void resize(NoChange_t, Index cols)$/;"	f	class:Eigen::PlainObjectBase
resize	external/Eigen/src/Core/Transpositions.h	/^    inline void resize(int size)$/;"	f	class:Eigen::TranspositionsBase
resize	external/Eigen/src/SparseCore/AmbiVector.h	/^    void resize(Index size)$/;"	f	class:Eigen::internal::AmbiVector
resize	external/Eigen/src/SparseCore/CompressedStorage.h	/^    void resize(size_t size, float reserveSizeFactor = 0)$/;"	f	class:Eigen::internal::CompressedStorage
resize	external/Eigen/src/SparseCore/SparseMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseMatrix
resize	external/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index newSize)$/;"	f	class:Eigen::SparseVector
resize	external/Eigen/src/SparseCore/SparseVector.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::SparseVector
resize	external/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size)$/;"	f	class:std::deque
resize	external/Eigen/src/StlSupport/StdDeque.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::deque
resize	external/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size)$/;"	f	class:std::list
resize	external/Eigen/src/StlSupport/StdList.h	/^    void resize(size_type new_size, const value_type& x)$/;"	f	class:std::list
resize	external/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size)$/;"	f	class:std::vector
resize	external/Eigen/src/StlSupport/StdVector.h	/^  void resize(size_type new_size, const value_type& x)$/;"	f	class:std::vector
resize	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    void resize(size_t rows, size_t cols) {$/;"	f	class:Eigen::SkylineMatrix
resize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void resize(Index diagSize, Index upperProfileSize, Index lowerProfileSize, Index upperSize, Index lowerSize, float reserveSizeFactor = 0) {$/;"	f	class:Eigen::SkylineStorage
resize	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void resize(Index rows, Index cols)$/;"	f	class:Eigen::DynamicSparseMatrix
resizeAndKeepData	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void resizeAndKeepData(Index rows, Index cols)$/;"	f	class:Eigen::DynamicSparseMatrix
resizeLike	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void resizeLike(const EigenBase<OtherDerived>& _other)$/;"	f	class:Eigen::PlainObjectBase
resizeNonZeros	external/Eigen/src/SparseCore/SparseMatrix.h	/^    void resizeNonZeros(Index size)$/;"	f	class:Eigen::SparseMatrix
resizeNonZeros	external/Eigen/src/SparseCore/SparseVector.h	/^    void resizeNonZeros(Index size) { m_data.resize(size); }$/;"	f	class:Eigen::SparseVector
resizeNonZeros	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    void resizeNonZeros(Index size) {$/;"	f	class:Eigen::SkylineMatrix
resolution_	OptApp.h	/^	int resolution_;$/;"	m	class:COptApp
resolution_	PointCloud.h	/^	int resolution_;$/;"	m	class:PointCloud
restart	external/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::restart()$/;"	f	class:Eigen::internal::AmbiVector
result_of	external/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType)> {$/;"	s	namespace:Eigen::internal
result_of	external/Eigen/src/Core/util/Meta.h	/^struct result_of<Func(ArgType0,ArgType1)> {$/;"	s	namespace:Eigen::internal
result_of	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct result_of {};$/;"	s	namespace:Eigen::internal
result_type	external/Eigen/src/Core/Functors.h	/^  typedef NewType result_type;$/;"	t	struct:Eigen::internal::scalar_cast_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs2_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_abs_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_imag_ref_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename NumTraits<Scalar>::Real result_type;$/;"	t	struct:Eigen::internal::scalar_real_ref_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_conj_product_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename scalar_product_traits<LhsScalar,RhsScalar>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_product_op
result_type	external/Eigen/src/Core/Functors.h	/^  typedef typename scalar_product_traits<Scalar1,Scalar2>::ReturnType result_type;$/;"	t	struct:Eigen::internal::scalar_multiple2_op
result_type	external/Eigen/src/Core/VectorwiseOp.h	/^                   >::type  result_type;$/;"	t	struct:Eigen::internal::member_redux
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<double>				{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<int64_t  >			{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<int>					{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<long double>			{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<long int>			{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<mpq_t>				{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<mpreal>				{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<mpz_t>				{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<uint64_t >			{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<unsigned int>		{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<unsigned long int>	{typedef mpreal type;};	$/;"	s	namespace:mpfr::internal
result_type	external/unsupported/test/mpreal/mpreal.h	/^	template <typename ArgumentType> struct result_type {};	$/;"	s	namespace:mpfr::internal
ret	external/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon33
ret	external/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = 0 };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon35
ret	external/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::InnerStrideAtCompileTime };$/;"	e	enum:Eigen::internal::inner_stride_at_compile_time::__anon32
ret	external/Eigen/src/Core/DenseCoeffsBase.h	/^  enum { ret = traits<Derived>::OuterStrideAtCompileTime };$/;"	e	enum:Eigen::internal::outer_stride_at_compile_time::__anon34
ret	external/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_allows_mixing_real_and_complex { enum { ret = 0 }; };$/;"	e	enum:Eigen::internal::functor_allows_mixing_real_and_complex::__anon74
ret	external/Eigen/src/Core/Functors.h	/^template<typename Functor> struct functor_has_linear_access { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon72
ret	external/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_allows_mixing_real_and_complex<scalar_conj_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_allows_mixing_real_and_complex::__anon76
ret	external/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct functor_allows_mixing_real_and_complex<scalar_product_op<LhsScalar,RhsScalar> > { enum { ret = 1 }; };$/;"	e	enum:Eigen::internal::functor_allows_mixing_real_and_complex::__anon75
ret	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct functor_has_linear_access<scalar_identity_op<Scalar> > { enum { ret = 0 }; };$/;"	e	enum:Eigen::internal::functor_has_linear_access::__anon73
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    1,    1>      { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon119
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon127
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Large,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon126
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon128
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<1,    Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon121
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon125
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Large>  { enum { ret = GemvProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon130
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon129
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon135
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon138
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon133
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Large,Small,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon136
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Large, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon124
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small, Small, 1>    { enum { ret = LazyCoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon123
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Large>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon131
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,1,    Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon120
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon134
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Large,Small>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon137
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Large>  { enum { ret = GemmProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon132
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<>              struct product_type_selector<Small,Small,Small>  { enum { ret = CoeffBasedProductMode }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon122
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<int Depth>     struct product_type_selector<1,    1,    Depth>  { enum { ret = InnerProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon118
ret	external/Eigen/src/Core/GeneralProduct.h	/^template<int M, int N>  struct product_type_selector<M,N,1>              { enum { ret = OuterProduct }; };$/;"	e	enum:Eigen::internal::product_type_selector::__anon117
ret	external/Eigen/src/Core/Transpose.h	/^  enum { ret =    bool(blas_traits<DerivedA>::IsTransposed) != DestIsTransposed$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon194
ret	external/Eigen/src/Core/Transpose.h	/^  enum { ret = bool(blas_traits<OtherDerived>::IsTransposed) != DestIsTransposed };$/;"	e	enum:Eigen::internal::check_transpose_aliasing_compile_time_selector::__anon193
ret	external/Eigen/src/Core/util/ForwardDeclarations.h	/^  enum { ret = (traits<Derived>::Flags & DirectAccessBit) ? 1 : 0 };$/;"	e	enum:Eigen::internal::has_direct_access::__anon273
ret	external/Eigen/src/Core/util/Meta.h	/^    enum { ret = meta_sqrt<Y,NewInf,NewSup>::ret };$/;"	e	enum:Eigen::internal::__anon319
ret	external/Eigen/src/Core/util/Meta.h	/^class meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	e	enum:Eigen::meta_sqrt::__anon320
ret	external/Eigen/src/Core/util/Meta.h	/^{ enum { ret = false }; };$/;"	e	enum:Eigen::is_diagonal::__anon321
ret	external/Eigen/src/Core/util/Meta.h	/^{ enum { ret = true }; };$/;"	e	enum:Eigen::is_diagonal::__anon322
ret	external/Eigen/src/Core/util/Meta.h	/^{ enum { ret = true }; };$/;"	e	enum:Eigen::is_diagonal::__anon323
ret	external/Eigen/src/Core/util/Meta.h	/^{ enum { ret = true }; };$/;"	e	enum:Eigen::is_diagonal::__anon324
ret	external/Eigen/src/Eigen2Support/Meta.h	/^    enum { ret = ei_meta_sqrt<Y,NewInf,NewSup>::ret };$/;"	e	enum:Eigen::__anon343
ret	external/Eigen/src/Eigen2Support/Meta.h	/^class ei_meta_sqrt<Y, InfX, SupX, true> { public:  enum { ret = (SupX*SupX <= Y) ? SupX : InfX }; };$/;"	e	enum:ei_meta_sqrt::__anon344
ret	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_false { enum { ret = 0 }; };$/;"	e	enum:Eigen::ei_meta_false::__anon340
ret	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if <false, Then, Else> { typedef Else ret; };$/;"	t	struct:Eigen::ei_meta_if
ret	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_if { typedef Then ret; };$/;"	t	struct:Eigen::ei_meta_if
ret	external/Eigen/src/Eigen2Support/Meta.h	/^struct ei_meta_true {  enum { ret = 1 }; };$/;"	e	enum:Eigen::ei_meta_true::__anon339
ret	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T, typename U> struct ei_is_same_type { enum { ret = 0 }; };$/;"	e	enum:Eigen::ei_is_same_type::__anon341
ret	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_is_same_type<T,T> { enum { ret = 1 }; };$/;"	e	enum:Eigen::ei_is_same_type::__anon342
ret	external/Eigen/src/Householder/Householder.h	/^    ret = n==Dynamic ? n : n-1$/;"	e	enum:Eigen::internal::decrement_size::__anon378
ret	external/Eigen/src/SVD/JacobiSVD.h	/^         ret = !( (QRPreconditioner == NoQRPreconditioner) ||$/;"	e	enum:Eigen::internal::qr_preconditioner_should_do_anything::__anon397
ret	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^{ typedef Sparse ret; };$/;"	t	struct:Eigen::internal::promote_storage_type
ret	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    ret = (Size == Dynamic) ? Dynamic : Size-1 };$/;"	e	enum:Eigen::internal::decrement_if_fixed_size::__anon445
ret	external/unsupported/test/polynomialsolver.cpp	/^    ret = (Size == Dynamic) ? Dynamic : Size+1$/;"	e	enum:Eigen::internal::increment_if_fixed_size::__anon474	file:
ret	external/unsupported/test/polynomialutils.cpp	/^    ret = (Size == Dynamic) ? Dynamic : Size+1$/;"	e	enum:Eigen::internal::increment_if_fixed_size::__anon475	file:
retval	external/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar retval;$/;"	t	struct:Eigen::internal::atan2_default_impl
retval	external/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar retval;$/;"	t	struct:Eigen::internal::pow_default_impl
reverse	external/Eigen/src/Core/Reverse.h	/^DenseBase<Derived>::reverse() const$/;"	f	class:Eigen::DenseBase
reverse	external/Eigen/src/Core/Reverse.h	/^DenseBase<Derived>::reverse()$/;"	f	class:Eigen::DenseBase
reverse	external/Eigen/src/Core/VectorwiseOp.h	/^    const Reverse<ExpressionType, Direction> reverse() const$/;"	f	class:Eigen::VectorwiseOp
reverseInPlace	external/Eigen/src/Core/Reverse.h	/^inline void DenseBase<Derived>::reverseInPlace()$/;"	f	class:Eigen::DenseBase
reverse_packet	external/Eigen/src/Core/Reverse.h	/^    typedef internal::reverse_packet_cond<PacketScalar,ReversePacket> reverse_packet;$/;"	t	class:Eigen::Reverse
reverse_packet_cond	external/Eigen/src/Core/Reverse.h	/^template<typename PacketScalar, bool ReversePacket> struct reverse_packet_cond$/;"	s	namespace:Eigen::internal
reverse_packet_cond	external/Eigen/src/Core/Reverse.h	/^template<typename PacketScalar> struct reverse_packet_cond<PacketScalar,false>$/;"	s	namespace:Eigen::internal
rgbd_filename_	OptApp.h	/^	std::string rgbd_filename_;$/;"	m	class:COptApp
rgbd_traj_	OptApp.h	/^	RGBDTrajectory rgbd_traj_;$/;"	m	class:COptApp
rhs	external/Eigen/src/Core/CwiseBinaryOp.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::CwiseBinaryOp
rhs	external/Eigen/src/Core/Product.h	/^    const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	class:Product
rhs	external/Eigen/src/Core/ProductBase.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::ProductBase
rhs	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::CoeffBasedProduct
rhs	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::SparseDenseOuterProduct
rhs	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::SparseDiagonalProduct
rhs	external/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const { return m_rhs; }$/;"	f	class:Eigen::SparseSparseProduct
rhs	external/Eigen/src/misc/Solve.h	/^  inline const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	struct:Eigen::internal::solve_retval_base
rhs	external/Eigen/src/misc/SparseSolve.h	/^  inline const RhsNestedCleaned& rhs() const { return m_rhs; }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
rhs	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE const _RhsNested& rhs() const {$/;"	f	class:Eigen::internal::SkylineProduct
rhs	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline VectorType& rhs() $/;"	f	class:Eigen::MatrixMarketIterator
rhsNorm	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    double rhsNorm() const { return m_rhsn; }$/;"	f	class:Eigen::IterationController
rhs_length	external/Eigen/src/Core/products/Parallelizer.h	/^  Index rhs_length;$/;"	m	struct:Eigen::internal::GemmParallelInfo
rhs_start	external/Eigen/src/Core/products/Parallelizer.h	/^  Index rhs_start;$/;"	m	struct:Eigen::internal::GemmParallelInfo
rightCols	external/Eigen/src/plugins/BlockMethods.h	/^inline ColsBlockXpr rightCols(Index n)$/;"	f
rightCols	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstColsBlockXpr rightCols(Index n) const$/;"	f
rightCols	external/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNColsBlockXpr<N>::Type rightCols() const$/;"	f
rightCols	external/Eigen/src/plugins/BlockMethods.h	/^inline typename NColsBlockXpr<N>::Type rightCols()$/;"	f
rightHouseholderSequence	external/Eigen/src/Householder/HouseholderSequence.h	/^HouseholderSequence<VectorsType,CoeffsType,OnTheRight> rightHouseholderSequence(const VectorsType& v, const CoeffsType& h)$/;"	f	namespace:Eigen
rint	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
rint_ceil	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_ceil (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
rint_floor	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_floor(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
rint_round	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_round(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
rint_trunc	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal rint_trunc(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
root	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal root(const mpreal& v, unsigned long int k, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
roots	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootsType& roots() const { return m_roots; }$/;"	f	class:Eigen::PolynomialSolverBase
roots_to_monicPolynomial	external/unsupported/Eigen/src/Polynomials/PolynomialUtils.h	/^void roots_to_monicPolynomial( const RootVector& rv, Polynomial& poly )$/;"	f	namespace:Eigen
rotate	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::rotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
rotate	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotate(const RotationType& rotation)$/;"	f	class:Eigen::Transform
rotation	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::rotation() const$/;"	f	class:Eigen::Transform
rotation	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::rotation() const$/;"	f	class:Eigen::Transform
rotation_base_generic_product_selector	external/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector< RotationDerived, DiagonalMatrix<Scalar,Dim,MaxDim>, false >$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	external/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,MatrixType,false>$/;"	s	namespace:Eigen::internal
rotation_base_generic_product_selector	external/Eigen/src/Geometry/RotationBase.h	/^struct rotation_base_generic_product_selector<RotationDerived,OtherVectorType,true>$/;"	s	namespace:Eigen::internal
round	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal round(const mpreal& v)$/;"	f	namespace:mpfr
row	external/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::all_unroller::__anon23
row	external/Eigen/src/Core/BooleanRedux.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::any_unroller::__anon24
row	external/Eigen/src/Core/SelfAdjointView.h	/^    row = (UnrollCount-1) % Derived1::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon185
row	external/Eigen/src/Core/SelfAdjointView.h	/^    row = (UnrollCount-1) % Derived1::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon186
row	external/Eigen/src/Core/TriangularMatrix.h	/^    row = (UnrollCount-1) % Derived1::RowsAtCompileTime$/;"	e	enum:Eigen::internal::triangular_assignment_selector::__anon198
row	external/Eigen/src/Core/Visitor.h	/^    row = (UnrollCount-1) % Derived::RowsAtCompileTime$/;"	e	enum:Eigen::internal::visitor_impl::__anon205
row	external/Eigen/src/Core/Visitor.h	/^  Index row, col;$/;"	m	struct:Eigen::internal::coeff_visitor
row	external/Eigen/src/SparseCore/CoreIterators.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::DenseBase::InnerIterator
row	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
row	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
row	external/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index row() const { return IsRowMajor ? m_outer : this->index(); }$/;"	f	class:Eigen::SparseInnerVectorSet::InnerIterator
row	external/Eigen/src/SparseCore/SparseBlock.h	/^        inline Index row() const { return IsRowMajor ? m_outer : this->index(); }$/;"	f	class:Eigen::SparseInnerVectorSet::ReverseInnerIterator
row	external/Eigen/src/SparseCore/SparseBlock.h	/^SparseInnerVectorSet<Derived,1> SparseMatrixBase<Derived>::row(Index i)$/;"	f	class:Eigen::SparseMatrixBase
row	external/Eigen/src/SparseCore/SparseBlock.h	/^const SparseInnerVectorSet<Derived,1> SparseMatrixBase<Derived>::row(Index i) const$/;"	f	class:Eigen::SparseMatrixBase
row	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return Lhs::IsRowMajor ? m_lhsIter.row() : index(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
row	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_lhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
row	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index row() const { return m_rhsIter.row(); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
row	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Index row() const { return Transpose ? Base::row() : m_outer; }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
row	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline Index row() const { return m_outer; }$/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
row	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
row	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : index(); }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
row	external/Eigen/src/SparseCore/SparseTranspose.h	/^    inline typename TransposeImpl<MatrixType,Sparse>::Index row() const { return Base::col(); }$/;"	f	class:Eigen::TransposeImpl::InnerIterator
row	external/Eigen/src/SparseCore/SparseTranspose.h	/^    inline typename TransposeImpl<MatrixType,Sparse>::Index row() const { return Base::col(); }$/;"	f	class:Eigen::TransposeImpl::ReverseInnerIterator
row	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index row() const { return Base::row(); }$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
row	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index row() const { return Base::row(); }$/;"	f	class:Eigen::SparseTriangularView::ReverseInnerIterator
row	external/Eigen/src/SparseCore/SparseUtil.h	/^  const Index& row() const { return m_row; }$/;"	f	class:Eigen::Triplet
row	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Index row() const { return IsColVector ? index() : 0; }$/;"	f	class:Eigen::SparseVector::InnerIterator
row	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Index row() const { return IsColVector ? index() : 0; }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
row	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowXpr row(Index i) const$/;"	f
row	external/Eigen/src/plugins/BlockMethods.h	/^inline RowXpr row(Index i)$/;"	f
row	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index row() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
row	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index row() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
row	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^        inline Index row() const { return IsRowMajor ? m_outer : this->index(); }$/;"	f	class:Eigen::SparseInnerVectorSet::InnerIterator
row	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : Base::index(); }$/;"	f	class:Eigen::DynamicSparseMatrix::InnerIterator
row	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index row() const { return IsRowMajor ? m_outer : Base::index(); }$/;"	f	class:Eigen::DynamicSparseMatrix::ReverseInnerIterator
rowIndexByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE Index rowIndexByOuterInner(Index outer, Index inner) const$/;"	f	class:Eigen::DenseCoeffsBase
rowOffset	external/Eigen/src/Core/Diagonal.h	/^    EIGEN_STRONG_INLINE Index rowOffset() const { return m_index.value()>0 ? 0 : -m_index.value(); }$/;"	f	class:Eigen::Diagonal
rowPrefix	external/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSeparator	external/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowSpacer	external/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowStride	external/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index rowStride() const$/;"	f	class:Eigen::DenseCoeffsBase
rowSuffix	external/Eigen/src/Core/IO.h	/^  std::string rowPrefix, rowSuffix, rowSeparator, rowSpacer;$/;"	m	struct:Eigen::IOFormat
rowfacfl	external/SuiteSparse/Include/cholmod_core.h	/^    double rowfacfl ;	    \/* # of flops in last call to cholmod_rowfac *\/$/;"	m	struct:cholmod_common_struct
rows	external/Eigen/src/Cholesky/LDLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LDLT
rows	external/Eigen/src/Cholesky/LLT.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::LLT
rows	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    inline Index rows() const { return m_cholmodFactor->n; }$/;"	f	class:Eigen::CholmodBase
rows	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ArrayWrapper
rows	external/Eigen/src/Core/ArrayWrapper.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::MatrixWrapper
rows	external/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrix
rows	external/Eigen/src/Core/BandMatrix.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
rows	external/Eigen/src/Core/Block.h	/^    inline Index rows() const { return m_blockRows.value(); }$/;"	f	class:Eigen::Block
rows	external/Eigen/src/Core/CwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::CwiseBinaryOp
rows	external/Eigen/src/Core/CwiseNullaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::CwiseNullaryOp
rows	external/Eigen/src/Core/CwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_xpr.rows(); }$/;"	f	class:Eigen::CwiseUnaryOp
rows	external/Eigen/src/Core/CwiseUnaryView.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::CwiseUnaryView
rows	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex rows(void) const {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	external/Eigen/src/Core/DenseStorage.h	/^    inline DenseIndex rows(void) const {return m_rows;}$/;"	f	class:Eigen::DenseStorage
rows	external/Eigen/src/Core/DenseStorage.h	/^    static inline DenseIndex rows(void) {return _Rows;}$/;"	f	class:Eigen::DenseStorage
rows	external/Eigen/src/Core/Diagonal.h	/^    inline Index rows() const$/;"	f	class:Eigen::Diagonal
rows	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline Index rows() const { return diagonal().size(); }$/;"	f	class:Eigen::DiagonalBase
rows	external/Eigen/src/Core/DiagonalProduct.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::DiagonalProduct
rows	external/Eigen/src/Core/EigenBase.h	/^  inline Index rows() const { return derived().rows(); }$/;"	f	struct:Eigen::EigenBase
rows	external/Eigen/src/Core/Flagged.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Flagged
rows	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::ForceAlignedAccess
rows	external/Eigen/src/Core/MapBase.h	/^    inline Index rows() const { return m_rows.value(); }$/;"	f	class:Eigen::MapBase
rows	external/Eigen/src/Core/NestByValue.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::NestByValue
rows	external/Eigen/src/Core/PermutationMatrix.h	/^    inline Index rows() const { return indices().size(); }$/;"	f	class:Eigen::PermutationBase
rows	external/Eigen/src/Core/PermutationMatrix.h	/^    inline int rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::permut_matrix_product_retval
rows	external/Eigen/src/Core/PermutationMatrix.h	/^    inline int rows() const { return m_permutation.rows(); }$/;"	f	class:Eigen::Transpose
rows	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_storage.rows(); }$/;"	f	class:Eigen::PlainObjectBase
rows	external/Eigen/src/Core/Product.h	/^    inline Index rows() const { return m_lhs.rows(); }$/;"	f	class:Product
rows	external/Eigen/src/Core/ProductBase.h	/^    inline Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::ProductBase
rows	external/Eigen/src/Core/Replicate.h	/^    inline Index rows() const { return m_matrix.rows() * m_rowFactor.value(); }$/;"	f	class:Eigen::Replicate
rows	external/Eigen/src/Core/ReturnByValue.h	/^    inline Index rows() const { return static_cast<const Derived*>(this)->rows(); }$/;"	f	class:Eigen::ReturnByValue
rows	external/Eigen/src/Core/Reverse.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::Reverse
rows	external/Eigen/src/Core/Select.h	/^    Index rows() const { return m_condition.rows(); }$/;"	f	class:Eigen::Select
rows	external/Eigen/src/Core/SelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SelfAdjointView
rows	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SelfCwiseBinaryOp
rows	external/Eigen/src/Core/SolveTriangular.h	/^  inline Index rows() const { return m_rhs.rows(); }$/;"	f	struct:Eigen::internal::triangular_solve_retval
rows	external/Eigen/src/Core/Swap.h	/^    inline Index rows() const { return m_expression.rows(); }$/;"	f	class:Eigen::SwapWrapper
rows	external/Eigen/src/Core/Transpose.h	/^    inline Index rows() const { return m_matrix.cols(); }$/;"	f	class:Eigen::Transpose
rows	external/Eigen/src/Core/Transpositions.h	/^    inline int rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
rows	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::TriangularBase
rows	external/Eigen/src/Core/TriangularMatrix.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::TriangularView
rows	external/Eigen/src/Core/VectorwiseOp.h	/^    Index rows() const { return (Direction==Vertical   ? 1 : m_matrix.rows()); }$/;"	f	class:Eigen::PartialReduxExpr
rows	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::CoeffBasedProduct
rows	external/Eigen/src/Eigen2Support/Minor.h	/^    inline Index rows() const { return m_matrix.rows() - 1; }$/;"	f	class:Eigen::Minor
rows	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^    Index rows() const { return m_hess.packedMatrix().rows(); }$/;"	f	struct:Eigen::internal::HessenbergDecompositionMatrixHReturnType
rows	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^    Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::TridiagonalizationMatrixTReturnType
rows	external/Eigen/src/Geometry/Homogeneous.h	/^    inline Index rows() const { return m_matrix.rows() + (int(Direction)==Vertical   ? 1 : 0); }$/;"	f	class:Eigen::Homogeneous
rows	external/Eigen/src/Geometry/Homogeneous.h	/^  inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_left_product_impl
rows	external/Eigen/src/Geometry/Homogeneous.h	/^  inline Index rows() const { return m_lhs.rows(); }$/;"	f	struct:Eigen::internal::homogeneous_right_product_impl
rows	external/Eigen/src/Householder/HouseholderSequence.h	/^    Index rows() const { return Side==OnTheLeft ? m_vectors.rows() : m_vectors.cols(); }$/;"	f	class:Eigen::HouseholderSequence
rows	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    Index rows() const { return m_invdiag.size(); }$/;"	f	class:Eigen::DiagonalPreconditioner
rows	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^    Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::IncompleteLUT
rows	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Index rows() const { return mp_matrix ? mp_matrix->rows() : 0; }$/;"	f	class:Eigen::IterativeSolverBase
rows	external/Eigen/src/LU/FullPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::FullPivLU
rows	external/Eigen/src/LU/Inverse.h	/^  inline Index rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::inverse_impl
rows	external/Eigen/src/LU/PartialPivLU.h	/^    inline Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::PartialPivLU
rows	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PastixBase
rows	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    inline Index rows() const { return m_size; }$/;"	f	class:Eigen::PardisoImpl
rows	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::ColPivHouseholderQR
rows	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    Index rows() const { return m_qr.rows(); }$/;"	f	struct:Eigen::internal::FullPivHouseholderQRMatrixQReturnType
rows	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::FullPivHouseholderQR
rows	external/Eigen/src/QR/HouseholderQR.h	/^    inline Index rows() const { return m_qr.rows(); }$/;"	f	class:Eigen::HouseholderQR
rows	external/Eigen/src/SVD/JacobiSVD.h	/^    inline Index rows() const { return m_rows; }$/;"	f	class:Eigen::JacobiSVD
rows	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SimplicialCholeskyBase
rows	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::MappedSparseMatrix
rows	external/Eigen/src/SparseCore/SparseBlock.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::SparseInnerVectorSet
rows	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return Tr ? m_rhs.rows() : m_lhs.rows(); }$/;"	f	class:Eigen::SparseDenseOuterProduct
rows	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::SparseDiagonalProduct
rows	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? m_outerSize : m_innerSize; }$/;"	f	class:Eigen::SparseMatrix
rows	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index rows() const { return derived().rows(); }$/;"	f	class:Eigen::SparseMatrixBase
rows	external/Eigen/src/SparseCore/SparsePermutation.h	/^    inline int rows() const { return m_matrix.rows(); }$/;"	f	struct:Eigen::internal::permut_sparsematrix_product_retval
rows	external/Eigen/src/SparseCore/SparseProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const { return m_lhs.rows(); }$/;"	f	class:Eigen::SparseSparseProduct
rows	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSelfAdjointView
rows	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseSymmetricPermutationProduct
rows	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseTriangularView
rows	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsColVector ? m_size : 1; }$/;"	f	class:Eigen::SparseVector
rows	external/Eigen/src/SparseCore/SparseView.h	/^  inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SparseView
rows	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline Index rows() const { return m_matrix.rows(); }$/;"	f	class:Eigen::SuperLUBase
rows	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline Index rows() const { return m_copyMatrix.rows(); }$/;"	f	class:Eigen::UmfPackLU
rows	external/Eigen/src/misc/Image.h	/^  inline Index rows() const { return m_dec.rows(); }$/;"	f	struct:Eigen::internal::image_retval_base
rows	external/Eigen/src/misc/Kernel.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::kernel_retval_base
rows	external/Eigen/src/misc/Solve.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_base
rows	external/Eigen/src/misc/SparseSolve.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::solve_retval_with_guess
rows	external/Eigen/src/misc/SparseSolve.h	/^  inline Index rows() const { return m_dec.cols(); }$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
rows	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    Index rows() const { return m_lu.rows(); }$/;"	f	class:Eigen::IncompleteLU
rows	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^    Index rows() const { return m_src.rows(); }$/;"	f	struct:Eigen::MatrixExponentialReturnValue
rows	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    Index rows() const { return m_A.rows(); }$/;"	f	class:Eigen::MatrixFunctionReturnValue
rows	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  Index rows() const { return m_A.rows(); }$/;"	f	class:Eigen::MatrixLogarithmReturnValue
rows	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^    Index rows() const { return m_src.rows(); }$/;"	f	class:Eigen::MatrixSquareRootReturnValue
rows	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index rows() const {$/;"	f	class:Eigen::SkylineMatrix
rows	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index rows() const {$/;"	f	class:Eigen::SkylineMatrixBase
rows	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    EIGEN_STRONG_INLINE Index rows() const {$/;"	f	class:Eigen::internal::SkylineProduct
rows	external/unsupported/Eigen/src/SparseExtra/BlockOfDynamicSparseMatrix.h	/^    EIGEN_STRONG_INLINE Index rows() const { return IsRowMajor ? m_outerSize.value() : m_matrix.rows(); }$/;"	f	class:Eigen::SparseInnerVectorSet
rows	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline Index rows() const { return IsRowMajor ? outerSize() : m_innerSize; }$/;"	f	class:Eigen::DynamicSparseMatrix
rowsTranspositions	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    const IntColVectorType& rowsTranspositions() const$/;"	f	class:Eigen::FullPivHouseholderQR
rows_select	external/Eigen/src/Core/GeneralProduct.h	/^    rows_select = product_size_category<Rows,MaxRows>::value,$/;"	e	enum:Eigen::internal::product_type::__anon115
rowwise	external/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::rowwise() const$/;"	f	class:Eigen::DenseBase
rowwise	external/Eigen/src/Core/VectorwiseOp.h	/^DenseBase<Derived>::rowwise()$/;"	f	class:Eigen::DenseBase
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_DONT_INLINE void run(const Derived& src, OtherDerived& dst, typename Derived::Index start, typename Derived::Index end)$/;"	f	struct:Eigen::internal::unaligned_assign_impl
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.derived()); }$/;"	f	struct:Eigen::internal::assign_selector
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.eval()); }$/;"	f	struct:Eigen::internal::assign_selector
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose()); }$/;"	f	struct:Eigen::internal::assign_selector
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& dst, const OtherDerived& other) { return dst.lazyAssign(other.transpose().eval()); }$/;"	f	struct:Eigen::internal::assign_selector
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::assign_LinearTraversal_CompleteUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::assign_innervec_CompleteUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &, int) {}$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_InnerUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &, const Derived2 &, int) {}$/;"	f	struct:Eigen::internal::assign_innervec_InnerUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_CompleteUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_LinearTraversal_CompleteUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_impl
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_innervec_CompleteUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src, int outer)$/;"	f	struct:Eigen::internal::assign_DefaultTraversal_InnerUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(Derived1 &dst, const Derived2 &src, int outer)$/;"	f	struct:Eigen::internal::assign_innervec_InnerUnrolling
run	external/Eigen/src/Core/Assign.h	/^  static EIGEN_STRONG_INLINE void run(const Derived&, OtherDerived&, typename Derived::Index, typename Derived::Index) {}$/;"	f	struct:Eigen::internal::unaligned_assign_impl
run	external/Eigen/src/Core/Assign.h	/^  static inline void run(Derived1 &, const Derived2 &) { }$/;"	f	struct:Eigen::internal::assign_impl
run	external/Eigen/src/Core/Assign.h	/^  static inline void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::assign_impl
run	external/Eigen/src/Core/Assign_MKL.h	/^  static inline void run(Derived1& dst, const CwiseUnaryOp<UnaryOp, Derived2>& src)$/;"	f	struct:Eigen::internal::vml_assign_impl
run	external/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::all_unroller
run	external/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &) { return false; }$/;"	f	struct:Eigen::internal::any_unroller
run	external/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat) { return mat.coeff(0, 0); }$/;"	f	struct:Eigen::internal::all_unroller
run	external/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat) { return mat.coeff(0, 0); }$/;"	f	struct:Eigen::internal::any_unroller
run	external/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::all_unroller
run	external/Eigen/src/Core/BooleanRedux.h	/^  static inline bool run(const Derived &mat)$/;"	f	struct:Eigen::internal::any_unroller
run	external/Eigen/src/Core/CwiseNullaryOp.h	/^  static EIGEN_STRONG_INLINE Derived& run(Derived& m)$/;"	f	struct:Eigen::internal::setIdentity_impl
run	external/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline typename Derived::Index run(const Derived& m)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	external/Eigen/src/Core/DenseCoeffsBase.h	/^  static inline typename Derived::Index run(const Derived&)$/;"	f	struct:Eigen::internal::first_aligned_impl
run	external/Eigen/src/Core/Dot.h	/^  static inline RealScalar run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	external/Eigen/src/Core/Dot.h	/^  static inline ResScalar run(const MatrixBase<T>& a, const MatrixBase<U>& b)$/;"	f	struct:Eigen::internal::dot_nocheck
run	external/Eigen/src/Core/Dot.h	/^  static inline typename NumTraits<typename traits<Derived>::Scalar>::Real run(const MatrixBase<Derived>& m)$/;"	f	struct:Eigen::internal::lpNorm_selector
run	external/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, typename Derived::RealScalar prec)$/;"	f	struct:Eigen::internal::isApprox_selector
run	external/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, typename Derived::RealScalar prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	external/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived& y, typename Derived::RealScalar)$/;"	f	struct:Eigen::internal::isApprox_selector
run	external/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const OtherDerived&, typename Derived::RealScalar)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_object_selector
run	external/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar& y, typename Derived::RealScalar prec)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	external/Eigen/src/Core/Fuzzy.h	/^  static bool run(const Derived& x, const typename Derived::RealScalar&, typename Derived::RealScalar)$/;"	f	struct:Eigen::internal::isMuchSmallerThan_scalar_selector
run	external/Eigen/src/Core/GeneralProduct.h	/^  static EIGEN_DONT_INLINE void run(const ProductType& prod, Dest& dest, typename ProductType::Scalar alpha) {$/;"	f	struct:Eigen::internal::outer_product_selector
run	external/Eigen/src/Core/GeneralProduct.h	/^  static inline void run(const ProductType& prod, Dest& dest, typename ProductType::Scalar alpha)$/;"	f	struct:Eigen::internal::gemv_selector
run	external/Eigen/src/Core/GeneralProduct.h	/^  static void run(const ProductType& prod, Dest& dest, typename ProductType::Scalar alpha)$/;"	f	struct:Eigen::internal::gemv_selector
run	external/Eigen/src/Core/GenericPacketMath.h	/^  static inline void run(PacketType&, const PacketType&) {}$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/IO.h	/^  static inline int run()$/;"	f	struct:Eigen::internal::significant_decimals_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline NewType run(const OldType& x)$/;"	f	struct:Eigen::internal::cast_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::abs_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::hypot_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const std::complex<RealScalar>& x)$/;"	f	struct:Eigen::internal::abs2_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const std::complex<RealScalar>& x)$/;"	f	struct:Eigen::internal::imag_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar run(const std::complex<RealScalar>& x)$/;"	f	struct:Eigen::internal::real_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline RealScalar& run(Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run()$/;"	f	struct:Eigen::internal::random_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar x, Scalar y)$/;"	f	struct:Eigen::internal::pow_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::conj_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::norm1_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x)$/;"	f	struct:Eigen::internal::sqrt_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::atan2_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::pow_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar& x, const Scalar& y)$/;"	f	struct:Eigen::internal::random_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar&)$/;"	f	struct:Eigen::internal::sqrt_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline Scalar run(const Scalar&, const Scalar&)$/;"	f	struct:Eigen::internal::atan2_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline bool run()$/;"	f	struct:Eigen::internal::random_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline const RealScalar& run(const Scalar& x)$/;"	f	struct:Eigen::internal::real_ref_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline const Scalar run(const Scalar&)$/;"	f	struct:Eigen::internal::imag_ref_default_impl
run	external/Eigen/src/Core/MathFunctions.h	/^  static inline std::complex<RealScalar> run(const std::complex<RealScalar>& x)$/;"	f	struct:Eigen::internal::conj_impl
run	external/Eigen/src/Core/PlainObjectBase.h	/^  static inline void run(MatrixTypeA& a, MatrixTypeB& b)$/;"	f	struct:Eigen::internal::matrix_swap_impl
run	external/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index rows, Index cols)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	external/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, Index size)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	external/Eigen/src/Core/PlainObjectBase.h	/^  static void run(DenseBase<Derived>& _this, const DenseBase<OtherDerived>& other)$/;"	f	struct:Eigen::internal::conservative_resize_like_impl
run	external/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	external/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE PacketScalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_vec_unroller
run	external/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	external/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived &mat, const Func&)$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	external/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived& mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	external/Eigen/src/Core/Redux.h	/^  static EIGEN_STRONG_INLINE Scalar run(const Derived&, const Func&) { return Scalar(); }$/;"	f	struct:Eigen::internal::redux_novec_unroller
run	external/Eigen/src/Core/Redux.h	/^  static Scalar run(const Derived& mat, const Func& func)$/;"	f	struct:Eigen::internal::redux_impl
run	external/Eigen/src/Core/Reverse.h	/^  static inline PacketScalar run(const PacketScalar& x) { return preverse(x); }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	external/Eigen/src/Core/Reverse.h	/^  static inline PacketScalar run(const PacketScalar& x) { return x; }$/;"	f	struct:Eigen::internal::reverse_packet_cond
run	external/Eigen/src/Core/SelfAdjointView.h	/^  static inline void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	external/Eigen/src/Core/SelfAdjointView.h	/^  static inline void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	external/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_selector
run	external/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs& lhs, Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	external/Eigen/src/Core/SolveTriangular.h	/^  static void run(const Lhs&, Rhs&) {}$/;"	f	struct:Eigen::internal::triangular_solver_unroller
run	external/Eigen/src/Core/Transpose.h	/^    static void run(const Derived& dst, const OtherDerived& other)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	external/Eigen/src/Core/Transpose.h	/^    static void run(const Derived&, const OtherDerived&)$/;"	f	struct:Eigen::internal::checkTransposeAliasing_impl
run	external/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const CwiseBinaryOp<BinOp,DerivedA,DerivedB>& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	external/Eigen/src/Core/Transpose.h	/^  static bool run(const Scalar* dest, const OtherDerived& src)$/;"	f	struct:Eigen::internal::check_transpose_aliasing_run_time_selector
run	external/Eigen/src/Core/Transpose.h	/^  static void run(MatrixType& m) {$/;"	f	struct:Eigen::internal::inplace_transpose_selector
run	external/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Derived1 &, const Derived2 &) {}$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	external/Eigen/src/Core/TriangularMatrix.h	/^  static inline void run(Derived1 &dst, const Derived2 &src)$/;"	f	struct:Eigen::internal::triangular_assignment_selector
run	external/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived &mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	external/Eigen/src/Core/Visitor.h	/^  static inline void run(const Derived& mat, Visitor& visitor)$/;"	f	struct:Eigen::internal::visitor_impl
run	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/NEON/Complex.h	/^  EIGEN_STRONG_INLINE static void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet1cd& \/*first*\/, const Packet1cd& \/*second*\/)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/SSE/Complex.h	/^  static EIGEN_STRONG_INLINE void run(Packet2cf& first, const Packet2cf& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet2d& first, const Packet2d& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4f& first, const Packet4f& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  static EIGEN_STRONG_INLINE void run(Packet4i& first, const Packet4i& second)$/;"	f	struct:Eigen::internal::palign_impl
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index \/*row*\/, Index \/*col*\/, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index \/*row*\/, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index \/*col*\/, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Packet &res)$/;"	f	struct:Eigen::internal::product_packet_impl
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, Packet& res)$/;"	f	struct:Eigen::internal::product_packet_impl
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, RetScalar &res)$/;"	f	struct:Eigen::internal::product_coeff_impl
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, RetScalar& res)$/;"	f	struct:Eigen::internal::product_coeff_impl
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::PacketScalar &pres)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_unroller
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_impl
run	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  static EIGEN_STRONG_INLINE void run(Index row, Index col, const Lhs& lhs, const Rhs& rhs, typename Lhs::Scalar &res)$/;"	f	struct:Eigen::internal::product_coeff_vectorized_dyn_selector
run	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, A& a, B& b, C& c, T& \/*t*\/)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    EIGEN_ALWAYS_INLINE static void run(const CJ& cj, T& a, T& b, T& c, T& t)$/;"	f	struct:Eigen::internal::gebp_madd_selector
run	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^static void run(Index rows, Index cols, Index depth,$/;"	f	struct:Eigen::internal::general_matrix_matrix_product
run	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* _lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^  static EIGEN_STRONG_INLINE void run(Index size, Index depth,const LhsScalar* lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::general_matrix_matrix_triangular_product
run	external/Eigen/src/Core/products/GeneralMatrixVector.h	/^EIGEN_DONT_INLINE static void run($/;"	f	struct:Eigen::internal::general_matrix_vector_product
run	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static EIGEN_DONT_INLINE void run($/;"	f	struct:Eigen::internal::product_selfadjoint_matrix
run	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_selfadjoint_matrix
run	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^static EIGEN_DONT_INLINE void run($/;"	f	struct:Eigen::internal::selfadjoint_matrix_vector_product
run	external/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(Index size, Scalar* mat, Index stride, const Scalar* vec, Scalar alpha)$/;"	f	struct:Eigen::selfadjoint_rank1_update
run	external/Eigen/src/Core/products/SelfadjointProduct.h	/^  static void run(MatrixType& mat, const OtherType& other, typename MatrixType::Scalar alpha)$/;"	f	struct:Eigen::selfadjoint_product_selector
run	external/Eigen/src/Core/products/SelfadjointRank2Update.h	/^  static void run(Scalar* mat, Index stride, const UType& u, const VType& v, Scalar alpha)$/;"	f	struct:Eigen::internal::selfadjoint_rank2_update_selector
run	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  static EIGEN_DONT_INLINE void run($/;"	f	struct:Eigen::internal::product_triangular_matrix_matrix
run	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  static EIGEN_STRONG_INLINE void run($/;"	f	struct:Eigen::internal::product_triangular_matrix_matrix
run	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^  static EIGEN_DONT_INLINE  void run(Index _rows, Index _cols, const LhsScalar* _lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::triangular_matrix_vector_product
run	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^  static void run(Index _rows, Index _cols, const LhsScalar* _lhs, Index lhsStride,$/;"	f	struct:Eigen::internal::triangular_matrix_vector_product
run	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^  static void run(const TriangularProduct<Mode,true,Lhs,false,Rhs,true>& prod, Dest& dest, typename TriangularProduct<Mode,true,Lhs,false,Rhs,true>::Scalar alpha)$/;"	f	struct:Eigen::internal::trmv_selector
run	external/Eigen/src/Core/products/TriangularSolverMatrix.h	/^  static EIGEN_DONT_INLINE void run($/;"	f	struct:Eigen::internal::triangular_solve_matrix
run	external/Eigen/src/Core/products/TriangularSolverVector.h	/^  static void run(Index size, const LhsScalar* _lhs, Index lhsStride, RhsScalar* rhs)$/;"	f	struct:Eigen::internal::triangular_solve_vector
run	external/Eigen/src/Core/util/BlasUtil.h	/^  static EIGEN_STRONG_INLINE To run(const From& x) { return x; }$/;"	f	struct:Eigen::internal::get_factor
run	external/Eigen/src/Core/util/BlasUtil.h	/^  static EIGEN_STRONG_INLINE typename NumTraits<Scalar>::Real run(const Scalar& x) { return real(x); }$/;"	f	struct:Eigen::internal::get_factor
run	external/Eigen/src/Core/util/BlasUtil.h	/^  static const typename T::Scalar* run(const T& m)$/;"	f	struct:Eigen::internal::extract_data_selector
run	external/Eigen/src/Core/util/BlasUtil.h	/^  static typename T::Scalar* run(const T&) { return 0; }$/;"	f	struct:Eigen::internal::extract_data_selector
run	external/Eigen/src/Core/util/Memory.h	/^  static inline void run(const T* start, const T* end, T* target)$/;"	f	struct:Eigen::internal::smart_copy_helper
run	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  static inline void run(Quaternion<Scalar>& q, const Other& mat)$/;"	f	struct:Eigen::ei_quaternion_assign_impl
run	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  static inline void run(Quaternion<Scalar>& q, const Other& vec)$/;"	f	struct:Eigen::ei_quaternion_assign_impl
run	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^    static inline void run(Transform *transform, const MatrixBase<OtherDerived>& other)$/;"	f	struct:Eigen::Transform::construct_from_matrix
run	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  static ResultType run(const TransformType& tr, const Other& other)$/;"	f	struct:Eigen::ei_transform_product_impl
run	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^  static void run(ComplexSchur<MatrixType>& _this, const MatrixType& matrix, bool computeU)$/;"	f	struct:Eigen::internal::complex_schur_reduce_to_hessenberg
run	external/Eigen/src/Eigenvalues/MatrixBaseEigenvalues.h	/^  run(const MatrixBase<Derived>& m)$/;"	f	class:Eigen::internal::eigenvalues_selector::MatrixBase
run	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& eig, const typename SolverType::MatrixType& A, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^  static inline void run(SolverType& solver, const MatrixType& mat, int options)$/;"	f	struct:Eigen::internal::direct_selfadjoint_eigenvalues
run	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^  static void run(MatrixType& mat, DiagonalType& diag, SubDiagonalType&, bool extractQ)$/;"	f	struct:Eigen::internal::tridiagonalization_inplace_selector
run	external/Eigen/src/Geometry/Homogeneous.h	/^  static const type& run (const TransformType& x) { return x.matrix(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	external/Eigen/src/Geometry/Homogeneous.h	/^  static const type& run(const type &x) { return x; }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	external/Eigen/src/Geometry/Homogeneous.h	/^  static type run (const TransformType& x) { return x.affine(); }$/;"	f	struct:Eigen::internal::take_matrix_for_product
run	external/Eigen/src/Geometry/OrthoMethods.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	external/Eigen/src/Geometry/OrthoMethods.h	/^  static inline VectorType run(const Derived& src)$/;"	f	struct:Eigen::internal::unitOrthogonal_selector
run	external/Eigen/src/Geometry/Quaternion.h	/^  static EIGEN_STRONG_INLINE Quaternion<Scalar> run(const QuaternionBase<Derived1>& a, const QuaternionBase<Derived2>& b){$/;"	f	struct:Eigen::internal::quat_product
run	external/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> static inline void run(QuaternionBase<Derived>& q, const Other& mat)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	external/Eigen/src/Geometry/Quaternion.h	/^  template<class Derived> static inline void run(QuaternionBase<Derived>& q, const Other& vec)$/;"	f	struct:Eigen::internal::quaternionbase_assign_impl
run	external/Eigen/src/Geometry/RotationBase.h	/^  static EIGEN_STRONG_INLINE ReturnType run(const RotationDerived& r, const OtherVectorType& v)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	external/Eigen/src/Geometry/RotationBase.h	/^  static inline ReturnType run(const RotationDerived& r, const DiagonalMatrix<Scalar,Dim,MaxDim>& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	external/Eigen/src/Geometry/RotationBase.h	/^  static inline ReturnType run(const RotationDerived& r, const MatrixType& m)$/;"	f	struct:Eigen::internal::rotation_base_generic_product_selector
run	external/Eigen/src/Geometry/Transform.h	/^  static EIGEN_STRONG_INLINE ResultType run(const TransformType& T, const MatrixType& other)$/;"	f	struct:Eigen::internal::transform_right_product_impl
run	external/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Lhs& lhs, const Rhs& rhs)$/;"	f	struct:Eigen::internal::transform_transform_product_impl
run	external/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other, const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	external/Eigen/src/Geometry/Transform.h	/^  static ResultType run(const Other& other,const TransformType& tr)$/;"	f	struct:Eigen::internal::transform_left_product_impl
run	external/Eigen/src/Geometry/Transform.h	/^  static inline AffinePart run(MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	external/Eigen/src/Geometry/Transform.h	/^  static inline ConstAffinePart run(const MatrixType& m)$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	external/Eigen/src/Geometry/Transform.h	/^  static inline MatrixType& run(MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	external/Eigen/src/Geometry/Transform.h	/^  static inline const MatrixType& run(const MatrixType& m) { return m; }$/;"	f	struct:Eigen::internal::transform_take_affine_part
run	external/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,AffineCompact,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	external/Eigen/src/Geometry/Transform.h	/^  static inline void run(Transform<typename Other::Scalar,Dim,Mode,Options> *transform, const Other& other)$/;"	f	struct:Eigen::internal::transform_construct_from_matrix
run	external/Eigen/src/Geometry/Transform.h	/^  static inline void run(const TransformType& m, TransformType& res)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	external/Eigen/src/Geometry/Transform.h	/^  static inline void run(const TransformType&, TransformType&)$/;"	f	struct:Eigen::internal::projective_transform_inverse
run	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  run(const VectorLhs& lhs, const VectorRhs& rhs)$/;"	f	struct:Eigen::internal::cross3_impl
run	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<double> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	external/Eigen/src/Geometry/arch/Geometry_SSE.h	/^  static inline Quaternion<float> run(const QuaternionBase<Derived>& _a, const QuaternionBase<OtherDerived>& _b)$/;"	f	struct:Eigen::internal::quat_product
run	external/Eigen/src/LU/Determinant.h	/^  static inline typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	external/Eigen/src/LU/Determinant.h	/^  static typename traits<Derived>::Scalar run(const Derived& m)$/;"	f	struct:Eigen::internal::determinant_impl
run	external/Eigen/src/LU/Inverse.h	/^  static inline void run($/;"	f	struct:Eigen::internal::compute_inverse_and_det_with_check
run	external/Eigen/src/LU/Inverse.h	/^  static inline void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse
run	external/Eigen/src/LU/Inverse.h	/^  static void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	external/Eigen/src/LU/arch/Inverse_SSE.h	/^  static void run(const MatrixType& matrix, ResultType& result)$/;"	f	struct:Eigen::internal::compute_inverse_size4
run	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    static Index run( _MKL_DSS_HANDLE_t pt, Index maxfct, Index mnum, Index type, Index phase, Index n, void *a,$/;"	f	struct:Eigen::internal::pardiso_run_selector
run	external/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, ColPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	external/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, FullPivHouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	external/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, HouseholderQRPreconditioner>& svd, const MatrixType& matrix)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	external/Eigen/src/SVD/JacobiSVD.h	/^  bool run(JacobiSVD<MatrixType, QRPreconditioner>&, const MatrixType&)$/;"	f	class:Eigen::internal::qr_preconditioner_impl
run	external/Eigen/src/SVD/JacobiSVD.h	/^  static void run(typename SVD::WorkMatrixType& work_matrix, SVD& svd, Index p, Index q)$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	external/Eigen/src/SVD/JacobiSVD.h	/^  static void run(typename SVD::WorkMatrixType&, SVD&, Index, Index) {}$/;"	f	struct:Eigen::internal::svd_precondition_2x2_block_to_be_real
run	external/Eigen/src/SparseCore/ConservativeSparseSparseProduct.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res)$/;"	f	struct:Eigen::internal::conservative_sparse_sparse_product_selector
run	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^  static void run(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, typename Res::Scalar alpha)$/;"	f	struct:Eigen::internal::sparse_time_dense_product_impl
run	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^  static void run(const Lhs& lhs, const Rhs& rhs, ResultType& res, RealScalar tolerance)$/;"	f	struct:Eigen::internal::sparse_sparse_product_with_pruning_selector
run	external/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_selector
run	external/Eigen/src/SparseCore/TriangularSolver.h	/^  static void run(const Lhs& lhs, Rhs& other)$/;"	f	struct:Eigen::internal::sparse_solve_triangular_sparse_selector
run	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  static void run(MatrixType& mat, SluMatrix& res)$/;"	f	struct:Eigen::SluMatrixMapHelper
run	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  static void run(A& a, B& b) {$/;"	f	struct:Eigen::internal::make_coherent_impl
run	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^  static void run(A&, B&) {}$/;"	f	struct:Eigen::internal::make_coherent_impl
run	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^    static void run(const Lhs& lhs, const Rhs& rhs, ResultType & res) {$/;"	f	struct:Eigen::internal::skyline_product_selector
run	external/unsupported/test/matrix_function.cpp	/^  static MatrixType run(const typename MatrixType::Index size)$/;"	f	struct:randomMatrixWithImagEivals
run	external/unsupported/test/matrix_square_root.cpp	/^  static void run(MatrixType& result, typename MatrixType::Index size)$/;"	f	struct:generateTestMatrix
rwupdt	external/unsupported/Eigen/src/NonLinearOptimization/rwupdt.h	/^void rwupdt($/;"	f	namespace:Eigen::internal
s	external/Eigen/src/Jacobi/Jacobi.h	/^    Scalar s() const { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	external/Eigen/src/Jacobi/Jacobi.h	/^    Scalar& s() { return m_s; }$/;"	f	class:Eigen::JacobiRotation
s	external/SuiteSparse/Include/cholmod_core.h	/^    void *s ;		\/* size ssize, integer part of supernodes *\/$/;"	m	struct:cholmod_factor_struct
same_or_left_bits	external/unsupported/test/mpreal/dlmalloc.c	2793;"	d	file:
sample	external/Eigen/src/Geometry/AlignedBox.h	/^  inline VectorType sample() const$/;"	f	class:Eigen::AlignedBox
sample_filename_	OptApp.h	/^	std::string sample_filename_;$/;"	m	class:COptApp
sample_num_	OptApp.h	/^	int sample_num_;$/;"	m	class:COptApp
saveMarket	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool saveMarket(const SparseMatrixType& mat, const std::string& filename, int sym = 0)$/;"	f	namespace:Eigen
saveMarketVector	external/unsupported/Eigen/src/SparseExtra/MarketIO.h	/^bool saveMarketVector (const VectorType& vec, const std::string& filename)$/;"	f	namespace:Eigen
sbinptr	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_chunk* sbinptr;  \/* The type of bins of chunks *\/$/;"	t	typeref:struct:malloc_chunk	file:
scalar_abs2_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_abs2_op {$/;"	s	namespace:Eigen::internal
scalar_abs_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_abs_op {$/;"	s	namespace:Eigen::internal
scalar_acos_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_acos_op {$/;"	s	namespace:Eigen::internal
scalar_add_op	external/Eigen/src/Core/Functors.h	/^  inline scalar_add_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_add_op
scalar_add_op	external/Eigen/src/Core/Functors.h	/^  inline scalar_add_op(const scalar_add_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_add_op
scalar_add_op	external/Eigen/src/Core/Functors.h	/^struct scalar_add_op {$/;"	s	namespace:Eigen::internal
scalar_asin_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_asin_op {$/;"	s	namespace:Eigen::internal
scalar_binary_pow_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar, typename OtherScalar> struct scalar_binary_pow_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_and_op	external/Eigen/src/Core/Functors.h	/^struct scalar_boolean_and_op {$/;"	s	namespace:Eigen::internal
scalar_boolean_or_op	external/Eigen/src/Core/Functors.h	/^struct scalar_boolean_or_op {$/;"	s	namespace:Eigen::internal
scalar_cast_op	external/Eigen/src/Core/Functors.h	/^struct scalar_cast_op {$/;"	s	namespace:Eigen::internal
scalar_conj_product_op	external/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_conj_product_op {$/;"	s	namespace:Eigen::internal
scalar_conjugate_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_conjugate_op {$/;"	s	namespace:Eigen::internal
scalar_constant_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_constant_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_constant_op(const scalar_constant_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_constant_op
scalar_constant_op	external/Eigen/src/Core/Functors.h	/^struct scalar_constant_op {$/;"	s	namespace:Eigen::internal
scalar_cos_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_cos_op {$/;"	s	namespace:Eigen::internal
scalar_cube_op	external/Eigen/src/Core/Functors.h	/^struct scalar_cube_op {$/;"	s	namespace:Eigen::internal
scalar_difference_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_difference_op {$/;"	s	namespace:Eigen::internal
scalar_exp_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_exp_op {$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, false, true>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_default_impl<Scalar, true, false>$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	external/Eigen/src/Core/MathFunctions.h	/^struct scalar_fuzzy_impl : scalar_fuzzy_default_impl<Scalar, NumTraits<Scalar>::IsComplex, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
scalar_fuzzy_impl	external/Eigen/src/Core/MathFunctions.h	/^template<> struct scalar_fuzzy_impl<bool>$/;"	s	namespace:Eigen::internal
scalar_hypot_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_hypot_op {$/;"	s	namespace:Eigen::internal
scalar_identity_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_identity_op {$/;"	s	namespace:Eigen::internal
scalar_imag_op	external/Eigen/src/Core/Functors.h	/^struct scalar_imag_op {$/;"	s	namespace:Eigen::internal
scalar_imag_ref_op	external/Eigen/src/Core/Functors.h	/^struct scalar_imag_ref_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_mult_op	external/Eigen/src/Core/Functors.h	/^  scalar_inverse_mult_op(const Scalar& other) : m_other(other) {}$/;"	f	struct:Eigen::internal::scalar_inverse_mult_op
scalar_inverse_mult_op	external/Eigen/src/Core/Functors.h	/^struct scalar_inverse_mult_op {$/;"	s	namespace:Eigen::internal
scalar_inverse_op	external/Eigen/src/Core/Functors.h	/^struct scalar_inverse_op {$/;"	s	namespace:Eigen::internal
scalar_log_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_log_op {$/;"	s	namespace:Eigen::internal
scalar_max_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_max_op {$/;"	s	namespace:Eigen::internal
scalar_max_op	external/Eigen/src/Eigen2Support/Cwise.h	/^    const EIGEN_CWISE_BINOP_RETURN_TYPE(internal::scalar_max_op)$/;"	f	class:Eigen::Cwise
scalar_min_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_min_op {$/;"	s	namespace:Eigen::internal
scalar_min_op	external/Eigen/src/Eigen2Support/Cwise.h	/^    const EIGEN_CWISE_BINOP_RETURN_TYPE(internal::scalar_min_op)$/;"	f	class:Eigen::Cwise
scalar_multiple2_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple2_op(const Scalar2& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
scalar_multiple2_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple2_op(const scalar_multiple2_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_multiple2_op
scalar_multiple2_op	external/Eigen/src/Core/Functors.h	/^struct scalar_multiple2_op {$/;"	s	namespace:Eigen::internal
scalar_multiple_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple_op(const Scalar& other) : m_other(other) { }$/;"	f	struct:Eigen::internal::scalar_multiple_op
scalar_multiple_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_multiple_op(const scalar_multiple_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_multiple_op
scalar_multiple_op	external/Eigen/src/Core/Functors.h	/^struct scalar_multiple_op {$/;"	s	namespace:Eigen::internal
scalar_opposite_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_opposite_op {$/;"	s	namespace:Eigen::internal
scalar_pow_op	external/Eigen/src/Core/Functors.h	/^  inline scalar_pow_op(const Scalar& exponent) : m_exponent(exponent) {}$/;"	f	struct:Eigen::internal::scalar_pow_op
scalar_pow_op	external/Eigen/src/Core/Functors.h	/^  inline scalar_pow_op(const scalar_pow_op& other) : m_exponent(other.m_exponent) { }$/;"	f	struct:Eigen::internal::scalar_pow_op
scalar_pow_op	external/Eigen/src/Core/Functors.h	/^struct scalar_pow_op {$/;"	s	namespace:Eigen::internal
scalar_product_op	external/Eigen/src/Core/Functors.h	/^template<typename LhsScalar,typename RhsScalar> struct scalar_product_op {$/;"	s	namespace:Eigen::internal
scalar_product_traits	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<T,T>$/;"	s	namespace:Eigen
scalar_product_traits	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<T,std::complex<T> >$/;"	s	namespace:Eigen
scalar_product_traits	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct scalar_product_traits<std::complex<T>, T>$/;"	s	namespace:Eigen
scalar_product_traits	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^struct scalar_product_traits<AutoDiffScalar<DerType>,typename DerType::Scalar>$/;"	s	namespace:Eigen::internal
scalar_product_traits	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^template<typename A_Scalar, int A_Rows, int A_Cols, int A_Options, int A_MaxRows, int A_MaxCols> struct scalar_product_traits<A_Scalar, Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols> >$/;"	s	namespace:Eigen::internal
scalar_product_traits	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^template<typename A_Scalar, int A_Rows, int A_Cols, int A_Options, int A_MaxRows, int A_MaxCols> struct scalar_product_traits<Matrix<A_Scalar, A_Rows, A_Cols, A_Options, A_MaxRows, A_MaxCols>,A_Scalar>$/;"	s	namespace:Eigen::internal
scalar_quotient1_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_quotient1_op(const Scalar& other) : m_other(other) {}$/;"	f	struct:Eigen::internal::scalar_quotient1_op
scalar_quotient1_op	external/Eigen/src/Core/Functors.h	/^  EIGEN_STRONG_INLINE scalar_quotient1_op(const scalar_quotient1_op& other) : m_other(other.m_other) { }$/;"	f	struct:Eigen::internal::scalar_quotient1_op
scalar_quotient1_op	external/Eigen/src/Core/Functors.h	/^struct scalar_quotient1_op {$/;"	s	namespace:Eigen::internal
scalar_quotient_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_quotient_op {$/;"	s	namespace:Eigen::internal
scalar_random_op	external/Eigen/src/Core/Random.h	/^template<typename Scalar> struct scalar_random_op {$/;"	s	namespace:Eigen::internal
scalar_real_op	external/Eigen/src/Core/Functors.h	/^struct scalar_real_op {$/;"	s	namespace:Eigen::internal
scalar_real_ref_op	external/Eigen/src/Core/Functors.h	/^struct scalar_real_ref_op {$/;"	s	namespace:Eigen::internal
scalar_sin_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_sin_op {$/;"	s	namespace:Eigen::internal
scalar_sqrt_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_sqrt_op {$/;"	s	namespace:Eigen::internal
scalar_square_op	external/Eigen/src/Core/Functors.h	/^struct scalar_square_op {$/;"	s	namespace:Eigen::internal
scalar_sum_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_sum_op {$/;"	s	namespace:Eigen::internal
scalar_tan_op	external/Eigen/src/Core/Functors.h	/^template<typename Scalar> struct scalar_tan_op {$/;"	s	namespace:Eigen::internal
scalar_type	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef double scalar_type;$/;"	t	struct:Eigen::internal::fftw_plan
scalar_type	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef float scalar_type;$/;"	t	struct:Eigen::internal::fftw_plan
scalar_type	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      typedef long double scalar_type;$/;"	t	struct:Eigen::internal::fftw_plan
scale	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::scale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
scale	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^inline Transform<Scalar,Dim>& Transform<Scalar,Dim>::scale(Scalar s)$/;"	f	class:Eigen::Transform
scale	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::scale(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
scale	external/Eigen/src/Geometry/Transform.h	/^inline Transform<Scalar,Dim,Mode,Options>& Transform<Scalar,Dim,Mode,Options>::scale(Scalar s)$/;"	f	class:Eigen::Transform
scaleAndAddTo	external/Eigen/src/Core/GeneralProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, Scalar alpha) const$/;"	f	class:Eigen::GeneralProduct
scaleAndAddTo	external/Eigen/src/Core/GeneralProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dst, Scalar alpha) const$/;"	f	class:Eigen::GeneralProduct
scaleAndAddTo	external/Eigen/src/Core/ProductBase.h	/^    inline void scaleAndAddTo(Dest& dst,Scalar alpha) const { derived().scaleAndAddTo(dst,alpha); }$/;"	f	class:Eigen::ProductBase
scaleAndAddTo	external/Eigen/src/Core/ProductBase.h	/^    inline void scaleAndAddTo(Dest& dst,Scalar alpha) const { m_prod.derived().scaleAndAddTo(dst,alpha * m_alpha); }$/;"	f	class:Eigen::ScaledProduct
scaleAndAddTo	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dst, Scalar alpha) const$/;"	f	class:Eigen::GeneralProduct
scaleAndAddTo	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dst, Scalar alpha) const$/;"	f	struct:Eigen::SelfadjointProductMatrix
scaleAndAddTo	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dest, Scalar alpha) const$/;"	f	struct:Eigen::SelfadjointProductMatrix
scaleAndAddTo	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dst, Scalar alpha) const$/;"	f	struct:Eigen::TriangularProduct
scaleAndAddTo	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^  template<typename Dest> void scaleAndAddTo(Dest& dst, Scalar alpha) const$/;"	f	struct:Eigen::TriangularProduct
scaleAndAddTo	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, Scalar alpha) const$/;"	f	class:Eigen::DenseTimeSparseProduct
scaleAndAddTo	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, Scalar alpha) const$/;"	f	class:Eigen::SparseTimeDenseProduct
scaleAndAddTo	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename Dest> void scaleAndAddTo(Dest& \/*dest*\/, Scalar \/*alpha*\/) const$/;"	f	class:Eigen::DenseTimeSparseSelfAdjointProduct
scaleAndAddTo	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    template<typename Dest> void scaleAndAddTo(Dest& dest, Scalar alpha) const$/;"	f	class:Eigen::SparseSelfAdjointTimeDenseProduct
scomplex	external/Eigen/src/Core/util/MKL_support.h	/^typedef std::complex<float>  scomplex;$/;"	t	namespace:Eigen
searchLowerIndex	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
searchLowerIndex	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Index searchLowerIndex(size_t start, size_t end, Index key) const$/;"	f	class:Eigen::internal::CompressedStorage
sec	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sec(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sech	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sech (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
second	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^    RealPacket second;$/;"	m	struct:Eigen::internal::gebp_traits::DoublePacket
second	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  int second;$/;"	m	struct:Eigen::internal::vector_int_pair
seg	external/unsupported/test/mpreal/dlmalloc.c	/^  msegment   seg;$/;"	m	struct:malloc_state	file:
segment	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::segment(Index start) const$/;"	f	class:Eigen::DenseBase
segment	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::segment(Index start)$/;"	f	class:Eigen::DenseBase
segment	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::segment(Index start, Index size) const$/;"	f	class:Eigen::DenseBase
segment	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::segment(Index start, Index size)$/;"	f	class:Eigen::DenseBase
segment_holding	external/unsupported/test/mpreal/dlmalloc.c	/^static msegmentptr segment_holding(mstate m, char* addr) {$/;"	f	file:
segment_holds	external/unsupported/test/mpreal/dlmalloc.c	2553;"	d	file:
select	external/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(const DenseBase<ThenDerived>& thenMatrix,$/;"	f	class:Eigen::DenseBase
select	external/Eigen/src/Core/Select.h	/^DenseBase<Derived>::select(typename ElseDerived::Scalar thenScalar,$/;"	f	class:Eigen::DenseBase
selectComplexRoot_withRespectToNorm	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootType& selectComplexRoot_withRespectToNorm( squaredNormBinaryPredicate& pred ) const$/;"	f	class:Eigen::PolynomialSolverBase
selectRealRoot_withRespectToAbsRealPart	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& selectRealRoot_withRespectToAbsRealPart($/;"	f	class:Eigen::PolynomialSolverBase
selectRealRoot_withRespectToRealPart	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& selectRealRoot_withRespectToRealPart($/;"	f	class:Eigen::PolynomialSolverBase
selected	external/SuiteSparse/Include/cholmod_core.h	/^    int selected ;	\/* The best method found. *\/$/;"	m	struct:cholmod_common_struct
selector	external/Eigen/src/Core/GeneralProduct.h	/^  typedef product_type_selector<rows_select, cols_select, depth_select> selector;$/;"	t	struct:Eigen::internal::product_type
selfadjointView	external/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::MatrixBase
selfadjointView	external/Eigen/src/Core/SelfAdjointView.h	/^MatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::MatrixBase
selfadjointView	external/Eigen/src/Core/TriangularMatrix.h	/^    SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView()$/;"	f	class:Eigen::TriangularView
selfadjointView	external/Eigen/src/Core/TriangularMatrix.h	/^    const SelfAdjointView<MatrixTypeNestedNonRef,Mode> selfadjointView() const$/;"	f	class:Eigen::TriangularView
selfadjointView	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^SparseSelfAdjointView<Derived, UpLo> SparseMatrixBase<Derived>::selfadjointView()$/;"	f	class:Eigen::SparseMatrixBase
selfadjointView	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^const SparseSelfAdjointView<Derived, UpLo> SparseMatrixBase<Derived>::selfadjointView() const$/;"	f	class:Eigen::SparseMatrixBase
selfadjoint_matrix_vector_product	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct selfadjoint_matrix_vector_product$/;"	s	namespace:Eigen::internal
selfadjoint_matrix_vector_product_symv	external/Eigen/src/Core/products/SelfadjointMatrixVector_MKL.h	/^struct selfadjoint_matrix_vector_product_symv :$/;"	s	namespace:Eigen::internal
selfadjoint_product_selector	external/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,false>$/;"	s	namespace:Eigen
selfadjoint_product_selector	external/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_product_selector<MatrixType,OtherType,UpLo,true>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	external/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,ColMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank1_update	external/Eigen/src/Core/products/SelfadjointProduct.h	/^struct selfadjoint_rank1_update<Scalar,Index,RowMajor,UpLo,ConjLhs,ConjRhs>$/;"	s	namespace:Eigen
selfadjoint_rank2_update_selector	external/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Lower>$/;"	s	namespace:Eigen::internal
selfadjoint_rank2_update_selector	external/Eigen/src/Core/products/SelfadjointRank2Update.h	/^struct selfadjoint_rank2_update_selector<Scalar,Index,UType,VType,Upper>$/;"	s	namespace:Eigen::internal
separation	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^    static const RealScalar separation() { return static_cast<RealScalar>(0.1); }$/;"	f	class:Eigen::MatrixFunction
setBounds	external/Eigen/src/SparseCore/AmbiVector.h	/^    void setBounds(Index start, Index end) { m_start = start; m_end = end; }$/;"	f	class:Eigen::internal::AmbiVector
setCallback	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setCallback(void (*t)(const IterationController&))$/;"	f	class:Eigen::IterationController
setConstant	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setConstant(const Scalar& value)$/;"	f	class:Eigen::DenseBase
setConstant	external/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index rows, Index cols, const Scalar& value)$/;"	f	class:Eigen::PlainObjectBase
setConstant	external/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setConstant(Index size, const Scalar& value)$/;"	f	class:Eigen::PlainObjectBase
setConstant	external/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& setConstant(const Scalar& value)$/;"	f	class:Eigen::TriangularView
setCpuCacheSizes	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^inline void setCpuCacheSizes(std::ptrdiff_t l1, std::ptrdiff_t l2)$/;"	f	namespace:Eigen
setDroptol	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::setDroptol(RealScalar droptol)$/;"	f	class:Eigen::IncompleteLUT
setEmpty	external/Eigen/src/Geometry/AlignedBox.h	/^  inline void setEmpty()$/;"	f	class:Eigen::AlignedBox
setFillfactor	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^void IncompleteLUT<Scalar>::setFillfactor(int fillfactor)$/;"	f	class:Eigen::IncompleteLUT
setFlags	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    void setFlags(int f) {$/;"	f	class:Eigen::SkylineInplaceLU
setFromTriplets	external/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_Index>::setFromTriplets(const InputIterators& begin, const InputIterators& end)$/;"	f	class:Eigen::SparseMatrix
setFromTwoVectors	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^inline Quaternion<Scalar>& Quaternion<Scalar>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::Quaternion
setFromTwoVectors	external/Eigen/src/Geometry/Quaternion.h	/^inline Derived& QuaternionBase<Derived>::setFromTwoVectors(const MatrixBase<Derived1>& a, const MatrixBase<Derived2>& b)$/;"	f	class:Eigen::QuaternionBase
setIdentity	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity()$/;"	f	class:Eigen::MatrixBase
setIdentity	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& MatrixBase<Derived>::setIdentity(Index rows, Index cols)$/;"	f	class:Eigen::MatrixBase
setIdentity	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity() { m_diagonal.setOnes(); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setIdentity(Index size) { m_diagonal.setOnes(size); }$/;"	f	class:Eigen::DiagonalMatrix
setIdentity	external/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity()$/;"	f	class:Eigen::PermutationBase
setIdentity	external/Eigen/src/Core/PermutationMatrix.h	/^    void setIdentity(Index size)$/;"	f	class:Eigen::PermutationBase
setIdentity	external/Eigen/src/Core/Transpositions.h	/^    void setIdentity()$/;"	f	class:Eigen::TranspositionsBase
setIdentity	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Quaternion& setIdentity() { m_coeffs << 0, 0, 0, 1; return *this; }$/;"	f	class:Eigen::Quaternion
setIdentity	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  void setIdentity() { m_matrix.setIdentity(); }$/;"	f	class:Eigen::Transform
setIdentity	external/Eigen/src/Geometry/Quaternion.h	/^  inline QuaternionBase& setIdentity() { coeffs() << 0, 0, 0, 1; return *this; }$/;"	f	class:Eigen::QuaternionBase
setIdentity	external/Eigen/src/Geometry/Transform.h	/^  void setIdentity() { m_matrix.setIdentity(); }$/;"	f	class:Eigen::Transform
setIdentity_impl	external/Eigen/src/Core/CwiseNullaryOp.h	/^struct setIdentity_impl<Derived, true>$/;"	s	namespace:Eigen::internal
setInf	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setInf(int sign) $/;"	f	class:mpfr::mpreal
setInvalidKey	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type& map, const KeyType& k)$/;"	f	struct:Eigen::GoogleDenseHashMapTraits
setInvalidKey	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type&, const KeyType&) {}$/;"	f	struct:Eigen::GoogleSparseHashMapTraits
setInvalidKey	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type&, const KeyType&) {}$/;"	f	struct:Eigen::StdMapTraits
setInvalidKey	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^  static void setInvalidKey(Type&, const KeyType&) {}$/;"	f	struct:Eigen::StdUnorderedMapTraits
setIteration	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setIteration(size_t i) { m_nit = i; }$/;"	f	class:Eigen::IterationController
setLength	external/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setLength(Index length)$/;"	f	class:Eigen::HouseholderSequence
setLinSpaced	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(Index size, const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setLinSpaced	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setLinSpaced(const Scalar& low, const Scalar& high)$/;"	f	class:Eigen::DenseBase
setMaxIterations	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setMaxIterations(int maxIters)$/;"	f	class:Eigen::IterativeSolverBase
setMaxIterations	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setMaxIterations(size_t i) { m_maxiter = i; }$/;"	f	class:Eigen::IterationController
setMaxResidual	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setMaxResidual(double r) { m_resmax = r; }$/;"	f	class:Eigen::IterationController
setMode	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    void setMode(CholmodMode mode)$/;"	f	class:Eigen::CholmodDecomposition
setMode	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    SimplicialCholesky& setMode(SimplicialCholeskyMode mode)$/;"	f	class:Eigen::SimplicialCholesky
setNan	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setNan() $/;"	f	class:mpfr::mpreal
setNbThreads	external/Eigen/src/Core/products/Parallelizer.h	/^inline void setNbThreads(int v)$/;"	f	namespace:Eigen
setNoiseLevel	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setNoiseLevel(int n) { m_noise = n; }$/;"	f	class:Eigen::IterationController
setNull	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline void setNull()$/;"	f	class:Eigen::AlignedBox
setNull	external/Eigen/src/Geometry/AlignedBox.h	/^  inline void setNull() { setEmpty(); }$/;"	f	class:Eigen::AlignedBox
setOnes	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setOnes()$/;"	f	class:Eigen::DenseBase
setOnes	external/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setOnes	external/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setOnes(Index size)$/;"	f	class:Eigen::PlainObjectBase
setOnes	external/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& setOnes() { return setConstant(Scalar(1)); }$/;"	f	class:Eigen::TriangularView
setOrderingMethod	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    void setOrderingMethod(int m) {$/;"	f	class:Eigen::SkylineInplaceLU
setPolynomial	external/unsupported/Eigen/src/Polynomials/Companion.h	/^    void setPolynomial( const VectorType& poly )$/;"	f	class:Eigen::internal::companion
setPolynomial	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline void setPolynomial( const OtherPolynomial& poly ){$/;"	f	class:Eigen::PolynomialSolverBase
setPrecision	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    void setPrecision(RealScalar v) {$/;"	f	class:Eigen::SkylineInplaceLU
setPrecision	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setPrecision(int Precision, mp_rnd_t RoundingMode)$/;"	f	class:mpfr::mpreal
setRandom	external/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setRandom	external/Eigen/src/Core/Random.h	/^PlainObjectBase<Derived>::setRandom(Index size)$/;"	f	class:Eigen::PlainObjectBase
setRandom	external/Eigen/src/Core/Random.h	/^inline Derived& DenseBase<Derived>::setRandom()$/;"	f	class:Eigen::DenseBase
setRhsNorm	external/unsupported/Eigen/src/IterativeSolvers/IterationController.h	/^    void setRhsNorm(double r) { m_rhsn = r; }$/;"	f	class:Eigen::IterationController
setScalarType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setScalarType()$/;"	f	struct:Eigen::SluMatrix
setShift	external/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setShift(Index shift)$/;"	f	class:Eigen::HouseholderSequence
setShift	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    Derived& setShift(const RealScalar& offset, const RealScalar& scale = 1)$/;"	f	class:Eigen::SimplicialCholeskyBase
setSign	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal& mpreal::setSign(int sign, mp_rnd_t RoundingMode)$/;"	f	class:mpfr::mpreal
setStorageType	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  void setStorageType(Stype_t t)$/;"	f	struct:Eigen::SluMatrix
setThreshold	external/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivLU
setThreshold	external/Eigen/src/LU/FullPivLU.h	/^    FullPivLU& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivLU
setThreshold	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    ColPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::ColPivHouseholderQR
setThreshold	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(Default_t)$/;"	f	class:Eigen::FullPivHouseholderQR
setThreshold	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    FullPivHouseholderQR& setThreshold(const RealScalar& threshold)$/;"	f	class:Eigen::FullPivHouseholderQR
setTolerance	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  Derived& setTolerance(RealScalar tolerance)$/;"	f	class:Eigen::IterativeSolverBase
setTolerance	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    void setTolerance(double tol)$/;"	f	class:Scaling
setTrans	external/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence& setTrans(bool trans)$/;"	f	class:Eigen::HouseholderSequence
setZero	external/Eigen/src/Cholesky/LDLT.h	/^    void setZero()$/;"	f	class:Eigen::LDLT
setZero	external/Eigen/src/Core/CwiseNullaryOp.h	/^EIGEN_STRONG_INLINE Derived& DenseBase<Derived>::setZero()$/;"	f	class:Eigen::DenseBase
setZero	external/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index rows, Index cols)$/;"	f	class:Eigen::PlainObjectBase
setZero	external/Eigen/src/Core/CwiseNullaryOp.h	/^PlainObjectBase<Derived>::setZero(Index size)$/;"	f	class:Eigen::PlainObjectBase
setZero	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero() { m_diagonal.setZero(); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	external/Eigen/src/Core/DiagonalMatrix.h	/^    inline void setZero(Index size) { m_diagonal.setZero(size); }$/;"	f	class:Eigen::DiagonalMatrix
setZero	external/Eigen/src/Core/TriangularMatrix.h	/^    TriangularView& setZero() { return setConstant(Scalar(0)); }$/;"	f	class:Eigen::TriangularView
setZero	external/Eigen/src/SparseCore/AmbiVector.h	/^void AmbiVector<_Scalar,_Index>::setZero()$/;"	f	class:Eigen::internal::AmbiVector
setZero	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void setZero()$/;"	f	class:Eigen::SparseMatrix
setZero	external/Eigen/src/SparseCore/SparseVector.h	/^    inline void setZero() { m_data.clear(); }$/;"	f	class:Eigen::SparseVector
setZero	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void setZero() {$/;"	f	class:Eigen::SkylineMatrix
setZero	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    void setZero()$/;"	f	class:Eigen::DynamicSparseMatrix
setZero	external/unsupported/test/mpreal/mpreal.h	/^inline mpreal&	mpreal::setZero(int sign)$/;"	f	class:mpfr::mpreal
set_custom_malloc	external/unsupported/test/mpreal/mpreal.cpp	/^	inline void mpreal::set_custom_malloc(void)$/;"	f	class:mpfr::mpreal
set_default_base	external/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_default_base(int base)$/;"	f	class:mpfr::mpreal
set_default_prec	external/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_default_prec(mp_prec_t prec)$/;"	f	class:mpfr::mpreal
set_default_rnd	external/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_default_rnd(mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
set_double_bits	external/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_double_bits(int dbits)$/;"	f	class:mpfr::mpreal
set_emax	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::set_emax (mp_exp_t exp)$/;"	f	class:mpfr::mpreal
set_emin	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::set_emin (mp_exp_t exp)$/;"	f	class:mpfr::mpreal
set_exp	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::set_exp (mp_exp_t e)$/;"	f	class:mpfr::mpreal
set_foot	external/unsupported/test/mpreal/dlmalloc.c	2152;"	d	file:
set_free_with_pinuse	external/unsupported/test/mpreal/dlmalloc.c	2159;"	d	file:
set_from_triplets	external/Eigen/src/SparseCore/SparseMatrix.h	/^void set_from_triplets(const InputIterator& begin, const InputIterator& end, SparseMatrixType& mat, int Options = 0)$/;"	f	namespace:Eigen::internal
set_inuse	external/unsupported/test/mpreal/dlmalloc.c	2912;"	d	file:
set_inuse	external/unsupported/test/mpreal/dlmalloc.c	2935;"	d	file:
set_inuse_and_pinuse	external/unsupported/test/mpreal/dlmalloc.c	2917;"	d	file:
set_inuse_and_pinuse	external/unsupported/test/mpreal/dlmalloc.c	2940;"	d	file:
set_is_malloc_allowed	external/Eigen/src/Core/util/Memory.h	/^inline bool set_is_malloc_allowed(bool new_value) { return is_malloc_allowed_impl(true, new_value); }$/;"	f	namespace:Eigen::internal
set_lock	external/unsupported/test/mpreal/dlmalloc.c	2522;"	d	file:
set_prec	external/unsupported/test/mpreal/mpreal.h	/^inline void mpreal::set_prec(mp_prec_t prec, mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
set_restart	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  void set_restart(const int restart) { m_restart=restart; }$/;"	f	class:Eigen::GMRES
set_size_and_pinuse_of_free_chunk	external/unsupported/test/mpreal/dlmalloc.c	2155;"	d	file:
set_size_and_pinuse_of_inuse_chunk	external/unsupported/test/mpreal/dlmalloc.c	2922;"	d	file:
set_size_and_pinuse_of_inuse_chunk	external/unsupported/test/mpreal/dlmalloc.c	2945;"	d	file:
sflags	external/unsupported/test/mpreal/dlmalloc.c	/^  flag_t       sflags;           \/* mmap and extern flag *\/$/;"	m	struct:malloc_segment	file:
sgn	external/unsupported/test/mpreal/mpreal.h	/^inline int sgn(const mpreal& v)$/;"	f	namespace:mpfr
shear	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::shear(Scalar sx, Scalar sy)$/;"	f	class:Eigen::Transform
shear	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::shear(Scalar sx, Scalar sy)$/;"	f	class:Eigen::Transform
shift	external/Eigen/src/Householder/HouseholderSequence.h	/^    Index shift() const { return m_shift; }    \/**< \\brief Returns the shift of the Householder sequence. *\/$/;"	f	class:Eigen::HouseholderSequence
should_trim	external/unsupported/test/mpreal/dlmalloc.c	2579;"	d	file:
should_trim	external/unsupported/test/mpreal/dlmalloc.c	2581;"	d	file:
sign	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	535;"	d
signedDistance	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Scalar signedDistance(const VectorType& p) const { return p.eigen2_dot(normal()) + offset(); }$/;"	f	class:Eigen::Hyperplane
signedDistance	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Scalar signedDistance(const VectorType& p) const { return normal().dot(p) + offset(); }$/;"	f	class:Eigen::Hyperplane
significant_decimals_default_impl	external/Eigen/src/Core/IO.h	/^struct significant_decimals_default_impl$/;"	s	namespace:Eigen::internal
significant_decimals_default_impl	external/Eigen/src/Core/IO.h	/^struct significant_decimals_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
significant_decimals_impl	external/Eigen/src/Core/IO.h	/^struct significant_decimals_impl$/;"	s	namespace:Eigen::internal
sin	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::sin() const$/;"	f	class:Eigen::Cwise
sin	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sin() const$/;"	f
sin	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::sin() const$/;"	f	class:Eigen::MatrixBase
sin	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^    static Scalar sin(Scalar x, int n)$/;"	f	class:Eigen::StdStemFunctions
sin	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sin(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sin_cos	external/unsupported/test/mpreal/mpreal.h	/^inline int sin_cos(mpreal& s, mpreal& c, const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sing	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    bool sing;$/;"	m	class:Eigen::HybridNonLinearSolver
singularValues	external/Eigen/src/Eigen2Support/SVD.h	/^    const SingularValuesType& singularValues() const { return m_sigma; }$/;"	f	class:Eigen::SVD
singularValues	external/Eigen/src/SVD/JacobiSVD.h	/^    const SingularValuesType& singularValues() const$/;"	f	class:Eigen::JacobiSVD
sinh	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^const MatrixFunctionReturnValue<Derived> MatrixBase<Derived>::sinh() const$/;"	f	class:Eigen::MatrixBase
sinh	external/unsupported/Eigen/src/MatrixFunctions/StemFunction.h	/^    static Scalar sinh(Scalar x, int n)$/;"	f	class:Eigen::StdStemFunctions
sinh	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sinh (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sinh_cosh	external/unsupported/test/mpreal/mpreal.h	/^inline int sinh_cosh(mpreal& s, mpreal& c, const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
size	external/Eigen/src/Core/EigenBase.h	/^  inline Index size() const { return rows() * cols(); }$/;"	f	struct:Eigen::EigenBase
size	external/Eigen/src/Core/GenericPacketMath.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon141
size	external/Eigen/src/Core/PermutationMatrix.h	/^    inline Index size() const { return indices().size(); }$/;"	f	class:Eigen::PermutationBase
size	external/Eigen/src/Core/Transpositions.h	/^    inline Index size() const { return indices().size(); }$/;"	f	class:Eigen::TranspositionsBase
size	external/Eigen/src/Core/Transpositions.h	/^    inline int size() const { return m_transpositions.size(); }$/;"	f	class:Eigen::Transpose
size	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon208
size	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon209
size	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4$/;"	e	enum:Eigen::internal::packet_traits::__anon211
size	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon210
size	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon212
size	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon213
size	external/Eigen/src/Core/arch/NEON/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon214
size	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon215
size	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size = 4,$/;"	e	enum:Eigen::internal::packet_traits::__anon216
size	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^    size=4$/;"	e	enum:Eigen::internal::packet_traits::__anon217
size	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon218
size	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon219
size	external/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 1,$/;"	e	enum:Eigen::internal::packet_traits::__anon222
size	external/Eigen/src/Core/arch/SSE/Complex.h	/^    size = 2,$/;"	e	enum:Eigen::internal::packet_traits::__anon220
size	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon223
size	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon221
size	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=2,$/;"	e	enum:Eigen::internal::packet_traits::__anon228
size	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4$/;"	e	enum:Eigen::internal::packet_traits::__anon229
size	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^    size=4,$/;"	e	enum:Eigen::internal::packet_traits::__anon227
size	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon231
size	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon230
size	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	e	enum:Eigen::internal::unpacket_traits::__anon232
size	external/Eigen/src/SparseCore/AmbiVector.h	/^    Index size() const { return m_size; }$/;"	f	class:Eigen::internal::AmbiVector
size	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline size_t size() const { return m_size; }$/;"	f	class:Eigen::internal::CompressedStorage
size	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    inline Index size() const { return rows() * cols(); }$/;"	f	class:Eigen::SparseMatrixBase
size	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    Index size() const { return m_values.size(); }$/;"	f	class:Eigen::AutoDiffVector
size	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline size_t size() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
size	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline size_t size() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
size	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    inline Index size() const {$/;"	f	class:Eigen::SkylineMatrixBase
size	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t       size;             \/* allocated size *\/$/;"	m	struct:malloc_segment	file:
size_type	external/Eigen/src/Core/util/Memory.h	/^    typedef size_t    size_type;$/;"	t	class:Eigen::aligned_allocator
size_type	external/Eigen/src/StlSupport/details.h	/^    typedef size_t    size_type;$/;"	t	class:Eigen::aligned_allocator_indirection
sizes	external/Eigen/src/Geometry/AlignedBox.h	/^  inline const CwiseBinaryOp< internal::scalar_difference_op<Scalar>, const VectorType, const VectorType> sizes() const$/;"	f	class:Eigen::AlignedBox
skyline_col_major_time_dense_product	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^EIGEN_DONT_INLINE void skyline_col_major_time_dense_product(const Lhs& lhs, const Rhs& rhs, Dest& dst) {$/;"	f	namespace:Eigen::internal
skyline_product_selector	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct skyline_product_selector<Lhs, Rhs, ResultType, ColMajor> {$/;"	s	namespace:Eigen::internal
skyline_product_selector	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct skyline_product_selector<Lhs, Rhs, ResultType, RowMajor> {$/;"	s	namespace:Eigen::internal
skyline_row_major_time_dense_product	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^EIGEN_DONT_INLINE void skyline_row_major_time_dense_product(const Lhs& lhs, const Rhs& rhs, Dest& dst) {$/;"	f	namespace:Eigen::internal
slerp	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^Quaternion<Scalar> Quaternion<Scalar>::slerp(Scalar t, const Quaternion& other) const$/;"	f	class:Eigen::Quaternion
slerp	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^  inline Rotation2D slerp(Scalar t, const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
slerp	external/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::slerp(Scalar t, const QuaternionBase<OtherDerived>& other) const$/;"	f	class:Eigen::QuaternionBase
slerp	external/Eigen/src/Geometry/Rotation2D.h	/^  inline Rotation2D slerp(Scalar t, const Rotation2D& other) const$/;"	f	class:Eigen::Rotation2D
small_index	external/unsupported/test/mpreal/dlmalloc.c	2684;"	d	file:
small_index2size	external/unsupported/test/mpreal/dlmalloc.c	2685;"	d	file:
smallbin_at	external/unsupported/test/mpreal/dlmalloc.c	2689;"	d	file:
smallbins	external/unsupported/test/mpreal/dlmalloc.c	/^  mchunkptr  smallbins[(NSMALLBINS+1)*2];$/;"	m	struct:malloc_state	file:
smallestRealRoot	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RealScalar& smallestRealRoot($/;"	f	class:Eigen::PolynomialSolverBase
smallestRoot	external/unsupported/Eigen/src/Polynomials/PolynomialSolver.h	/^    inline const RootType& smallestRoot() const$/;"	f	class:Eigen::PolynomialSolverBase
smallmap	external/unsupported/test/mpreal/dlmalloc.c	/^  binmap_t   smallmap;$/;"	m	struct:malloc_state	file:
smallmap_is_marked	external/unsupported/test/mpreal/dlmalloc.c	2780;"	d	file:
smart_copy	external/Eigen/src/Core/util/Memory.h	/^template<typename T> void smart_copy(const T* start, const T* end, T* target)$/;"	f	namespace:Eigen::internal
smart_copy_helper	external/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,false> {$/;"	s	namespace:Eigen::internal
smart_copy_helper	external/Eigen/src/Core/util/Memory.h	/^template<typename T> struct smart_copy_helper<T,true> {$/;"	s	namespace:Eigen::internal
smblks	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE smblks;   \/* always 0 *\/$/;"	m	struct:mallinfo	file:
smblks	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE smblks;   \/* always 0 *\/$/;"	m	struct:mallinfo
solve	external/Eigen/src/Cholesky/LDLT.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::LDLT
solve	external/Eigen/src/Cholesky/LDLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LDLT
solve	external/Eigen/src/Cholesky/LLT.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::LLT
solve	external/Eigen/src/Cholesky/LLT.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::LLT
solve	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::CholmodBase
solve	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::CholmodBase
solve	external/Eigen/src/Core/SolveTriangular.h	/^TriangularView<Derived,Mode>::solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularView
solve	external/Eigen/src/Core/TriangularMatrix.h	/^    solve(const MatrixBase<Other>& other) const$/;"	f	class:Eigen::TriangularView
solve	external/Eigen/src/Eigen2Support/LU.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::LU
solve	external/Eigen/src/Eigen2Support/QR.h	/^    bool solve(const MatrixBase<OtherDerived>& b, ResultType *result) const$/;"	f	class:Eigen::QR
solve	external/Eigen/src/Eigen2Support/SVD.h	/^bool SVD<MatrixType>::solve(const MatrixBase<OtherDerived> &b, ResultType* result) const$/;"	f	class:Eigen::SVD
solve	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    inline const Rhs& solve(const Rhs& b) const { return b; }$/;"	f	class:Eigen::IdentityPreconditioner
solve	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::DiagonalPreconditioner
solve	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^     solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::IncompleteLUT
solve	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::IterativeSolverBase
solve	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::IterativeSolverBase
solve	external/Eigen/src/LU/FullPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivLU
solve	external/Eigen/src/LU/PartialPivLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PartialPivLU
solve	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PastixBase
solve	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PastixBase
solve	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PardisoImpl
solve	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::PardisoImpl
solve	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::ColPivHouseholderQR
solve	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::FullPivHouseholderQR
solve	external/Eigen/src/QR/HouseholderQR.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::HouseholderQR
solve	external/Eigen/src/SVD/JacobiSVD.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::JacobiSVD
solve	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SimplicialCholeskyBase
solve	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    solve(const SparseMatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SimplicialCholeskyBase
solve	external/Eigen/src/SparseCore/TriangularSolver.h	/^SparseTriangularView<ExpressionType,Mode>::solve(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseTriangularView
solve	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    inline const internal::solve_retval<SuperLUBase, Rhs> solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::SuperLUBase
solve	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    inline const internal::solve_retval<UmfPackLU, Rhs> solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::UmfPackLU
solve	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^    solve(const MatrixBase<Rhs>& b) const$/;"	f	class:Eigen::IncompleteLU
solve	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solve(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solve	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^bool SkylineInplaceLU<MatrixType>::solve(const MatrixBase<BDerived> &b, MatrixBase<XDerived>* x, const int transposed) const {$/;"	f	class:Eigen::SkylineInplaceLU
solveAuxiliaryEquation	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^     ::solveAuxiliaryEquation(SmallMatrixType& X, const SmallMatrixType& A,$/;"	f	class:Eigen::MatrixSquareRootQuasiTriangular
solveInPlace	external/Eigen/src/Cholesky/LDLT.h	/^bool LDLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LDLT
solveInPlace	external/Eigen/src/Cholesky/LLT.h	/^void LLT<MatrixType,_UpLo>::solveInPlace(MatrixBase<Derived> &bAndX) const$/;"	f	class:Eigen::LLT
solveInPlace	external/Eigen/src/Core/SolveTriangular.h	/^void TriangularView<MatrixType,Mode>::solveInPlace(const MatrixBase<OtherDerived>& _other) const$/;"	f	class:Eigen::TriangularView
solveInPlace	external/Eigen/src/Core/TriangularMatrix.h	/^    void solveInPlace(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::TriangularView
solveInPlace	external/Eigen/src/SparseCore/TriangularSolver.h	/^void SparseTriangularView<ExpressionType,Mode>::solveInPlace(MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseTriangularView
solveInPlace	external/Eigen/src/SparseCore/TriangularSolver.h	/^void SparseTriangularView<ExpressionType,Mode>::solveInPlace(SparseMatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseTriangularView
solveInit	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveInit(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveNumericalDiff	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveNumericalDiff(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveNumericalDiffInit	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveNumericalDiffInit(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveNumericalDiffOneStep	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveNumericalDiffOneStep(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveOneStep	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^HybridNonLinearSolver<FunctorType,Scalar>::solveOneStep(FVectorType  &x)$/;"	f	class:Eigen::HybridNonLinearSolver
solveTriangular	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^Flagged<ExpressionType,Added,Removed>::solveTriangular(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::Flagged
solveTriangular	external/Eigen/src/SparseCore/TriangularSolver.h	/^SparseMatrixBase<Derived>::solveTriangular(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
solveTriangularInPlace	external/Eigen/src/Eigen2Support/TriangularSolver.h	/^void Flagged<ExpressionType,Added,Removed>::solveTriangularInPlace(const MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::Flagged
solveTriangularInPlace	external/Eigen/src/SparseCore/TriangularSolver.h	/^void SparseMatrixBase<Derived>::solveTriangularInPlace(MatrixBase<OtherDerived>& other) const$/;"	f	class:Eigen::SparseMatrixBase
solveTriangularSylvester	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^typename MatrixFunction<MatrixType,AtomicType,1>::DynMatrixType MatrixFunction<MatrixType,AtomicType,1>::solveTriangularSylvester($/;"	f	class:Eigen::MatrixFunction
solveWithGuess	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::BiCGSTAB
solveWithGuess	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::ConjugateGradient
solveWithGuess	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  solveWithGuess(const MatrixBase<Rhs>& b, const Guess& x0) const$/;"	f	class:Eigen::GMRES
solve_retval	external/Eigen/src/Cholesky/LDLT.h	/^struct solve_retval<LDLT<_MatrixType,_UpLo>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/Cholesky/LLT.h	/^struct solve_retval<LLT<_MatrixType, UpLo>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^struct solve_retval<CholmodBase<_MatrixType,_UpLo,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/IterativeLinearSolvers/BasicPreconditioners.h	/^struct solve_retval<DiagonalPreconditioner<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^struct solve_retval<BiCGSTAB<_MatrixType, _Preconditioner>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^struct solve_retval<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/IterativeLinearSolvers/IncompleteLUT.h	/^struct solve_retval<IncompleteLUT<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/LU/FullPivLU.h	/^struct solve_retval<FullPivLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/LU/PartialPivLU.h	/^struct solve_retval<PartialPivLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^struct solve_retval<PastixBase<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^struct solve_retval<PardisoImpl<_Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/QR/ColPivHouseholderQR.h	/^struct solve_retval<ColPivHouseholderQR<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/QR/FullPivHouseholderQR.h	/^struct solve_retval<FullPivHouseholderQR<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/QR/HouseholderQR.h	/^struct solve_retval<HouseholderQR<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/SVD/JacobiSVD.h	/^struct solve_retval<JacobiSVD<_MatrixType, QRPreconditioner>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^struct solve_retval<SimplicialCholeskyBase<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct solve_retval<SuperLUBase<_MatrixType,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^struct solve_retval<UmfPackLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^struct solve_retval<GMRES<_MatrixType, _Preconditioner>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval	external/unsupported/Eigen/src/IterativeSolvers/IncompleteLU.h	/^struct solve_retval<IncompleteLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
solve_retval_base	external/Eigen/src/misc/Solve.h	/^  solve_retval_base(const DecompositionType& dec, const Rhs& rhs)$/;"	f	struct:Eigen::internal::solve_retval_base
solve_retval_base	external/Eigen/src/misc/Solve.h	/^template<typename _DecompositionType, typename Rhs> struct solve_retval_base$/;"	s	namespace:Eigen::internal
solve_retval_with_guess	external/Eigen/src/misc/SparseSolve.h	/^  solve_retval_with_guess(const DecompositionType& dec, const Rhs& rhs, const Guess& guess)$/;"	f	struct:Eigen::internal::solve_retval_with_guess
solve_retval_with_guess	external/Eigen/src/misc/SparseSolve.h	/^template<typename DecompositionType, typename Rhs, typename Guess> struct solve_retval_with_guess$/;"	s	namespace:Eigen::internal
sort	external/Eigen/src/Eigen2Support/SVD.h	/^SVD<MatrixType>& SVD<MatrixType>::sort()$/;"	f	class:Eigen::SVD
sortEigenvalues	external/Eigen/src/Eigenvalues/ComplexEigenSolver.h	/^void ComplexEigenSolver<MatrixType>::sortEigenvalues(bool computeEigenvectors)$/;"	f	class:Eigen::ComplexEigenSolver
sorted	external/SuiteSparse/Include/cholmod_core.h	/^    int sorted ;	\/* TRUE if columns are sorted, FALSE otherwise *\/$/;"	m	struct:cholmod_sparse_struct
span	external/unsupported/Eigen/src/Splines/Spline.h	/^  DenseIndex Spline<_Scalar, _Dim, _Degree>::span(Scalar u) const$/;"	f	class:Eigen::Spline
sparseView	external/Eigen/src/SparseCore/SparseView.h	/^const SparseView<Derived> MatrixBase<Derived>::sparseView(const Scalar& m_reference,$/;"	f	class:Eigen::MatrixBase
sparse_cwise_binary_op_inner_iterator_selector	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE sparse_cwise_binary_op_inner_iterator_selector(const CwiseBinaryXpr& xpr, Index outer)$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
sparse_cwise_binary_op_inner_iterator_selector	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<BinaryOp, Lhs, Rhs, Derived, Sparse, Sparse>$/;"	c	namespace:Eigen::internal
sparse_cwise_binary_op_inner_iterator_selector	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<scalar_product_op<T>, Lhs, Rhs, Derived, Dense, Sparse>$/;"	c	namespace:Eigen::internal
sparse_cwise_binary_op_inner_iterator_selector	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<scalar_product_op<T>, Lhs, Rhs, Derived, Sparse, Dense>$/;"	c	namespace:Eigen::internal
sparse_cwise_binary_op_inner_iterator_selector	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^class sparse_cwise_binary_op_inner_iterator_selector<scalar_product_op<T>, Lhs, Rhs, Derived, Sparse, Sparse>$/;"	c	namespace:Eigen::internal
sparse_diagonal_product_inner_iterator_selector	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^    inline sparse_diagonal_product_inner_iterator_selector($/;"	f	class:Eigen::internal::sparse_diagonal_product_inner_iterator_selector
sparse_diagonal_product_inner_iterator_selector	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^class sparse_diagonal_product_inner_iterator_selector$/;"	c	namespace:Eigen::internal
sparse_eval	external/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Cols> struct sparse_eval<T,1,Cols> {$/;"	s	namespace:Eigen::internal
sparse_eval	external/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows,int Cols> struct sparse_eval {$/;"	s	namespace:Eigen::internal
sparse_eval	external/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T,int Rows> struct sparse_eval<T,Rows,1> {$/;"	s	namespace:Eigen::internal
sparse_eval	external/Eigen/src/SparseCore/SparseUtil.h	/^template<typename T> struct sparse_eval<T,1,1> {$/;"	s	namespace:Eigen::internal
sparse_extra	external/unsupported/test/sparse_extra.cpp	/^template<typename SparseMatrixType> void sparse_extra(const SparseMatrixType& ref)$/;"	f
sparse_solve_retval	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^struct sparse_solve_retval<CholmodBase<_MatrixType,_UpLo,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^struct sparse_solve_retval<IterativeSolverBase<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^struct sparse_solve_retval<PastixBase<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^struct sparse_solve_retval<PardisoImpl<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^struct sparse_solve_retval<SimplicialCholeskyBase<Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^struct sparse_solve_retval<SuperLUBase<_MatrixType,Derived>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^struct sparse_solve_retval<UmfPackLU<_MatrixType>, Rhs>$/;"	s	namespace:Eigen::internal
sparse_solve_retval_base	external/Eigen/src/misc/SparseSolve.h	/^  sparse_solve_retval_base(const DecompositionType& dec, const Rhs& rhs)$/;"	f	struct:Eigen::internal::sparse_solve_retval_base
sparse_solve_retval_base	external/Eigen/src/misc/SparseSolve.h	/^template<typename _DecompositionType, typename Rhs> struct sparse_solve_retval_base$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	external/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	external/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Lower,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	external/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_selector	external/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_selector<Lhs,Rhs,Mode,Upper,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_solve_triangular_sparse_selector	external/Eigen/src/SparseCore/TriangularSolver.h	/^struct sparse_solve_triangular_sparse_selector<Lhs,Rhs,Mode,UpLo,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_impl	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^static void sparse_sparse_product_with_pruning_impl(const Lhs& lhs, const Rhs& rhs, ResultType& res, typename ResultType::RealScalar tolerance)$/;"	f	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,ColMajor,ColMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,ColMajor>$/;"	s	namespace:Eigen::internal
sparse_sparse_product_with_pruning_selector	external/Eigen/src/SparseCore/SparseSparseProductWithPruning.h	/^struct sparse_sparse_product_with_pruning_selector<Lhs,Rhs,ResultType,RowMajor,RowMajor,RowMajor>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^inline void sparse_time_dense_product(const SparseLhsType& lhs, const DenseRhsType& rhs, DenseResType& res, const AlphaType& alpha)$/;"	f	namespace:Eigen::internal
sparse_time_dense_product_impl	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, ColMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, ColMajor, true>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, RowMajor, false>$/;"	s	namespace:Eigen::internal
sparse_time_dense_product_impl	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct sparse_time_dense_product_impl<SparseLhsType,DenseRhsType,DenseResType, RowMajor, true>$/;"	s	namespace:Eigen::internal
spline3d	external/unsupported/test/splines.cpp	/^Spline<double, 3, Dynamic> spline3d()$/;"	f
splitOffTwoRows	external/Eigen/src/Eigenvalues/RealSchur.h	/^inline void RealSchur<MatrixType>::splitOffTwoRows(Index iu, bool computeU, Scalar exshift)$/;"	f	class:Eigen::RealSchur
sqr	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqr(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	external/Eigen/src/Core/MathFunctions.h	/^inline EIGEN_MATHFUNC_RETVAL(sqrt, Scalar) sqrt(const Scalar& x)$/;"	f	namespace:Eigen::internal
sqrt	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::sqrt() const$/;"	f	class:Eigen::Cwise
sqrt	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^sqrt() const$/;"	f
sqrt	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^const MatrixSquareRootReturnValue<Derived> MatrixBase<Derived>::sqrt() const$/;"	f	class:Eigen::MatrixBase
sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const double v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const int v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const long double v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const long int v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const unsigned int v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal sqrt(const unsigned long int v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sqrt_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct sqrt_default_impl$/;"	s	namespace:Eigen::internal
sqrt_default_impl	external/Eigen/src/Core/MathFunctions.h	/^struct sqrt_default_impl<Scalar, true>$/;"	s	namespace:Eigen::internal
sqrt_impl	external/Eigen/src/Core/MathFunctions.h	/^struct sqrt_impl : sqrt_default_impl<Scalar, NumTraits<Scalar>::IsInteger> {};$/;"	s	namespace:Eigen::internal
sqrt_retval	external/Eigen/src/Core/MathFunctions.h	/^struct sqrt_retval$/;"	s	namespace:Eigen::internal
square	external/Eigen/src/Eigen2Support/CwiseOperators.h	/^Cwise<ExpressionType>::square() const$/;"	f	class:Eigen::Cwise
square	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^square() const$/;"	f
squaredDistance	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  RealScalar squaredDistance(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
squaredDistance	external/Eigen/src/Geometry/ParametrizedLine.h	/^  RealScalar squaredDistance(const VectorType& p) const$/;"	f	class:Eigen::ParametrizedLine
squaredExteriorDistance	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbiantDim>::squaredExteriorDistance(const VectorType& p) const$/;"	f	class:Eigen::AlignedBox
squaredExteriorDistance	external/Eigen/src/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const AlignedBox& b) const$/;"	f	class:Eigen::AlignedBox
squaredExteriorDistance	external/Eigen/src/Geometry/AlignedBox.h	/^inline Scalar AlignedBox<Scalar,AmbientDim>::squaredExteriorDistance(const MatrixBase<Derived>& a_p) const$/;"	f	class:Eigen::AlignedBox
squaredNorm	external/Eigen/src/Core/Dot.h	/^EIGEN_STRONG_INLINE typename NumTraits<typename internal::traits<Derived>::Scalar>::Real MatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::MatrixBase
squaredNorm	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_squaredNorm,RealScalar>::Type squaredNorm() const$/;"	f	class:Eigen::VectorwiseOp
squaredNorm	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar squaredNorm() const { return m_coeffs.squaredNorm(); }$/;"	f	class:Eigen::Quaternion
squaredNorm	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar squaredNorm() const { return coeffs().squaredNorm(); }$/;"	f	class:Eigen::QuaternionBase
squaredNorm	external/Eigen/src/SparseCore/SparseDot.h	/^SparseMatrixBase<Derived>::squaredNorm() const$/;"	f	class:Eigen::SparseMatrixBase
squeeze	external/Eigen/src/SparseCore/CompressedStorage.h	/^    void squeeze()$/;"	f	class:Eigen::internal::CompressedStorage
squeeze	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void squeeze() {$/;"	f	class:Eigen::SkylineMatrix
squeeze	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void squeeze() {$/;"	f	class:Eigen::SkylineStorage
ssize	external/SuiteSparse/Include/cholmod_core.h	/^    size_t ssize ;	\/* size of s, integer part of supernodes *\/$/;"	m	struct:cholmod_factor_struct
stableNorm	external/Eigen/src/Core/StableNorm.h	/^MatrixBase<Derived>::stableNorm() const$/;"	f	class:Eigen::MatrixBase
stableNorm	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_stableNorm,RealScalar>::Type stableNorm() const$/;"	f	class:Eigen::VectorwiseOp
stable_norm_kernel	external/Eigen/src/Core/StableNorm.h	/^inline void stable_norm_kernel(const ExpressionType& bl, Scalar& ssq, Scalar& scale, Scalar& invScale)$/;"	f	namespace:Eigen::internal
start	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start() const$/;"	f	class:Eigen::MatrixBase
start	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start()$/;"	f	class:Eigen::MatrixBase
start	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start(Index size) const$/;"	f	class:Eigen::MatrixBase
start	external/Eigen/src/Eigen2Support/VectorBlock.h	/^MatrixBase<Derived>::start(Index size)$/;"	f	class:Eigen::MatrixBase
startCol	external/Eigen/src/Core/Block.h	/^    Index startCol() const $/;"	f	class:Eigen::Block
startFill	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_DEPRECATED void startFill(Index reserve)$/;"	f	class:Eigen::SparseVector
startFill	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    EIGEN_DEPRECATED void startFill(Index reserveSize = 1000)$/;"	f	class:Eigen::DynamicSparseMatrix
startRow	external/Eigen/src/Core/Block.h	/^    Index startRow() const $/;"	f	class:Eigen::Block
startVec	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseMatrix
startVec	external/Eigen/src/SparseCore/SparseVector.h	/^    inline void startVec(Index outer)$/;"	f	class:Eigen::SparseVector
startVec	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline void startVec(Index \/*outer*\/) {}$/;"	f	class:Eigen::DynamicSparseMatrix
static_assertion	external/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion {};$/;"	s	namespace:Eigen::internal
static_assertion	external/Eigen/src/Core/util/StaticAssert.h	/^    struct static_assertion<true>$/;"	s	namespace:Eigen::internal
status	external/SuiteSparse/Include/cholmod_core.h	/^    int status ;	    \/* error code *\/$/;"	m	struct:cholmod_common_struct
std	external/Eigen/src/Core/GlobalFunctions.h	/^namespace std$/;"	n
std	external/Eigen/src/StlSupport/StdDeque.h	/^namespace std {$/;"	n
std	external/Eigen/src/StlSupport/StdList.h	/^namespace std$/;"	n
std	external/Eigen/src/StlSupport/StdVector.h	/^namespace std {$/;"	n
std	external/unsupported/test/mpreal/mpreal.h	/^namespace std$/;"	n
stem_function	external/Eigen/src/Core/util/ForwardDeclarations.h	/^struct stem_function$/;"	s	namespace:Eigen::internal
storage	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^  } storage;$/;"	m	struct:Eigen::SluMatrix	typeref:struct:Eigen::SluMatrix::__anon439
stored	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object1 stored;$/;"	m	struct:Eigen::internal::intersector_helper2
stored	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object1 stored;$/;"	m	struct:Eigen::internal::minimizer_helper2
stored	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object2 stored;$/;"	m	struct:Eigen::internal::intersector_helper1
stored	external/unsupported/Eigen/src/BVH/BVAlgorithms.h	/^  Object2 stored;$/;"	m	struct:Eigen::internal::minimizer_helper1
stride	external/Eigen/src/Core/DenseCoeffsBase.h	/^    inline Index stride() const$/;"	f	class:Eigen::DenseCoeffsBase
stype	external/SuiteSparse/Include/cholmod_core.h	/^    int stype ;		\/* Describes what parts of the matrix are considered:$/;"	m	struct:cholmod_sparse_struct
stype	external/SuiteSparse/Include/cholmod_core.h	/^    int stype ;		\/* Describes what parts of the matrix are considered:$/;"	m	struct:cholmod_triplet_struct
sub	external/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<-1>::Type sub() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
sub	external/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<-1>::Type sub()$/;"	f	class:Eigen::internal::TridiagonalMatrix
subDiagonal	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^Tridiagonalization<MatrixType>::subDiagonal() const$/;"	f	class:Eigen::Tridiagonalization
subTo	external/Eigen/src/Core/DiagonalMatrix.h	/^    void subTo(MatrixBase<DenseDerived> &other) const$/;"	f	class:Eigen::DiagonalBase
subTo	external/Eigen/src/Core/EigenBase.h	/^  template<typename Dest> inline void subTo(Dest& dst) const$/;"	f	struct:Eigen::EigenBase
subTo	external/Eigen/src/Core/ProductBase.h	/^    inline void subTo(Dest& dst) const { scaleAndAddTo(dst, Scalar(-1)); }$/;"	f	class:Eigen::ScaledProduct
subTo	external/Eigen/src/Core/ProductBase.h	/^    inline void subTo(Dest& dst) const { scaleAndAddTo(dst,Scalar(-1)); }$/;"	f	class:Eigen::ProductBase
subVector	external/Eigen/src/Core/VectorwiseOp.h	/^    SubVector subVector(Index i)$/;"	f	class:Eigen::VectorwiseOp
subVectors	external/Eigen/src/Core/VectorwiseOp.h	/^    Index subVectors() const$/;"	f	class:Eigen::VectorwiseOp
subdiagonalEntryIsNeglegible	external/Eigen/src/Eigenvalues/ComplexSchur.h	/^inline bool ComplexSchur<MatrixType>::subdiagonalEntryIsNeglegible(Index i)$/;"	f	class:Eigen::ComplexSchur
subnormalize	external/unsupported/test/mpreal/mpreal.h	/^inline int mpreal::subnormalize (int t,mp_rnd_t rnd_mode)$/;"	f	class:mpfr::mpreal
subs	external/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return derived().subs(); }$/;"	f	class:Eigen::internal::BandMatrixBase
subs	external/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrix
subs	external/Eigen/src/Core/BandMatrix.h	/^    inline Index subs() const { return m_subs.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
succeeded	external/unsupported/Eigen/src/Skyline/SkylineInplaceLU.h	/^    inline bool succeeded(void) const {$/;"	f	class:Eigen::SkylineInplaceLU
sum	external/Eigen/src/Core/Redux.h	/^DenseBase<Derived>::sum() const$/;"	f	class:Eigen::DenseBase
sum	external/Eigen/src/Core/VectorwiseOp.h	/^    const typename ReturnType<internal::member_sum>::Type sum() const$/;"	f	class:Eigen::VectorwiseOp
sum	external/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrix<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseMatrix
sum	external/Eigen/src/SparseCore/SparseRedux.h	/^SparseMatrixBase<Derived>::sum() const$/;"	f	class:Eigen::SparseMatrixBase
sum	external/Eigen/src/SparseCore/SparseRedux.h	/^SparseVector<_Scalar,_Options,_Index>::sum() const$/;"	f	class:Eigen::SparseVector
sum	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    Scalar sum() const { \/*std::cerr << "sum \\n\\n";*\/ \/*std::cerr << m_jacobian.rowwise().sum() << "\\n\\n";*\/ return Scalar(m_values.sum(), m_jacobian.rowwise().sum()); }$/;"	f	class:Eigen::AutoDiffVector
sum	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar sum;$/;"	m	class:Eigen::HybridNonLinearSolver
sum	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar par, sum;$/;"	m	class:Eigen::LevenbergMarquardt
sum	external/unsupported/test/mpreal/mpreal.cpp	/^const mpreal sum (const mpreal tab[], unsigned long int n, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
sumupDuplicates	external/Eigen/src/SparseCore/SparseMatrix.h	/^void SparseMatrix<Scalar,_Options,_Index>::sumupDuplicates()$/;"	f	class:Eigen::SparseMatrix
super	external/Eigen/src/Core/BandMatrix.h	/^    inline const typename Base::template DiagonalIntReturnType<1>::Type super() const$/;"	f	class:Eigen::internal::TridiagonalMatrix
super	external/Eigen/src/Core/BandMatrix.h	/^    inline typename Base::template DiagonalIntReturnType<1>::Type super()$/;"	f	class:Eigen::internal::TridiagonalMatrix
super	external/SuiteSparse/Include/cholmod_core.h	/^    void *super ;	\/* size nsuper+1, first col in each supernode *\/$/;"	m	struct:cholmod_factor_struct
supernodal	external/SuiteSparse/Include/cholmod_core.h	/^    int supernodal ;		\/* If Common->supernodal <= CHOLMOD_SIMPLICIAL$/;"	m	struct:cholmod_common_struct
supernodal_switch	external/SuiteSparse/Include/cholmod_core.h	/^    double supernodal_switch ;	\/* supernodal vs simplicial factorization *\/$/;"	m	struct:cholmod_common_struct
supers	external/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return derived().supers(); }$/;"	f	class:Eigen::internal::BandMatrixBase
supers	external/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrix
supers	external/Eigen/src/Core/BandMatrix.h	/^    inline Index supers() const { return m_supers.value(); }$/;"	f	class:Eigen::internal::BandMatrixWrapper
svd	external/Eigen/src/Eigen2Support/SVD.h	/^MatrixBase<Derived>::svd() const$/;"	f	class:Eigen::MatrixBase
svd_precondition_2x2_block_to_be_real	external/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real {};$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	external/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, false>$/;"	s	namespace:Eigen::internal
svd_precondition_2x2_block_to_be_real	external/Eigen/src/SVD/JacobiSVD.h	/^struct svd_precondition_2x2_block_to_be_real<MatrixType, QRPreconditioner, true>$/;"	s	namespace:Eigen::internal
swap	external/Eigen/src/Core/Array.h	/^    void swap(ArrayBase<OtherDerived> const & other)$/;"	f	class:Eigen::Array
swap	external/Eigen/src/Core/DenseBase.h	/^    void swap(PlainObjectBase<OtherDerived>& other)$/;"	f	class:Eigen::DenseBase
swap	external/Eigen/src/Core/DenseBase.h	/^    void swap(const DenseBase<OtherDerived>& other,$/;"	f	class:Eigen::DenseBase
swap	external/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& ) {}$/;"	f	class:Eigen::DenseStorage
swap	external/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_cols,other.m_cols); }$/;"	f	class:Eigen::DenseStorage
swap	external/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); std::swap(m_rows,other.m_rows); }$/;"	f	class:Eigen::DenseStorage
swap	external/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other) { std::swap(m_data,other.m_data); }$/;"	f	class:Eigen::DenseStorage
swap	external/Eigen/src/Core/DenseStorage.h	/^    inline void swap(DenseStorage& other)$/;"	f	class:Eigen::DenseStorage
swap	external/Eigen/src/Core/Matrix.h	/^    void swap(MatrixBase<OtherDerived> const & other)$/;"	f	class:Eigen::Matrix
swap	external/Eigen/src/Core/TriangularMatrix.h	/^    void swap(MatrixBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularView
swap	external/Eigen/src/Core/TriangularMatrix.h	/^    void swap(TriangularBase<OtherDerived> const & other)$/;"	f	class:Eigen::TriangularView
swap	external/Eigen/src/SparseCore/CompressedStorage.h	/^    void swap(CompressedStorage& other)$/;"	f	class:Eigen::internal::CompressedStorage
swap	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline void swap(SparseMatrix& other)$/;"	f	class:Eigen::SparseMatrix
swap	external/Eigen/src/SparseCore/SparseVector.h	/^    inline void swap(SparseVector& other)$/;"	f	class:Eigen::SparseVector
swap	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline void swap(SkylineMatrix & other) {$/;"	f	class:Eigen::SkylineMatrix
swap	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    void swap(SkylineStorage& other) {$/;"	f	class:Eigen::SkylineStorage
swap	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline void swap(DynamicSparseMatrix& other)$/;"	f	class:Eigen::DynamicSparseMatrix
swap	external/unsupported/test/mpreal/mpreal.h	/^	inline void swap(mpfr::mpreal& x, mpfr::mpreal& y) $/;"	f	namespace:std
swap	external/unsupported/test/mpreal/mpreal.h	/^inline void swap(mpreal& a, mpreal& b) $/;"	f	namespace:mpfr
swapEntriesInSchur	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^void MatrixFunction<MatrixType,AtomicType,1>::swapEntriesInSchur(Index index)$/;"	f	class:Eigen::MatrixFunction
sym	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    inline int sym() { return m_sym; }$/;"	f	class:Eigen::MatrixMarketIterator
symm_pack_lhs	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_lhs$/;"	s	namespace:Eigen::internal
symm_pack_rhs	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct symm_pack_rhs$/;"	s	namespace:Eigen::internal
sync	external/Eigen/src/Core/products/Parallelizer.h	/^  int volatile sync;$/;"	m	struct:Eigen::internal::GemmParallelInfo
syrkStart	external/SuiteSparse/Include/cholmod_core.h	/^    double syrkStart ;          \/* time syrk started *\/$/;"	m	struct:cholmod_common_struct
sys_alloc	external/unsupported/test/mpreal/dlmalloc.c	/^static void* sys_alloc(mstate m, size_t nb) {$/;"	f	file:
sys_trim	external/unsupported/test/mpreal/dlmalloc.c	/^static int sys_trim(mstate m, size_t pad) {$/;"	f	file:
tail	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::tail() const$/;"	f	class:Eigen::DenseBase
tail	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::tail()$/;"	f	class:Eigen::DenseBase
tail	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::tail(Index size) const$/;"	f	class:Eigen::DenseBase
tail	external/Eigen/src/Core/VectorBlock.h	/^DenseBase<Derived>::tail(Index size)$/;"	f	class:Eigen::DenseBase
take_affine_part	external/Eigen/src/Geometry/Transform.h	/^  typedef internal::transform_take_affine_part<Transform> take_affine_part;$/;"	t	class:Eigen::Transform
take_matrix_for_product	external/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product$/;"	s	namespace:Eigen::internal
take_matrix_for_product	external/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Mode, Options> >$/;"	s	namespace:Eigen::internal
take_matrix_for_product	external/Eigen/src/Geometry/Homogeneous.h	/^struct take_matrix_for_product<Transform<Scalar, Dim, Projective, Options> >$/;"	s	namespace:Eigen::internal
tan	external/Eigen/src/plugins/ArrayCwiseUnaryOps.h	/^tan() const$/;"	f
tan	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal tan(const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
tanh	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal tanh (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
taylorConverged	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunctionAtomic.h	/^bool MatrixFunctionAtomic<MatrixType>::taylorConverged(Index s, const MatrixType& F,$/;"	f	class:Eigen::MatrixFunctionAtomic
tbinptr	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_tree_chunk* tbinptr; \/* The type of bins of trees *\/$/;"	t	typeref:struct:malloc_tree_chunk	file:
tchunk	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_tree_chunk  tchunk;$/;"	t	typeref:struct:malloc_tree_chunk	file:
tchunkptr	external/unsupported/test/mpreal/dlmalloc.c	/^typedef struct malloc_tree_chunk* tchunkptr;$/;"	t	typeref:struct:malloc_tree_chunk	file:
temp	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar temp;$/;"	m	class:Eigen::HybridNonLinearSolver
temp	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar temp, temp1, temp2;$/;"	m	class:Eigen::LevenbergMarquardt
temp1	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar temp, temp1, temp2;$/;"	m	class:Eigen::LevenbergMarquardt
temp2	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar temp, temp1, temp2;$/;"	m	class:Eigen::LevenbergMarquardt
test2dHyperbolicRotation	external/unsupported/test/matrix_exponential.cpp	/^void test2dHyperbolicRotation(double tol)$/;"	f
test2dRotation	external/unsupported/test/matrix_exponential.cpp	/^void test2dRotation(double tol)$/;"	f
testChkder	external/unsupported/test/NonLinearOptimization.cpp	/^void testChkder()$/;"	f
testGonioFunctions	external/unsupported/test/matrix_function.cpp	/^void testGonioFunctions(const MatrixType& A)$/;"	f
testHybrd	external/unsupported/test/NonLinearOptimization.cpp	/^void testHybrd()$/;"	f
testHybrd1	external/unsupported/test/NonLinearOptimization.cpp	/^void testHybrd1()$/;"	f
testHybrj	external/unsupported/test/NonLinearOptimization.cpp	/^void testHybrj()$/;"	f
testHybrj1	external/unsupported/test/NonLinearOptimization.cpp	/^void testHybrj1()$/;"	f
testHyperbolicFunctions	external/unsupported/test/matrix_function.cpp	/^void testHyperbolicFunctions(const MatrixType& A)$/;"	f
testIntersect1	external/unsupported/test/BVH.cpp	/^  void testIntersect1()$/;"	f	struct:TreeTest
testIntersect2	external/unsupported/test/BVH.cpp	/^  void testIntersect2()$/;"	f	struct:TreeTest
testLmder	external/unsupported/test/NonLinearOptimization.cpp	/^void testLmder()$/;"	f
testLmder1	external/unsupported/test/NonLinearOptimization.cpp	/^void testLmder1()$/;"	f
testLmdif	external/unsupported/test/NonLinearOptimization.cpp	/^void testLmdif()$/;"	f
testLmdif1	external/unsupported/test/NonLinearOptimization.cpp	/^void testLmdif1()$/;"	f
testLmstr	external/unsupported/test/NonLinearOptimization.cpp	/^void testLmstr()$/;"	f
testLmstr1	external/unsupported/test/NonLinearOptimization.cpp	/^void testLmstr1()$/;"	f
testMatrix	external/unsupported/test/matrix_function.cpp	/^void testMatrix(const MatrixType& A)$/;"	f
testMatrixExponential	external/unsupported/test/matrix_function.cpp	/^void testMatrixExponential(const MatrixType& A)$/;"	f
testMatrixLogarithm	external/unsupported/test/matrix_function.cpp	/^void testMatrixLogarithm(const MatrixType& A)$/;"	f
testMatrixSqrt	external/unsupported/test/matrix_square_root.cpp	/^void testMatrixSqrt(const MatrixType& m)$/;"	f
testMatrixType	external/unsupported/test/matrix_function.cpp	/^void testMatrixType(const MatrixType& m)$/;"	f
testMinimize1	external/unsupported/test/BVH.cpp	/^  void testMinimize1()$/;"	f	struct:TreeTest
testMinimize2	external/unsupported/test/BVH.cpp	/^  void testMinimize2()$/;"	f	struct:TreeTest
testNistBennett5	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistBennett5(void)$/;"	f
testNistBoxBOD	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistBoxBOD(void)$/;"	f
testNistChwirut2	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistChwirut2(void)$/;"	f
testNistEckerle4	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistEckerle4(void)$/;"	f
testNistHahn1	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistHahn1(void)$/;"	f
testNistLanczos1	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistLanczos1(void)$/;"	f
testNistMGH09	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistMGH09(void)$/;"	f
testNistMGH10	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistMGH10(void)$/;"	f
testNistMGH17	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistMGH17(void)$/;"	f
testNistMisra1a	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistMisra1a(void)$/;"	f
testNistMisra1d	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistMisra1d(void)$/;"	f
testNistRat42	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistRat42(void)$/;"	f
testNistRat43	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistRat43(void)$/;"	f
testNistThurber	external/unsupported/test/NonLinearOptimization.cpp	/^void testNistThurber(void)$/;"	f
testPascal	external/unsupported/test/matrix_exponential.cpp	/^void testPascal(double tol)$/;"	f
test_BVH	external/unsupported/test/BVH.cpp	/^void test_BVH()$/;"	f
test_FFTW	external/unsupported/test/FFT.cpp	1;"	d	file:
test_FFTW	external/unsupported/test/FFTW.cpp	/^void test_FFTW()$/;"	f
test_NonLinearOptimization	external/unsupported/test/NonLinearOptimization.cpp	/^void test_NonLinearOptimization()$/;"	f
test_NumericalDiff	external/unsupported/test/NumericalDiff.cpp	/^void test_NumericalDiff()$/;"	f
test_alignedvector3	external/unsupported/test/alignedvector3.cpp	/^void test_alignedvector3()$/;"	f
test_autodiff	external/unsupported/test/autodiff.cpp	/^void test_autodiff()$/;"	f
test_autodiff_jacobian	external/unsupported/test/autodiff.cpp	/^void test_autodiff_jacobian()$/;"	f
test_autodiff_scalar	external/unsupported/test/autodiff.cpp	/^void test_autodiff_scalar()$/;"	f
test_autodiff_vector	external/unsupported/test/autodiff.cpp	/^void test_autodiff_vector()$/;"	f
test_central	external/unsupported/test/NumericalDiff.cpp	/^void test_central()$/;"	f
test_complex	external/unsupported/test/FFTW.cpp	/^void test_complex(int nfft)$/;"	f
test_complex_generic	external/unsupported/test/FFTW.cpp	/^void test_complex_generic(int nfft)$/;"	f
test_forward	external/unsupported/test/NumericalDiff.cpp	/^void test_forward()$/;"	f
test_forward_adolc	external/unsupported/test/forward_adolc.cpp	/^void test_forward_adolc()$/;"	f
test_gmres	external/unsupported/test/gmres.cpp	/^void test_gmres()$/;"	f
test_gmres_T	external/unsupported/test/gmres.cpp	/^template<typename T> void test_gmres_T()$/;"	f
test_isApprox_abs	external/unsupported/test/matrix_function.cpp	/^inline bool test_isApprox_abs(const Type1& a, const Type2& b)$/;"	f
test_kronecker_product	external/unsupported/test/kronecker_product.cpp	/^void test_kronecker_product()$/;"	f
test_matrix_exponential	external/unsupported/test/matrix_exponential.cpp	/^void test_matrix_exponential()$/;"	f
test_matrix_function	external/unsupported/test/matrix_function.cpp	/^void test_matrix_function()$/;"	f
test_matrix_square_root	external/unsupported/test/matrix_square_root.cpp	/^void test_matrix_square_root()$/;"	f
test_mpreal_support	external/unsupported/test/mpreal_support.cpp	/^void test_mpreal_support()$/;"	f
test_openglsupport	external/unsupported/test/openglsupport.cpp	/^void test_openglsupport()$/;"	f
test_polynomialsolver	external/unsupported/test/polynomialsolver.cpp	/^void test_polynomialsolver()$/;"	f
test_polynomialutils	external/unsupported/test/polynomialutils.cpp	/^void test_polynomialutils()$/;"	f
test_random_setter	external/unsupported/test/sparse_extra.cpp	/^bool test_random_setter(DynamicSparseMatrix<T>& sm, const DenseType& ref, const std::vector<Vector2i>& nonzeroCoords)$/;"	f
test_random_setter	external/unsupported/test/sparse_extra.cpp	/^bool test_random_setter(SparseMatrix<Scalar,Options>& sm, const DenseType& ref, const std::vector<Vector2i>& nonzeroCoords)$/;"	f
test_return_by_value	external/unsupported/test/FFTW.cpp	/^void test_return_by_value(int len)$/;"	f
test_scalar	external/unsupported/test/FFTW.cpp	/^void test_scalar(int nfft)$/;"	f
test_scalar_generic	external/unsupported/test/FFTW.cpp	/^void test_scalar_generic(int nfft)$/;"	f
test_sparse_extra	external/unsupported/test/sparse_extra.cpp	/^void test_sparse_extra()$/;"	f
test_splines	external/unsupported/test/splines.cpp	/^void test_splines()$/;"	f
thenMatrix	external/Eigen/src/Core/Select.h	/^    const ThenMatrixType& thenMatrix() const$/;"	f	class:Eigen::Select
threadid	external/unsupported/test/mpreal/dlmalloc.c	/^  long threadid;$/;"	m	struct:win32_mlock_t	file:
threadid	external/unsupported/test/mpreal/dlmalloc.c	/^  pthread_t threadid;$/;"	m	struct:pthread_mlock_t	file:
threshold	external/Eigen/src/LU/FullPivLU.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivLU
threshold	external/Eigen/src/QR/ColPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::ColPivHouseholderQR
threshold	external/Eigen/src/QR/FullPivHouseholderQR.h	/^    RealScalar threshold() const$/;"	f	class:Eigen::FullPivHouseholderQR
throw_std_bad_alloc	external/Eigen/src/Core/util/Memory.h	/^inline void throw_std_bad_alloc()$/;"	f	namespace:Eigen::internal
thurber_functor	external/unsupported/test/NonLinearOptimization.cpp	/^    thurber_functor(void) : Functor<double>(7,37) {}$/;"	f	struct:thurber_functor
thurber_functor	external/unsupported/test/NonLinearOptimization.cpp	/^struct thurber_functor : Functor<double>$/;"	s	file:
tmalloc_large	external/unsupported/test/mpreal/dlmalloc.c	/^static void* tmalloc_large(mstate m, size_t nb) {$/;"	f	file:
tmalloc_small	external/unsupported/test/mpreal/dlmalloc.c	/^static void* tmalloc_small(mstate m, size_t nb) {$/;"	f	file:
toDense	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^      Matrix<Scalar,RowsAtCompileTime,ColsAtCompileTime> toDense() const$/;"	f	class:Eigen::SparseMatrixBase
toDense	external/unsupported/Eigen/src/Skyline/SkylineMatrixBase.h	/^    Matrix<Scalar, RowsAtCompileTime, ColsAtCompileTime> toDense() const {$/;"	f	class:Eigen::SkylineMatrixBase
toDenseMatrix	external/Eigen/src/Core/BandMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::internal::BandMatrixBase
toDenseMatrix	external/Eigen/src/Core/DiagonalMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return derived(); }$/;"	f	class:Eigen::DiagonalBase
toDenseMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const { return *this; }$/;"	f	class:Eigen::Transpose
toDenseMatrix	external/Eigen/src/Core/PermutationMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::PermutationBase
toDenseMatrix	external/Eigen/src/Core/TriangularMatrix.h	/^    DenseMatrixType toDenseMatrix() const$/;"	f	class:Eigen::TriangularBase
toDouble	external/unsupported/test/mpreal/mpreal.h	/^inline double			mpreal::toDouble()	const	{	return mpfr_get_d(mp,default_rnd);	}$/;"	f	class:mpfr::mpreal
toInt64	external/unsupported/test/mpreal/mpreal.h	/^inline int64_t	 mpreal::toInt64()	const{	return mpfr_get_sj(mp,GMP_RNDZ);	}$/;"	f	class:mpfr::mpreal
toLDouble	external/unsupported/test/mpreal/mpreal.h	/^inline long double		mpreal::toLDouble()	const	{	return mpfr_get_ld(mp,default_rnd);	}$/;"	f	class:mpfr::mpreal
toLong	external/unsupported/test/mpreal/mpreal.h	/^inline long				mpreal::toLong()	const	{	return mpfr_get_si(mp,GMP_RNDZ);	}$/;"	f	class:mpfr::mpreal
toQMatrix	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^QMatrix Transform<Scalar,Dim>::toQMatrix(void) const$/;"	f	class:Eigen::Transform
toQMatrix	external/Eigen/src/Geometry/Transform.h	/^QMatrix Transform<Scalar,Dim,Mode,Options>::toQMatrix(void) const$/;"	f	class:Eigen::Transform
toQTransform	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^QTransform Transform<Scalar,Dim>::toQTransform(void) const$/;"	f	class:Eigen::Transform
toQTransform	external/Eigen/src/Geometry/Transform.h	/^QTransform Transform<Scalar,Dim,Mode,Options>::toQTransform(void) const$/;"	f	class:Eigen::Transform
toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/AngleAxis.h	/^AngleAxis<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::AngleAxis
toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^Quaternion<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Quaternion
toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/Rotation2D.h	/^Rotation2D<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Rotation2D
toRotationMatrix	external/Eigen/src/Eigen2Support/Geometry/RotationBase.h	/^    inline RotationMatrixType toRotationMatrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
toRotationMatrix	external/Eigen/src/Geometry/AngleAxis.h	/^AngleAxis<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::AngleAxis
toRotationMatrix	external/Eigen/src/Geometry/Quaternion.h	/^QuaternionBase<Derived>::toRotationMatrix(void) const$/;"	f	class:Eigen::QuaternionBase
toRotationMatrix	external/Eigen/src/Geometry/Rotation2D.h	/^Rotation2D<Scalar>::toRotationMatrix(void) const$/;"	f	class:Eigen::Rotation2D
toRotationMatrix	external/Eigen/src/Geometry/RotationBase.h	/^    inline RotationMatrixType toRotationMatrix() const { return derived().toRotationMatrix(); }$/;"	f	class:Eigen::RotationBase
toRotationMatrix	external/Eigen/src/Geometry/RotationBase.h	/^static inline Matrix<Scalar,2,2> toRotationMatrix(const Scalar& s)$/;"	f	namespace:Eigen::internal
toRotationMatrix	external/Eigen/src/Geometry/RotationBase.h	/^static inline Matrix<Scalar,Dim,Dim> toRotationMatrix(const RotationBase<OtherDerived,Dim>& r)$/;"	f	namespace:Eigen::internal
toRotationMatrix	external/Eigen/src/Geometry/RotationBase.h	/^static inline const MatrixBase<OtherDerived>& toRotationMatrix(const MatrixBase<OtherDerived>& mat)$/;"	f	namespace:Eigen::internal
toString	external/unsupported/test/mpreal/mpreal.cpp	/^std::string mpreal::toString(const std::string& format) const$/;"	f	class:mpfr::mpreal
toString	external/unsupported/test/mpreal/mpreal.cpp	/^std::string mpreal::toString(int n, int b, mp_rnd_t mode) const$/;"	f	class:mpfr::mpreal
toString	external/unsupported/test/mpreal/mpreal.cpp	/^std::string toString(T t, std::ios_base & (*f)(std::ios_base&))$/;"	f	namespace:mpfr
toUInt64	external/unsupported/test/mpreal/mpreal.h	/^inline uint64_t	 mpreal::toUInt64()	const{	return mpfr_get_uj(mp,GMP_RNDZ);	}$/;"	f	class:mpfr::mpreal
toULong	external/unsupported/test/mpreal/mpreal.h	/^inline unsigned long	mpreal::toULong()	const	{	return mpfr_get_ui(mp,GMP_RNDZ);	}$/;"	f	class:mpfr::mpreal
tolerance	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  RealScalar tolerance() const { return m_tolerance; }$/;"	f	class:Eigen::IterativeSolverBase
top	external/unsupported/test/mpreal/dlmalloc.c	/^  mchunkptr  top;$/;"	m	struct:malloc_state	file:
topLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topLeftCorner()$/;"	f
topLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> topLeftCorner(Index cRows, Index cCols)$/;"	f
topLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topLeftCorner() const$/;"	f
topLeftCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> topLeftCorner(Index cRows, Index cCols) const$/;"	f
topRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived, CRows, CCols> topRightCorner()$/;"	f
topRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline Block<Derived> topRightCorner(Index cRows, Index cCols)$/;"	f
topRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived, CRows, CCols> topRightCorner() const$/;"	f
topRightCorner	external/Eigen/src/plugins/BlockMethods.h	/^inline const Block<const Derived> topRightCorner(Index cRows, Index cCols) const$/;"	f
topRows	external/Eigen/src/plugins/BlockMethods.h	/^inline ConstRowsBlockXpr topRows(Index n) const$/;"	f
topRows	external/Eigen/src/plugins/BlockMethods.h	/^inline RowsBlockXpr topRows(Index n)$/;"	f
topRows	external/Eigen/src/plugins/BlockMethods.h	/^inline typename ConstNRowsBlockXpr<N>::Type topRows() const$/;"	f
topRows	external/Eigen/src/plugins/BlockMethods.h	/^inline typename NRowsBlockXpr<N>::Type topRows()$/;"	f
topsize	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     topsize;$/;"	m	struct:malloc_state	file:
trace	external/Eigen/src/Core/Redux.h	/^MatrixBase<Derived>::trace() const$/;"	f	class:Eigen::MatrixBase
traits	external/Eigen/src/Core/Array.h	/^struct traits<Array<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> > : traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/ArrayWrapper.h	/^struct traits<ArrayWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/ArrayWrapper.h	/^struct traits<MatrixWrapper<ExpressionType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrix<_Scalar,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/BandMatrix.h	/^struct traits<BandMatrixWrapper<_CoefficientsType,_Rows,_Cols,_Supers,_Subs,_Options> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Block.h	/^struct traits<Block<XprType, BlockRows, BlockCols, InnerPanel, HasDirectAccess> > : traits<XprType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/CwiseBinaryOp.h	/^struct traits<CwiseBinaryOp<BinaryOp, Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/CwiseNullaryOp.h	/^struct traits<CwiseNullaryOp<NullaryOp, PlainObjectType> > : traits<PlainObjectType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/CwiseUnaryOp.h	/^struct traits<CwiseUnaryOp<UnaryOp, XprType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/CwiseUnaryView.h	/^struct traits<CwiseUnaryView<ViewOp, MatrixType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Diagonal.h	/^struct traits<Diagonal<MatrixType,DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalMatrix<_Scalar,SizeAtCompileTime,MaxSizeAtCompileTime> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/DiagonalMatrix.h	/^struct traits<DiagonalWrapper<_DiagonalVectorType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/DiagonalProduct.h	/^struct traits<DiagonalProduct<MatrixType, DiagonalType, ProductOrder> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Flagged.h	/^struct traits<Flagged<ExpressionType, Added, Removed> > : traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/ForceAlignedAccess.h	/^struct traits<ForceAlignedAccess<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/GeneralProduct.h	/^struct traits<GeneralProduct<Lhs,Rhs,GemvProduct> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/GeneralProduct.h	/^struct traits<GeneralProduct<Lhs,Rhs,InnerProduct> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/GeneralProduct.h	/^struct traits<GeneralProduct<Lhs,Rhs,OuterProduct> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Map.h	/^struct traits<Map<PlainObjectType, MapOptions, StrideType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Matrix.h	/^struct traits<Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/NestByValue.h	/^struct traits<NestByValue<ExpressionType> > : public traits<ExpressionType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/PermutationMatrix.h	/^struct traits<Map<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationMatrix<SizeAtCompileTime, MaxSizeAtCompileTime, IndexType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/PermutationMatrix.h	/^struct traits<PermutationWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/PermutationMatrix.h	/^struct traits<Transpose<PermutationBase<Derived> > >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/PermutationMatrix.h	/^struct traits<permut_matrix_product_retval<PermutationType, MatrixType, Side, Transposed> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Product.h	/^struct traits<Product<Lhs, Rhs> >$/;"	s	namespace:internal
traits	external/Eigen/src/Core/ProductBase.h	/^struct traits<ProductBase<Derived,_Lhs,_Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/ProductBase.h	/^struct traits<ScaledProduct<NestedProduct> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Replicate.h	/^struct traits<Replicate<MatrixType,RowFactor,ColFactor> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/ReturnByValue.h	/^struct traits<ReturnByValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Reverse.h	/^struct traits<Reverse<MatrixType, Direction> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Select.h	/^struct traits<Select<ConditionMatrixType, ThenMatrixType, ElseMatrixType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/SelfAdjointView.h	/^struct traits<SelfAdjointView<MatrixType, UpLo> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/SelfCwiseBinaryOp.h	/^struct traits<SelfCwiseBinaryOp<BinaryOp,Lhs,Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/SolveTriangular.h	/^struct traits<triangular_solve_retval<Side, TriangularType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Swap.h	/^struct traits<SwapWrapper<ExpressionType> > : traits<ExpressionType> {};$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Transpose.h	/^struct traits<Transpose<MatrixType> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Transpositions.h	/^struct traits<Map<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType>,_PacketAccess> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Transpositions.h	/^struct traits<Transpositions<SizeAtCompileTime,MaxSizeAtCompileTime,IndexType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Transpositions.h	/^struct traits<TranspositionsWrapper<_IndicesType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/Transpositions.h	/^struct traits<transposition_matrix_product_retval<TranspositionType, MatrixType, Side, Transposed> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/TriangularMatrix.h	/^struct traits<TriangularView<MatrixType, _Mode> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/VectorBlock.h	/^struct traits<VectorBlock<VectorType, Size> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/VectorwiseOp.h	/^struct traits<PartialReduxExpr<MatrixType, MemberOp, Direction> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^struct traits<CoeffBasedProduct<LhsNested,RhsNested,NestingFlags> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^struct traits<GeneralProduct<Lhs,Rhs,GemmProduct> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/SelfadjointMatrixMatrix.h	/^struct traits<SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,RhsMode,false> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct traits<SelfadjointProductMatrix<Lhs,0,true,Rhs,RhsMode,false> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/SelfadjointMatrixVector.h	/^struct traits<SelfadjointProductMatrix<Lhs,LhsMode,false,Rhs,0,true> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/TriangularMatrixMatrix.h	/^struct traits<TriangularProduct<Mode,LhsIsTriangular,Lhs,false,Rhs,false> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct traits<TriangularProduct<Mode,LhsIsTriangular,Lhs,false,Rhs,true> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct traits<TriangularProduct<Mode,LhsIsTriangular,Lhs,true,Rhs,false> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Core/util/ForwardDeclarations.h	/^template<typename T> struct traits<const T> : traits<T> {};$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Eigen2Support/Minor.h	/^struct traits<Minor<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Eigenvalues/HessenbergDecomposition.h	/^struct traits<HessenbergDecompositionMatrixHReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct traits<TridiagonalizationMatrixTReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/AngleAxis.h	/^template<typename _Scalar> struct traits<AngleAxis<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/Homogeneous.h	/^struct traits<Homogeneous<MatrixType,Direction> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_left_product_impl<Homogeneous<MatrixType,Vertical>,Lhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/Homogeneous.h	/^struct traits<homogeneous_right_product_impl<Homogeneous<MatrixType,Horizontal>,Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<Quaternion<_Scalar>, _Options> >:$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/Quaternion.h	/^  struct traits<Map<const Quaternion<_Scalar>, _Options> >:$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/Quaternion.h	/^struct traits<Quaternion<_Scalar,_Options> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Geometry/Rotation2D.h	/^template<typename _Scalar> struct traits<Rotation2D<_Scalar> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/Householder/HouseholderSequence.h	/^struct traits<HouseholderSequence<VectorsType,CoeffsType,Side> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^struct traits<BiCGSTAB<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^struct traits<ConjugateGradient<_MatrixType,_UpLo,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/LU/Inverse.h	/^struct traits<inverse_impl<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/QR/FullPivHouseholderQR.h	/^struct traits<FullPivHouseholderQRMatrixQReturnType<MatrixType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo> struct traits<SimplicialCholesky<_MatrixType,_UpLo> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType, int _UpLo> struct traits<SimplicialLLT<_MatrixType,_UpLo> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^template<typename _MatrixType,int _UpLo> struct traits<SimplicialLDLT<_MatrixType,_UpLo> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^struct traits<MappedSparseMatrix<_Scalar, _Flags, _Index> > : traits<SparseMatrix<_Scalar, _Flags, _Index> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseBlock.h	/^struct traits<SparseInnerVectorSet<MatrixType, Size> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct traits<DenseTimeSparseProduct<Lhs,Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct traits<SparseDenseOuterProduct<Lhs,Rhs,Tr> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^struct traits<SparseTimeDenseProduct<Lhs,Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseDiagonalProduct.h	/^struct traits<SparseDiagonalProduct<Lhs, Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<Diagonal<const SparseMatrix<_Scalar, _Options, _Index>, DiagIndex> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseMatrix.h	/^struct traits<SparseMatrix<_Scalar, _Options, _Index> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparsePermutation.h	/^struct traits<permut_sparsematrix_product_retval<PermutationType, MatrixType, Side, Transposed> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseProduct.h	/^struct traits<SparseSparseProduct<LhsNested, RhsNested> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<DenseTimeSparseSelfAdjointProduct<Lhs,Rhs,UpLo> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSelfAdjointTimeDenseProduct<Lhs,Rhs,UpLo> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSelfAdjointView<MatrixType,UpLo> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^struct traits<SparseSymmetricPermutationProduct<MatrixType,UpLo> > : traits<MatrixType> {$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseTriangularView.h	/^struct traits<SparseTriangularView<MatrixType,Mode> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseVector.h	/^struct traits<SparseVector<_Scalar, _Options, _Index> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/SparseCore/SparseView.h	/^struct traits<SparseView<MatrixType> > : traits<MatrixType>$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/misc/Image.h	/^struct traits<image_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/misc/Kernel.h	/^struct traits<kernel_retval_base<DecompositionType> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/misc/Solve.h	/^struct traits<solve_retval_base<DecompositionType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/misc/SparseSolve.h	/^struct traits<solve_retval_with_guess<DecompositionType, Rhs, Guess> >$/;"	s	namespace:Eigen::internal
traits	external/Eigen/src/misc/SparseSolve.h	/^struct traits<sparse_solve_retval_base<DecompositionType, Rhs> >$/;"	s	namespace:Eigen::internal
traits	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^struct traits<GMRES<_MatrixType,_Preconditioner> >$/;"	s	namespace:Eigen::internal
traits	external/unsupported/Eigen/src/MatrixFunctions/MatrixExponential.h	/^struct traits<MatrixExponentialReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	external/unsupported/Eigen/src/MatrixFunctions/MatrixFunction.h	/^struct traits<MatrixFunctionReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	external/unsupported/Eigen/src/MatrixFunctions/MatrixLogarithm.h	/^  struct traits<MatrixLogarithmReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	external/unsupported/Eigen/src/MatrixFunctions/MatrixSquareRoot.h	/^struct traits<MatrixSquareRootReturnValue<Derived> >$/;"	s	namespace:Eigen::internal
traits	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^struct traits<SkylineMatrix<_Scalar, _Options> > {$/;"	s	namespace:Eigen::internal
traits	external/unsupported/Eigen/src/Skyline/SkylineProduct.h	/^struct internal::traits<SkylineProduct<LhsNested, RhsNested, ProductMode> > {$/;"	s	class:Eigen::internal
traits	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^struct traits<DynamicSparseMatrix<_Scalar, _Options, _Index> >$/;"	s	namespace:Eigen::internal
trans	external/Eigen/src/Householder/HouseholderSequence.h	/^    bool trans() const { return m_trans; }     \/**< \\brief Returns the transpose flag. *\/$/;"	f	class:Eigen::HouseholderSequence
trans_	OptApp.h	/^	Eigen::Matrix4d trans_;$/;"	m	struct:Correspondence
transform	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::Hyperplane
transform	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const Transform<Scalar,AmbientDimAtCompileTime>& t,$/;"	f	class:Eigen::Hyperplane
transform	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const MatrixBase<XprType>& mat, TransformTraits traits = Affine)$/;"	f	class:Eigen::Hyperplane
transform	external/Eigen/src/Geometry/Hyperplane.h	/^  inline Hyperplane& transform(const Transform<Scalar,AmbientDimAtCompileTime,Affine,TrOptions>& t,$/;"	f	class:Eigen::Hyperplane
transform_construct_from_matrix	external/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	external/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	external/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_construct_from_matrix	external/Eigen/src/Geometry/Transform.h	/^struct transform_construct_from_matrix<Other, Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,AffineCompact,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,Dim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, Dim,HDim>$/;"	s	namespace:Eigen::internal
transform_left_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_left_product_impl<Other,Mode,Options,Dim,HDim, HDim,HDim>$/;"	s	namespace:Eigen::internal
transform_product_result	external/Eigen/src/Geometry/Transform.h	/^struct transform_product_result$/;"	s	namespace:Eigen::internal
transform_right_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 0 >$/;"	s	namespace:Eigen::internal
transform_right_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 1 >$/;"	s	namespace:Eigen::internal
transform_right_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_right_product_impl< TransformType, MatrixType, 2 >$/;"	s	namespace:Eigen::internal
transform_take_affine_part	external/Eigen/src/Geometry/Transform.h	/^struct transform_take_affine_part<Transform<Scalar,Dim,AffineCompact, Options> > {$/;"	s	namespace:Eigen::internal
transform_take_affine_part	external/Eigen/src/Geometry/Transform.h	/^template<typename TransformType> struct transform_take_affine_part {$/;"	s	namespace:Eigen::internal
transform_traits	external/Eigen/src/Geometry/Transform.h	/^struct transform_traits$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,AffineCompact,LhsOptions>,Transform<Scalar,Dim,Projective,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,false >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,LhsMode,LhsOptions>,Transform<Scalar,Dim,RhsMode,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transform_transform_product_impl	external/Eigen/src/Geometry/Transform.h	/^struct transform_transform_product_impl<Transform<Scalar,Dim,Projective,LhsOptions>,Transform<Scalar,Dim,AffineCompact,RhsOptions>,true >$/;"	s	namespace:Eigen::internal
transformation_	RGBDTrajectory.h	/^	Eigen::Matrix4d transformation_;$/;"	m	struct:FramedTransformation
translate	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  inline AlignedBox& translate(const VectorType& t)$/;"	f	class:Eigen::AlignedBox
translate	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^Transform<Scalar,Dim>::translate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
translate	external/Eigen/src/Geometry/AlignedBox.h	/^  inline AlignedBox& translate(const MatrixBase<Derived>& a_t)$/;"	f	class:Eigen::AlignedBox
translate	external/Eigen/src/Geometry/Transform.h	/^Transform<Scalar,Dim,Mode,Options>::translate(const MatrixBase<OtherDerived> &other)$/;"	f	class:Eigen::Transform
translation	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline ConstTranslationPart translation() const { return m_matrix.template block<Dim,1>(0,Dim); }$/;"	f	class:Eigen::Transform
translation	external/Eigen/src/Eigen2Support/Geometry/Transform.h	/^  inline TranslationPart translation() { return m_matrix.template block<Dim,1>(0,Dim); }$/;"	f	class:Eigen::Transform
translation	external/Eigen/src/Geometry/Transform.h	/^  inline ConstTranslationPart translation() const { return ConstTranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	external/Eigen/src/Geometry/Transform.h	/^  inline TranslationPart translation() { return TranslationPart(m_matrix,0,Dim); }$/;"	f	class:Eigen::Transform
translation	external/Eigen/src/Geometry/Translation.h	/^  VectorType& translation() { return m_coeffs; }$/;"	f	class:Eigen::Translation
translation	external/Eigen/src/Geometry/Translation.h	/^  const VectorType& translation() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
translationExt	external/Eigen/src/Geometry/Transform.h	/^  inline Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt()$/;"	f	class:Eigen::Transform
translationExt	external/Eigen/src/Geometry/Transform.h	/^  inline const Block<MatrixType,int(Mode)==int(Projective)?HDim:Dim,1> translationExt() const$/;"	f	class:Eigen::Transform
transpose	external/Eigen/src/Core/PermutationMatrix.h	/^    inline Transpose<PermutationBase> transpose() const$/;"	f	class:Eigen::PermutationBase
transpose	external/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose() const$/;"	f	class:Eigen::DenseBase
transpose	external/Eigen/src/Core/Transpose.h	/^DenseBase<Derived>::transpose()$/;"	f	class:Eigen::DenseBase
transpose	external/Eigen/src/Core/Transpositions.h	/^    inline Transpose<TranspositionsBase> transpose() const$/;"	f	class:Eigen::TranspositionsBase
transpose	external/Eigen/src/Core/TriangularMatrix.h	/^    inline TriangularView<Transpose<MatrixType>,TransposeMode> transpose()$/;"	f	class:Eigen::TriangularView
transpose	external/Eigen/src/Core/TriangularMatrix.h	/^    inline const TriangularView<Transpose<MatrixType>,TransposeMode> transpose() const$/;"	f	class:Eigen::TriangularView
transpose	external/Eigen/src/Householder/HouseholderSequence.h	/^    HouseholderSequence transpose() const$/;"	f	class:Eigen::HouseholderSequence
transpose	external/Eigen/src/Jacobi/Jacobi.h	/^    JacobiRotation transpose() const { return JacobiRotation(m_c, -internal::conj(m_s)); }$/;"	f	class:Eigen::JacobiRotation
transpose	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    Transpose<Derived> transpose() { return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
transpose	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    const Transpose<const Derived> transpose() const { return derived(); }$/;"	f	class:Eigen::SparseMatrixBase
transposeInPlace	external/Eigen/src/Core/Transpose.h	/^inline void DenseBase<Derived>::transposeInPlace()$/;"	f	class:Eigen::DenseBase
transposition_matrix_product_retval	external/Eigen/src/Core/Transpositions.h	/^    transposition_matrix_product_retval(const TranspositionType& tr, const MatrixType& matrix)$/;"	f	struct:Eigen::internal::transposition_matrix_product_retval
transposition_matrix_product_retval	external/Eigen/src/Core/Transpositions.h	/^struct transposition_matrix_product_retval$/;"	s	namespace:Eigen::internal
transpositionsP	external/Eigen/src/Cholesky/LDLT.h	/^    inline const TranspositionType& transpositionsP() const$/;"	f	class:Eigen::LDLT
traverse_and_check	external/unsupported/test/mpreal/dlmalloc.c	/^static size_t traverse_and_check(mstate m) {$/;"	f	file:
treebin_at	external/unsupported/test/mpreal/dlmalloc.c	2690;"	d	file:
treebins	external/unsupported/test/mpreal/dlmalloc.c	/^  tbinptr    treebins[NTREEBINS];$/;"	m	struct:malloc_state	file:
treemap	external/unsupported/test/mpreal/dlmalloc.c	/^  binmap_t   treemap;$/;"	m	struct:malloc_state	file:
treemap_is_marked	external/unsupported/test/mpreal/dlmalloc.c	2784;"	d	file:
triangularView	external/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::MatrixBase
triangularView	external/Eigen/src/Core/TriangularMatrix.h	/^MatrixBase<Derived>::triangularView()$/;"	f	class:Eigen::MatrixBase
triangularView	external/Eigen/src/SparseCore/SparseTriangularView.h	/^SparseMatrixBase<Derived>::triangularView() const$/;"	f	class:Eigen::SparseMatrixBase
triangular_assignment_selector	external/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, (SelfAdjoint|Lower), UnrollCount, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, (SelfAdjoint|Upper), UnrollCount, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Lower, 0, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Lower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Upper, 0, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/SelfAdjointView.h	/^struct triangular_assignment_selector<Derived1, Derived2, SelfAdjoint|Upper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, Lower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, Mode, 0, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, StrictlyLower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, StrictlyUpper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, UnitLower, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, UnitUpper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_assignment_selector	external/Eigen/src/Core/TriangularMatrix.h	/^struct triangular_assignment_selector<Derived1, Derived2, Upper, Dynamic, ClearOpposite>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,ColMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^struct triangular_matrix_vector_product<Index,Mode,LhsScalar,ConjLhs,RhsScalar,ConjRhs,RowMajor,Version>$/;"	s	namespace:Eigen::internal
triangular_matrix_vector_product_trmv	external/Eigen/src/Core/products/TriangularMatrixVector_MKL.h	/^struct triangular_matrix_vector_product_trmv :$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	external/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheLeft,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	external/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,OnTheRight,Mode,Conjugate,TriStorageOrder,ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_matrix	external/Eigen/src/Core/products/TriangularSolverMatrix.h	/^struct triangular_solve_matrix<Scalar,Index,Side,Mode,Conjugate,TriStorageOrder,RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_retval	external/Eigen/src/Core/SolveTriangular.h	/^  triangular_solve_retval(const TriangularType& tri, const Rhs& rhs)$/;"	f	struct:Eigen::internal::triangular_solve_retval
triangular_solve_retval	external/Eigen/src/Core/SolveTriangular.h	/^template<int Side, typename TriangularType, typename Rhs> struct triangular_solve_retval$/;"	s	namespace:Eigen::internal
triangular_solve_vector	external/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, ColMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	external/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheLeft, Mode, Conjugate, RowMajor>$/;"	s	namespace:Eigen::internal
triangular_solve_vector	external/Eigen/src/Core/products/TriangularSolverVector.h	/^struct triangular_solve_vector<LhsScalar, RhsScalar, Index, OnTheRight, Mode, Conjugate, StorageOrder>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	external/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheLeft,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	external/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,OnTheRight,Mode,CompleteUnrolling,1> {$/;"	s	namespace:Eigen::internal
triangular_solver_selector	external/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,1>$/;"	s	namespace:Eigen::internal
triangular_solver_selector	external/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_selector<Lhs,Rhs,Side,Mode,NoUnrolling,Dynamic>$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	external/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,Index,Size,false> {$/;"	s	namespace:Eigen::internal
triangular_solver_unroller	external/Eigen/src/Core/SolveTriangular.h	/^struct triangular_solver_unroller<Lhs,Rhs,Mode,Index,Size,true> {$/;"	s	namespace:Eigen::internal
tribb_kernel	external/Eigen/src/Core/products/GeneralMatrixMatrixTriangular.h	/^struct tribb_kernel$/;"	s	namespace:Eigen::internal
tridiagonal_qr_step	external/Eigen/src/Eigenvalues/SelfAdjointEigenSolver.h	/^static void tridiagonal_qr_step(RealScalar* diag, RealScalar* subdiag, Index start, Index end, Scalar* matrixQ, Index n)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& mat, DiagonalType& diag, SubDiagonalType& subdiag, bool extractQ)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^void tridiagonalization_inplace(MatrixType& matA, CoeffVectorType& hCoeffs)$/;"	f	namespace:Eigen::internal
tridiagonalization_inplace_selector	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,1,IsComplex>$/;"	s	namespace:Eigen::internal
tridiagonalization_inplace_selector	external/Eigen/src/Eigenvalues/Tridiagonalization.h	/^struct tridiagonalization_inplace_selector<MatrixType,3,false>$/;"	s	namespace:Eigen::internal
trim_check	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t     trim_check;$/;"	m	struct:malloc_state	file:
trim_threshold	external/unsupported/test/mpreal/dlmalloc.c	/^  size_t trim_threshold;$/;"	m	struct:malloc_params	file:
trmv_selector	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<> struct trmv_selector<ColMajor>$/;"	s	namespace:Eigen::internal
trmv_selector	external/Eigen/src/Core/products/TriangularMatrixVector.h	/^template<> struct trmv_selector<RowMajor>$/;"	s	namespace:Eigen::internal
trsolve_traits	external/Eigen/src/Core/SolveTriangular.h	/^class trsolve_traits$/;"	c	namespace:Eigen::internal
true_type	external/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	s	namespace:Eigen::internal
trunc	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal trunc(const mpreal& v)$/;"	f	namespace:mpfr
try_catch	external/SuiteSparse/Include/cholmod_core.h	/^    int try_catch ;	\/* if TRUE, then ignore errors; CHOLMOD is in the middle$/;"	m	struct:cholmod_common_struct
twistedBy	external/Eigen/src/SparseCore/SparseMatrixBase.h	/^    SparseSymmetricPermutationProduct<Derived,Upper|Lower> twistedBy(const PermutationMatrix<Dynamic,Dynamic,Index>& perm) const$/;"	f	class:Eigen::SparseMatrixBase
twistedBy	external/Eigen/src/SparseCore/SparseSelfAdjointView.h	/^    SparseSymmetricPermutationProduct<_MatrixTypeNested,UpLo> twistedBy(const PermutationMatrix<Dynamic,Dynamic,Index>& perm) const$/;"	f	class:Eigen::SparseSelfAdjointView
two_demos	external/unsupported/doc/examples/FFT.cpp	/^void two_demos(int nfft)$/;"	f
type	external/Eigen/src/Core/DenseCoeffsBase.h	/^  typedef typename conditional<is_arithmetic<T>::value, T, typename add_const_on_value_type<T>::type>::type type;$/;"	t	struct:Eigen::internal::add_const_on_value_type_if_arithmetic
type	external/Eigen/src/Core/GenericPacketMath.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::atan2_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::conj_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::pow_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::random_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef Scalar type;$/;"	t	struct:Eigen::internal::sqrt_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef T type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::imag_ref_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real & type;$/;"	t	struct:Eigen::internal::real_ref_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::abs2_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::abs_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::hypot_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::imag_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::norm1_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename NumTraits<Scalar>::Real type;$/;"	t	struct:Eigen::internal::real_retval
type	external/Eigen/src/Core/MathFunctions.h	/^  typedef typename T::Eigen_BaseClassForSpecializationOfGlobalMathFuncImpl type;$/;"	t	struct:Eigen::internal::global_math_functions_filtering_base
type	external/Eigen/src/Core/MathFunctions.h	/^template<typename T> struct always_void { typedef void type; };$/;"	t	struct:Eigen::internal::always_void
type	external/Eigen/src/Core/MatrixBase.h	/^      typedef Matrix<Scalar,MatrixBase::RowsAtCompileTime,MatrixBase::ColsAtCompileTime> type;$/;"	t	struct:Eigen::MatrixBase::cross_product_return_type
type	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedAlignedMapType { typedef Eigen::Map<Derived, Aligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedAlignedMapType
type	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstAlignedMapType { typedef Eigen::Map<const Derived, Aligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstAlignedMapType
type	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedConstMapType { typedef Eigen::Map<const Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedConstMapType
type	external/Eigen/src/Core/PlainObjectBase.h	/^    template<typename StrideType> struct StridedMapType { typedef Eigen::Map<Derived, Unaligned, StrideType> type; };$/;"	t	struct:Eigen::PlainObjectBase::StridedMapType
type	external/Eigen/src/Core/ProductBase.h	/^  typedef PlainObject const& type;$/;"	t	struct:Eigen::internal::nested
type	external/Eigen/src/Core/ReturnByValue.h	/^  typedef typename traits<Derived>::ReturnType type;$/;"	t	struct:Eigen::internal::nested
type	external/Eigen/src/Core/Transpose.h	/^  typedef typename dense_xpr_base<Transpose<MatrixType> >::type type;$/;"	t	struct:Eigen::internal::TransposeImpl_base
type	external/Eigen/src/Core/TriangularMatrix.h	/^      typedef typename ProdRetType::PlainObject type;$/;"	t	struct:Eigen::TriangularView::eigen2_product_return_type
type	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef SelfAdjointView<MatrixType, Upper> type;$/;"	t	struct:Eigen::internal::eigen2_part_return_type
type	external/Eigen/src/Core/TriangularMatrix.h	/^  typedef TriangularView<MatrixType, Mode> type;$/;"	t	struct:Eigen::internal::eigen2_part_return_type
type	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/NEON/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet1cd type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/SSE/Complex.h	/^  typedef Packet2cf type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet2d type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4f type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^  typedef Packet4i type;$/;"	t	struct:Eigen::internal::packet_traits
type	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	t	struct:Eigen::internal::unpacket_traits
type	external/Eigen/src/Core/products/CoeffBasedProduct.h	/^  typedef PlainObject const& type;$/;"	t	struct:Eigen::internal::nested
type	external/Eigen/src/Core/util/ForwardDeclarations.h	/^  typedef ComplexScalar type(ComplexScalar, int);$/;"	t	struct:Eigen::internal::stem_function
type	external/Eigen/src/Core/util/Meta.h	/^    typedef typename binary_result_of_select<Func, ArgType0, ArgType1, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	external/Eigen/src/Core/util/Meta.h	/^    typedef typename unary_result_of_select<Func, ArgType, FunctorType>::type type;$/;"	t	struct:Eigen::internal::result_of
type	external/Eigen/src/Core/util/Meta.h	/^struct binary_result_of_select {typedef ArgType0 type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	external/Eigen/src/Core/util/Meta.h	/^struct conditional <false, Then, Else> { typedef Else type; };$/;"	t	struct:Eigen::internal::conditional
type	external/Eigen/src/Core/util/Meta.h	/^struct conditional { typedef Then type; };$/;"	t	struct:Eigen::internal::conditional
type	external/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef ArgType type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	external/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	external/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	t	struct:Eigen::internal::unary_result_of_select
type	external/Eigen/src/Core/util/Meta.h	/^template <class T, unsigned int Size> struct remove_const<const T[Size]> { typedef T type[Size]; };$/;"	t	struct:Eigen::internal::remove_const
type	external/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	external/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_const
type	external/Eigen/src/Core/util/Meta.h	/^template <class T> struct remove_const<const T[]> { typedef T type[]; };$/;"	t	struct:Eigen::internal::remove_const
type	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const { typedef const T type; };$/;"	t	struct:Eigen::internal::add_const
type	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct add_const<T&> { typedef T& type; };$/;"	t	struct:Eigen::internal::add_const
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type            { typedef const T type;  };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T const* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T&>        { typedef T const& type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T* const>  { typedef T const* const type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct add_const_on_value_type<T*>        { typedef T const* type; };$/;"	t	struct:Eigen::internal::add_const_on_value_type
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all { typedef T type; };$/;"	t	struct:Eigen::internal::remove_all
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const&>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T const*>  { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T&>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<T*>        { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_all<const T>   { typedef typename remove_all<T>::type type; };$/;"	t	struct:Eigen::internal::remove_all
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_pointer<T*const> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_pointer
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct remove_reference<T&> { typedef T type; };$/;"	t	struct:Eigen::internal::remove_reference
type	external/Eigen/src/Core/util/Meta.h	/^{ typedef T type; };$/;"	t	struct:Eigen::internal::enable_if
type	external/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::result_type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	external/Eigen/src/Core/util/Meta.h	/^{typedef typename Func::template result<Func(ArgType0,ArgType1)>::type type;};$/;"	t	struct:Eigen::internal::binary_result_of_select
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype { typedef T type; };$/;"	t	struct:Eigen::ei_cleantype
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T&>        { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<T*>        { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T&>  { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T*>  { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_cleantype<const T>   { typedef typename ei_cleantype<T>::type type; };$/;"	t	struct:Eigen::ei_cleantype
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst { typedef T type; };$/;"	t	struct:Eigen::ei_unconst
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const &> { typedef T & type; };$/;"	t	struct:Eigen::ei_unconst
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<T const *> { typedef T * type; };$/;"	t	struct:Eigen::ei_unconst
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unconst<const T> { typedef T type; };$/;"	t	struct:Eigen::ei_unconst
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer { typedef T type; };$/;"	t	struct:Eigen::ei_unpointer
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*> { typedef T type; };$/;"	t	struct:Eigen::ei_unpointer
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unpointer<T*const> { typedef T type; };$/;"	t	struct:Eigen::ei_unpointer
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref { typedef T type; };$/;"	t	struct:Eigen::ei_unref
type	external/Eigen/src/Eigen2Support/Meta.h	/^template<typename T> struct ei_unref<T&> { typedef T type; };$/;"	t	struct:Eigen::ei_unref
type	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef MatrixOrTransformType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename TransformType::MatrixType type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	external/Eigen/src/Geometry/Homogeneous.h	/^  typedef typename internal::add_const<typename TransformType::ConstAffinePart>::type type;$/;"	t	struct:Eigen::internal::take_matrix_for_product
type	external/Eigen/src/Geometry/Umeyama.h	/^  > type;$/;"	t	struct:Eigen::internal::umeyama_transform_matrix_type
type	external/Eigen/src/SparseCore/SparseUtil.h	/^    typedef Matrix<_Scalar, 1, 1> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	external/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Flags> type;$/;"	t	struct:Eigen::internal::plain_matrix_type
type	external/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseMatrix<_Scalar, _Options, _Index> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	external/Eigen/src/SparseCore/SparseUtil.h	/^    typedef SparseVector<_Scalar, _Flags> type;$/;"	t	struct:Eigen::internal::sparse_eval
type	external/unsupported/Eigen/src/Skyline/SkylineUtil.h	/^    typedef SkylineMatrix<_Scalar, _Flags> type;$/;"	t	class:Eigen::internal::eval
type	external/unsupported/test/FFTW.cpp	/^  typedef Matrix<Scalar,Dynamic,1> type;$/;"	t	struct:VectorType	file:
type	external/unsupported/test/FFTW.cpp	/^  typedef vector<Scalar> type;$/;"	t	struct:VectorType	file:
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<double>				{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<int64_t  >			{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<int>					{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<long double>			{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<long int>			{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<mpq_t>				{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<mpreal>				{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<mpz_t>				{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<uint64_t >			{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<unsigned int>		{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
type	external/unsupported/test/mpreal/mpreal.h	/^	template <> struct result_type<unsigned long int>	{typedef mpreal type;};	$/;"	t	struct:mpfr::internal::result_type
umeyama	external/Eigen/src/Geometry/Umeyama.h	/^umeyama(const MatrixBase<Derived>& src, const MatrixBase<OtherDerived>& dst, bool with_scaling = true)$/;"	f	namespace:Eigen
umeyama_transform_matrix_type	external/Eigen/src/Geometry/Umeyama.h	/^struct umeyama_transform_matrix_type$/;"	s	namespace:Eigen::internal
umfpack_free_numeric	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, double)$/;"	f	namespace:Eigen
umfpack_free_numeric	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_numeric(void **Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_free_symbolic	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, double)$/;"	f	namespace:Eigen
umfpack_free_symbolic	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline void umfpack_free_symbolic(void **Symbolic, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_determinant	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(double *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_determinant	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_determinant(std::complex<double> *Mx, double *Ex, void *NumericHandle, double User_Info [UMFPACK_INFO])$/;"	f	namespace:Eigen
umfpack_get_lunz	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, double)$/;"	f	namespace:Eigen
umfpack_get_lunz	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_lunz(int *lnz, int *unz, int *n_row, int *n_col, int *nz_udiag, void *Numeric, std::complex<double>)$/;"	f	namespace:Eigen
umfpack_get_numeric	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], double Lx[], int Up[], int Ui[], double Ux[],$/;"	f	namespace:Eigen
umfpack_get_numeric	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_get_numeric(int Lp[], int Lj[], std::complex<double> Lx[], int Up[], int Ui[], std::complex<double> Ux[],$/;"	f	namespace:Eigen
umfpack_numeric	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_numeric	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_numeric( const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_solve	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const double Ax[],$/;"	f	namespace:Eigen
umfpack_solve	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_solve( int sys, const int Ap[], const int Ai[], const std::complex<double> Ax[],$/;"	f	namespace:Eigen
umfpack_symbolic	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^inline int umfpack_symbolic(int n_row,int n_col,$/;"	f	namespace:Eigen
unaligned_assign_impl	external/Eigen/src/Core/Assign.h	/^struct unaligned_assign_impl$/;"	s	namespace:Eigen::internal
unaligned_assign_impl	external/Eigen/src/Core/Assign.h	/^struct unaligned_assign_impl<false>$/;"	s	namespace:Eigen::internal
unaryExpr	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryExpr(const CustomUnaryOp& func = CustomUnaryOp()) const$/;"	f
unaryViewExpr	external/Eigen/src/plugins/CommonCwiseUnaryOps.h	/^unaryViewExpr(const CustomViewOp& func = CustomViewOp()) const$/;"	f
unary_result_of_select	external/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select {typedef ArgType type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	external/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_std_result_type)> {typedef typename Func::result_type type;};$/;"	s	namespace:Eigen::internal
unary_result_of_select	external/Eigen/src/Core/util/Meta.h	/^struct unary_result_of_select<Func, ArgType, sizeof(has_tr1_result)> {typedef typename Func::template result<Func(ArgType)>::type type;};$/;"	s	namespace:Eigen::internal
unblocked	external/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, int* sign=0)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	external/Eigen/src/Cholesky/LDLT.h	/^  static bool unblocked(MatrixType& mat, TranspositionType& transpositions, Workspace& temp, int* sign=0)$/;"	f	struct:Eigen::internal::ldlt_inplace
unblocked	external/Eigen/src/Cholesky/LLT.h	/^  static EIGEN_STRONG_INLINE typename MatrixType::Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked	external/Eigen/src/Cholesky/LLT.h	/^  static typename MatrixType::Index unblocked(MatrixType& mat)$/;"	f	struct:Eigen::internal::llt_inplace
unblocked_lu	external/Eigen/src/LU/PartialPivLU.h	/^  static Index unblocked_lu(MatrixType& lu, PivIndex* row_transpositions, PivIndex& nb_transpositions)$/;"	f	struct:Eigen::internal::partial_lu_impl
unitOrthogonal	external/Eigen/src/Geometry/OrthoMethods.h	/^MatrixBase<Derived>::unitOrthogonal() const$/;"	f	class:Eigen::MatrixBase
unitOrthogonal_selector	external/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	external/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,2>$/;"	s	namespace:Eigen::internal
unitOrthogonal_selector	external/Eigen/src/Geometry/OrthoMethods.h	/^struct unitOrthogonal_selector<Derived,3>$/;"	s	namespace:Eigen::internal
unit_length_	OptApp.h	/^	double unit_length_;$/;"	m	class:COptApp
unit_length_	PointCloud.h	/^	float unit_length_;$/;"	m	class:PointCloud
unlink_chunk	external/unsupported/test/mpreal/dlmalloc.c	3634;"	d	file:
unlink_first_small_chunk	external/unsupported/test/mpreal/dlmalloc.c	3455;"	d	file:
unlink_large_chunk	external/unsupported/test/mpreal/dlmalloc.c	3557;"	d	file:
unlink_small_chunk	external/unsupported/test/mpreal/dlmalloc.c	3435;"	d	file:
unpackRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void unpackRhs(DenseIndex n, const RhsScalar* rhs, RhsScalar* b)$/;"	f	class:Eigen::internal::gebp_traits
unpackRhs	external/Eigen/src/Core/products/GeneralBlockPanelKernel.h	/^  EIGEN_STRONG_INLINE void unpackRhs(DenseIndex n, const Scalar* rhs, Scalar* b)$/;"	f	class:Eigen::internal::gebp_traits
unpacket_traits	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/AltiVec/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/NEON/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet1cd> { typedef std::complex<double> type; enum {size=1}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/SSE/Complex.h	/^template<> struct unpacket_traits<Packet2cf> { typedef std::complex<float> type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet2d> { typedef double type; enum {size=2}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4f> { typedef float  type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
unpacket_traits	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct unpacket_traits<Packet4i> { typedef int    type; enum {size=4}; };$/;"	s	namespace:Eigen::internal
uordblks	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE uordblks; \/* total allocated space *\/$/;"	m	struct:mallinfo	file:
uordblks	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE uordblks; \/* total allocated space *\/$/;"	m	struct:mallinfo
update	external/Eigen/src/Cholesky/LDLT.h	/^  static EIGEN_STRONG_INLINE bool update(MatrixType& mat, TranspositionType& transpositions, Workspace& tmp, WType& w, typename MatrixType::RealScalar sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
update	external/Eigen/src/Cholesky/LDLT.h	/^  static bool update(MatrixType& mat, const TranspositionType& transpositions, Workspace& tmp, const WType& w, typename MatrixType::RealScalar sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
updateInPlace	external/Eigen/src/Cholesky/LDLT.h	/^  static bool updateInPlace(MatrixType& mat, MatrixBase<WDerived>& w, typename MatrixType::RealScalar sigma=1)$/;"	f	struct:Eigen::internal::ldlt_inplace
upper	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Scalar& upper(Index i) {$/;"	f	class:Eigen::SkylineStorage
upper	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Scalar& upper(Index i) const {$/;"	f	class:Eigen::SkylineStorage
upperNonZeros	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index upperNonZeros() const {$/;"	f	class:Eigen::SkylineMatrix
upperNonZeros	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Index upperNonZeros(Index j) const {$/;"	f	class:Eigen::SkylineMatrix
upperProfile	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index& upperProfile(Index i) {$/;"	f	class:Eigen::SkylineStorage
upperProfile	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline const Index& upperProfile(Index i) const {$/;"	f	class:Eigen::SkylineStorage
upperProfileSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index upperProfileSize() const {$/;"	f	class:Eigen::SkylineStorage
upperSize	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    inline Index upperSize() const {$/;"	f	class:Eigen::SkylineStorage
urandom	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal urandom (gmp_randstate_t& state, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
urandomb	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal urandomb (gmp_randstate_t& state)$/;"	f	namespace:mpfr
useExternalScaling	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    bool useExternalScaling; $/;"	m	class:Eigen::HybridNonLinearSolver
useExternalScaling	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    bool useExternalScaling; $/;"	m	class:Eigen::LevenbergMarquardt
use_lock	external/unsupported/test/mpreal/dlmalloc.c	2511;"	d	file:
use_mmap	external/unsupported/test/mpreal/dlmalloc.c	2515;"	d	file:
use_noncontiguous	external/unsupported/test/mpreal/dlmalloc.c	2519;"	d	file:
users	external/Eigen/src/Core/products/Parallelizer.h	/^  int volatile users;$/;"	m	struct:Eigen::internal::GemmParallelInfo
usmblks	external/unsupported/test/mpreal/dlmalloc.c	/^  MALLINFO_FIELD_TYPE usmblks;  \/* maximum total allocated space *\/$/;"	m	struct:mallinfo	file:
usmblks	external/unsupported/test/mpreal/dlmalloc.h	/^  MALLINFO_FIELD_TYPE usmblks;  \/* maximum total allocated space *\/$/;"	m	struct:mallinfo
v	external/Eigen/src/Core/arch/AltiVec/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	external/Eigen/src/Core/arch/NEON/Complex.h	/^  Packet4f  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	external/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128  v;$/;"	m	struct:Eigen::internal::Packet2cf
v	external/Eigen/src/Core/arch/SSE/Complex.h	/^  __m128d  v;$/;"	m	struct:Eigen::internal::Packet1cd
val_	PointCloud.h	/^	float val_[ 8 ];$/;"	m	struct:Point
value	external/Eigen/src/Core/DenseBase.h	/^    CoeffReturnType value() const$/;"	f	class:Eigen::DenseBase
value	external/Eigen/src/Core/GeneralProduct.h	/^         value = is_large  ? Large$/;"	e	enum:Eigen::internal::product_size_category::__anon113
value	external/Eigen/src/Core/GeneralProduct.h	/^    value = selector::ret$/;"	e	enum:Eigen::internal::product_type::__anon116
value	external/Eigen/src/Core/MathFunctions.h	/^         value = (upper <= lower + 1) ? int(floor_log2_terminate)$/;"	e	enum:Eigen::internal::floor_log2_selector::__anon149
value	external/Eigen/src/Core/MathFunctions.h	/^  enum { value = (n >= ((unsigned int)(1) << (lower+1))) ? lower+1 : lower };$/;"	e	enum:Eigen::internal::floor_log2::__anon152
value	external/Eigen/src/Core/MathFunctions.h	/^  enum { value = floor_log2<n, floor_log2_selector<n, lower, upper>::middle, upper>::value };$/;"	e	enum:Eigen::internal::floor_log2::__anon151
value	external/Eigen/src/Core/MathFunctions.h	/^  enum { value = floor_log2<n, lower, floor_log2_selector<n, lower, upper>::middle>::value };$/;"	e	enum:Eigen::internal::floor_log2::__anon150
value	external/Eigen/src/Core/VectorwiseOp.h	/^  { enum { value = (Size-1) * functor_traits<BinaryOp>::Cost }; };$/;"	e	enum:Eigen::internal::member_redux::Cost::__anon202
value	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon224
value	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128d> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon226
value	external/Eigen/src/Core/arch/SSE/PacketMath.h	/^template<> struct is_arithmetic<__m128i> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon225
value	external/Eigen/src/Core/util/ForwardDeclarations.h	/^         value = has_direct_access ? (has_write_access ? DirectWriteAccessors : DirectAccessors)$/;"	e	enum:Eigen::internal::accessors_level::__anon274
value	external/Eigen/src/Core/util/Meta.h	/^struct false_type { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::false_type::__anon298
value	external/Eigen/src/Core/util/Meta.h	/^struct true_type {  enum { value = 1 }; };$/;"	e	enum:Eigen::internal::true_type::__anon297
value	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_const::__anon315
value	external/Eigen/src/Core/util/Meta.h	/^template <typename T> struct is_const<T const> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_const::__anon316
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<bool>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon305
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<char>          { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon306
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<double>        { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon303
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<float>         { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon302
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<long double>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon304
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed char>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon307
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed int>    { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon311
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed long>   { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon313
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<signed short>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon309
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned char> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon308
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned int>  { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon312
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned long> { enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon314
value	external/Eigen/src/Core/util/Meta.h	/^template<> struct is_arithmetic<unsigned short>{ enum { value = true }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon310
value	external/Eigen/src/Core/util/Meta.h	/^template<typename T, typename U> struct is_same { enum { value = 0 }; };$/;"	e	enum:Eigen::internal::is_same::__anon299
value	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_arithmetic      { enum { value = false }; };$/;"	e	enum:Eigen::internal::is_arithmetic::__anon301
value	external/Eigen/src/Core/util/Meta.h	/^template<typename T> struct is_same<T,T> { enum { value = 1 }; };$/;"	e	enum:Eigen::internal::is_same::__anon300
value	external/Eigen/src/SparseCore/AmbiVector.h	/^      Scalar value;$/;"	m	struct:Eigen::internal::AmbiVector::ListEl
value	external/Eigen/src/SparseCore/AmbiVector.h	/^    Scalar value() const { return m_cachedValue; }$/;"	f	class:Eigen::internal::AmbiVector::Iterator
value	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline Scalar& value(size_t i) { return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	external/Eigen/src/SparseCore/CompressedStorage.h	/^    inline const Scalar& value(size_t i) const { return m_values[i]; }$/;"	f	class:Eigen::internal::CompressedStorage
value	external/Eigen/src/SparseCore/CoreIterators.h	/^    EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::DenseBase::InnerIterator
value	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_id-1]; }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
value	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar value() const { return m_matrix.valuePtr()[m_id]; }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
value	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_functor(m_lhsIter.value(), m_rhsIter.value()); }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
value	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const { return m_value; }$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
value	external/Eigen/src/SparseCore/SparseCwiseBinaryOp.h	/^    EIGEN_STRONG_INLINE Scalar value() const$/;"	f	class:Eigen::internal::sparse_cwise_binary_op_inner_iterator_selector
value	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryOpImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryOpImpl::InnerIterator
value	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryOpImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryOpImpl::ReverseInnerIterator
value	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
value	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar value() const { return m_functor(Base::value()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
value	external/Eigen/src/SparseCore/SparseDenseProduct.h	/^    inline Scalar value() const { return Base::value() * m_factor; }$/;"	f	class:Eigen::SparseDenseOuterProduct::InnerIterator
value	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar& value() const { return m_values[m_id-1]; }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
value	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar& value() const { return m_values[m_id]; }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
value	external/Eigen/src/SparseCore/SparseTriangularView.h	/^    inline Scalar value() const$/;"	f	class:Eigen::SparseTriangularView::InnerIterator
value	external/Eigen/src/SparseCore/SparseUtil.h	/^  const Scalar& value() const { return m_value; }$/;"	f	class:Eigen::Triplet
value	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar value() const { return m_data.value(m_id); }$/;"	f	class:Eigen::SparseVector::InnerIterator
value	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar value() const { return m_data.value(m_id-1); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
value	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline Scalar& value() { return m_value; }$/;"	f	class:Eigen::AutoDiffScalar
value	external/unsupported/Eigen/src/AutoDiff/AutoDiffScalar.h	/^    inline const Scalar& value() const { return m_value; }$/;"	f	class:Eigen::AutoDiffScalar
value	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar value() const {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
value	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar value() const {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
value	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^      Scalar value;$/;"	m	struct:Eigen::RandomSetter::ScalarWrapper
valuePtr	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar* valuePtr() { return m_values; }$/;"	f	class:Eigen::MappedSparseMatrix
valuePtr	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline const Scalar* valuePtr() const { return m_values; }$/;"	f	class:Eigen::MappedSparseMatrix
valuePtr	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline Scalar* valuePtr()$/;"	f	class:Eigen::SparseInnerVectorSet
valuePtr	external/Eigen/src/SparseCore/SparseBlock.h	/^    inline const Scalar* valuePtr() const$/;"	f	class:Eigen::SparseInnerVectorSet
valuePtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar* valuePtr() { return &m_data.value(0); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline const Scalar* valuePtr() const { return &m_data.value(0); }$/;"	f	class:Eigen::SparseMatrix
valuePtr	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE Scalar* valuePtr() { return &m_data.value(0); }$/;"	f	class:Eigen::SparseVector
valuePtr	external/Eigen/src/SparseCore/SparseVector.h	/^    EIGEN_STRONG_INLINE const Scalar* valuePtr() const { return &m_data.value(0); }$/;"	f	class:Eigen::SparseVector
valuePtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* valuePtr() {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
valuePtr	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar* valuePtr() {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
valueRef	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_id-1]); }$/;"	f	class:Eigen::MappedSparseMatrix::ReverseInnerIterator
valueRef	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_matrix.valuePtr()[m_id]); }$/;"	f	class:Eigen::MappedSparseMatrix::InnerIterator
valueRef	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar& valueRef() { return m_functor(Base::valueRef()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::InnerIterator
valueRef	external/Eigen/src/SparseCore/SparseCwiseUnaryOp.h	/^    EIGEN_STRONG_INLINE typename CwiseUnaryViewImpl::Scalar& valueRef() { return m_functor(Base::valueRef()); }$/;"	f	class:Eigen::CwiseUnaryViewImpl::ReverseInnerIterator
valueRef	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id-1]); }$/;"	f	class:Eigen::SparseMatrix::ReverseInnerIterator
valueRef	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_values[m_id]); }$/;"	f	class:Eigen::SparseMatrix::InnerIterator
valueRef	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_data.value(m_id)); }$/;"	f	class:Eigen::SparseVector::InnerIterator
valueRef	external/Eigen/src/SparseCore/SparseVector.h	/^    inline Scalar& valueRef() { return const_cast<Scalar&>(m_data.value(m_id-1)); }$/;"	f	class:Eigen::SparseVector::ReverseInnerIterator
valueRef	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& valueRef() {$/;"	f	class:Eigen::SkylineMatrix::InnerLowerIterator
valueRef	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline Scalar& valueRef() {$/;"	f	class:Eigen::SkylineMatrix::InnerUpperIterator
value_type	external/Eigen/src/Core/util/Memory.h	/^    typedef T         value_type;$/;"	t	class:Eigen::aligned_allocator
value_type	external/Eigen/src/SparseCore/SparseMatrix.h	/^        typedef Index value_type;$/;"	t	class:Eigen::SparseMatrix::SingletonVector
value_type	external/Eigen/src/StlSupport/details.h	/^    typedef T         value_type;$/;"	t	class:Eigen::aligned_allocator_indirection
values	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    void *values;$/;"	m	struct:Eigen::SluMatrix::__anon439
values	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline ValueType& values() { return m_values; }$/;"	f	class:Eigen::AutoDiffVector
values	external/unsupported/Eigen/src/AutoDiff/AutoDiffVector.h	/^    inline const ValueType& values() const { return m_values; }$/;"	f	class:Eigen::AutoDiffVector
values	external/unsupported/test/NonLinearOptimization.cpp	/^  int values() const { return m_values; }$/;"	f	struct:Functor
values	external/unsupported/test/NumericalDiff.cpp	/^  int values() const { return m_values; }$/;"	f	struct:Functor
values	external/unsupported/test/autodiff.cpp	/^  int values() const { return m_values; }$/;"	f	struct:TestFunc1
values	external/unsupported/test/forward_adolc.cpp	/^  int values() const { return m_values; }$/;"	f	struct:TestFunc1
vec	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Block<Coefficients,3,1> vec() { return m_coeffs.template start<3>(); }$/;"	f	class:Eigen::Quaternion
vec	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline const Block<const Coefficients,3,1> vec() const { return m_coeffs.template start<3>(); }$/;"	f	class:Eigen::Quaternion
vec	external/Eigen/src/Geometry/Quaternion.h	/^  inline VectorBlock<Coefficients,3> vec() { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec	external/Eigen/src/Geometry/Quaternion.h	/^  inline const VectorBlock<const Coefficients,3> vec() const { return coeffs().template head<3>(); }$/;"	f	class:Eigen::QuaternionBase
vec2d_swizzle1	external/Eigen/src/Core/arch/SSE/PacketMath.h	39;"	d
vec4f_swizzle1	external/Eigen/src/Core/arch/SSE/PacketMath.h	33;"	d
vec4f_swizzle2	external/Eigen/src/Core/arch/SSE/PacketMath.h	42;"	d
vec4i_swizzle1	external/Eigen/src/Core/arch/SSE/PacketMath.h	36;"	d
vec4i_swizzle2	external/Eigen/src/Core/arch/SSE/PacketMath.h	45;"	d
vector	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  VectorType& vector() { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	external/Eigen/src/Eigen2Support/Geometry/Translation.h	/^  const VectorType& vector() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	external/Eigen/src/Geometry/Translation.h	/^  VectorType& vector() { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	external/Eigen/src/Geometry/Translation.h	/^  const VectorType& vector() const { return m_coeffs; }$/;"	f	class:Eigen::Translation
vector	external/Eigen/src/StlSupport/StdVector.h	/^  class vector<T,EIGEN_ALIGNED_ALLOCATOR<T> >$/;"	c	namespace:std
vectorD	external/Eigen/src/Cholesky/LDLT.h	/^    inline Diagonal<const MatrixType> vectorD() const$/;"	f	class:Eigen::LDLT
vectorD	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialCholesky
vectorD	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    inline const VectorType vectorD() const {$/;"	f	class:Eigen::SimplicialLDLT
vector_base	external/Eigen/src/StlSupport/StdVector.h	/^                 Eigen::aligned_allocator_indirection<EIGEN_WORKAROUND_MSVC_STL_SUPPORT(T)> > vector_base;$/;"	t	class:std::vector
vector_int_pair	external/unsupported/Eigen/src/BVH/KdBVH.h	/^  vector_int_pair(const VectorType &v, int i) : first(v), second(i) {}$/;"	f	struct:Eigen::internal::vector_int_pair
vector_int_pair	external/unsupported/Eigen/src/BVH/KdBVH.h	/^struct vector_int_pair$/;"	s	namespace:Eigen::internal
viewAsCholmod	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_dense viewAsCholmod(MatrixBase<Derived>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(SparseMatrix<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^cholmod_sparse viewAsCholmod(const SparseSelfAdjointView<SparseMatrix<_Scalar,_Options,_Index>, UpLo>& mat)$/;"	f	namespace:Eigen
viewAsCholmod	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^const cholmod_sparse viewAsCholmod(const SparseMatrix<_Scalar,_Options,_Index>& mat)$/;"	f	namespace:Eigen
viewAsEigen	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^MappedSparseMatrix<Scalar,Flags,Index> viewAsEigen(cholmod_sparse& cm)$/;"	f	namespace:Eigen
visit	external/Eigen/src/Core/Visitor.h	/^void DenseBase<Derived>::visit(Visitor& visitor) const$/;"	f	class:Eigen::DenseBase
visitor_impl	external/Eigen/src/Core/Visitor.h	/^struct visitor_impl$/;"	s	namespace:Eigen::internal
visitor_impl	external/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, 1>$/;"	s	namespace:Eigen::internal
visitor_impl	external/Eigen/src/Core/Visitor.h	/^struct visitor_impl<Visitor, Derived, Dynamic>$/;"	s	namespace:Eigen::internal
vld1_f32	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x2_t vld1_f32 (const float* x) { return ::vld1_f32 ((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vld1q_f32	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE float32x4_t vld1q_f32(const float* x) { return ::vld1q_f32((const float32_t*)x); }$/;"	f	namespace:Eigen::internal
vml_assign_impl	external/Eigen/src/Core/Assign_MKL.h	/^struct vml_assign_impl$/;"	s	namespace:Eigen::internal
vml_assign_impl	external/Eigen/src/Core/Assign_MKL.h	/^struct vml_assign_impl<Derived1, Derived2, UnaryOp, Traversal, Unrolling, InnerVectorizedTraversal>$/;"	s	namespace:Eigen::internal
vml_assign_impl	external/Eigen/src/Core/Assign_MKL.h	/^struct vml_assign_impl<Derived1, Derived2, UnaryOp, Traversal, Unrolling, LinearVectorizedTraversal>$/;"	s	namespace:Eigen::internal
vml_assign_traits	external/Eigen/src/Core/Assign_MKL.h	/^class vml_assign_traits$/;"	c	namespace:Eigen::internal
vml_call	external/Eigen/src/Core/Assign_MKL.h	/^template<typename Op> struct vml_call$/;"	s	namespace:Eigen::internal
volatile	build/CMakeFiles/3.8.0/CompilerIdC/CMakeCCompilerId.c	11;"	d	file:
volume	external/Eigen/src/Geometry/AlignedBox.h	/^  inline Scalar volume() const$/;"	f	class:Eigen::AlignedBox
vst1_f32	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1_f32 (float* to, float32x2_t from) { ::vst1_f32 ((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
vst1q_f32	external/Eigen/src/Core/arch/NEON/PacketMath.h	/^EIGEN_STRONG_INLINE void        vst1q_f32(float* to, float32x4_t from) { ::vst1q_f32((float32_t*)to,from); }$/;"	f	namespace:Eigen::internal
w	external/Eigen/src/Core/DenseCoeffsBase.h	/^    w() const { return (*this)[3]; }$/;"	f	class:Eigen::DenseCoeffsBase
w	external/Eigen/src/Core/DenseCoeffsBase.h	/^    w() { return (*this)[3]; }$/;"	f	class:Eigen::DenseCoeffsBase
w	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar w() const { return m_coeffs.coeff(3); }$/;"	f	class:Eigen::Quaternion
w	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& w() { return m_coeffs.coeffRef(3); }$/;"	f	class:Eigen::Quaternion
w	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar w() const { return this->derived().coeffs().coeff(3); }$/;"	f	class:Eigen::QuaternionBase
w	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& w() { return this->derived().coeffs().coeffRef(3); }$/;"	f	class:Eigen::QuaternionBase
wa1	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa1	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
wa2	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa2	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
wa3	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa3	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
wa4	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::HybridNonLinearSolver
wa4	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    FVectorType wa1, wa2, wa3, wa4;$/;"	m	class:Eigen::LevenbergMarquardt
weight_	OptApp.h	/^	double weight_;$/;"	m	class:COptApp
why	external/unsupported/test/mpreal/mpreal.h	/^	std::string why() { return "inexact conversion from floating point"; }$/;"	f	class:mpfr::conversion_overflow
win32_acquire_lock	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE int win32_acquire_lock (MLOCK_T *sl) {$/;"	f	file:
win32_mlock_t	external/unsupported/test/mpreal/dlmalloc.c	/^struct win32_mlock_t {$/;"	s	file:
win32_release_lock	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE void win32_release_lock (MLOCK_T *sl) {$/;"	f	file:
win32_try_lock	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE int win32_try_lock (MLOCK_T *sl) {$/;"	f	file:
win32direct_mmap	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE void* win32direct_mmap(size_t size) {$/;"	f	file:
win32mmap	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE void* win32mmap(size_t size) {$/;"	f	file:
win32munmap	external/unsupported/test/mpreal/dlmalloc.c	/^static FORCEINLINE int win32munmap(void* ptr, size_t size) {$/;"	f	file:
work	external/unsupported/Eigen/src/FFT/ei_kissfft_impl.h	/^    void work( int stage,Complex * xout, const _Src * xin, size_t fstride,size_t in_stride)$/;"	f	struct:Eigen::internal::kiss_cpx_fft
workaround_msvc_stl_support	external/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support() : T() {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	external/Eigen/src/StlSupport/details.h	/^    inline workaround_msvc_stl_support(const T& other) : T(other) {}$/;"	f	struct:Eigen::internal::workaround_msvc_stl_support
workaround_msvc_stl_support	external/Eigen/src/StlSupport/details.h	/^  template<typename T> struct workaround_msvc_stl_support : public T$/;"	s	namespace:Eigen::internal
writePacket	external/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::ArrayWrapper
writePacket	external/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::MatrixWrapper
writePacket	external/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::ArrayWrapper
writePacket	external/Eigen/src/Core/ArrayWrapper.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::MatrixWrapper
writePacket	external/Eigen/src/Core/Block.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::Block
writePacket	external/Eigen/src/Core/Block.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::Block
writePacket	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void writePacket$/;"	f	class:Eigen::DenseCoeffsBase
writePacket	external/Eigen/src/Core/Flagged.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::Flagged
writePacket	external/Eigen/src/Core/Flagged.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::Flagged
writePacket	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	external/Eigen/src/Core/ForceAlignedAccess.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::ForceAlignedAccess
writePacket	external/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::MapBase
writePacket	external/Eigen/src/Core/MapBase.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::MapBase
writePacket	external/Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	external/Eigen/src/Core/NestByValue.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::NestByValue
writePacket	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::PlainObjectBase
writePacket	external/Eigen/src/Core/PlainObjectBase.h	/^    EIGEN_STRONG_INLINE void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::PlainObjectBase
writePacket	external/Eigen/src/Core/Reverse.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::Reverse
writePacket	external/Eigen/src/Core/Reverse.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::Reverse
writePacket	external/Eigen/src/Core/Transpose.h	/^    inline void writePacket(Index index, const PacketScalar& x)$/;"	f	class:Eigen::TransposeImpl
writePacket	external/Eigen/src/Core/Transpose.h	/^    inline void writePacket(Index row, Index col, const PacketScalar& x)$/;"	f	class:Eigen::TransposeImpl
writePacketByOuterInner	external/Eigen/src/Core/DenseCoeffsBase.h	/^    EIGEN_STRONG_INLINE void writePacketByOuterInner$/;"	f	class:Eigen::DenseCoeffsBase
x	external/Eigen/src/Core/DenseCoeffsBase.h	/^    x() const { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	external/Eigen/src/Core/DenseCoeffsBase.h	/^    x() { return (*this)[0]; }$/;"	f	class:Eigen::DenseCoeffsBase
x	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar x() const { return m_coeffs.coeff(0); }$/;"	f	class:Eigen::Quaternion
x	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& x() { return m_coeffs.coeffRef(0); }$/;"	f	class:Eigen::Quaternion
x	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar x() const { return this->derived().coeffs().coeff(0); }$/;"	f	class:Eigen::QuaternionBase
x	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& x() { return this->derived().coeffs().coeffRef(0); }$/;"	f	class:Eigen::QuaternionBase
x	external/Eigen/src/Geometry/Translation.h	/^  inline Scalar x() const { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	external/Eigen/src/Geometry/Translation.h	/^  inline Scalar& x() { return m_coeffs.x(); }$/;"	f	class:Eigen::Translation
x	external/SuiteSparse/Include/cholmod_core.h	/^    void *x ;		\/* size nzmax or 2*nzmax, if present *\/$/;"	m	struct:cholmod_dense_struct
x	external/SuiteSparse/Include/cholmod_core.h	/^    void *x ;		\/* size nzmax or 2*nzmax, if present *\/$/;"	m	struct:cholmod_sparse_struct
x	external/SuiteSparse/Include/cholmod_core.h	/^    void *x ;		\/* size nzmax or 2*nzmax, if present *\/$/;"	m	struct:cholmod_triplet_struct
x	external/SuiteSparse/Include/cholmod_core.h	/^    void *x ;		\/* x [0..nzmax-1], the numerical values *\/$/;"	m	struct:cholmod_factor_struct
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[14];$/;"	m	struct:misra1d_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[154];$/;"	m	struct:Bennett5_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[15];$/;"	m	struct:rat43_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[16];$/;"	m	struct:MGH10_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[24];$/;"	m	struct:lanczos1_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[33];$/;"	m	struct:MGH17_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[35];$/;"	m	struct:eckerle4_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[6];$/;"	m	struct:BoxBOD_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double x[9];$/;"	m	struct:rat42_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double Bennett5_functor::x[154] = { 7.447168E0, 8.102586E0, 8.452547E0, 8.711278E0, 8.916774E0, 9.087155E0, 9.232590E0, 9.359535E0, 9.472166E0, 9.573384E0, 9.665293E0, 9.749461E0, 9.827092E0, 9.899128E0, 9.966321E0, 10.029280E0, 10.088510E0, 10.144430E0, 10.197380E0, 10.247670E0, 10.295560E0, 10.341250E0, 10.384950E0, 10.426820E0, 10.467000E0, 10.505640E0, 10.542830E0, 10.578690E0, 10.613310E0, 10.646780E0, 10.679150E0, 10.710520E0, 10.740920E0, 10.770440E0, 10.799100E0, 10.826970E0, 10.854080E0, 10.880470E0, 10.906190E0, 10.931260E0, 10.955720E0, 10.979590E0, 11.002910E0, 11.025700E0, 11.047980E0, 11.069770E0, 11.091100E0, 11.111980E0, 11.132440E0, 11.152480E0, 11.172130E0, 11.191410E0, 11.210310E0, 11.228870E0, 11.247090E0, 11.264980E0, 11.282560E0, 11.299840E0, 11.316820E0, 11.333520E0, 11.349940E0, 11.366100E0, 11.382000E0, 11.397660E0, 11.413070E0, 11.428240E0, 11.443200E0, 11.457930E0, 11.472440E0, 11.486750E0, 11.500860E0, 11.514770E0, 11.528490E0, 11.542020E0, 11.555380E0, 11.568550E0, 11.581560E0, 11.594420E0, 11.607121E0, 11.619640E0, 11.632000E0, 11.644210E0, 11.656280E0, 11.668200E0, 11.679980E0, 11.691620E0, 11.703130E0, 11.714510E0, 11.725760E0, 11.736880E0, 11.747890E0, 11.758780E0, 11.769550E0, 11.780200E0, 11.790730E0, 11.801160E0, 11.811480E0, 11.821700E0, 11.831810E0, 11.841820E0, 11.851730E0, 11.861550E0, 11.871270E0, 11.880890E0, 11.890420E0, 11.899870E0, 11.909220E0, 11.918490E0, 11.927680E0, 11.936780E0, 11.945790E0, 11.954730E0, 11.963590E0, 11.972370E0, 11.981070E0, 11.989700E0, 11.998260E0, 12.006740E0, 12.015150E0, 12.023490E0, 12.031760E0, 12.039970E0, 12.048100E0, 12.056170E0, 12.064180E0, 12.072120E0, 12.080010E0, 12.087820E0, 12.095580E0, 12.103280E0, 12.110920E0, 12.118500E0, 12.126030E0, 12.133500E0, 12.140910E0, 12.148270E0, 12.155570E0, 12.162830E0, 12.170030E0, 12.177170E0, 12.184270E0, 12.191320E0, 12.198320E0, 12.205270E0, 12.212170E0, 12.219030E0, 12.225840E0, 12.232600E0, 12.239320E0, 12.245990E0, 12.252620E0, 12.259200E0, 12.265750E0, 12.272240E0 };$/;"	m	class:Bennett5_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double BoxBOD_functor::x[6] = { 1., 2., 3., 5., 7., 10. };$/;"	m	class:BoxBOD_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double MGH10_functor::x[16] = { 5.000000E+01, 5.500000E+01, 6.000000E+01, 6.500000E+01, 7.000000E+01, 7.500000E+01, 8.000000E+01, 8.500000E+01, 9.000000E+01, 9.500000E+01, 1.000000E+02, 1.050000E+02, 1.100000E+02, 1.150000E+02, 1.200000E+02, 1.250000E+02 };$/;"	m	class:MGH10_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double MGH17_functor::x[33] = { 0.000000E+00, 1.000000E+01, 2.000000E+01, 3.000000E+01, 4.000000E+01, 5.000000E+01, 6.000000E+01, 7.000000E+01, 8.000000E+01, 9.000000E+01, 1.000000E+02, 1.100000E+02, 1.200000E+02, 1.300000E+02, 1.400000E+02, 1.500000E+02, 1.600000E+02, 1.700000E+02, 1.800000E+02, 1.900000E+02, 2.000000E+02, 2.100000E+02, 2.200000E+02, 2.300000E+02, 2.400000E+02, 2.500000E+02, 2.600000E+02, 2.700000E+02, 2.800000E+02, 2.900000E+02, 3.000000E+02, 3.100000E+02, 3.200000E+02 };$/;"	m	class:MGH17_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double eckerle4_functor::x[35] = { 400.0, 405.0, 410.0, 415.0, 420.0, 425.0, 430.0, 435.0, 436.5, 438.0, 439.5, 441.0, 442.5, 444.0, 445.5, 447.0, 448.5, 450.0, 451.5, 453.0, 454.5, 456.0, 457.5, 459.0, 460.5, 462.0, 463.5, 465.0, 470.0, 475.0, 480.0, 485.0, 490.0, 495.0, 500.0};$/;"	m	class:eckerle4_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double lanczos1_functor::x[24] = { 0.000000000000E+00, 5.000000000000E-02, 1.000000000000E-01, 1.500000000000E-01, 2.000000000000E-01, 2.500000000000E-01, 3.000000000000E-01, 3.500000000000E-01, 4.000000000000E-01, 4.500000000000E-01, 5.000000000000E-01, 5.500000000000E-01, 6.000000000000E-01, 6.500000000000E-01, 7.000000000000E-01, 7.500000000000E-01, 8.000000000000E-01, 8.500000000000E-01, 9.000000000000E-01, 9.500000000000E-01, 1.000000000000E+00, 1.050000000000E+00, 1.100000000000E+00, 1.150000000000E+00 };$/;"	m	class:lanczos1_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double misra1d_functor::x[14] = { 77.6E0, 114.9E0, 141.1E0, 190.8E0, 239.9E0, 289.0E0, 332.8E0, 378.4E0, 434.8E0, 477.3E0, 536.8E0, 593.1E0, 689.1E0, 760.0E0};$/;"	m	class:misra1d_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double rat42_functor::x[9] = { 9.000E0, 14.000E0, 21.000E0, 28.000E0, 42.000E0, 57.000E0, 63.000E0, 70.000E0, 79.000E0 };$/;"	m	class:rat42_functor	file:
x	external/unsupported/test/NonLinearOptimization.cpp	/^const double rat43_functor::x[15] = { 1., 2., 3., 4., 5., 6., 7., 8., 9., 10., 11., 12., 13., 14., 15. };$/;"	m	class:rat43_functor	file:
xnorm	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^    Scalar pnorm, xnorm, fnorm1;$/;"	m	class:Eigen::HybridNonLinearSolver
xnorm	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^    Scalar pnorm, xnorm, fnorm1, actred, dirder, prered;$/;"	m	class:Eigen::LevenbergMarquardt
xsize	external/SuiteSparse/Include/cholmod_core.h	/^    size_t xsize ;	\/* size of x, real part of supernodes *\/$/;"	m	struct:cholmod_factor_struct
xtol	external/unsupported/Eigen/src/NonLinearOptimization/HybridNonLinearSolver.h	/^        Scalar xtol;$/;"	m	struct:Eigen::HybridNonLinearSolver::Parameters
xtol	external/unsupported/Eigen/src/NonLinearOptimization/LevenbergMarquardt.h	/^        Scalar xtol;$/;"	m	struct:Eigen::LevenbergMarquardt::Parameters
xtype	external/SuiteSparse/Include/cholmod_core.h	/^    int xtype ;		\/* pattern, real, complex, or zomplex *\/$/;"	m	struct:cholmod_dense_struct
xtype	external/SuiteSparse/Include/cholmod_core.h	/^    int xtype ;		\/* pattern, real, complex, or zomplex *\/$/;"	m	struct:cholmod_sparse_struct
xtype	external/SuiteSparse/Include/cholmod_core.h	/^    int xtype ; \/* pattern, real, complex, or zomplex *\/$/;"	m	struct:cholmod_factor_struct
xtype	external/SuiteSparse/Include/cholmod_core.h	/^    int xtype ; \/* pattern, real, complex, or zomplex *\/$/;"	m	struct:cholmod_triplet_struct
xworksize	external/SuiteSparse/Include/cholmod_core.h	/^    size_t xworksize ;	\/* size of Xwork,  in bytes.$/;"	m	struct:cholmod_common_struct
y	external/Eigen/src/Core/DenseCoeffsBase.h	/^    y() const { return (*this)[1]; }$/;"	f	class:Eigen::DenseCoeffsBase
y	external/Eigen/src/Core/DenseCoeffsBase.h	/^    y() { return (*this)[1]; }$/;"	f	class:Eigen::DenseCoeffsBase
y	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar y() const { return m_coeffs.coeff(1); }$/;"	f	class:Eigen::Quaternion
y	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& y() { return m_coeffs.coeffRef(1); }$/;"	f	class:Eigen::Quaternion
y	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar y() const { return this->derived().coeffs().coeff(1); }$/;"	f	class:Eigen::QuaternionBase
y	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& y() { return this->derived().coeffs().coeffRef(1); }$/;"	f	class:Eigen::QuaternionBase
y	external/Eigen/src/Geometry/Translation.h	/^  inline Scalar y() const { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	external/Eigen/src/Geometry/Translation.h	/^  inline Scalar& y() { return m_coeffs.y(); }$/;"	f	class:Eigen::Translation
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[11];$/;"	m	struct:MGH09_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[14];$/;"	m	struct:misra1d_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[154];$/;"	m	struct:Bennett5_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[15];$/;"	m	struct:rat43_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[16];$/;"	m	struct:MGH10_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[24];$/;"	m	struct:lanczos1_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[33];$/;"	m	struct:MGH17_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[35];$/;"	m	struct:eckerle4_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^    static const double y[9];$/;"	m	struct:rat42_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double Bennett5_functor::y[154] = { -34.834702E0 ,-34.393200E0 ,-34.152901E0 ,-33.979099E0 ,-33.845901E0 ,-33.732899E0 ,-33.640301E0 ,-33.559200E0 ,-33.486801E0 ,-33.423100E0 ,-33.365101E0 ,-33.313000E0 ,-33.260899E0 ,-33.217400E0 ,-33.176899E0 ,-33.139198E0 ,-33.101601E0 ,-33.066799E0 ,-33.035000E0 ,-33.003101E0 ,-32.971298E0 ,-32.942299E0 ,-32.916302E0 ,-32.890202E0 ,-32.864101E0 ,-32.841000E0 ,-32.817799E0 ,-32.797501E0 ,-32.774300E0 ,-32.757000E0 ,-32.733799E0 ,-32.716400E0 ,-32.699100E0 ,-32.678799E0 ,-32.661400E0 ,-32.644001E0 ,-32.626701E0 ,-32.612202E0 ,-32.597698E0 ,-32.583199E0 ,-32.568699E0 ,-32.554298E0 ,-32.539799E0 ,-32.525299E0 ,-32.510799E0 ,-32.499199E0 ,-32.487598E0 ,-32.473202E0 ,-32.461601E0 ,-32.435501E0 ,-32.435501E0 ,-32.426800E0 ,-32.412300E0 ,-32.400799E0 ,-32.392101E0 ,-32.380501E0 ,-32.366001E0 ,-32.357300E0 ,-32.348598E0 ,-32.339901E0 ,-32.328400E0 ,-32.319698E0 ,-32.311001E0 ,-32.299400E0 ,-32.290699E0 ,-32.282001E0 ,-32.273300E0 ,-32.264599E0 ,-32.256001E0 ,-32.247299E0 ,-32.238602E0 ,-32.229900E0 ,-32.224098E0 ,-32.215401E0 ,-32.203800E0 ,-32.198002E0 ,-32.189400E0 ,-32.183601E0 ,-32.174900E0 ,-32.169102E0 ,-32.163300E0 ,-32.154598E0 ,-32.145901E0 ,-32.140099E0 ,-32.131401E0 ,-32.125599E0 ,-32.119801E0 ,-32.111198E0 ,-32.105400E0 ,-32.096699E0 ,-32.090900E0 ,-32.088001E0 ,-32.079300E0 ,-32.073502E0 ,-32.067699E0 ,-32.061901E0 ,-32.056099E0 ,-32.050301E0 ,-32.044498E0 ,-32.038799E0 ,-32.033001E0 ,-32.027199E0 ,-32.024300E0 ,-32.018501E0 ,-32.012699E0 ,-32.004002E0 ,-32.001099E0 ,-31.995300E0 ,-31.989500E0 ,-31.983700E0 ,-31.977900E0 ,-31.972099E0 ,-31.969299E0 ,-31.963501E0 ,-31.957701E0 ,-31.951900E0 ,-31.946100E0 ,-31.940300E0 ,-31.937401E0 ,-31.931601E0 ,-31.925800E0 ,-31.922899E0 ,-31.917101E0 ,-31.911301E0 ,-31.908400E0 ,-31.902599E0 ,-31.896900E0 ,-31.893999E0 ,-31.888201E0 ,-31.885300E0 ,-31.882401E0 ,-31.876600E0 ,-31.873699E0 ,-31.867901E0 ,-31.862101E0 ,-31.859200E0 ,-31.856300E0 ,-31.850500E0 ,-31.844700E0 ,-31.841801E0 ,-31.838900E0 ,-31.833099E0 ,-31.830200E0 ,-31.827299E0 ,-31.821600E0 ,-31.818701E0 ,-31.812901E0 ,-31.809999E0 ,-31.807100E0 ,-31.801300E0 ,-31.798401E0 ,-31.795500E0 ,-31.789700E0 ,-31.786800E0 };$/;"	m	class:Bennett5_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double MGH09_functor::y[11] = { 1.957000E-01, 1.947000E-01, 1.735000E-01, 1.600000E-01, 8.440000E-02, 6.270000E-02, 4.560000E-02, 3.420000E-02, 3.230000E-02, 2.350000E-02, 2.460000E-02 };$/;"	m	class:MGH09_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double MGH10_functor::y[16] = { 3.478000E+04, 2.861000E+04, 2.365000E+04, 1.963000E+04, 1.637000E+04, 1.372000E+04, 1.154000E+04, 9.744000E+03, 8.261000E+03, 7.030000E+03, 6.005000E+03, 5.147000E+03, 4.427000E+03, 3.820000E+03, 3.307000E+03, 2.872000E+03 };$/;"	m	class:MGH10_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double MGH17_functor::y[33] = { 8.440000E-01, 9.080000E-01, 9.320000E-01, 9.360000E-01, 9.250000E-01, 9.080000E-01, 8.810000E-01, 8.500000E-01, 8.180000E-01, 7.840000E-01, 7.510000E-01, 7.180000E-01, 6.850000E-01, 6.580000E-01, 6.280000E-01, 6.030000E-01, 5.800000E-01, 5.580000E-01, 5.380000E-01, 5.220000E-01, 5.060000E-01, 4.900000E-01, 4.780000E-01, 4.670000E-01, 4.570000E-01, 4.480000E-01, 4.380000E-01, 4.310000E-01, 4.240000E-01, 4.200000E-01, 4.140000E-01, 4.110000E-01, 4.060000E-01 };$/;"	m	class:MGH17_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double eckerle4_functor::y[35] = { 0.0001575, 0.0001699, 0.0002350, 0.0003102, 0.0004917, 0.0008710, 0.0017418, 0.0046400, 0.0065895, 0.0097302, 0.0149002, 0.0237310, 0.0401683, 0.0712559, 0.1264458, 0.2073413, 0.2902366, 0.3445623, 0.3698049, 0.3668534, 0.3106727, 0.2078154, 0.1164354, 0.0616764, 0.0337200, 0.0194023, 0.0117831, 0.0074357, 0.0022732, 0.0008800, 0.0004579, 0.0002345, 0.0001586, 0.0001143, 0.0000710 };$/;"	m	class:eckerle4_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double lanczos1_functor::y[24] = { 2.513400000000E+00 ,2.044333373291E+00 ,1.668404436564E+00 ,1.366418021208E+00 ,1.123232487372E+00 ,9.268897180037E-01 ,7.679338563728E-01 ,6.388775523106E-01 ,5.337835317402E-01 ,4.479363617347E-01 ,3.775847884350E-01 ,3.197393199326E-01 ,2.720130773746E-01 ,2.324965529032E-01 ,1.996589546065E-01 ,1.722704126914E-01 ,1.493405660168E-01 ,1.300700206922E-01 ,1.138119324644E-01 ,1.000415587559E-01 ,8.833209084540E-02 ,7.833544019350E-02 ,6.976693743449E-02 ,6.239312536719E-02 };$/;"	m	class:lanczos1_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double misra1d_functor::y[14] = { 10.07E0, 14.73E0, 17.94E0, 23.93E0, 29.61E0, 35.18E0, 40.02E0, 44.82E0, 50.76E0, 55.05E0, 61.01E0, 66.40E0, 75.47E0, 81.78E0};$/;"	m	class:misra1d_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double rat42_functor::y[9] = { 8.930E0 ,10.800E0 ,18.590E0 ,22.330E0 ,39.350E0 ,56.110E0 ,61.730E0 ,64.620E0 ,67.080E0 };$/;"	m	class:rat42_functor	file:
y	external/unsupported/test/NonLinearOptimization.cpp	/^const double rat43_functor::y[15] = { 16.08, 33.83, 65.80, 97.20, 191.55, 326.20, 386.87, 520.53, 590.03, 651.92, 724.93, 699.56, 689.96, 637.56, 717.41 };$/;"	m	class:rat43_functor	file:
z	external/Eigen/src/Core/DenseCoeffsBase.h	/^    z() const { return (*this)[2]; }$/;"	f	class:Eigen::DenseCoeffsBase
z	external/Eigen/src/Core/DenseCoeffsBase.h	/^    z() { return (*this)[2]; }$/;"	f	class:Eigen::DenseCoeffsBase
z	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar z() const { return m_coeffs.coeff(2); }$/;"	f	class:Eigen::Quaternion
z	external/Eigen/src/Eigen2Support/Geometry/Quaternion.h	/^  inline Scalar& z() { return m_coeffs.coeffRef(2); }$/;"	f	class:Eigen::Quaternion
z	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar z() const { return this->derived().coeffs().coeff(2); }$/;"	f	class:Eigen::QuaternionBase
z	external/Eigen/src/Geometry/Quaternion.h	/^  inline Scalar& z() { return this->derived().coeffs().coeffRef(2); }$/;"	f	class:Eigen::QuaternionBase
z	external/Eigen/src/Geometry/Translation.h	/^  inline Scalar z() const { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
z	external/Eigen/src/Geometry/Translation.h	/^  inline Scalar& z() { return m_coeffs.z(); }$/;"	f	class:Eigen::Translation
z	external/SuiteSparse/Include/cholmod_core.h	/^    void *z ;		\/* size nzmax, if present *\/$/;"	m	struct:cholmod_dense_struct
z	external/SuiteSparse/Include/cholmod_core.h	/^    void *z ;		\/* size nzmax, if present *\/$/;"	m	struct:cholmod_sparse_struct
z	external/SuiteSparse/Include/cholmod_core.h	/^    void *z ;		\/* size nzmax, if present *\/$/;"	m	struct:cholmod_triplet_struct
z	external/SuiteSparse/Include/cholmod_core.h	/^    void *z ;$/;"	m	struct:cholmod_factor_struct
zeta	external/unsupported/test/mpreal/mpreal.h	/^inline const mpreal zeta (const mpreal& v, mp_rnd_t rnd_mode)$/;"	f	namespace:mpfr
zrelax	external/SuiteSparse/Include/cholmod_core.h	/^    double zrelax [3] ;$/;"	m	struct:cholmod_common_struct
~AlignedBox	external/Eigen/src/Eigen2Support/Geometry/AlignedBox.h	/^  ~AlignedBox() {}$/;"	f	class:Eigen::AlignedBox
~AlignedBox	external/Eigen/src/Geometry/AlignedBox.h	/^  ~AlignedBox() {}$/;"	f	class:Eigen::AlignedBox
~AmbiVector	external/Eigen/src/SparseCore/AmbiVector.h	/^    ~AmbiVector() { delete[] m_buffer; }$/;"	f	class:Eigen::internal::AmbiVector
~BiCGSTAB	external/Eigen/src/IterativeLinearSolvers/BiCGSTAB.h	/^  ~BiCGSTAB() {}$/;"	f	class:Eigen::BiCGSTAB
~COptApp	OptApp.cpp	/^COptApp::~COptApp(void)$/;"	f	class:COptApp
~CholmodBase	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodBase()$/;"	f	class:Eigen::CholmodBase
~CholmodDecomposition	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodDecomposition() {}$/;"	f	class:Eigen::CholmodDecomposition
~CholmodSimplicialLDLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLDLT() {}$/;"	f	class:Eigen::CholmodSimplicialLDLT
~CholmodSimplicialLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSimplicialLLT() {}$/;"	f	class:Eigen::CholmodSimplicialLLT
~CholmodSupernodalLLT	external/Eigen/src/CholmodSupport/CholmodSupport.h	/^    ~CholmodSupernodalLLT() {}$/;"	f	class:Eigen::CholmodSupernodalLLT
~CommaInitializer	external/Eigen/src/Core/CommaInitializer.h	/^  inline ~CommaInitializer()$/;"	f	struct:Eigen::CommaInitializer
~CompressedStorage	external/Eigen/src/SparseCore/CompressedStorage.h	/^    ~CompressedStorage()$/;"	f	class:Eigen::internal::CompressedStorage
~ConjugateGradient	external/Eigen/src/IterativeLinearSolvers/ConjugateGradient.h	/^  ~ConjugateGradient() {}$/;"	f	class:Eigen::ConjugateGradient
~DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Cols*m_rows); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, _Rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~DenseStorage	external/Eigen/src/Core/DenseStorage.h	/^    inline ~DenseStorage() { internal::conditional_aligned_delete_auto<T,(_Options&DontAlign)==0>(m_data, m_rows*m_cols); }$/;"	f	class:Eigen::DenseStorage
~DynamicSparseMatrix	external/unsupported/Eigen/src/SparseExtra/DynamicSparseMatrix.h	/^    inline ~DynamicSparseMatrix() {}$/;"	f	class:Eigen::DynamicSparseMatrix
~GMRES	external/unsupported/Eigen/src/IterativeSolvers/GMRES.h	/^  ~GMRES() {}$/;"	f	class:Eigen::GMRES
~HashSparseMatrix	HashSparseMatrix.cpp	/^HashSparseMatrix::~HashSparseMatrix(void)$/;"	f	class:HashSparseMatrix
~Hyperplane	external/Eigen/src/Eigen2Support/Geometry/Hyperplane.h	/^  ~Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
~Hyperplane	external/Eigen/src/Geometry/Hyperplane.h	/^  ~Hyperplane() {}$/;"	f	class:Eigen::Hyperplane
~IterativeSolverBase	external/Eigen/src/IterativeLinearSolvers/IterativeSolverBase.h	/^  ~IterativeSolverBase() {}$/;"	f	class:Eigen::IterativeSolverBase
~MappedSparseMatrix	external/Eigen/src/SparseCore/MappedSparseMatrix.h	/^    inline ~MappedSparseMatrix() {}$/;"	f	class:Eigen::MappedSparseMatrix
~MatrixMarketIterator	external/unsupported/Eigen/src/SparseExtra/MatrixMarketIterator.h	/^    ~MatrixMarketIterator()$/;"	f	class:Eigen::MatrixMarketIterator
~ParametrizedLine	external/Eigen/src/Eigen2Support/Geometry/ParametrizedLine.h	/^  ~ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
~ParametrizedLine	external/Eigen/src/Geometry/ParametrizedLine.h	/^  ~ParametrizedLine() {}$/;"	f	class:Eigen::ParametrizedLine
~PardisoImpl	external/Eigen/src/PardisoSupport/PardisoSupport.h	/^    ~PardisoImpl()$/;"	f	class:Eigen::PardisoImpl
~PastixBase	external/Eigen/src/PaStiXSupport/PaStiXSupport.h	/^    ~PastixBase() $/;"	f	class:Eigen::PastixBase
~PointCloud	PointCloud.cpp	/^PointCloud::~PointCloud(void)$/;"	f	class:PointCloud
~RandomSetter	external/unsupported/Eigen/src/SparseExtra/RandomSetter.h	/^    ~RandomSetter()$/;"	f	class:Eigen::RandomSetter
~Scaling	external/unsupported/Eigen/src/IterativeSolvers/Scaling.h	/^    ~Scaling() { }$/;"	f	class:Scaling
~SimplicialCholeskyBase	external/Eigen/src/SparseCholesky/SimplicialCholesky.h	/^    ~SimplicialCholeskyBase()$/;"	f	class:Eigen::SimplicialCholeskyBase
~SkylineMatrix	external/unsupported/Eigen/src/Skyline/SkylineMatrix.h	/^    inline ~SkylineMatrix() {$/;"	f	class:Eigen::SkylineMatrix
~SkylineStorage	external/unsupported/Eigen/src/Skyline/SkylineStorage.h	/^    ~SkylineStorage() {$/;"	f	class:Eigen::SkylineStorage
~SparseMatrix	external/Eigen/src/SparseCore/SparseMatrix.h	/^    inline ~SparseMatrix()$/;"	f	class:Eigen::SparseMatrix
~SparseVector	external/Eigen/src/SparseCore/SparseVector.h	/^    inline ~SparseVector() {}$/;"	f	class:Eigen::SparseVector
~SuperILU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperILU()$/;"	f	class:Eigen::SuperILU
~SuperLU	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLU()$/;"	f	class:Eigen::SuperLU
~SuperLUBase	external/Eigen/src/SuperLUSupport/SuperLUSupport.h	/^    ~SuperLUBase()$/;"	f	class:Eigen::SuperLUBase
~UmfPackLU	external/Eigen/src/UmfPackSupport/UmfPackSupport.h	/^    ~UmfPackLU()$/;"	f	class:Eigen::UmfPackLU
~aligned_allocator	external/Eigen/src/Core/util/Memory.h	/^    ~aligned_allocator()$/;"	f	class:Eigen::aligned_allocator
~aligned_allocator_indirection	external/Eigen/src/StlSupport/details.h	/^    ~aligned_allocator_indirection() {}$/;"	f	class:Eigen::aligned_allocator_indirection
~aligned_stack_memory_handler	external/Eigen/src/Core/util/Memory.h	/^    ~aligned_stack_memory_handler()$/;"	f	class:Eigen::internal::aligned_stack_memory_handler
~fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ~fftw_plan() {if (m_plan) fftw_destroy_plan(m_plan);}$/;"	f	struct:Eigen::internal::fftw_plan
~fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ~fftw_plan() {if (m_plan) fftwf_destroy_plan(m_plan);}$/;"	f	struct:Eigen::internal::fftw_plan
~fftw_plan	external/unsupported/Eigen/src/FFT/ei_fftw_impl.h	/^      ~fftw_plan() {if (m_plan) fftwl_destroy_plan(m_plan);}$/;"	f	struct:Eigen::internal::fftw_plan
~gemm_blocking_space	external/Eigen/src/Core/products/GeneralMatrixMatrix.h	/^    ~gemm_blocking_space()$/;"	f	class:Eigen::internal::gemm_blocking_space
~mpreal	external/unsupported/test/mpreal/mpreal.cpp	/^mpreal::~mpreal() $/;"	f	class:mpfr::mpreal
~noncopyable	external/Eigen/src/Core/util/Meta.h	/^  ~noncopyable() {}$/;"	f	class:Eigen::internal::noncopyable
